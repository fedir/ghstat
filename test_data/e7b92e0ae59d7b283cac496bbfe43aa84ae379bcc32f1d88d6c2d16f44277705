HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 09 Jun 2018 08:09:55 GMT
Link: <https://api.github.com/search/issues?q=repo%3Alpereira%2Flwan+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Alpereira%2Flwan+type%3Aissue+state%3Aclosed&page=5>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CCE2:57C5:3730D5B:71A3F9B:5B1B8B53
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 26
X-Ratelimit-Reset: 1528531855
X-Runtime-Rack: 0.318402
X-Xss-Protection: 1; mode=block

8000
{"total_count":126,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/lpereira/lwan/issues/232","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/232/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/232/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/232/events","html_url":"https://github.com/lpereira/lwan/issues/232","id":327606047,"node_id":"MDU6SXNzdWUzMjc2MDYwNDc=","number":232,"title":"There's a error in compute_range function","user":{"login":"Huihongcao","id":38373893,"node_id":"MDQ6VXNlcjM4MzczODkz","avatar_url":"https://avatars3.githubusercontent.com/u/38373893?v=4","gravatar_id":"","url":"https://api.github.com/users/Huihongcao","html_url":"https://github.com/Huihongcao","followers_url":"https://api.github.com/users/Huihongcao/followers","following_url":"https://api.github.com/users/Huihongcao/following{/other_user}","gists_url":"https://api.github.com/users/Huihongcao/gists{/gist_id}","starred_url":"https://api.github.com/users/Huihongcao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Huihongcao/subscriptions","organizations_url":"https://api.github.com/users/Huihongcao/orgs","repos_url":"https://api.github.com/users/Huihongcao/repos","events_url":"https://api.github.com/users/Huihongcao/events{/privacy}","received_events_url":"https://api.github.com/users/Huihongcao/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-30T07:27:49Z","updated_at":"2018-05-31T01:47:10Z","closed_at":"2018-05-31T01:26:16Z","author_association":"NONE","body":"Usually, to is larger than or equal from, but in the source code, this function will incorrectly return HTTP_RANGE-UNSATIFAIABLE.","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/230","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/230/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/230/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/230/events","html_url":"https://github.com/lpereira/lwan/issues/230","id":320385720,"node_id":"MDU6SXNzdWUzMjAzODU3MjA=","number":230,"title":"Websocket support feature","user":{"login":"Globik","id":8457017,"node_id":"MDQ6VXNlcjg0NTcwMTc=","avatar_url":"https://avatars3.githubusercontent.com/u/8457017?v=4","gravatar_id":"","url":"https://api.github.com/users/Globik","html_url":"https://github.com/Globik","followers_url":"https://api.github.com/users/Globik/followers","following_url":"https://api.github.com/users/Globik/following{/other_user}","gists_url":"https://api.github.com/users/Globik/gists{/gist_id}","starred_url":"https://api.github.com/users/Globik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Globik/subscriptions","organizations_url":"https://api.github.com/users/Globik/orgs","repos_url":"https://api.github.com/users/Globik/repos","events_url":"https://api.github.com/users/Globik/events{/privacy}","received_events_url":"https://api.github.com/users/Globik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-04T18:42:00Z","updated_at":"2018-05-10T23:54:56Z","closed_at":"2018-05-10T23:54:56Z","author_association":"NONE","body":"It would be nice to have websocket.","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/228","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/228/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/228/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/228/events","html_url":"https://github.com/lpereira/lwan/issues/228","id":309959015,"node_id":"MDU6SXNzdWUzMDk5NTkwMTU=","number":228,"title":"lwan_init() errantly requires a .conf file","user":{"login":"HalosGhost","id":49465,"node_id":"MDQ6VXNlcjQ5NDY1","avatar_url":"https://avatars3.githubusercontent.com/u/49465?v=4","gravatar_id":"","url":"https://api.github.com/users/HalosGhost","html_url":"https://github.com/HalosGhost","followers_url":"https://api.github.com/users/HalosGhost/followers","following_url":"https://api.github.com/users/HalosGhost/following{/other_user}","gists_url":"https://api.github.com/users/HalosGhost/gists{/gist_id}","starred_url":"https://api.github.com/users/HalosGhost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HalosGhost/subscriptions","organizations_url":"https://api.github.com/users/HalosGhost/orgs","repos_url":"https://api.github.com/users/HalosGhost/repos","events_url":"https://api.github.com/users/HalosGhost/events{/privacy}","received_events_url":"https://api.github.com/users/HalosGhost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-30T02:33:42Z","updated_at":"2018-04-08T17:56:05Z","closed_at":"2018-04-08T17:55:55Z","author_association":"CONTRIBUTOR","body":"While running the hello-world example from the home page, it became clear that lwan_init() also requires a config file to run.\n\nMore than just requiring a config file, the config appears to need to be populated, at least, with a listener line.\n\nGiven that lwan_init_with_config() is a thing, this seems like a bug.","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/227","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/227/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/227/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/227/events","html_url":"https://github.com/lpereira/lwan/issues/227","id":306121959,"node_id":"MDU6SXNzdWUzMDYxMjE5NTk=","number":227,"title":"C++ incompatibility following lwan_module member renaming","user":{"login":"juntalis","id":380024,"node_id":"MDQ6VXNlcjM4MDAyNA==","avatar_url":"https://avatars3.githubusercontent.com/u/380024?v=4","gravatar_id":"","url":"https://api.github.com/users/juntalis","html_url":"https://github.com/juntalis","followers_url":"https://api.github.com/users/juntalis/followers","following_url":"https://api.github.com/users/juntalis/following{/other_user}","gists_url":"https://api.github.com/users/juntalis/gists{/gist_id}","starred_url":"https://api.github.com/users/juntalis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juntalis/subscriptions","organizations_url":"https://api.github.com/users/juntalis/orgs","repos_url":"https://api.github.com/users/juntalis/repos","events_url":"https://api.github.com/users/juntalis/events{/privacy}","received_events_url":"https://api.github.com/users/juntalis/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-17T02:43:40Z","updated_at":"2018-03-17T15:17:38Z","closed_at":"2018-03-17T15:17:17Z","author_association":"CONTRIBUTOR","body":"Following the 448d47f20cad1dbe14d66842980e5e82d04153d7 commit, it's no longer possibly to include [lwan.h](https://github.com/lpereira/lwan/blob/master/src/lib/lwan.h) from a C++ source file without modifications: the ```lwan_module.new``` field is getting interpreted as the ```new``` keyword, resulting in compilation errors.\r\n\r\n```c\r\n/usr/local/include/lwan/lwan.h:328:13: error: expected unqualified-id before ‘new’\r\n     void *(*new)(const char *prefix, void *args);\r\n             ^\r\n/usr/local/include/lwan/lwan.h:328:13: error: expected ‘)’ before ‘new’\r\n/usr/local/include/lwan/lwan.h:328:12: error: expected ‘;’ at end of member declaration\r\n     void *(*new)(const char *prefix, void *args);\r\n            ^\r\n/usr/local/include/lwan/lwan.h:328:13: error: expected unqualified-id before ‘new’\r\n     void *(*new)(const char *prefix, void *args);\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/226","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/226/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/226/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/226/events","html_url":"https://github.com/lpereira/lwan/issues/226","id":298930829,"node_id":"MDU6SXNzdWUyOTg5MzA4Mjk=","number":226,"title":"looking up handlers in .conf fail with dynamically linked objects","user":{"login":"diviaki","id":2210634,"node_id":"MDQ6VXNlcjIyMTA2MzQ=","avatar_url":"https://avatars0.githubusercontent.com/u/2210634?v=4","gravatar_id":"","url":"https://api.github.com/users/diviaki","html_url":"https://github.com/diviaki","followers_url":"https://api.github.com/users/diviaki/followers","following_url":"https://api.github.com/users/diviaki/following{/other_user}","gists_url":"https://api.github.com/users/diviaki/gists{/gist_id}","starred_url":"https://api.github.com/users/diviaki/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/diviaki/subscriptions","organizations_url":"https://api.github.com/users/diviaki/orgs","repos_url":"https://api.github.com/users/diviaki/repos","events_url":"https://api.github.com/users/diviaki/events{/privacy}","received_events_url":"https://api.github.com/users/diviaki/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-02-21T11:17:24Z","updated_at":"2018-02-28T10:13:58Z","closed_at":"2018-02-28T10:13:58Z","author_association":"NONE","body":"_I'm toying with the minimal.c example with minimal.conf from the wiki page._\r\n\r\nWhen I link the example statically, it runs just fine. Adding the hello handler also works. Compile command for reference:\r\n\r\n    cc -I ../lwan/src/lib/ lwan.c -o lwan -Wl,-whole-archive ../lwan/build/src/lib/liblwan.a -Wl,-no-whole-archive -lz -upthread\r\n\r\nDynamic linking also works now. Compile line:\r\n\r\n    cc -I ../lwan/src/lib/ lwan.c -o lwan ../lwan/build/src/lib/liblwan.so\r\n\r\nHowever, when adding the handler reference to the config file, now the server cries\r\n\r\n    Could not find handler \"hello_world\"\r\n\r\nBoth with static and dynamic linking the critical strings is present:\r\n\r\n    $ strings lwan |grep hello\r\n    hello_world\r\n    lwan_handler_info_hello_world\r\n    wan_handler_hello_world\r\n\r\nLooking at the source, lwan looks up specific sections for the handlers.\r\nThere are differences between these sections in the two kind of binaries.\r\n\r\nWith static link, `objdump -s -j lwan_module lwan` is 4x16 bytes, and `objdump -s -j lwan_handler lwan` is 2x16 bytes long.\r\n\r\nWith dynamic link, the lwan_module section is missing and lwan_handlers is 1x16 bytes.\r\n\r\nI need some guidance how to dig deeper, or even better, a fix. :)","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/225","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/225/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/225/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/225/events","html_url":"https://github.com/lpereira/lwan/issues/225","id":298041209,"node_id":"MDU6SXNzdWUyOTgwNDEyMDk=","number":225,"title":"wiki rot: handler not found when following guide","user":{"login":"diviaki","id":2210634,"node_id":"MDQ6VXNlcjIyMTA2MzQ=","avatar_url":"https://avatars0.githubusercontent.com/u/2210634?v=4","gravatar_id":"","url":"https://api.github.com/users/diviaki","html_url":"https://github.com/diviaki","followers_url":"https://api.github.com/users/diviaki/followers","following_url":"https://api.github.com/users/diviaki/following{/other_user}","gists_url":"https://api.github.com/users/diviaki/gists{/gist_id}","starred_url":"https://api.github.com/users/diviaki/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/diviaki/subscriptions","organizations_url":"https://api.github.com/users/diviaki/orgs","repos_url":"https://api.github.com/users/diviaki/repos","events_url":"https://api.github.com/users/diviaki/events{/privacy}","received_events_url":"https://api.github.com/users/diviaki/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-02-17T22:18:50Z","updated_at":"2018-02-18T01:58:02Z","closed_at":"2018-02-17T22:25:04Z","author_association":"NONE","body":"Follow the wiki up to the point where it added the hello handler to minimal.c, and says:\r\n\"Rebuild and try running it again.\"\r\n\r\nI did try it but...:\r\n\r\n    Loading configuration file: lwan.conf.\r\n    Error on config file \"lwan.conf\", line 32: Could not find handler \"hello_world\".\r\n\r\nBut hey:\r\n\r\n     $ readelf -s lwan|grep hello_ \r\n    60: 0000000000004480    69 FUNC    LOCAL  DEFAULT   13 hello_world\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/224","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/224/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/224/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/224/events","html_url":"https://github.com/lpereira/lwan/issues/224","id":297879671,"node_id":"MDU6SXNzdWUyOTc4Nzk2NzE=","number":224,"title":"First basic example in wiki fails to link","user":{"login":"diviaki","id":2210634,"node_id":"MDQ6VXNlcjIyMTA2MzQ=","avatar_url":"https://avatars0.githubusercontent.com/u/2210634?v=4","gravatar_id":"","url":"https://api.github.com/users/diviaki","html_url":"https://github.com/diviaki","followers_url":"https://api.github.com/users/diviaki/followers","following_url":"https://api.github.com/users/diviaki/following{/other_user}","gists_url":"https://api.github.com/users/diviaki/gists{/gist_id}","starred_url":"https://api.github.com/users/diviaki/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/diviaki/subscriptions","organizations_url":"https://api.github.com/users/diviaki/orgs","repos_url":"https://api.github.com/users/diviaki/repos","events_url":"https://api.github.com/users/diviaki/events{/privacy}","received_events_url":"https://api.github.com/users/diviaki/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-02-16T18:32:46Z","updated_at":"2018-02-17T16:51:02Z","closed_at":"2018-02-17T14:17:21Z","author_association":"NONE","body":"    /tmp/ccP16mO3.ltrans1.ltrans.o: In function `parse_listener_prefix':\r\n    <artificial>:(.text+0x182c): undefined reference to `__start_lwan_module'\r\n    <artificial>:(.text+0x1833): undefined reference to `__stop_lwan_module'\r\n    <artificial>:(.text+0x1867): undefined reference to `__stop_lwan_module'\r\n    /tmp/ccP16mO3.ltrans1.ltrans.o: In function `setup_from_config':\r\n    <artificial>:(.text+0x1f6f): undefined reference to `__start_lwan_module'\r\n    <artificial>:(.text+0x1f76): undefined reference to `__stop_lwan_module'\r\n    <artificial>:(.text+0x1fa7): undefined reference to `__stop_lwan_module'\r\n    collect2: error: ld returned 1 exit status","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/223","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/223/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/223/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/223/events","html_url":"https://github.com/lpereira/lwan/issues/223","id":297878631,"node_id":"MDU6SXNzdWUyOTc4Nzg2MzE=","number":223,"title":"linking the hello_world example against liblwan.so fails","user":{"login":"diviaki","id":2210634,"node_id":"MDQ6VXNlcjIyMTA2MzQ=","avatar_url":"https://avatars0.githubusercontent.com/u/2210634?v=4","gravatar_id":"","url":"https://api.github.com/users/diviaki","html_url":"https://github.com/diviaki","followers_url":"https://api.github.com/users/diviaki/followers","following_url":"https://api.github.com/users/diviaki/following{/other_user}","gists_url":"https://api.github.com/users/diviaki/gists{/gist_id}","starred_url":"https://api.github.com/users/diviaki/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/diviaki/subscriptions","organizations_url":"https://api.github.com/users/diviaki/orgs","repos_url":"https://api.github.com/users/diviaki/repos","events_url":"https://api.github.com/users/diviaki/events{/privacy}","received_events_url":"https://api.github.com/users/diviaki/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2018-02-16T18:29:02Z","updated_at":"2018-02-21T10:45:41Z","closed_at":"2018-02-21T10:45:41Z","author_association":"NONE","body":"    gcc -o hello hello.c -I lwan/src/lib/ -Llwan/build/src/lib/ -llwan\r\n\r\n    /tmp/cc4jC9OA.o: In function `hello_world':\r\n    hello.c:(.text+0x6d): undefined reference to `strbuf_set_static'\r\n    collect2: error: ld returned 1 exit status","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/219","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/219/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/219/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/219/events","html_url":"https://github.com/lpereira/lwan/issues/219","id":293354465,"node_id":"MDU6SXNzdWUyOTMzNTQ0NjU=","number":219,"title":"Build does not honor CMAKE_INSTALL_LIBDIR","user":{"login":"jirutka","id":949228,"node_id":"MDQ6VXNlcjk0OTIyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/949228?v=4","gravatar_id":"","url":"https://api.github.com/users/jirutka","html_url":"https://github.com/jirutka","followers_url":"https://api.github.com/users/jirutka/followers","following_url":"https://api.github.com/users/jirutka/following{/other_user}","gists_url":"https://api.github.com/users/jirutka/gists{/gist_id}","starred_url":"https://api.github.com/users/jirutka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jirutka/subscriptions","organizations_url":"https://api.github.com/users/jirutka/orgs","repos_url":"https://api.github.com/users/jirutka/repos","events_url":"https://api.github.com/users/jirutka/events{/privacy}","received_events_url":"https://api.github.com/users/jirutka/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-01-31T23:50:31Z","updated_at":"2018-02-16T15:10:17Z","closed_at":"2018-02-16T15:10:17Z","author_association":"NONE","body":"Standard way how to change name of the lib directory (lib, or lib64) in CMake is [CMAKE_INSTALL_LIBDIR](https://cmake.org/cmake/help/v3.0/module/GNUInstallDirs.html), but this does not work here. lwan defines a custom variable [INSTALL_LIB_DIR](https://github.com/lpereira/lwan/blob/ef1e79f25757e6ab7a3be3bf42b9630dc5c192f8/src/lib/CMakeLists.txt#L108) instead, but setting it to `lib` results in a wrong destination location.","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/216","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/216/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/216/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/216/events","html_url":"https://github.com/lpereira/lwan/issues/216","id":280866176,"node_id":"MDU6SXNzdWUyODA4NjYxNzY=","number":216,"title":"test_pipelined_requests fails on Alpine Linux","user":{"login":"jirutka","id":949228,"node_id":"MDQ6VXNlcjk0OTIyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/949228?v=4","gravatar_id":"","url":"https://api.github.com/users/jirutka","html_url":"https://github.com/jirutka","followers_url":"https://api.github.com/users/jirutka/followers","following_url":"https://api.github.com/users/jirutka/following{/other_user}","gists_url":"https://api.github.com/users/jirutka/gists{/gist_id}","starred_url":"https://api.github.com/users/jirutka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jirutka/subscriptions","organizations_url":"https://api.github.com/users/jirutka/orgs","repos_url":"https://api.github.com/users/jirutka/repos","events_url":"https://api.github.com/users/jirutka/events{/privacy}","received_events_url":"https://api.github.com/users/jirutka/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-12-11T01:07:06Z","updated_at":"2018-02-01T00:06:14Z","closed_at":"2018-02-01T00:06:14Z","author_association":"NONE","body":"```\r\n======================================================================\r\nFAIL: test_pipelined_requests (__main__.TestPipelinedRequests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"src/lwan-0.1/src/scripts/testsuite.py\", line 678, in test_pipelined_requests\r\n    self.assertTrue(s in responses)\r\nAssertionError: False is not true\r\n```\r\n\r\nThe variable `responses` is empty, `sock.recv(32)` returns just an empty string.","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/215","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/215/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/215/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/215/events","html_url":"https://github.com/lpereira/lwan/issues/215","id":280864646,"node_id":"MDU6SXNzdWUyODA4NjQ2NDY=","number":215,"title":"Segfaults on SIGINT on Alpine Linux","user":{"login":"jirutka","id":949228,"node_id":"MDQ6VXNlcjk0OTIyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/949228?v=4","gravatar_id":"","url":"https://api.github.com/users/jirutka","html_url":"https://github.com/jirutka","followers_url":"https://api.github.com/users/jirutka/followers","following_url":"https://api.github.com/users/jirutka/following{/other_user}","gists_url":"https://api.github.com/users/jirutka/gists{/gist_id}","starred_url":"https://api.github.com/users/jirutka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jirutka/subscriptions","organizations_url":"https://api.github.com/users/jirutka/orgs","repos_url":"https://api.github.com/users/jirutka/repos","events_url":"https://api.github.com/users/jirutka/events{/privacy}","received_events_url":"https://api.github.com/users/jirutka/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-12-11T00:52:04Z","updated_at":"2018-02-16T15:11:59Z","closed_at":"2018-02-16T15:11:59Z","author_association":"NONE","body":"```\r\n$ ./src/bin/lwan/lwan -c lwan.conf\r\nLoading configuration file: lwan.conf.\r\nUsing 2 threads, maximum 2048 sockets per thread.\r\nListening on http://0.0.0.0:8080.\r\nReady to serve.\r\n^C\r\nSignal 2 (Interrupt) received.\r\nShutting down.\r\nSegmentation fault\r\n```\r\n\r\n```\r\n$ strace -f ./src/bin/lwan/lwan -c lwan.conf\r\n(send SIGINT to lwan process from another terminal)\r\n...\r\n <unfinished ...>\r\n[pid 31370] <... futex resumed> )       = -1 ETIMEDOUT (Operation timed out)\r\n[pid 31370] futex(0x381de4f2a14, FUTEX_WAIT_PRIVATE, 2, {tv_sec=2, tv_nsec=999999257}) = -1 ETIMEDOUT (Operation timed out)\r\n[pid 31370] futex(0x381de4f2a14, FUTEX_WAIT_PRIVATE, 2, {tv_sec=3, tv_nsec=999999390} <unfinished ...>\r\n[pid 31369] <... accept4 resumed> )     = ? ERESTARTSYS (To be restarted if SA_RESTART is set)\r\n[pid 31369] --- SIGINT {si_signo=SIGINT, si_code=SI_USER, si_pid=31351, si_uid=1000} ---\r\n[pid 31369] shutdown(10, SHUT_RDWR)     = 0\r\n[pid 31369] close(10)                   = 0\r\n[pid 31369] rt_sigreturn({mask=[]})     = 288\r\n[pid 31369] accept4(10, NULL, NULL, SOCK_CLOEXEC|SOCK_NONBLOCK) = -1 EBADF (Bad file descriptor)\r\n[pid 31369] writev(1, [{iov_base=\"\\33[36mSignal 2 (Interrupt) receiv\"..., iov_len=39}, {iov_base=\"\\n\", iov_len=1}], 2Signal 2 (Interrupt) received.\r\n) = 40\r\n[pid 31369] writev(1, [{iov_base=\"\\33[36mShutting down.\\33[0m\", iov_len=23}, {iov_base=\"\\n\", iov_len=1}], 2Shutting down.\r\n) = 24\r\n[pid 31369] futex(0x381de4f2a14, FUTEX_WAKE_PRIVATE, 1) = 1\r\n[pid 31370] <... futex resumed> )       = 0\r\n[pid 31369] futex(0x381de4f2b20, FUTEX_WAIT, 31370, NULL <unfinished ...>\r\n[pid 31370] rt_sigprocmask(SIG_BLOCK, ~[], [], 8) = 0\r\n[pid 31370] exit(0)                     = ?\r\n[pid 31370] +++ exited with 0 +++\r\n[pid 31369] <... futex resumed> )       = 0\r\n[pid 31369] munmap(0x381de4dc000, 94208) = 0\r\n[pid 31369] close(7)                    = 0\r\n[pid 31369] write(9, \"\\0\", 1)           = 1\r\n[pid 31372] <... epoll_pwait resumed> [{EPOLLIN, {u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 31369] close(4 <unfinished ...>\r\n[pid 31372] read(8,  <unfinished ...>\r\n[pid 31369] <... close resumed> )       = 0\r\n[pid 31372] <... read resumed> \"\\0\", 4) = 1\r\n[pid 31369] write(6, \"\\0\", 1 <unfinished ...>\r\n[pid 31372] futex(0x381de4c490c, FUTEX_WAIT_PRIVATE, 1, NULL <unfinished ...>\r\n[pid 31369] <... write resumed> )       = 1\r\n[pid 31371] <... epoll_pwait resumed> [{EPOLLIN, {u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 31369] futex(0x381de4c4904, FUTEX_WAIT_PRIVATE, 0, NULL <unfinished ...>\r\n[pid 31371] read(5, \"\\0\", 4)            = 1\r\n[pid 31371] futex(0x381de4c4904, FUTEX_WAKE_PRIVATE, 2147483647) = 1\r\n[pid 31369] <... futex resumed> )       = 0\r\n[pid 31371] rt_sigprocmask(SIG_BLOCK, ~[],  <unfinished ...>\r\n[pid 31369] futex(0x381de4c490c, FUTEX_WAKE_PRIVATE, 1 <unfinished ...>\r\n[pid 31371] <... rt_sigprocmask resumed> [], 8) = 0\r\n[pid 31369] <... futex resumed> )       = 1\r\n[pid 31372] <... futex resumed> )       = 0\r\n[pid 31369] close(8 <unfinished ...>\r\n[pid 31372] rt_sigprocmask(SIG_BLOCK, ~[],  <unfinished ...>\r\n[pid 31369] <... close resumed> )       = 0\r\n[pid 31372] <... rt_sigprocmask resumed> [], 8) = 0\r\n[pid 31369] close(9 <unfinished ...>\r\n[pid 31372] exit(0 <unfinished ...>\r\n[pid 31369] <... close resumed> )       = 0\r\n[pid 31372] <... exit resumed>)         = ?\r\n[pid 31369] futex(0x381de4c4b20, FUTEX_WAIT, 31372, NULL <unfinished ...>\r\n[pid 31372] +++ exited with 0 +++\r\n[pid 31369] <... futex resumed> )       = -1 EAGAIN (Resource temporarily unavailable)\r\n[pid 31371] exit(0 <unfinished ...>\r\n[pid 31369] munmap(0x381de4ae000, 94208 <unfinished ...>\r\n[pid 31371] <... exit resumed>)         = ?\r\n[pid 31369] <... munmap resumed> )      = 0\r\n[pid 31371] +++ exited with 0 +++\r\nclose(5)                                = 0\r\nclose(6)                                = 0\r\nmunmap(0x381de4c5000, 94208)            = 0\r\nclose(3)                                = 0\r\n--- SIGSEGV {si_signo=SIGSEGV, si_code=SI_KERNEL, si_addr=NULL} ---\r\n+++ killed by SIGSEGV +++\r\nSegmentation fault\r\n```\r\n\r\n* Platform: x86_64, Linux with Grsecurity (I’ve tried it even on system with vanilla kernel with the same result)\r\n* OS: Alpine Linux (musl libc)\r\n* gcc: 6.4.0\r\n\r\nlwan-build-config.h:\r\n\r\n```\r\n#pragma once\r\n\r\n/* API available in Glibc/Linux, but possibly not elsewhere */\r\n#define HAS_ACCEPT4\r\n#define HAS_CLOCK_GETTIME\r\n#define HAS_MEMPCPY\r\n#define HAS_MEMRCHR\r\n#define HAS_PIPE2\r\n#define HAS_PTHREADBARRIER\r\n/* #undef HAS_RAWMEMCHR */\r\n#define HAS_READAHEAD\r\n/* #undef HAS_REALLOCARRAY */\r\n#define HAS_MKOSTEMP\r\n\r\n/* Compiler builtins for specific CPU instruction support */\r\n#define HAVE_BUILTIN_CLZLL\r\n#define HAVE_BUILTIN_CPU_INIT\r\n#define HAVE_BUILTIN_IA32_CRC32\r\n#define HAVE_BUILTIN_MUL_OVERFLOW\r\n#define HAVE_BUILTIN_ADD_OVERFLOW\r\n\r\n/* C11 _Static_assert() */\r\n#define HAVE_STATIC_ASSERT\r\n\r\n/* Libraries */\r\n#define HAVE_LUA\r\n\r\n/* Valgrind support for coroutines */\r\n/* #undef USE_VALGRIND */\r\n```","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/214","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/214/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/214/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/214/events","html_url":"https://github.com/lpereira/lwan/issues/214","id":280863869,"node_id":"MDU6SXNzdWUyODA4NjM4Njk=","number":214,"title":"test_unknown_user sometimes fails (lwan segfaults) on Alpine Linux","user":{"login":"jirutka","id":949228,"node_id":"MDQ6VXNlcjk0OTIyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/949228?v=4","gravatar_id":"","url":"https://api.github.com/users/jirutka","html_url":"https://github.com/jirutka","followers_url":"https://api.github.com/users/jirutka/followers","following_url":"https://api.github.com/users/jirutka/following{/other_user}","gists_url":"https://api.github.com/users/jirutka/gists{/gist_id}","starred_url":"https://api.github.com/users/jirutka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jirutka/subscriptions","organizations_url":"https://api.github.com/users/jirutka/orgs","repos_url":"https://api.github.com/users/jirutka/repos","events_url":"https://api.github.com/users/jirutka/events{/privacy}","received_events_url":"https://api.github.com/users/jirutka/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-12-11T00:43:40Z","updated_at":"2018-02-16T15:12:14Z","closed_at":"2018-02-16T15:12:14Z","author_association":"NONE","body":"```\r\n======================================================================\r\nERROR: test_unknown_user (__main__.TestAuthentication)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 601, in urlopen\r\n    chunked=chunked)\r\n  File \"/usr/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 387, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 2, in raise_from\r\n  File \"/usr/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 383, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1331, in getresponse\r\n    response.begin()\r\n  File \"/usr/lib/python3.6/http/client.py\", line 297, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/usr/lib/python3.6/http/client.py\", line 266, in _read_status\r\n    raise RemoteDisconnected(\"Remote end closed connection without\"\r\nhttp.client.RemoteDisconnected: Remote end closed connection without response\r\n```\r\n\r\nI tried to start testrunner manually:\r\n\r\n```sh\r\necho \"foo = bar\" > htpasswd\r\nstrace -f ./src/bin/testrunner/testrunner\r\n```\r\n\r\nAnd send some request with HTTP Basic:\r\n\r\n```sh\r\ncurl -u foo:bar http://0.0.0.0:8080/admin\r\n```\r\n\r\nSometimes it correctly responds with `Hello, world!`, sometimes it segfaults:\r\n\r\n```\r\n <unfinished ...>\r\n[pid 31169] <... accept4 resumed> )     = 77\r\n[pid 31169] write(48, \"M\\0\\0\\0\", 4)     = 4\r\n[pid 31169] accept4(76, NULL, NULL, SOCK_CLOEXEC|SOCK_NONBLOCK <unfinished ...>\r\n[pid 31185] <... epoll_pwait resumed> [{EPOLLIN, {u32=0, u64=0}}], 170, -1, NULL, 8) = 1\r\n[pid 31185] read(47, \"M\\0\\0\\0\", 4)      = 4\r\n[pid 31185] epoll_ctl(46, EPOLL_CTL_ADD, 77, {EPOLLIN|EPOLLERR|EPOLLRDHUP|EPOLLET, {u32=1412061600, u64=314944674208}}) = 0\r\n[pid 31185
8000
] epoll_pwait(46, [{EPOLLIN, {u32=1412061600, u64=314944674208}}], 170, 1000, NULL, 8) = 1\r\n[pid 31185] read(77, \"GET /admin HTTP/1.1\\r\\nHost: 0.0.0\"..., 4096) = 116\r\n[pid 31185] brk(0x49542cf000)           = 0x49542cf000\r\n[pid 31185] open(\"htpasswd\", O_RDONLY|O_CLOEXEC) = 79\r\n[pid 31185] fcntl(79, F_SETFD, FD_CLOEXEC) = 0\r\n[pid 31185] fstat(79, {st_mode=S_IFREG|0644, st_size=10, ...}) = 0\r\n[pid 31185] mmap(NULL, 10, PROT_READ, MAP_SHARED, 79, 0) = 0x283a5967000\r\n[pid 31185] close(79)                   = 0\r\n[pid 31185] munmap(0x283a5967000, 10)   = 0\r\n[pid 31185] writev(77, [{iov_base=\"HTTP/1.1 200 OK\\r\\nContent-Length:\"..., iov_len=224}, {iov_base=\"Hello, world!\", iov_len=13}], 2) = 237\r\n[pid 31185] epoll_ctl(46, EPOLL_CTL_MOD, 77, {EPOLLOUT|EPOLLERR|EPOLLRDHUP, {u32=1412061600, u64=314944674208}}) = 0\r\n[pid 31185] epoll_pwait(46, [{EPOLLOUT|EPOLLRDHUP, {u32=1412061600, u64=314944674208}}], 170, 1000, NULL, 8) = 1\r\n[pid 31185] close(77)                   = 0\r\n[pid 31185] epoll_pwait(46,  <unfinished ...>\r\n[pid 31169] <... accept4 resumed> )     = 78\r\n[pid 31169] write(48, \"N\\0\\0\\0\", 4)     = 4\r\n[pid 31185] <... epoll_pwait resumed> [{EPOLLIN, {u32=0, u64=0}}], 170, -1, NULL, 8) = 1\r\n[pid 31169] accept4(76, NULL, NULL, SOCK_CLOEXEC|SOCK_NONBLOCK <unfinished ...>\r\n[pid 31185] read(47, \"N\\0\\0\\0\", 4)      = 4\r\n[pid 31185] epoll_ctl(46, EPOLL_CTL_ADD, 78, {EPOLLIN|EPOLLERR|EPOLLRDHUP|EPOLLET, {u32=1412061632, u64=314944674240}}) = 0\r\n[pid 31185] brk(0x49542d0000)           = 0x49542d0000\r\n[pid 31185] epoll_pwait(46, [{EPOLLIN, {u32=1412061632, u64=314944674240}}], 170, 1000, NULL, 8) = 1\r\n[pid 31185] read(78, \"GET /admin HTTP/1.1\\r\\nHost: 0.0.0\"..., 4096) = 116\r\n[pid 31185] --- SIGSEGV {si_signo=SIGSEGV, si_code=SI_KERNEL, si_addr=NULL} ---\r\n[pid 31191] <... epoll_pwait resumed> ) = ? <unavailable>\r\n[pid 31192] <... epoll_pwait resumed> <unfinished ...>) = ?\r\n[pid 31194] <... epoll_pwait resumed> <unfinished ...>) = ?\r\n[pid 31169] <... accept4 resumed>)      = ?\r\n[pid 31193] <... epoll_pwait resumed> <unfinished ...>) = ?\r\n...\r\n[pid 31171] <... epoll_pwait resumed> <unfinished ...>) = ?\r\n[pid 31170] <... futex resumed>)        = ?\r\n[pid 31186] <... epoll_pwait resumed> <unfinished ...>) = ?\r\n[pid 31186] +++ killed by SIGSEGV +++\r\n...\r\n[pid 31170] +++ killed by SIGSEGV +++\r\n+++ killed by SIGSEGV +++\r\nSegmentation fault\r\n```\r\n\r\n* Platform: x86_64, Linux with Grsecurity\r\n* OS: Alpine Linux (musl libc)\r\n* gcc: 6.4.0\r\n\r\nlwan-build-config.h:\r\n\r\n```\r\n#pragma once\r\n\r\n/* API available in Glibc/Linux, but possibly not elsewhere */\r\n#define HAS_ACCEPT4\r\n#define HAS_CLOCK_GETTIME\r\n#define HAS_MEMPCPY\r\n#define HAS_MEMRCHR\r\n#define HAS_PIPE2\r\n#define HAS_PTHREADBARRIER\r\n/* #undef HAS_RAWMEMCHR */\r\n#define HAS_READAHEAD\r\n/* #undef HAS_REALLOCARRAY */\r\n#define HAS_MKOSTEMP\r\n\r\n/* Compiler builtins for specific CPU instruction support */\r\n#define HAVE_BUILTIN_CLZLL\r\n#define HAVE_BUILTIN_CPU_INIT\r\n#define HAVE_BUILTIN_IA32_CRC32\r\n#define HAVE_BUILTIN_MUL_OVERFLOW\r\n#define HAVE_BUILTIN_ADD_OVERFLOW\r\n\r\n/* C11 _Static_assert() */\r\n#define HAVE_STATIC_ASSERT\r\n\r\n/* Libraries */\r\n#define HAVE_LUA\r\n\r\n/* Valgrind support for coroutines */\r\n/* #undef USE_VALGRIND */\r\n```","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/211","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/211/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/211/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/211/events","html_url":"https://github.com/lpereira/lwan/issues/211","id":277023112,"node_id":"MDU6SXNzdWUyNzcwMjMxMTI=","number":211,"title":"Empty query param invalidates the entire set","user":{"login":"juntalis","id":380024,"node_id":"MDQ6VXNlcjM4MDAyNA==","avatar_url":"https://avatars3.githubusercontent.com/u/380024?v=4","gravatar_id":"","url":"https://api.github.com/users/juntalis","html_url":"https://github.com/juntalis","followers_url":"https://api.github.com/users/juntalis/followers","following_url":"https://api.github.com/users/juntalis/following{/other_user}","gists_url":"https://api.github.com/users/juntalis/gists{/gist_id}","starred_url":"https://api.github.com/users/juntalis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juntalis/subscriptions","organizations_url":"https://api.github.com/users/juntalis/orgs","repos_url":"https://api.github.com/users/juntalis/repos","events_url":"https://api.github.com/users/juntalis/events{/privacy}","received_events_url":"https://api.github.com/users/juntalis/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-11-27T13:45:10Z","updated_at":"2017-11-27T15:57:28Z","closed_at":"2017-11-27T15:57:28Z","author_association":"CONTRIBUTOR","body":"Noticed some odd behavior with the query params parsing where an empty parameter would result in the whole query string being dropped and none of the params being added to the request. Looked into it a bit and found the cause in [parse_key_values](https://github.com/lpereira/lwan/blob/master/src/lib/lwan-request.c#L364). Since `url_decode` returns the length of the decoded value, (not including the trailing zero) an empty value would abort the parsing.\r\n\r\nI was able to avoid this behavior by changing line 364 to:\r\n\r\n```c\r\n            value = \"\";\r\n```\r\n\r\nI feel like that's probably not accounting for the other use cases of `parse_key_values`, though.","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/209","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/209/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/209/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/209/events","html_url":"https://github.com/lpereira/lwan/issues/209","id":266801986,"node_id":"MDU6SXNzdWUyNjY4MDE5ODY=","number":209,"title":"Can't make lwan","user":{"login":"alex-bender","id":3628862,"node_id":"MDQ6VXNlcjM2Mjg4NjI=","avatar_url":"https://avatars0.githubusercontent.com/u/3628862?v=4","gravatar_id":"","url":"https://api.github.com/users/alex-bender","html_url":"https://github.com/alex-bender","followers_url":"https://api.github.com/users/alex-bender/followers","following_url":"https://api.github.com/users/alex-bender/following{/other_user}","gists_url":"https://api.github.com/users/alex-bender/gists{/gist_id}","starred_url":"https://api.github.com/users/alex-bender/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alex-bender/subscriptions","organizations_url":"https://api.github.com/users/alex-bender/orgs","repos_url":"https://api.github.com/users/alex-bender/repos","events_url":"https://api.github.com/users/alex-bender/events{/privacy}","received_events_url":"https://api.github.com/users/alex-bender/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-10-19T10:57:55Z","updated_at":"2017-10-28T09:50:08Z","closed_at":"2017-10-27T04:14:52Z","author_association":"NONE","body":"System: Debian 8\r\n```\r\nuname -a\r\nLinux bender 4.9.0-0.bpo.2-amd64 #1 SMP Debian 4.9.13-1~bpo8+1 (2017-02-27) x86_64 GNU/Linux\r\n```\r\n```\r\ncmake .. -DCMAKE_BUILD_TYPE=Release\r\n[...]\r\n/usr/bin/ld: /tmp/ccadO1lz.ltrans0.ltrans.o: relocation R_X86_64_PC32 against symbol `coro_swapcontext' can not be used when making a shared object; recompile with -fPIC\r\n/usr/bin/ld: final link failed: Bad value\r\ncollect2: error: ld returned 1 exit status\r\nsrc/lib/CMakeFiles/lwan-shared.dir/build.make:86: recipe for target 'src/lib/liblwan.so' failed\r\nmake[2]: *** [src/lib/liblwan.so] Error 1\r\nCMakeFiles/Makefile2:162: recipe for target 'src/lib/CMakeFiles/lwan-shared.dir/all' failed\r\nmake[1]: *** [src/lib/CMakeFiles/lwan-shared.dir/all] Error 2\r\nMakefile:117: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/208","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/208/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/208/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/208/events","html_url":"https://github.com/lpereira/lwan/issues/208","id":262506677,"node_id":"MDU6SXNzdWUyNjI1MDY2Nzc=","number":208,"title":"Unknown type name 'lwan_t'","user":{"login":"Globik","id":8457017,"node_id":"MDQ6VXNlcjg0NTcwMTc=","avatar_url":"https://avatars3.githubusercontent.com/u/8457017?v=4","gravatar_id":"","url":"https://api.github.com/users/Globik","html_url":"https://github.com/Globik","followers_url":"https://api.github.com/users/Globik/followers","following_url":"https://api.github.com/users/Globik/following{/other_user}","gists_url":"https://api.github.com/users/Globik/gists{/gist_id}","starred_url":"https://api.github.com/users/Globik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Globik/subscriptions","organizations_url":"https://api.github.com/users/Globik/orgs","repos_url":"https://api.github.com/users/Globik/repos","events_url":"https://api.github.com/users/Globik/events{/privacy}","received_events_url":"https://api.github.com/users/Globik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2017-10-03T17:00:50Z","updated_at":"2017-10-27T03:34:36Z","closed_at":"2017-10-27T03:34:36Z","author_association":"NONE","body":"How to compile helloworld.c??\r\nalso trying to compile with pkg-config , there is an error\r\nstdc-predef.h fatal error /lwan-build-config.h no such file or directory. Though it is there in usr local include lwan\r\nWhat include ausserdem lwan.h?","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/206","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/206/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/206/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/206/events","html_url":"https://github.com/lpereira/lwan/issues/206","id":249864669,"node_id":"MDU6SXNzdWUyNDk4NjQ2Njk=","number":206,"title":"Possible memory leak using lwan as a library (Ubuntu EC2 instance)","user":{"login":"juntalis","id":380024,"node_id":"MDQ6VXNlcjM4MDAyNA==","avatar_url":"https://avatars3.githubusercontent.com/u/380024?v=4","gravatar_id":"","url":"https://api.github.com/users/juntalis","html_url":"https://github.com/juntalis","followers_url":"https://api.github.com/users/juntalis/followers","following_url":"https://api.github.com/users/juntalis/following{/other_user}","gists_url":"https://api.github.com/users/juntalis/gists{/gist_id}","starred_url":"https://api.github.com/users/juntalis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juntalis/subscriptions","organizations_url":"https://api.github.com/users/juntalis/orgs","repos_url":"https://api.github.com/users/juntalis/repos","events_url":"https://api.github.com/users/juntalis/events{/privacy}","received_events_url":"https://api.github.com/users/juntalis/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2017-08-13T10:12:46Z","updated_at":"2017-08-17T06:05:49Z","closed_at":"2017-08-17T06:05:49Z","author_association":"CONTRIBUTOR","body":"I say _possible_, as I'm not quite familiar enough with lwan's internals yet to know it's a mistake I'm making or if it's a part of the design that I'm not aware of.\r\n\r\nI start encountering OOM crashes after increasing the duration of my load tests, so after failing to find any cause in my code, I threw together the following aample application, compiled with the same Release flags as lwan:\r\n\r\n```c\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <time.h>\r\n\r\n#include \"lwan.h\"\r\n#include \"lwan-config.h\"\r\n\r\nstatic const char hello_world[] = \"Hello, World!\";\r\n\r\nstatic enum lwan_http_status\r\nplaintext(struct lwan_request *request __attribute__((unused)),\r\n          struct lwan_response *response,\r\n          void *data __attribute__((unused)))\r\n{\r\n    strbuf_set_static(response->buffer, hello_world, sizeof(hello_world) - 1);\r\n    response->mime_type = \"text/plain\";\r\n    return HTTP_OK;\r\n}\r\n\r\nint main(void)\r\n{\r\n    static const struct lwan_url_map url_map[] = {\r\n        { .prefix = \"/plaintext\", .handler = plaintext },\r\n        { .prefix = NULL }\r\n    };\r\n    struct lwan l;\r\n    lwan_init(&l);\r\n    srand((unsigned int)time(NULL));\r\n    lwan_set_url_map(&l, url_map);\r\n    lwan_main_loop(&l);\r\n    lwan_shutdown(&l);\r\n    return 0;\r\n}\r\n```\r\n\r\nAnd the corresponding ``.conf`` file:\r\n\r\n```\r\nthreads = 16\r\nquiet = true\r\n\r\nlistener *:8080 {\r\n}\r\n```\r\n\r\nTo replicate the issue, I ran a 5 minute load test with wrk from another EC2 instance:\r\n\r\n```\r\n./wrk -t14 -c1000 -d5m http://10.0.10.211:8080/plaintext --latency --timeout 10s\r\nRunning 5m test @ http://10.0.10.211:8080/plaintext\r\n  14 threads and 1000 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency    13.76ms    5.36ms 646.03ms   97.55%\r\n    Req/Sec     5.19k   516.29    28.45k    84.24%\r\n  Latency Distribution\r\n     50%   13.56ms\r\n     75%   14.51ms\r\n     90%   15.24ms\r\n     99%   21.76ms\r\n  21703979 requests in 5.00m, 3.97GB read\r\n  Socket errors: connect 0, read 3799, write 0, timeout 0\r\nRequests/sec:  72324.16\r\nTransfer/sec:     13.53MB\r\n```\r\n\r\nBy the end of the 5 minutes, the ```lwan-sample``` process's memory usage was up to 5.6GB. I waited for 5 minutes just in case there was a deferred cleanup cycle I was unaware of, then hit the server with another 5 minute load test in order to grab the syslog of the crash when it exceeded 8GB: [syslog](https://github.com/lpereira/lwan/files/1220391/syslog.txt)\r\n\r\nI spent some time today trying to track the issue down, but didn't much further. The only scenario I found that didn't result in memory consumption issues was running the same load test against the lwan executable's serve_files handler. In that case, memory usage capped out at around 2.5GB~3GB, and dropped back to its starting point when the load test completed.\r\n\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/204","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/204/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/204/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/204/events","html_url":"https://github.com/lpereira/lwan/issues/204","id":246581640,"node_id":"MDU6SXNzdWUyNDY1ODE2NDA=","number":204,"title":"Segmentation fault (core dumped).","user":{"login":"mrwert","id":13013995,"node_id":"MDQ6VXNlcjEzMDEzOTk1","avatar_url":"https://avatars1.githubusercontent.com/u/13013995?v=4","gravatar_id":"","url":"https://api.github.com/users/mrwert","html_url":"https://github.com/mrwert","followers_url":"https://api.github.com/users/mrwert/followers","following_url":"https://api.github.com/users/mrwert/following{/other_user}","gists_url":"https://api.github.com/users/mrwert/gists{/gist_id}","starred_url":"https://api.github.com/users/mrwert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrwert/subscriptions","organizations_url":"https://api.github.com/users/mrwert/orgs","repos_url":"https://api.github.com/users/mrwert/repos","events_url":"https://api.github.com/users/mrwert/events{/privacy}","received_events_url":"https://api.github.com/users/mrwert/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-07-30T12:43:55Z","updated_at":"2017-07-30T22:42:02Z","closed_at":"2017-07-30T22:42:02Z","author_association":"NONE","body":"Hello.\r\nFreeBSD 11.0, clang 3.8.0. lwan (1735 commits).\r\n\r\nAfter receiving a 404 status code.\r\n\r\n101469 lwan-response.c:130 log_request() 127.0.0.1 [Sun, 30 Jul 2017 12:31:24 GMT] \"GET / HTTP/1.1\" 200 text/html.\r\n101469 lwan-response.c:130 log_request() 127.0.0.1 [Sun, 30 Jul 2017 12:31:35 GMT] \"GET /1 HTTP/1.1\" 404 text/html.\r\n../common/lwan-coro.c:298:39: runtime error: member access within misaligned address 0x00080283a15a for type 'struct coro_switcher', which requires 8 byte alignment\r\n0x00080283a15a: note: pointer points here\r\n 00 00  00 44 31 30 **31** 34 36 39  48 88 6f 01 08 00 00 00  78 a1 83 02 08 00 00 00  00 00 00 00 00 00\r\n\r\nThanks.","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/203","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/203/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/203/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/203/events","html_url":"https://github.com/lpereira/lwan/issues/203","id":238601756,"node_id":"MDU6SXNzdWUyMzg2MDE3NTY=","number":203,"title":"Segmentation Fault when use float/double type","user":{"login":"130B848","id":6932983,"node_id":"MDQ6VXNlcjY5MzI5ODM=","avatar_url":"https://avatars0.githubusercontent.com/u/6932983?v=4","gravatar_id":"","url":"https://api.github.com/users/130B848","html_url":"https://github.com/130B848","followers_url":"https://api.github.com/users/130B848/followers","following_url":"https://api.github.com/users/130B848/following{/other_user}","gists_url":"https://api.github.com/users/130B848/gists{/gist_id}","starred_url":"https://api.github.com/users/130B848/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/130B848/subscriptions","organizations_url":"https://api.github.com/users/130B848/orgs","repos_url":"https://api.github.com/users/130B848/repos","events_url":"https://api.github.com/users/130B848/events{/privacy}","received_events_url":"https://api.github.com/users/130B848/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-06-26T16:41:56Z","updated_at":"2017-11-03T03:47:30Z","closed_at":"2017-11-03T03:47:30Z","author_association":"NONE","body":"I use printf function to print a float type number then a segmentation fault happen.\r\nI tried to add one line \r\n```c\r\nprintf(\"%f\\n\", 1.0);\r\n```\r\nat the begining of hello_world function in testrunner/main.c,\r\nand the request of /hello would crash.","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/202","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/202/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/202/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/202/events","html_url":"https://github.com/lpereira/lwan/issues/202","id":236651670,"node_id":"MDU6SXNzdWUyMzY2NTE2NzA=","number":202,"title":"Segmentation fault when lwan_config listener is assigned static memory","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-06-17T09:59:09Z","updated_at":"2017-07-16T00:16:58Z","closed_at":"2017-07-16T00:16:08Z","author_association":"NONE","body":"I am using lwan's API without a configuration file which means if I want to change the port to listen on I have to provide my own `struct lwan_config` object . I did this by making a copy of the default object and then assigning a new value to the `listener` member. The code looks like this:\r\n\r\n```c\r\nstruct lwan_config c = *lwan_get_default_config();\r\n\r\nc.listener = \"127.0.0.1:8000\";\r\n```\r\n\r\nBut what I later found out was that this was causing a segmentation fault during shutdown. After reading the source code for the `lwan_shutdown` function I spotted the problem here:\r\n\r\nhttps://github.com/lpereira/lwan/blob/9c2a7456b3e527d1186cb70bae3c6d4c48d2124e/common/lwan.c#L605\r\n```C\r\nvoid\r\nlwan_shutdown(struct lwan *l)\r\n{\r\n    lwan_status_info(\"Shutting down\");\r\n\r\n    if (l->config.listener != default_config.listener)\r\n        free(l->config.listener);\r\n\r\n[...]\r\n```\r\n\r\nThe shutdown function is assuming that if the value for the `listener` member is not the same as the default one, then it must be memory allocated by the standard library and goes ahead to generously deallocate it for me. This assumption was wrong and thus it ended up calling `free` on static memory, which resulted in segmentation fault.\r\n\r\nBut it gets interesting. If we look at the source code for the lwan binary, we can see that it also makes a copy of the default config object and changes the value of the `listener` member. What it does differently from my code is that it calls `strdup`, a function from the standard library that returns allocated memory:\r\n\r\nhttps://github.com/lpereira/lwan/blob/9c2a7456b3e527d1186cb70bae3c6d4c48d2124e/lwan/main.c\r\n```c\r\nint\r\nmain(int argc, char *argv[])\r\n{\r\n    struct lwan l;\r\n    struct lwan_config c;\r\n\r\n[...]\r\n\r\n    c = *lwan_get_default_config();\r\n    c.listener = strdup(\"*:8080\");\r\n\r\n[...]\r\n```\r\n\r\nBut then it does this:\r\n\r\n```c\r\n[...]\r\n\r\n    lwan_shutdown(&l);\r\n\r\nout:\r\n    free(c.listener);\r\n    free(c.config_file_path);\r\n\r\n    return ret;\r\n}\r\n```\r\n\r\nIt passes `listener` to `free`. Knowing that `lwan_shutdown` also passes `listener` to `free`, this will result in having the same memory location being `free`'d twice.\r\n\r\nValgrind confirms this is happening:\r\n\r\n```c\r\n==2459== Invalid free() / delete / delete[] / realloc()\r\n==2459==    at 0x4C2C14B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==2459==    by 0x4060E0: main (main.c:142)\r\n==2459==  Address 0x747fc80 is 0 bytes inside a block of size 7 free'd\r\n==2459==    at 0x4C2C14B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==2459==    by 0x40CCD0: lwan_shutdown (lwan.c:605)\r\n==2459==    by 0x4060D0: main (main.c:139)\r\n==2459==  Block was alloc'd at\r\n==2459==    at 0x4C2AF1F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==2459==    by 0x69A2EC9: strdup (in /usr/lib/libc-2.25.so)\r\n==2459==    by 0x405F6D: main (main.c:114)\r\n==2459== \r\n==2459== \r\n==2459== HEAP SUMMARY:\r\n==2459==     in use at exit: 0 bytes in 0 blocks\r\n==2459==   total heap usage: 145 allocs, 146 frees, 230,250 bytes allocated\r\n==2459== \r\n==2459== All heap blocks were freed -- no leaks are possible\r\n==2459== \r\n==2459== For counts of detected and suppressed errors, rerun with: -v\r\n==2459== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)\r\n```\r\n\r\nI suggest leaving memory management of user provided values to the user instead of having the API make assumptions about where the memory originates from. Someone else may allocate memory and pass an offset (from the result of a trim operation on `\" localhost:8080\"` for example) that will confuse `free`.","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/201","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/201/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/201/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/201/events","html_url":"https://github.com/lpereira/lwan/issues/201","id":230161522,"node_id":"MDU6SXNzdWUyMzAxNjE1MjI=","number":201,"title":"How to upload files?","user":{"login":"cgoxopx","id":13763798,"node_id":"MDQ6VXNlcjEzNzYzNzk4","avatar_url":"https://avatars1.githubusercontent.com/u/13763798?v=4","gravatar_id":"","url":"https://api.github.com/users/cgoxopx","html_url":"https://github.com/cgoxopx","followers_url":"https://api.github.com/users/cgoxopx/followers","following_url":"https://api.github.com/users/cgoxopx/following{/other_user}","gists_url":"https://api.github.com/users/cgoxopx/gists{/gist_id}","starred_url":"https://api.github.com/users/cgoxopx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgoxopx/subscriptions","organizations_url":"https://api.github.com/users/cgoxopx/orgs","repos_url":"https://api.github.com/users/cgoxopx/repos","events_url":"https://api.github.com/users/cgoxopx/events{/privacy}","received_events_url":"https://api.github.com/users/cgoxopx/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-05-20T15:47:13Z","updated_at":"2017-05-24T10:38:21Z","closed_at":"2017-05-24T10:38:21Z","author_association":"NONE","body":"Error:413","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/200","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/200/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/200/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/200/events","html_url":"https://github.com/lpereira/lwan/issues/200","id":229772026,"node_id":"MDU6SXNzdWUyMjk3NzIwMjY=","number":200,"title":"Bad directory listing of / in lwan-mod-serve-files.c","user":{"login":"dubhater","id":1739488,"node_id":"MDQ6VXNlcjE3Mzk0ODg=","avatar_url":"https://avatars3.githubusercontent.com/u/1739488?v=4","gravatar_id":"","url":"https://api.github.com/users/dubhater","html_url":"https://github.com/dubhater","followers_url":"https://api.github.com/users/dubhater/followers","following_url":"https://api.github.com/users/dubhater/following{/other_user}","gists_url":"https://api.github.com/users/dubhater/gists{/gist_id}","starred_url":"https://api.github.com/users/dubhater/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dubhater/subscriptions","organizations_url":"https://api.github.com/users/dubhater/orgs","repos_url":"https://api.github.com/users/dubhater/repos","events_url":"https://api.github.com/users/dubhater/events{/privacy}","received_events_url":"https://api.github.com/users/dubhater/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-05-18T18:57:52Z","updated_at":"2017-07-15T19:03:07Z","closed_at":"2017-07-15T19:02:40Z","author_association":"NONE","body":"I'm running lwan like this for the purpose of serving a few files:\r\n```sh\r\nlwan --root . --listen localhost:1234\r\n```\r\nThe directory listing of / contains unusable links. They look like this:\r\n```html\r\n    <tr>\r\n      <td><img src=\"/icons/file.png\" alt=\"FILE\"></td>\r\n      <td><a href=\"&#x2f;/PKGBUILD\">PKGBUILD</a></td>\r\n      <td>application/octet-stream</td>\r\n      <td>901B</td>\r\n    </tr>\r\n    <tr>\r\n      <td><img src=\"/icons/folder.png\" alt=\"DIR\"></td>\r\n      <td><a href=\"&#x2f;/src\">src</a></td>\r\n      <td>directory</td>\r\n      <td>17B</td>\r\n    </tr>\r\n```\r\nIf I click on PKGBUILD, both Firefox and Chromium try to open ``http://PKGBUILD`` instead of ``http://localhost:1234/PKGBUILD``.\r\n\r\nIf I type ``http://localhost:1234/src`` in the address bar, the directory listing for that folder contains proper links.\r\n\r\nI tried removing the slash at column 38 here: https://github.com/lpereira/lwan/blob/9c2a7456b3e527d1186cb70bae3c6d4c48d2124e/common/lwan-mod-serve-files.c#L211 That \"fixed\" the links in /, but broke the links in /src/.","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/198","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/198/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/198/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/198/events","html_url":"https://github.com/lpereira/lwan/issues/198","id":225334001,"node_id":"MDU6SXNzdWUyMjUzMzQwMDE=","number":198,"title":"abort_on_open_directories always abort","user":{"login":"buf1024","id":634000,"node_id":"MDQ6VXNlcjYzNDAwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/634000?v=4","gravatar_id":"","url":"https://api.github.com/users/buf1024","html_url":"https://github.com/buf1024","followers_url":"https://api.github.com/users/buf1024/followers","following_url":"https://api.github.com/users/buf1024/following{/other_user}","gists_url":"https://api.github.com/users/buf1024/gists{/gist_id}","starred_url":"https://api.github.com/users/buf1024/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/buf1024/subscriptions","organizations_url":"https://api.github.com/users/buf1024/orgs","repos_url":"https://api.github.com/users/buf1024/repos","events_url":"https://api.github.com/users/buf1024/events{/privacy}","received_events_url":"https://api.github.com/users/buf1024/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-04-30T15:27:54Z","updated_at":"2017-05-01T15:29:37Z","closed_at":"2017-05-01T15:29:37Z","author_association":"CONTRIBUTOR","body":"I am sorry to trouble you again, I don't quit understand the function `abort_on_open_directories`, It always abort in my computer. my os is Ubuntu  16.04, I start lwan using `sudo ...`. the configuration I add:  \r\n\r\n```\r\ntraitjacket {\r\n  user = buf1024                            # the user\r\n  chroot = /home/buf1024            # the user's home dir\r\n}     \r\n```\r\nit aborts at:\r\n\r\n``\r\n       lwan_status_critical(\r\n                \"The directory '%s' is open (fd %s), can't chroot\",\r\n                path, ent->d_name);\r\n``\r\n\r\ndid i do something wrong?","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/197","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/197/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/197/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/197/events","html_url":"https://github.com/lpereira/lwan/issues/197","id":225006197,"node_id":"MDU6SXNzdWUyMjUwMDYxOTc=","number":197,"title":"double free bug","user":{"login":"buf1024","id":634000,"node_id":"MDQ6VXNlcjYzNDAwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/634000?v=4","gravatar_id":"","url":"https://api.github.com/users/buf1024","html_url":"https://github.com/buf1024","followers_url":"https://api.github.com/users/buf1024/followers","following_url":"https://api.github.com/users/buf1024/following{/other_user}","gists_url":"https://api.github.com/users/buf1024/gists{/gist_id}","starred_url":"https://api.github.com/users/buf1024/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/buf1024/subscriptions","organizations_url":"https://api.github.com/users/buf1024/orgs","r
4155
epos_url":"https://api.github.com/users/buf1024/repos","events_url":"https://api.github.com/users/buf1024/events{/privacy}","received_events_url":"https://api.github.com/users/buf1024/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-04-28T07:54:48Z","updated_at":"2017-04-28T14:02:00Z","closed_at":"2017-04-28T14:01:11Z","author_association":"CONTRIBUTOR","body":"when simply start lwan using the command line: ./lwan -c ./aa   (./aa doesn't exists), and press ctrl+c to exit lwan, it reports double free. gdb bt indicates that is cause by the count backwards line 3 `free(c.listener);` int the main function. I read code, and found that actually cause the problem is in function `lwan_shutdown`, the following the code cause the problem:\r\n\r\n```C\r\n    if (l->config.listener != default_config.listener)\r\n        free(l->config.listener);\r\n```\r\n\r\n`default_config.listener` is const string in the stack, `l->config.listener` is new allocate in heap, this if judgement always return true. the `l->config.listener` should compare with the one in main function, as follow:\r\n\r\n```C\r\n    c = *lwan_get_default_config();\r\n    c.listener = strdup(\"*:8080\");\r\n```\r\n\r\nI simply comment the following code to eliminate this bug, after the exit of program all resource relate the this program is release(except the kernel relate objects.). \r\n\r\n```C\r\nout:\r\n    //free(c.listener);\r\n    //free(c.config_file_path);\r\n\r\n    return ret;\r\n\r\n``` ","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/196","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/196/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/196/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/196/events","html_url":"https://github.com/lpereira/lwan/issues/196","id":224980299,"node_id":"MDU6SXNzdWUyMjQ5ODAyOTk=","number":196,"title":"quick quit  optimize","user":{"login":"buf1024","id":634000,"node_id":"MDQ6VXNlcjYzNDAwMA==","avatar_url":"https://avatars3.githubusercontent.com/u/634000?v=4","gravatar_id":"","url":"https://api.github.com/users/buf1024","html_url":"https://github.com/buf1024","followers_url":"https://api.github.com/users/buf1024/followers","following_url":"https://api.github.com/users/buf1024/following{/other_user}","gists_url":"https://api.github.com/users/buf1024/gists{/gist_id}","starred_url":"https://api.github.com/users/buf1024/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/buf1024/subscriptions","organizations_url":"https://api.github.com/users/buf1024/orgs","repos_url":"https://api.github.com/users/buf1024/repos","events_url":"https://api.github.com/users/buf1024/events{/privacy}","received_events_url":"https://api.github.com/users/buf1024/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-04-28T05:01:02Z","updated_at":"2017-05-03T15:42:38Z","closed_at":"2017-05-03T15:42:38Z","author_association":"CONTRIBUTOR","body":"When I want to quit lwan every time, the program waits for secondst. That's because in the `job_thread` function(in file lwan-job.c) makes a system call `nanosleep`. That causes the job thread suspend, and wakes up after a few seconds. I think this may be  optimized for quick quit.     \r\n\r\nMaybe lwan should use some mechanism to improve the quit speed. I use `pthread_cond_timedwait` to do that. Here is the diff patch.  \r\n\r\n```\r\n28d27\r\n< #include <sys/time.h>\r\n45,47d43\r\n< static pthread_mutex_t job_wait_mutex = PTHREAD_MUTEX_INITIALIZER;\r\n< static pthread_cond_t  job_wait_cond = PTHREAD_COND_INITIALIZER;\r\n< \r\n51,52c47\r\n<     pthread_mutex_lock(&job_wait_mutex);\r\n<     int job_wait_sec = 1;\r\n---\r\n>     struct timespec rgtp = { 1, 0 };\r\n67,80c62,69\r\n<             job_wait_sec = 1;\r\n<         else if (job_wait_sec <= 15)\r\n<             job_wait_sec++;\r\n<         \r\n<         struct timeval now;\r\n<         gettimeofday(&now, NULL);\r\n<         struct timespec rgtp = { now.tv_sec + job_wait_sec, now.tv_usec * 1000 };\r\n< \r\n<         lwan_status_debug(\"job_thread sleep for %d second\\n\", job_wait_sec);         \r\n<         pthread_cond_timedwait(&job_wait_cond, &job_wait_mutex, &rgtp);\r\n<         //if (UNLIKELY(nanosleep(&rgtp, NULL) < 0)) {\r\n<         //    if (errno == EINTR)\r\n<         //        sleep(1);\r\n<         //}\r\n---\r\n>             rgtp.tv_sec = 1;\r\n>         else if (rgtp.tv_sec <= 15)\r\n>             rgtp.tv_sec++;\r\n> \r\n>         if (UNLIKELY(nanosleep(&rgtp, NULL) < 0)) {\r\n>             if (errno == EINTR)\r\n>                 sleep(1);\r\n>         }\r\n120d108\r\n<         pthread_cond_signal(&job_wait_cond);\r\n```","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/194","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/194/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/194/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/194/events","html_url":"https://github.com/lpereira/lwan/issues/194","id":223522399,"node_id":"MDU6SXNzdWUyMjM1MjIzOTk=","number":194,"title":"Segmentation fault: 11","user":{"login":"jwoertink","id":2391,"node_id":"MDQ6VXNlcjIzOTE=","avatar_url":"https://avatars1.githubusercontent.com/u/2391?v=4","gravatar_id":"","url":"https://api.github.com/users/jwoertink","html_url":"https://github.com/jwoertink","followers_url":"https://api.github.com/users/jwoertink/followers","following_url":"https://api.github.com/users/jwoertink/following{/other_user}","gists_url":"https://api.github.com/users/jwoertink/gists{/gist_id}","starred_url":"https://api.github.com/users/jwoertink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwoertink/subscriptions","organizations_url":"https://api.github.com/users/jwoertink/orgs","repos_url":"https://api.github.com/users/jwoertink/repos","events_url":"https://api.github.com/users/jwoertink/events{/privacy}","received_events_url":"https://api.github.com/users/jwoertink/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":28,"created_at":"2017-04-21T23:35:07Z","updated_at":"2017-07-19T12:07:39Z","closed_at":"2017-07-13T15:33:13Z","author_association":"NONE","body":"After building from source, I got this error:\r\n\r\n```\r\n[16:30PM] sandbox$ /Users/jeremywoertink/Development/lwan/build/lwan/lwan -r ./\r\nServing files from ./.\r\nUsing 8 threads, maximum 1280 sockets per thread.\r\nListening on http://0.0.0.0:8080.\r\nReady to serve.\r\nSegmentation fault: 11\r\n```\r\n\r\nI'm running on macOS 10.12.3 built with cmake 3.7.0 and running the default LLVM 8.0.0.","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/193","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/193/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/193/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/193/events","html_url":"https://github.com/lpereira/lwan/issues/193","id":221963164,"node_id":"MDU6SXNzdWUyMjE5NjMxNjQ=","number":193,"title":"UNLIKELY","user":{"login":"indieyourself","id":20253063,"node_id":"MDQ6VXNlcjIwMjUzMDYz","avatar_url":"https://avatars3.githubusercontent.com/u/20253063?v=4","gravatar_id":"","url":"https://api.github.com/users/indieyourself","html_url":"https://github.com/indieyourself","followers_url":"https://api.github.com/users/indieyourself/followers","following_url":"https://api.github.com/users/indieyourself/following{/other_user}","gists_url":"https://api.github.com/users/indieyourself/gists{/gist_id}","starred_url":"https://api.github.com/users/indieyourself/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/indieyourself/subscriptions","organizations_url":"https://api.github.com/users/indieyourself/orgs","repos_url":"https://api.github.com/users/indieyourself/repos","events_url":"https://api.github.com/users/indieyourself/events{/privacy}","received_events_url":"https://api.github.com/users/indieyourself/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-04-15T17:58:49Z","updated_at":"2017-04-16T04:18:29Z","closed_at":"2017-04-16T04:18:29Z","author_association":"NONE","body":"https://github.com/lpereira/lwan/blob/master/common/lwan.h#L113\r\n\r\n#define UNLIKELY(x)\tLIKELY_IS( (x), 0)  => LIKELY_IS( !!(x), 0)\r\n\r\nShould we add \"!!\" before x ? ","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/191","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/191/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/191/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/191/events","html_url":"https://github.com/lpereira/lwan/issues/191","id":210894586,"node_id":"MDU6SXNzdWUyMTA4OTQ1ODY=","number":191,"title":"Getting Segmentation Fault running nlohmann/json inside a handler.","user":{"login":"GuacheSuede","id":5565823,"node_id":"MDQ6VXNlcjU1NjU4MjM=","avatar_url":"https://avatars3.githubusercontent.com/u/5565823?v=4","gravatar_id":"","url":"https://api.github.com/users/GuacheSuede","html_url":"https://github.com/GuacheSuede","followers_url":"https://api.github.com/users/GuacheSuede/followers","following_url":"https://api.github.com/users/GuacheSuede/following{/other_user}","gists_url":"https://api.github.com/users/GuacheSuede/gists{/gist_id}","starred_url":"https://api.github.com/users/GuacheSuede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GuacheSuede/subscriptions","organizations_url":"https://api.github.com/users/GuacheSuede/orgs","repos_url":"https://api.github.com/users/GuacheSuede/repos","events_url":"https://api.github.com/users/GuacheSuede/events{/privacy}","received_events_url":"https://api.github.com/users/GuacheSuede/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-02-28T20:29:07Z","updated_at":"2017-11-07T15:30:57Z","closed_at":"2017-11-07T15:30:57Z","author_association":"CONTRIBUTOR","body":"This is the code \r\n\r\n    static enum lwan_http_status uHandler(struct lwan_request *request, struct lwan_response *response, void *data){\r\n       static struct lwan_key_value rheaders[] = {\r\n        { .key = \"Access-Control-Allow-Origin\", .value = \"*\" },\r\n       };    \r\n     json j;`\r\n\r\n     j[\"pi\"] = 3.141;`\r\n    \r\n     std::cout <<  j.dump()    << std::endl;\r\n    return HTTP_OK;\r\n\r\n    }\r\n\r\nThank You","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/190","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/190/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/190/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/190/events","html_url":"https://github.com/lpereira/lwan/issues/190","id":210653391,"node_id":"MDU6SXNzdWUyMTA2NTMzOTE=","number":190,"title":"Is there a way to pass parameters to handlers such as db conn objects ? ","user":{"login":"GuacheSuede","id":5565823,"node_id":"MDQ6VXNlcjU1NjU4MjM=","avatar_url":"https://avatars3.githubusercontent.com/u/5565823?v=4","gravatar_id":"","url":"https://api.github.com/users/GuacheSuede","html_url":"https://github.com/GuacheSuede","followers_url":"https://api.github.com/users/GuacheSuede/followers","following_url":"https://api.github.com/users/GuacheSuede/following{/other_user}","gists_url":"https://api.github.com/users/GuacheSuede/gists{/gist_id}","starred_url":"https://api.github.com/users/GuacheSuede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GuacheSuede/subscriptions","organizations_url":"https://api.github.com/users/GuacheSuede/orgs","repos_url":"https://api.github.com/users/GuacheSuede/repos","events_url":"https://api.github.com/users/GuacheSuede/events{/privacy}","received_events_url":"https://api.github.com/users/GuacheSuede/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-02-28T00:47:17Z","updated_at":"2017-02-28T20:25:35Z","closed_at":"2017-02-28T20:25:35Z","author_association":"CONTRIBUTOR","body":"eg ` { .prefix = \"/hello\", .handler = helloWorld(conn)}`\r\nOr perhaps though lambdas","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/189","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/189/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/189/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/189/events","html_url":"https://github.com/lpereira/lwan/issues/189","id":210628200,"node_id":"MDU6SXNzdWUyMTA2MjgyMDA=","number":189,"title":"TODO list","user":{"login":"GuacheSuede","id":5565823,"node_id":"MDQ6VXNlcjU1NjU4MjM=","avatar_url":"https://avatars3.githubusercontent.com/u/5565823?v=4","gravatar_id":"","url":"https://api.github.com/users/GuacheSuede","html_url":"https://github.com/GuacheSuede","followers_url":"https://api.github.com/users/GuacheSuede/followers","following_url":"https://api.github.com/users/GuacheSuede/following{/other_user}","gists_url":"https://api.github.com/users/GuacheSuede/gists{/gist_id}","starred_url":"https://api.github.com/users/GuacheSuede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GuacheSuede/subscriptions","organizations_url":"https://api.github.com/users/GuacheSuede/orgs","repos_url":"https://api.github.com/users/GuacheSuede/repos","events_url":"https://api.github.com/users/GuacheSuede/events{/privacy}","received_events_url":"https://api.github.com/users/GuacheSuede/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-02-27T22:32:37Z","updated_at":"2017-02-28T01:27:50Z","closed_at":"2017-02-28T01:27:50Z","author_association":"CONTRIBUTOR","body":"Would it be possible to include a TODO list in the readme, roadmaps etc ?","score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/188","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/188/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/188/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/188/events","html_url":"https://github.com/lpereira/lwan/issues/188","id":210577033,"node_id":"MDU6SXNzdWUyMTA1NzcwMzM=","number":188,"title":"Why does LWAN use static methods and static values in handlers ?","user":{"login":"GuacheSuede","id":5565823,"node_id":"MDQ6VXNlcjU1NjU4MjM=","avatar_url":"https://avatars3.githubusercontent.com/u/5565823?v=4","gravatar_id":"","url":"https://api.github.com/users/GuacheSuede","html_url":"https://github.com/GuacheSuede","followers_url":"https://api.github.com/users/GuacheSuede/followers","following_url":"https://api.github.com/users/GuacheSuede/following{/other_user}","gists_url":"https://api.github.com/users/GuacheSuede/gists{/gist_id}","starred_url":"https://api.github.com/users/GuacheSuede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GuacheSuede/subscriptions","organizations_url":"https://api.github.com/users/GuacheSuede/orgs","repos_url":"https://api.github.com/users/GuacheSuede/repos","events_url":"https://api.github.com/users/GuacheSuede/events{/privacy}","received_events_url":"https://api.github.com/users/GuacheSuede/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-02-27T19:11:23Z","updated_at":"2017-02-27T22:36:44Z","closed_at":"2017-02-27T22:36:44Z","author_association":"CONTRIBUTOR","body":"","score":1.0}]}
0

