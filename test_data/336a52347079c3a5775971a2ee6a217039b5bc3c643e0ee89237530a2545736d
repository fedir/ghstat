HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sun, 13 May 2018 13:01:07 GMT
Link: <https://api.github.com/search/issues?q=repo%3Atornadoweb%2Ftornado+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Atornadoweb%2Ftornado+type%3Aissue+state%3Aclosed&page=34>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CDDB:4F42:44DE6FB:8AC0587:5AF83712
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 22
X-Ratelimit-Reset: 1526216518
X-Runtime-Rack: 0.546347
X-Xss-Protection: 1; mode=block

8000
{"total_count":1147,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2384","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2384/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2384/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2384/events","html_url":"https://github.com/tornadoweb/tornado/issues/2384","id":321449242,"number":2384,"title":"Error with deploying app using tornado on heroku","user":{"login":"answerquest","id":9089552,"avatar_url":"https://avatars1.githubusercontent.com/u/9089552?v=4","gravatar_id":"","url":"https://api.github.com/users/answerquest","html_url":"https://github.com/answerquest","followers_url":"https://api.github.com/users/answerquest/followers","following_url":"https://api.github.com/users/answerquest/following{/other_user}","gists_url":"https://api.github.com/users/answerquest/gists{/gist_id}","starred_url":"https://api.github.com/users/answerquest/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/answerquest/subscriptions","organizations_url":"https://api.github.com/users/answerquest/orgs","repos_url":"https://api.github.com/users/answerquest/repos","events_url":"https://api.github.com/users/answerquest/events{/privacy}","received_events_url":"https://api.github.com/users/answerquest/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-09T06:42:59Z","updated_at":"2018-05-09T07:20:28Z","closed_at":"2018-05-09T07:19:22Z","author_association":"NONE","body":"Hi, looking for help if any on this.. herokuapp was working fine with my python program (that uses tornado) up untill today. Now, on pushing the latest version, I got this error:\r\n\r\n```\r\nremote: -----> Python app detected\r\nremote:  !     The latest version of Python 3 is python-3.6.5 (you are using python-3.6.4, which is unsupported).\r\nremote:  !     We recommend upgrading by specifying the latest version (python-3.6.5).\r\nremote:        Learn More: https://devcenter.heroku.com/articles/python-runtimes\r\nremote: -----> Installing requirements with pip\r\nremote:        Collecting tornado==5.0.2 (from -r /tmp/build_20cccfb2326b79af83625387b8940a07/requirements.txt (line 2))\r\nremote:          Downloading https://files.pythonhosted.org/packages/cf/d1/3be271ae5eba9fb59df63c9891fdc7d8044b999e8ac145994cdbfd2ae66a/tornado-5.0.2.tar.gz (506kB)\r\nremote:            Complete output from command python setup.py egg_info:\r\nremote:            /app/.heroku/python/lib/python3.6/distutils/dist.py:261: UserWarning: Unknown distribution option: 'install_requires'\r\nremote:              warnings.warn(msg)\r\nremote:            /app/.heroku/python/lib/python3.6/distutils/dist.py:261: UserWarning: Unknown distribution option: 'python_requires'\r\nremote:              warnings.warn(msg)\r\nremote:            usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\r\nremote:               or: -c --help [cmd1 cmd2 ...]\r\nremote:               or: -c --help-commands\r\nremote:               or: -c cmd --help\r\nremote:            \r\nremote:            error: invalid command 'egg_info'\r\nremote:            \r\nremote:            ----------------------------------------\r\nremote:        Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-z4g5q15a/tornado/\r\nremote:  !     Push rejected, failed to compile Python app.\r\nremote: \r\nremote:  !     Push failed\r\nremote: Verifying deploy...\r\nremote: \r\nremote: !\tPush rejected to lit-mesa-97724.\r\nremote: \r\nTo https://git.heroku.com/lit-mesa-97724.git\r\n ! [remote rejected] master -> master (pre-receive hook declined)\r\nerror: failed to push some refs to 'https://git.heroku.com/lit-mesa-97724.git'\r\n```\r\nI tried down-grading the tornado version to 5.0 but even that gave the same error. The app is running fine on my local system, but I'm not able to deploy it on my heroku site.","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2382","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2382/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2382/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2382/events","html_url":"https://github.com/tornadoweb/tornado/issues/2382","id":321193746,"number":2382,"title":"Is WebSocketHandler.open guaranteed to complete before the first handling of WebSocketHandler.on_message?","user":{"login":"samfrances","id":2003369,"avatar_url":"https://avatars0.githubusercontent.com/u/2003369?v=4","gravatar_id":"","url":"https://api.github.com/users/samfrances","html_url":"https://github.com/samfrances","followers_url":"https://api.github.com/users/samfrances/followers","following_url":"https://api.github.com/users/samfrances/following{/other_user}","gists_url":"https://api.github.com/users/samfrances/gists{/gist_id}","starred_url":"https://api.github.com/users/samfrances/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/samfrances/subscriptions","organizations_url":"https://api.github.com/users/samfrances/orgs","repos_url":"https://api.github.com/users/samfrances/repos","events_url":"https://api.github.com/users/samfrances/events{/privacy}","received_events_url":"https://api.github.com/users/samfrances/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-08T13:47:07Z","updated_at":"2018-05-08T22:08:00Z","closed_at":"2018-05-08T22:08:00Z","author_association":"NONE","body":"I'm looking for the appropriate place to do some set up before the first websocket message is handled. I was considering using `WebSocketHandler.open`, but it isn't clear to me whether (a) this can be a coroutine, and if so (b) would it be guaranteed to complete before the first call to `on_message`.\r\n\r\nLooking at the code suggests to me that the answer may be \"no\", but I'm not familiar enough with the code to know for sure.\r\n\r\n(If this is the wrong place to post such questions, please let me know - I wasn't able to find an official mailing list or anything like that.)","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2379","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2379/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2379/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2379/events","html_url":"https://github.com/tornadoweb/tornado/issues/2379","id":320735610,"number":2379,"title":"Why not return HTTP 401 instead of HTTP 403 in @tornado.web.authenticated ?","user":{"login":"chiqj","id":16170578,"avatar_url":"https://avatars1.githubusercontent.com/u/16170578?v=4","gravatar_id":"","url":"https://api.github.com/users/chiqj","html_url":"https://github.com/chiqj","followers_url":"https://api.github.com/users/chiqj/followers","following_url":"https://api.github.com/users/chiqj/following{/other_user}","gists_url":"https://api.github.com/users/chiqj/gists{/gist_id}","starred_url":"https://api.github.com/users/chiqj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chiqj/subscriptions","organizations_url":"https://api.github.com/users/chiqj/orgs","repos_url":"https://api.github.com/users/chiqj/repos","events_url":"https://api.github.com/users/chiqj/events{/privacy}","received_events_url":"https://api.github.com/users/chiqj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-07T09:26:32Z","updated_at":"2018-05-09T06:18:42Z","closed_at":"2018-05-08T22:18:33Z","author_association":"NONE","body":"The definition of HTTP 401  from [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401):\r\n\r\n> The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.\r\n> This status is sent with a WWW-Authenticate header that contains information on how to authorize correctly.\r\n> This status is similar to 403, but in this case, authentication is possible.\r\n\r\nThe definition of HTTP 403 from [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/403)\r\n\r\n> The HTTP 403 Forbidden client error status response code indicates that the server understood the request but refuses to authorize it.\r\n> This status is similar to 401, but in this case, re-authenticating will make no difference. The access is permanently forbidden and tied to the application logic (like an incorrect password).\r\n\r\nIf user not logged in of the authentication expired, he should login again, so maybe he can access the resource. But HTTP 403 means you can't access the resource no matter what you do, I think HTTP 401 is more suitable. ","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2372","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2372/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2372/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2372/events","html_url":"https://github.com/tornadoweb/tornado/issues/2372","id":319736596,"number":2372,"title":"Implement tornado.web.RequestHandler.get_cookie_secret","user":{"login":"whardier","id":305301,"avatar_url":"https://avatars1.githubusercontent.com/u/305301?v=4","gravatar_id":"","url":"https://api.github.com/users/whardier","html_url":"https://github.com/whardier","followers_url":"https://api.github.com/users/whardier/followers","following_url":"https://api.github.com/users/whardier/following{/other_user}","gists_url":"https://api.github.com/users/whardier/gists{/gist_id}","starred_url":"https://api.github.com/users/whardier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/whardier/subscriptions","organizations_url":"https://api.github.com/users/whardier/orgs","repos_url":"https://api.github.com/users/whardier/repos","events_url":"https://api.github.com/users/whardier/events{/privacy}","received_events_url":"https://api.github.com/users/whardier/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-02T22:43:15Z","updated_at":"2018-05-04T05:36:27Z","closed_at":"2018-05-04T05:36:27Z","author_association":"NONE","body":"There's some require_setting logic that keeps me issuing a pull request.\r\n\r\nI'm hoping to simply override a proposed method named get_cookie_secret that by default returns the cookie_secret application setting.\r\n\r\nAn upstream driven cookie secret would be very useful for several internal projects I'm working on where there are already established authorization cookies that can help create per session cookie secrets.","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2371","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2371/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2371/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2371/events","html_url":"https://github.com/tornadoweb/tornado/issues/2371","id":319693097,"number":2371,"title":"wsgi adapter throwing runtime error","user":{"login":"raghumy","id":28935045,"avatar_url":"https://avatars3.githubusercontent.com/u/28935045?v=4","gravatar_id":"","url":"https://api.github.com/users/raghumy","html_url":"https://github.com/raghumy","followers_url":"https://api.github.com/users/raghumy/followers","following_url":"https://api.github.com/users/raghumy/following{/other_user}","gists_url":"https://api.github.com/users/raghumy/gists{/gist_id}","starred_url":"https://api.github.com/users/raghumy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/raghumy/subscriptions","organizations_url":"https://api.github.com/users/raghumy/orgs","repos_url":"https://api.github.com/users/raghumy/repos","events_url":"https://api.github.com/users/raghumy/events{/privacy}","received_events_url":"https://api.github.com/users/raghumy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-05-02T20:04:50Z","updated_at":"2018-05-08T22:14:18Z","closed_at":"2018-05-05T18:54:13Z","author_association":"NONE","body":"The 5.0.2 wsgi adapter seems to be throwing a runtime error:\r\n[Wed May 02 19:43:09.367974 2018] [:error] [pid 31085] [remote 172.31.12.172:164] mod_wsgi (pid=31085): Exception occurred processing WSGI script '/opt/python/current/app/application.py'.\r\n[Wed May 02 19:43:09.368100 2018] [:error] [pid 31085] [remote 172.31.12.172:164] Traceback (most recent call last):\r\n[Wed May 02 19:43:09.368138 2018] [:error] [pid 31085] [remote 172.31.12.172:164]   File \"/opt/python/run/venv/local/lib64/python3.6/site-packages/tornado/wsgi.py\", line 222, in __call__\r\n[Wed May 02 19:43:09.368147 2018] [:error] [pid 31085] [remote 172.31.12.172:164]     self.application(request)\r\n[Wed May 02 19:43:09.368154 2018] [:error] [pid 31085] [remote 172.31.12.172:164]   File \"/opt/python/run/venv/local/lib64/python3.6/site-packages/tornado/web.py\", line 2041, in __call__\r\n[Wed May 02 19:43:09.368157 2018] [:error] [pid 31085] [remote 172.31.12.172:164]     return dispatcher.execute()\r\n[Wed May 02 19:43:09.368162 2018] [:error] [pid 31085] [remote 172.31.12.172:164]   File \"/opt/python/run/venv/local/lib64/python3.6/site-packages/tornado/web.py\", line 2172, in execute\r\n[Wed May 02 19:43:09.368165 2018] [:error] [pid 31085] [remote 172.31.12.172:164]     **self.path_kwargs)\r\n[Wed May 02 19:43:09.368180 2018] [:error] [pid 31085] [remote 172.31.12.172:164]   File \"/opt/python/run/venv/local/lib64/python3.6/site-packages/tornado/gen.py\", line 288, in wrapper\r\n[Wed May 02 19:43:09.368183 2018] [:error] [pid 31085] [remote 172.31.12.172:164]     future = _create_future()\r\n[Wed May 02 19:43:09.368188 2018] [:error] [pid 31085] [remote 172.31.12.172:164]   File \"/opt/python/run/venv/local/lib64/python3.6/site-packages/tornado/gen.py\", line 186, in _create_future\r\n[Wed May 02 19:43:09.368190 2018] [:error] [pid 31085] [remote 172.31.12.172:164]     future = Future()\r\n[Wed May 02 19:43:09.368195 2018] [:error] [pid 31085] [remote 172.31.12.172:164]   File \"/usr/lib64/python3.6/asyncio/events.py\", line 678, in get_event_loop\r\n[Wed May 02 19:43:09.368198 2018] [:error] [pid 31085] [remote 172.31.12.172:164]     return get_event_loop_policy().get_event_loop()\r\n[Wed May 02 19:43:09.368202 2018] [:error] [pid 31085] [remote 172.31.12.172:164]   File \"/usr/lib64/python3.6/asyncio/events.py\", line 584, in get_event_loop\r\n[Wed May 02 19:43:09.368205 2018] [:error] [pid 31085] [remote 172.31.12.172:164]     % threading.current_thread().name)\r\n[Wed May 02 19:43:09.368219 2018] [:error] [pid 31085] [remote 172.31.12.172:164] RuntimeError: There is no current event loop in thread 'Dummy-1'.\r\n\r\nI switched to 4.5.3 and don't get this error. Looks like something in 5.0.2 is causing this issue.","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2368","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2368/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2368/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2368/events","html_url":"https://github.com/tornadoweb/tornado/issues/2368","id":318974939,"number":2368,"title":"Tornado multi processes, what is the advantage of reuse_port ?","user":{"login":"thao6626","id":6292860,"avatar_url":"https://avatars1.githubusercontent.com/u/6292860?v=4","gravatar_id":"","url":"https://api.github.com/users/thao6626","html_url":"https://github.com/thao6626","followers_url":"https://api.github.com/users/thao6626/followers","following_url":"https://api.github.com/users/thao6626/following{/other_user}","gists_url":"https://api.github.com/users/thao6626/gists{/gist_id}","starred_url":"https://api.github.com/users/thao6626/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thao6626/subscriptions","organizations_url":"https://api.github.com/users/thao6626/orgs","repos_url":"https://api.github.com/users/thao6626/repos","events_url":"https://api.github.com/users/thao6626/events{/privacy}","received_events_url":"https://api.github.com/users/thao6626/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-04-30T17:43:39Z","updated_at":"2018-05-04T02:17:56Z","closed_at":"2018-05-04T02:17:56Z","author_association":"NONE","body":"When use multi processes in tornado, the child processes inherit the socket fd from father process, so the child processes also listen the same ip-port, and they can receive data from the inherited socket.\r\n\r\nreuse_port param of socket means child processes can bind the same port of the father process binded. This use also make child processed and father process can bind the same port to improve the speed of the server.\r\n\r\nso when use multi process in tornado, what is the difference between reuse_port=True and reuse_port=False?  It seems that there is no need to use reuse_port=True, because the child processes inherit the socket fd and they can receive data from the same port socket\r\n\r\nThanks !!","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2366","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2366/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2366/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2366/events","html_url":"https://github.com/tornadoweb/tornado/issues/2366","id":318005265,"number":2366,"title":"Post method doesn't work","user":{"login":"bloodknight2010","id":5322033,"avatar_url":"https://avatars3.githubusercontent.com/u/5322033?v=4","gravatar_id":"","url":"https://api.github.com/users/bloodknight2010","html_url":"https://github.com/bloodknight2010","followers_url":"https://api.github.com/users/bloodknight2010/followers","following_url":"https://api.github.com/users/bloodknight2010/following{/other_user}","gists_url":"https://api.github.com/users/bloodknight2010/gists{/gist_id}","starred_url":"https://api.github.com/users/bloodknight2010/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bloodknight2010/subscriptions","organizations_url":"https://api.github.com/users/bloodknight2010/orgs","repos_url":"https://api.github.com/users/bloodknight2010/repos","events_url":"https://api.github.com/users/bloodknight2010/events{/privacy}","received_events_url":"https://api.github.com/users/bloodknight2010/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-26T12:23:24Z","updated_at":"2018-04-27T00:09:57Z","closed_at":"2018-04-27T00:09:57Z","author_association":"NONE","body":"I request the post method client side. but doesn't work I got the following error\r\n\r\n>Uncaught exception POST /categories (127.0.0.1)\r\n    HTTPServerRequest(protocol='http', host='localhost:9292', method='POST', uri='/categories', version='HTTP/1.1', remote_ip='127.0.0.1', headers={'Origin': 'http://localhost:9292', 'Content-Length': '34', 'Accept-Language': 'en-US,en;q=0.9', 'Accept-Encoding': 'gzip, deflate, br', 'Userid': 'bf138344-ba7f-4e73-9591-46715ca68317', 'Host': 'localhost:9292', 'Accept': 'application/json, text/javascript, */*; q=0.01', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36', 'Connection': 'keep-alive', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'Referer': 'http://localhost:9292/category-list', 'Content-Type': 'application/json; charset=UTF-8', 'Cookie': '_ga=GA1.1.1415872405.1522071386; fbsr_1789508618024488=uMLzTD29lyg7hGZXNChlTlCLuWOfOxbPI9Amwxl28fE.eyJhbGdvcml0aG0iOiJITUFDLVNIQTI1NiIsImNvZGUiOiJBUURSNHF4a2tZcWJzTnpTNjZtdFhLZXd6anlMbXRxQUNUejU5SV9MS1JYR3pRcmRqSVp3ODhyc0ZDM0pmSlk4NHpSVjZLdUhYYzhJSzB5WUg5cXZmQldBOGNwR2o5T0MyLTVCOEN4eDRjZmgteTVlU1F0bnU4X1c1WkNpaWgyeUxwTVZpLVUyand4Y3ctOVpPYlR3SGRMRnJFdm12a3dSZGdKeVVBaWdzVmVRNWdXTXdkdmdtVDE1bVY0VXpGU0dYOHAyc25LYWJuT1lsTUt1QVlmRmtHc1d6T0NnSWJiWTA4MFdzX0FiLVpjVkI1b0tLM0NNSzFQM3BuYVlXS0dtN1gwcDVIV2lnU2hybGdkMXJYU0JHQkNka0M3QUVLWHg4Ulp5d2VYUUNfX1NZM0xNd3JQUnpHSUdvZk5lUUptbVAweERJT2VkeDVZeU1uNzJNdHhTNHRGUCIsImlzc3VlZF9hdCI6MTUyNDQ3MzI1OCwidXNlcl9pZCI6IjE3OTM1MTQyNTQwMjczNjcifQ; fbsr_1755374758101377=UPvV56iYVc_RzwC7jyR_Kl7GZUkGVQKckZhe6cuOHsg.eyJhbGdvcml0aG0iOiJITUFDLVNIQTI1NiIsImNvZGUiOiJBUUFhaGlHTWJETWctUWhqZXVJZUk1bldqWlZHcFlvTy1yeWYwQmZ4WU5YZlY4dkNfdEF1VXlDcThGLUVGRWM2cmRLaU15c1RhQUJaQlFiWFhhQ1RqalhVUE9hbkotTnFuU2lYRmNrN1RDY2g1enlBLWRuMy00NkFrVG85WE9Fcy1LQklzYVJaS1pxRnBicGROdmdES0VWczZpTFNnRjZmcXpoajNSSVBja09iUDd0Skt1MlFVcExlejFvTHNOcnhZcjBQcWNvWTh2SGJjd2JrX203Qi0zc1ZBV05QQWhBeVJkSEF3V0JLZTBTenBrc2xieEwyOEF0TDlHbDBOWU9yU0lUd0FUeC1RcEJpbjZHOVRONE8ySWpVMGlnME4zRTQtc0RWOVVreEF3V3ZrRVBzdWtlRHNhMGo5YjhoTkdMZ1JHelVvZG1FR0E4OHVDUndlM3Zyb2M1SkZmNHRBZkdzOW5aMlpvVDlRYzVOSFEiLCJpc3N1ZWRfYXQiOjE1MjQ3NDM4MTEsInVzZXJfaWQiOiIxNzQ4NTc2NjI4NTIxMTMwIn0; user=\"2|1:0|10:1524743811|4:user|736:eyJzdGF0dXMiOiAiQWN0aXZlIiwgInVzZXJuYW1lIjogIldhaSBZYW4gTWluIEh0d2UiLCAiYWNjZXNzdG9rZW4iOiAiRUFBWThnUWpuZ1lFQkFETjlvTjBxSkxtNmpkeXp1cElEMXhiV3FFSUJ3N3pPUExPSjVnWWhaQjE4bmxCOWNZVEcxbUJFWkNWOXJ4UzdtWXJ4M3JzeDZWTUxjOGo4eWdXNnRwWW9zV2g3em1MUHFENEM0dmZpR1VvZEtuMTdyUDNSYUt2NFloSnRsT0VtVnZKbWpQam90RlFHUjYyWkJiZGJOWkFPcURET2tia1ZYc3haQXB2dWFuNURQZGRuRzYzdGhFNUZFR2dWbnZLdGRUQWp2dW5lWkFERDBiTTBCT29aQ0laRCIsICJ1c2VyX3VybCI6ICJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8xNzQ4NTc2NjI4NTIxMTMwL3BpY3R1cmUiLCAic3RhbXAiOiB7InRpbWV6b25lIjogIiswMDowMCIsICIkcmVxbF90eXBlJCI6ICJUSU1FIiwgImVwb2NoX3RpbWUiOiAxNTI0NzQzODExLjM1Mn0sICJmYnVzZXJJZCI6ICIxNzQ4NTc2NjI4NTIxMTMwIiwgInJvbGUiOiAiUGF0aWVudCIsICJpZCI6ICJlNmQ1NWJlNy0wYjRmLTQ1YWUtOWEyYS1mNjlmZTE3MjZhMjgifQ==|2ccab98777a4f3bffd79e002860f5a19226780d7271a1de8d3f03f6a6f2d66b6\"'})\r\n    Traceback (most recent call last):\r\n      File \"/home/wymh/anaconda2/envs/hexcode/lib/python2.7/site-packages/tornado/web.py\", line 1467, in _execute\r\n        result = method(*self.path_args, **self.path_kwargs)\r\n    TypeError: 'Table' object is not callable\r\n**Get request is working but post is not work.**\r\nI create the following code.\r\n`class categoryHandler(JsonHandler):\r\n\r\n    @tornado.web.authenticated\r\n    @gen.coroutine\r\n    def get(self):\r\n        _id = self.request.headers.get('userid')\r\n        if _id:\r\n            feed = yield self.category.order_by('stamp').run(time_format=\"raw\")\r\n        self.write(dict(category=feed))\r\n\r\n\r\n    @gen.coroutine\r\n    def post(self):\r\n        _id = self.request.headers.get('userid')\r\n        cat_name = self.get_argument('name', default = None)\r\n        logging.info(cat_name)\r\n        if _id:\r\n            result = yield self.category.insert(category_json['category'],return_changes=True).run(time_format=\"raw\")\r\n            self.write(dict(post = [result['changes'][0]['new_val']]))`\r\nPls help me.","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2365","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2365/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2365/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2365/events","html_url":"https://github.com/tornadoweb/tornado/issues/2365","id":317870678,"number":2365,"title":"tornado.gen.with_timeout dose not work with coroutine ?","user":{"login":"LiangXianSen","id":17687049,"avatar_url":"https://avatars1.githubusercontent.com/u/17687049?v=4","gravatar_id":"","url":"https://api.github.com/users/LiangXianSen","html_url":"https://github.com/LiangXianSen","followers_url":"https://api.github.com/users/LiangXianSen/followers","following_url":"https://api.github.com/users/LiangXianSen/following{/other_user}","gists_url":"https://api.github.com/users/LiangXianSen/gists{/gist_id}","starred_url":"https://api.github.com/users/LiangXianSen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LiangXianSen/subscriptions","organizations_url":"https://api.github.com/users/LiangXianSen/orgs","repos_url":"https://api.github.com/users/LiangXianSen/repos","events_url":"https://api.github.com/users/LiangXianSen/events{/privacy}","received_events_url":"https://api.github.com/users/LiangXianSen/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-04-26T04:08:22Z","updated_at":"2018-05-03T02:51:33Z","closed_at":"2018-04-27T00:01:53Z","author_association":"NONE","body":"development environment:\r\n- python 3.5.1\r\n- tornado 4.5.2\r\n\r\nused ThreadPoolExecutor : \r\n```python\r\nimport time\r\nimport datetime\r\nimport os\r\nimport tornado.web\r\nfrom tornado import gen\r\nfrom tornado.concurrent import run_on_executor\r\nfrom concurrent.futures import ThreadPoolExecutor\r\n\r\n\r\nclass IndexHandler(tornado.web.RequestHandler):\r\n    def get(self):\r\n        self.write('index')\r\n        print('index')\r\n\r\n\r\nclass NonBlockingHandler(tornado.web.RequestHandler):\r\n    executor = ThreadPoolExecutor(4)\r\n\r\n    @gen.coroutine\r\n    def get(self):\r\n        try:\r\n            start = time.time()\r\n            result1, result2 = yield gen.with_timeout(datetime.timedelta(seconds=1), [self.doing(), self.doing()], quiet_exceptions=tornado.gen.TimeoutError)\r\n            self.write(\"NO Timeout\")\r\n            print(result1, result2)\r\n            print(time.time() - start)\r\n        except gen.TimeoutError:\r\n            self.write(\"Timeout\")\r\n            print(\"Timeout\")\r\n            print(time.time() - start)\r\n\r\n    @run_on_executor\r\n    def doing(self):\r\n        # time.sleep(10)\r\n        # yield gen.sleep(10)\r\n        os.system(\"ping -c 20 www.baidu.com\")  # 模拟I/O 任务\r\n        return 'Non-Blocking'\r\n\r\n\r\napplication = tornado.web.Application([\r\n    (r\"/index\", IndexHandler),\r\n    (r\"/nonblocking\", NonBlockingHandler),\r\n])\r\n\r\nif __name__ == \"__main__\":\r\n    application.listen(8888)\r\n    tornado.ioloop.IOLoop.instance().start()\r\n``` \r\n\r\noutput:\r\n```\r\n/usr/local/bin/python3 /Users/lianliang/Desktop/yisuo-faceid/learning/futures-threadpool-timeout.py\r\nPING www.a.shifen.com (61.135.169.121): 56 data bytes\r\n64 bytes from 61.135.169.121: icmp_seq=0 ttl=52 time=53.593 ms\r\nTimeout\r\n1.0016818046569824\r\n64 bytes from 61.135.169.121: icmp_seq=1 ttl=52 time=92.630 ms\r\n64 bytes from 61.135.169.121: icmp_seq=2 ttl=52 time=100.531 ms\r\n64 bytes from 61.135.169.121: icmp_seq=3 ttl=52 time=17.301 ms\r\n64 bytes from 61.135.169.121: icmp_seq=4 ttl=52 time=13.203 ms\r\nindex\r\n64 bytes from 61.135.169.121: icmp_seq=5 ttl=52 time=40.333 ms\r\n64 bytes from 61.135.169.121: icmp_seq=6 ttl=52 time=81.788 ms\r\n... ...\r\n```\r\nthat is correct. After that  I used coroutine : \r\n```python\r\nimport time\r\nimport datetime\r\nimport os\r\nimport tornado.web\r\nfrom tornado import gen\r\nfrom tornado.concurrent import run_on_executor\r\nfrom concurrent.futures import ThreadPoolExecutor\r\n\r\n\r\nclass IndexHandler(tornado.web.RequestHandler):\r\n    def get(self):\r\n        self.write('index')\r\n        print('index')\r\n\r\n\r\nclass NonBlockingHandler(tornado.web.RequestHandler):\r\n    executor = ThreadPoolExecutor(4)\r\n\r\n    @gen.coroutine\r\n    def get(self):\r\n        try:\r\n            start = time.time()\r\n            result1, result2 = yield gen.with_timeout(datetime.timedelta(seconds=1), [self.doing(), self.doing()], quiet_exceptions=tornado.gen.TimeoutError)\r\n            self.write(\"NO Timeout\")\r\n            print(result1, result2)\r\n            print(time.time() - start)\r\n        except gen.TimeoutError:\r\n            self.write(\"Timeout\")\r\n            print(\"Timeout\")\r\n            print(time.time() - start)\r\n\r\n    @gen.coroutine\r\n    def doing(self):\r\n        # time.sleep(10)\r\n        # yield gen.sleep(10)\r\n        os.system(\"ping -c 20 www.baidu.com\")  # 模拟I/O 任务\r\n        return 'Non-Blocking'\r\n\r\n\r\napplication = tornado.web.Application([\r\n    (r\"/index\", IndexHandler),\r\n    (r\"/nonblocking\", NonBlockingHandler),\r\n])\r\n\r\nif __name__ == \"__main__\":\r\n    application.listen(8888)\r\n    tornado.ioloop.IOLoop.instance().start()\r\n```\r\n\r\noutput:\r\n```\r\n... ...\r\n64 bytes from 61.135.169.121: icmp_seq=19 ttl=52 time=24.226 ms\r\n\r\n--- www.a.shifen.com ping statistics ---\r\n20 packets transmitted, 20 packets received, 0.0% packet loss\r\nround-trip min/avg/max/stddev = 4.867/41.387/82.361/22.810 ms\r\nNon-Blocking Non-Blocking\r\n38.22840881347656\r\nindex\r\n```\r\n\r\ntornado.gen.with_timeout dose not work, I don't know why? ","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2363","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2363/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2363/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2363/events","html_url":"https://github.com/tornadoweb/tornado/issues/2363","id":317136119,"number":2363,"title":"RuntimeError: There is no current event loop in thread 'Thread-2'.","user":{"login":"cleverbao","id":19379443,"avatar_url":"https://avatars2.githubusercontent.com/u/19379443?v=4","gravatar_id":"","url":"https://api.github.com/users/cleverbao","html_url":"https://github.com/cleverbao","followers_url":"https://api.github.com/users/cleverbao/followers","following_url":"https://api.github.com/users/cleverbao/following{/other_user}","gists_url":"https://api.github.com/users/cleverbao/gists{/gist_id}","starred_url":"https://api.github.com/users/cleverbao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cleverbao/subscriptions","organizations_url":"https://api.github.com/users/cleverbao/orgs","repos_url":"https://api.github.com/users/cleverbao/repos","events_url":"https://api.github.com/users/cleverbao/events{/privacy}","received_events_url":"https://api.github.com/users/cleverbao/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-24T09:09:41Z","updated_at":"2018-04-24T13:30:16Z","closed_at":"2018-04-24T13:30:16Z","author_association":"NONE","body":"About tornado error: RuntimeError: There is no current event loop in thread 'Thread-2'.\r\nUsing threads to call websocket.write_message() function in the program, an error occurs.\r\n\r\nthis my code:\r\n\r\nclass SocketHandler(tornado.websocket.WebSocketHandler):\r\n    waiters = set()\r\n    def __init__(self, application, request):\r\n        super(SocketHandler, self).__init__(application, request)\r\n        threading.Thread(target = self.__send_messages, args = (que,)).start()\r\n    def allow_draft76(self):\r\n        # for iOS 5.0 Safari\r\n        return True\r\n    def check_origin(self, origin):\r\n        # set open must with Browser\r\n        return True\r\n    def open(self):\r\n        username = self.get_secure_cookie('cookie_user')\r\n        if not username:\r\n            return\r
8000
\n        SocketHandler.waiters.add(self)\r\n    def on_close(self):\r\n        SocketHandler.waiters.remove(self)\r\n    def on_message(self, message):\r\n    @classmethod\r\n    def __send_messages(cls, que):\r\n        while 1:\r\n            status = json.dumps(que.get())\r\n            for waiters in cls.waiters:\r\n                try:\r\n                    waiters.write_message(status)\r\n                except Exception as e:\r\n                    continue\r\n            que.queue.clear()\r\n\r\nI searched for some issues and said that it is asyncio and threading problems.\r\nHere is the sample code:\r\n\r\nImport asyncio\r\nImport time, threading\r\n\r\nDef loop():\r\n    Print('thread %s is running...' % threading.current_thread().name)\r\n    Loop = asyncio.get_event_loop()\r\n    Time.sleep(1)\r\n    Print('thread %s ended.' % threading.current_thread().name)\r\n\r\nIf __name__ == '__main__':\r\n    Print('thread %s is running...' % threading.current_thread().name)\r\n    t = threading.Thread(target=loop, name='LoopThread')\r\n    T.start()\r\n    T.join()\r\n    Print('thread %s ended.' % threading.current_thread().name)\r\n\r\nError message:\r\n\r\nRuntimeError: There is no current event loop in thread 'LoopThread'.\r\n\r\nHis solution:\r\n\r\nDef loop():\r\n    Print('thread %s is running...' % threading.current_thread().name)\r\n    New_loop = asyncio.new_event_loop()\r\n    Asyncio.set_event_loop(new_loop)\r\n    Loop = asyncio.get_event_loop()\r\n    Time.sleep(1)\r\n    Print('thread %s ended.' % threading.current_thread().name)\r\n\r\nHowever, I am getting an error when modifying the tornado source code.","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2362","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2362/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2362/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2362/events","html_url":"https://github.com/tornadoweb/tornado/issues/2362","id":316626591,"number":2362,"title":"Proxy host not working when using a subclass of httprequest and AsyncHTTPClient","user":{"login":"gabeorlanski","id":18234433,"avatar_url":"https://avatars1.githubusercontent.com/u/18234433?v=4","gravatar_id":"","url":"https://api.github.com/users/gabeorlanski","html_url":"https://github.com/gabeorlanski","followers_url":"https://api.github.com/users/gabeorlanski/followers","following_url":"https://api.github.com/users/gabeorlanski/following{/other_user}","gists_url":"https://api.github.com/users/gabeorlanski/gists{/gist_id}","starred_url":"https://api.github.com/users/gabeorlanski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gabeorlanski/subscriptions","organizations_url":"https://api.github.com/users/gabeorlanski/orgs","repos_url":"https://api.github.com/users/gabeorlanski/repos","events_url":"https://api.github.com/users/gabeorlanski/events{/privacy}","received_events_url":"https://api.github.com/users/gabeorlanski/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-04-23T00:19:33Z","updated_at":"2018-04-23T05:07:59Z","closed_at":"2018-04-23T05:07:59Z","author_association":"NONE","body":"Hello. I am having the issue where I cannot use proxy hosts with the AsyncHTTPClient. I installed curl and am using the `curl_httpclient.CurlAsyncHTTPClient`. I am using the AsyncHTTPClient to build a scraper. Here is my code for the Custom httprequest:\r\n\r\n\r\n    config = {\r\n        'proxy_host': '185.85.21.6',\r\n        'proxy_port': 53281\r\n    }\r\n\r\n\r\n    class CustomHTTPRequest(HTTPRequest):\r\n        \"\"\"We're going to subclass HTTPRequest\"\"\"\r\n    \r\n        _DEFAULTS = dict(connect_timeout=20.0, request_timeout=20.0, follow_redirects=True, max_redirects=5, decompress_response=True, proxy_password='',\r\n                allow_nonstandard_methods=False, validate_cert=True)\r\n    \r\n        def __init__(self, url, method=\"GET\", headers=None, body=None, auth_username=None, auth_password=None, auth_mode=None, connect_timeout=None,\r\n                     request_timeout=None, if_modified_since=None, follow_redirects=None, max_redirects=None, user_agent=None, use_gzip=None,\r\n                     network_interface=None, streaming_callback=None, header_callback=None, prepare_curl_callback=None, proxy_host=None, proxy_port=None,\r\n                     proxy_username=None, proxy_password=None, proxy_auth_mode=None, allow_nonstandard_methods=None, validate_cert=None, ca_certs=None,\r\n                     allow_ipv6=None, client_key=None, client_cert=None, body_producer=None, expect_100_continue=False, decompress_response=None,\r\n                     ssl_options=None, key=None):\r\n    \r\n            self.headers = headers\r\n            if if_modified_since:\r\n                self.headers[\"If-Modified-Since\"] = httputil.format_timestamp(if_modified_since)\r\n            self.proxy_host = proxy_host\r\n            self.proxy_port = proxy_port\r\n            self.proxy_username = proxy_username\r\n            self.proxy_password = proxy_password\r\n            self.proxy_auth_mode = proxy_auth_mode\r\n            self.url = url\r\n            self.method = method\r\n            self.body = body\r\n            self.body_producer = body_producer\r\n            self.auth_username = auth_username\r\n            self.auth_password = auth_password\r\n            self.auth_mode = auth_mode\r\n            self.connect_timeout = connect_timeout\r\n            self.request_timeout = request_timeout\r\n            self.follow_redirects = follow_redirects\r\n            self.max_redirects = max_redirects\r\n            self.user_agent = user_agent\r\n            self.key = key\r\n            if decompress_response is not None:\r\n                self.decompress_response = decompress_response\r\n            else:\r\n                self.decompress_response = use_gzip\r\n            self.network_interface = network_interface\r\n            self.streaming_callback = streaming_callback\r\n            self.header_callback = header_callback\r\n            self.prepare_curl_callback = prepare_curl_callback\r\n            self.allow_nonstandard_methods = allow_nonstandard_methods\r\n            self.validate_cert = validate_cert\r\n            self.ca_certs = ca_certs\r\n            self.allow_ipv6 = allow_ipv6\r\n            self.client_key = client_key\r\n            self.client_cert = client_cert\r\n            self.ssl_options = ssl_options\r\n            self.expect_100_continue = expect_100_continue\r\n            self.start_time = time.time()\r\n\r\nHere is the code for the requester:\r\n\r\n    class Scraper():\r\n    \r\n        def __init__(self, request_params=[{}], max_clients=100, maxsize=100, connect_timeout=9999999, request_timeout=9999999, auth_username=None,\r\n                auth_password=None, method='GET', func=None, sleep=0, endpoint=None):\r\n            self.sleep = sleep\r\n            self.endpoint = endpoint\r\n            \"\"\"Instantiate a tornado async http client to do multiple concurrent requests\"\"\"\r\n            self.max_clients = max_clients\r\n            AsyncHTTPClient.configure(\"tornado.curl_httpclient.CurlAsyncHTTPClient\", max_clients=100, defaults=config)\r\n            self.request_params = request_params\r\n            self.method = method\r\n    \r\n            self.maxsize = maxsize\r\n            self.auth_username = auth_username\r\n            self.auth_password = auth_password\r\n            self.connect_timeout = connect_timeout\r\n            self.request_timeout = request_timeout\r\n            self.to_return = []\r\n            self.http_client =AsyncHTTPClient()\r\n            self.queue = Queue(maxsize=self.maxsize)\r\n            self.func = func\r\n            self.read(self.request_params)\r\n            self.get(self.connect_timeout, self.request_timeout, self.http_client)\r\n            self.loop = ioloop.IOLoop.current()\r\n            self.join_future = self.queue.join()\r\n    \r\n            def done(future):\r\n                self.loop.stop()\r\n    \r\n            self.join_future.add_done_callback(done)\r\n            self.loop.start()\r\n    \r\n        @gen.coroutine\r\n        def read(self, request_params):\r\n            for request_param in request_params:\r\n                yield self.queue.put(request_param)\r\n    \r\n        @gen.coroutine\r\n        def get(self, connect_timeout, request_timeout, http_client):\r\n            print(\"Getting Links\")\r\n            self.counter = 1\r\n            while True:\r\n                request_param = yield self.queue.get()\r\n                url = request_param.get('url', self.endpoint)\r\n                body = request_param.get('body', None)\r\n                dictKey = request_param['dictKey']\r\n                # request_param['headers']['dictKey'] = dictKey\r\n    \r\n                request = CustomHTTPRequest(url, method=self.method, headers=request_param['headers'], body=body, connect_timeout=connect_timeout,\r\n                        request_timeout=request_timeout, auth_username=self.auth_username, auth_password=self.auth_password, key=dictKey)\r\n    \r\n                def handle_response(response):\r\n                    if not self.func:\r\n                        if response.error:\r\n                            self.to_return.append({'key': response.request.__dict__['key'], 'response': str(response.error)})\r\n                        else:\r\n                            self.to_return.append({'key': response.request.__dict__['key'], 'response': response.body})\r\n                    else:\r\n                        try:\r\n                            self.func(response.body, response.request.__dict__['key'])\r\n                        except Exception as e:\r\n                            pass\r\n                    # print(self.counter)\r\n                    self.counter += 1\r\n                    self.queue.task_done()\r\n    \r\n                future = self.http_client.fetch(request, handle_response)\r\n    \r\n                time.sleep(self.sleep)\r\n    \r\n        def return_results(self):\r\n            return self.to_return\r\n  \r\nWhen I run that, it returns (as the body) `(43, '')`. It doesn't raise an error. It just returns that.\r\n    ","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2358","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2358/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2358/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2358/events","html_url":"https://github.com/tornadoweb/tornado/issues/2358","id":316129584,"number":2358,"title":"websocket: Allow open() to be a coroutine","user":{"login":"cngo-github","id":5151593,"avatar_url":"https://avatars1.githubusercontent.com/u/5151593?v=4","gravatar_id":"","url":"https://api.github.com/users/cngo-github","html_url":"https://github.com/cngo-github","followers_url":"https://api.github.com/users/cngo-github/followers","following_url":"https://api.github.com/users/cngo-github/following{/other_user}","gists_url":"https://api.github.com/users/cngo-github/gists{/gist_id}","starred_url":"https://api.github.com/users/cngo-github/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cngo-github/subscriptions","organizations_url":"https://api.github.com/users/cngo-github/orgs","repos_url":"https://api.github.com/users/cngo-github/repos","events_url":"https://api.github.com/users/cngo-github/events{/privacy}","received_events_url":"https://api.github.com/users/cngo-github/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-04-20T05:09:53Z","updated_at":"2018-05-12T22:31:08Z","closed_at":"2018-05-12T22:31:08Z","author_association":"NONE","body":"According to this PR, the websocket handler's `open` method cannot be a coroutine: https://github.com/tornadoweb/tornado/issues/1650\r\n\r\nIs this still true?","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2354","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2354/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2354/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2354/events","html_url":"https://github.com/tornadoweb/tornado/issues/2354","id":313545493,"number":2354,"title":"dead jupyter kernel as soon as the notebook starts","user":{"login":"JyotsnaT","id":8949375,"avatar_url":"https://avatars2.githubusercontent.com/u/8949375?v=4","gravatar_id":"","url":"https://api.github.com/users/JyotsnaT","html_url":"https://github.com/JyotsnaT","followers_url":"https://api.github.com/users/JyotsnaT/followers","following_url":"https://api.github.com/users/JyotsnaT/following{/other_user}","gists_url":"https://api.github.com/users/JyotsnaT/gists{/gist_id}","starred_url":"https://api.github.com/users/JyotsnaT/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JyotsnaT/subscriptions","organizations_url":"https://api.github.com/users/JyotsnaT/orgs","repos_url":"https://api.github.com/users/JyotsnaT/repos","events_url":"https://api.github.com/users/JyotsnaT/events{/privacy}","received_events_url":"https://api.github.com/users/JyotsnaT/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-12T01:38:06Z","updated_at":"2018-04-12T16:20:34Z","closed_at":"2018-04-12T16:20:34Z","author_association":"NONE","body":"I am using jupyter 4.4.0, ipython 5.3.0 with python 2.7.12 on ubuntu 16.04. I recently installed jupyter using pip. But as soon as I open a notebook, the kernel dies with the following error.\r\n\r\n\r\nRuntimeError: IOLoop is already running\r\n[I 07:12:14.164 NotebookApp] KernelRestarter: restarting kernel (3/5), new random ports\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel_launcher.py\", line 16, in <module>\r\n    app.launch_new_instance()\r\n  File \"/usr/local/lib/python2.7/dist-packages/traitlets/config/application.py\", line 658, in launch_instance\r\n    app.start()\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelapp.py\", line 477, in start\r\n    ioloop.IOLoop.instance().start()\r\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/ioloop.py\", line 928, in start\r\n    raise RuntimeError(\"IOLoop is already running\")\r\nRuntimeError: IOLoop is already running\r\n[W 07:12:15.167 NotebookApp] Timeout waiting for kernel_info reply from 70106048-4b5a-4c24-a62c-45a3305cf243\r\n[I 07:12:17.171 NotebookApp] KernelRestarter: restarting kernel (4/5), new random ports\r\nWARNING:root:kernel 70106048-4b5a-4c24-a62c-45a3305cf243 restarted\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel_launcher.py\", line 16, in <module>\r\n    app.launch_new_instance()\r\n  File \"/usr/local/lib/python2.7/dist-packages/traitlets/config/application.py\", line 658, in launch_instance\r\n    app.start()\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelapp.py\", line 477, in start\r\n    ioloop.IOLoop.instance().start()\r\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/ioloop.py\", line 928, in start\r\n    raise RuntimeError(\"IOLoop is already running\")\r\nRuntimeError: IOLoop is already running\r\n[W 07:12:20.182 NotebookApp] KernelRestarter: restart failed\r\n[W 07:12:20.182 NotebookApp] Kernel 70106048-4b5a-4c24-a62c-45a3305cf243 died, removing from map.\r\nERROR:root:kernel 70106048-4b5a-4c24-a62c-45a3305cf243 restarted failed!\r\n[W 07:12:20.193 NotebookApp] 410 DELETE /api/sessions/f5f784a8-4c4a-4629-ac09-25cb33e651fd (127.0.0.1): Kernel deleted before session\r\n[W 07:12:20.194 NotebookApp] Kernel deleted before session\r\n[W 07:12:20.195 NotebookApp] 410 DELETE /api/sessions/f5f784a8-4c4a-4629-ac09-25cb33e651fd (127.0.0.1) 3.79ms referer=http://localhost:8888/notebooks/acad/new_note.ipynb\r\n\r\n\r\n\r\nI have tried cleaning up jupyter from pip list and reinstalling. But this doesn't work. I also referred to #1796, doesn't solve my purpose. Any leads on this?","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2352","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2352/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2352/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2352/events","html_url":"https://github.com/tornadoweb/tornado/issues/2352","id":312584644,"number":2352,"title":"RuntimeError: There is no current event loop in thread 'Thread-1'.","user":{"login":"rgaufman","id":33842342,"avatar_url":"https://avatars3.githubusercontent.com/u/33842342?v=4","gravatar_id":"","url":"https://api.github.com/users/rgaufman","html_url":"https://github.com/rgaufman","followers_url":"https://api.github.com/users/rgaufman/followers","following_url":"https://api.github.com/users/rgaufman/following{/other_user}","gists_url":"https://api.github.com/users/rgaufman/gists{/gist_id}","starred_url":"https://api.github.com/users/rgaufman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rgaufman/subscriptions","organizations_url":"https://api.github.com/users/rgaufman/orgs","repos_url":"https://api.github.com/users/rgaufman/repos","events_url":"https://api.github.com/users/rgaufman/events{/privacy}","received_events_url":"https://api.github.com/users/rgaufman/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-09T15:46:54Z","updated_at":"2018-04-09T15:51:59Z","closed_at":"2018-04-09T15:50:37Z","author_association":"NONE","body":"I have this code:\r\n\r\n```python\r\n#!/usr/bin/env python3\r\n\r\nimport threading\r\nimport tornado.ioloop\r\nimport tornado.web\r\nfrom tornado import gen\r\n\r\nclass RequestHandler(tornado.web.RequestHandler):\r\n\r\n    @tornado.web.asynchronous\r\n    @gen.coroutine\r\n    def get(self, path):\r\n        self.write(\"Test\")\r\n        self.finish()\r\n\r\nclass WebServer(threading.Thread):\r\n    def run(self):\r\n        application = tornado.web.Application([\r\n            (r\"/(.*)\", RequestHandler)])\r\n        application.listen(12345)\r\n        tornado.ioloop.IOLoop.instance().start()\r\n\r\nWebServer().start()\r\n```\r\n\r\nIt works just fine on Linux, however, on Mac I get an exception:\r\n\r\n```\r\n$ python3 testtornado.rb\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"testtornado.rb\", line 20, in run\r\n    application.listen(12345)\r\n  File \"/usr/local/lib/python3.6/site-packages/tornado/web.py\", line 1986, in listen\r\n    server.listen(port, address)\r\n  File \"/usr/local/lib/python3.6/site-packages/tornado/tcpserver.py\", line 145, in listen\r\n    self.add_sockets(sockets)\r\n  File \"/usr/local/lib/python3.6/site-packages/tornado/tcpserver.py\", line 159, in add_sockets\r\n    sock, self._handle_connection)\r\n  File \"/usr/local/lib/python3.6/site-packages/tornado/netutil.py\", line 219, in add_accept_handler\r\n    io_loop = IOLoop.current()\r\n  File \"/usr/local/lib/python3.6/site-packages/tornado/ioloop.py\", line 282, in current\r\n    loop = asyncio.get_event_loop()\r\n  File \"/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/events.py\", line 694, in get_event_loop\r\n    return get_event_loop_policy().get_event_loop()\r\n  File \"/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/events.py\", line 602, in get_event_loop\r\n    % threading.current_thread().name)\r\nRuntimeError: There is no current event loop in thread 'Thread-1'.\r\n```\r\n\r\nAny ideas?\r\n\r\nI'm using tornado (5.0.2) and Python 3.6.5.","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2345","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2345/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2345/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2345/events","html_url":"https://github.com/tornadoweb/tornado/issues/2345","id":311760054,"number":2345,"title":"FallbackHandler does not execute RequestHandler.on_finish()","user":{"login":"LiranLast","id":19842903,"avatar_url":"https://avatars0.githubusercontent.com/u/19842903?v=4","gravatar_id":"","url":"https://api.github.com/users/LiranLast","html_url":"https://github.com/LiranLast","followers_url":"https://api.github.com/users/LiranLast/followers","following_url":"https://api.github.com/users/LiranLast/following{/other_user}","gists_url":"https://api.github.com/users/LiranLast/gists{/gist_id}","starred_url":"https://api.github.com/users/LiranLast/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LiranLast/subscriptions","organizations_url":"https://api.github.com/users/LiranLast/orgs","repos_url":"https://api.github.com/users/LiranLast/repos","events_url":"https://api.github.com/users/LiranLast/events{/privacy}","received_events_url":"https://api.github.com/users/LiranLast/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-04-05T20:36:43Z","updated_at":"2018-04-20T23:34:32Z","closed_at":"2018-04-20T23:34:32Z","author_association":"CONTRIBUTOR","body":"When using FallbackHandler for running a WSGI application using WSGIContainer the RequestHandler.on_finish() method is never called.\r\n\r\nModifying FallbackHandler.prepare() this way seems to fix the issue, but I may not be familiar enough with Tornado's internals.\r\n\r\n```\r\n    def prepare(self):\r\n        self.fallback(self.request)\r\n        self._finished = True\r\n        self.on_finished()\r\n```","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2344","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2344/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2344/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2344/events","html_url":"https://github.com/tornadoweb/tornado/issues/2344","id":311230791,"number":2344,"title":"Different versions of Tornado come out different results when running thread in coroutine","user":{"login":"huashengdun","id":909962,"avatar_url":"https://avatars0.githubusercontent.com/u/909962?v=4","gravatar_id":"","url":"https://api.github.com/users/huashengdun","html_url":"https://github.com/huashengdun","followers_url":"https://api.github.com/users/huashengdun/followers","following_url":"https://api.github.com/users/huashengdun/following{/other_user}","gists_url":"https://api.github.com/users/huashengdun/gists{/gist_id}","starred_url":"https://api.github.com/users/huashengdun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huashengdun/subscriptions","organizations_url":"https://api.github.com/users/huashengdun/orgs","repos_url":"https://api.github.com/users/huashengdun/repos","events_url":"https://api.github.com/users/huashengdun/events{/privacy}","received_events_url":"https://api.github.com/users/huashengdun/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-04-04T13:30:46Z","updated_at":"2018-04-06T16:59:20Z","closed_at":"2018-04-05T14:54:05Z","author_association":"NONE","body":"Here is the demo code.\r\n\r\n```python\r\nimport threading\r\nimport time\r\nfrom tornado.concurrent import Future\r\nfrom tornado import gen, ioloop\r\n\r\n\r\n@gen.coroutine\r\ndef foo(url):\r\n    future = Future()\r\n    threading.Thread(target=fetch_url_wrapped, args=(url, future)).start()\r\n    res = yield future\r\n    print(res)\r\n\r\n\r\ndef fetch_url(url):\r\n    time.sleep(1)\r\n    return 'hello world'\r\n\r\n\r\ndef fetch_url_wrapped(url, future):\r\n    print('fetching {}'.format(url))\r\n    result = fetch_url(url)\r\n    future.set_result(result)\r\n    print('set result {}'.format(result))\r\n\r\nloop = ioloop.IOLoop.current()\r\nloop.run_sync(lambda: foo('http://bar.com'))\r\n```\r\n\r\nBefore Tornado 5.0.0, it is ok.\r\nAfter version 5.0.0 (including 5.0.0), the program just blocks.","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2343","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2343/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2343/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2343/events","html_url":"https://github.com/tornadoweb/tornado/issues/2343","id":311119356,"number":2343,"title":"Exception in tornado iostream.","user":{"login":"cici-tan","id":13968333,"avatar_url":"https://avatars0.githubusercontent.com/u/13968333?v=4","gravatar_id":"","url":"https://api.github.com/users/cici-tan","html_url":"https://github.com/cici-tan","followers_url":"https://api.github.com/users/cici-tan/followers","following_url":"https://api.github.com/users/cici-tan/following{/other_user}","gists_url":"https://api.github.com/users/cici-tan/gists{/gist_id}","starred_url":"https://api.github.com/users/cici-tan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cici-tan/subscriptions","organizations_url":"https://api.github.com/users/cici-tan/orgs","repos_url":"https://api.github.com/users/cici-tan/repos","events_url":"https://api.github.com/users/cici-tan/events{/privacy}","received_events_url":"https://api.github.com/users/cici-tan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-04T07:44:38Z","updated_at":"2018-04-06T18:04:44Z","closed_at":"2018-04-06T18:04:44Z","author_association":"NONE","body":"Anyone know why this happened?\r\n![exception2](https://user-images.githubusercontent.com/13968333/38294397-4f8dc686-381d-11e8-83c3-7af8e644245e.png)\r\n![excptions](https://user-images.githubusercontent.com/13968333/38294398-4fedcb80-381d-11e8-9076-85b655f6cbcd.png)\r\n","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2342","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2342/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2342/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2342/events","html_url":"https://github.com/tornadoweb/tornado/issues/2342","id":310706138,"number":2342,"title":"torando import error","user":{"login":"cuckoo-linux","id":32926301,"avatar_url":"https://avatars3.githubusercontent.com/u/32926301?v=4","gravatar_id":"","url":"https://api.github.com/users/cuckoo-linux","html_url":"https://github.com/cuckoo-linux","followers_url":"https://api.github.com/users/cuckoo-linux/followers","following_url":"https://api.github.com/users/cuckoo-linux/following{/other_user}","gists_url":"https://api.github.com/users/cuckoo-linux/gists{/gist_id}","starred_url":"https://api.github.com/users/cuckoo-linux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cuckoo-linux/subscriptions","organizations_url":"https://api.github.com/users/cuckoo-linux/orgs","repos_url":"https://api.github.com/users/cuckoo-linux/repos","events_url":"https://api.github.com/users/cuckoo-linux/events{/privacy}","received_events_url":"https://api.github.com/users/cuckoo-linux/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-03T06:10:51Z","updated_at":"2018-04-04T01:45:49Z","closed_at":"2018-04-04T01:45:49Z","author_association":"NONE","body":"pip install -r ~/klara-github-repo/install/requirements.txt\r\nRequirement already satisfied: torndb in /usr/local/lib/python2.7/dist-packages (from -r /home/projects/klara-github-repo/install/requirements.txt (line 1))\r\nRequirement already satisfied: requests in /usr/local/lib/python2.7/dist-packages (from -r /home/projects/klara-github-repo/install/requirements.txt (line 2))\r\nCollecting tornado (from -r /home/projects/klara-github-repo/install/requirements.txt (line 3))\r\n/usr/local/lib/python2.7/dist-packages/pip/_vendor/urllib3/util/ssl_.py:339: SNIMissingWarning: An HTTPS request has been made, but the SNI (Subject Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n  SNIMissingWarning\r\n/usr/local/lib/python2.7/dist-packages/pip/_vendor/urllib3/util/ssl_.py:137: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n  InsecurePlatformWarning\r\n  **Could not find a version that satisfies the requirement tornado (from -r /home/projects/klara-github-repo/install/requirements.txt (line 3)) (from versions: )\r\nNo matching distribution found for tornado (from -r /home/projects/klara-github-repo/install/requirements.txt (line **3))**\r\n$ pip -V\r\npip 9.0.3 from /usr/local/lib/python2.7/dist-packages (python 2.7)\r\n","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2341","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2341/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2341/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2341/events","html_url":"https://github.com/tornadoweb/tornado/issues/2341","id":310518860,"number":2341,"title":"Websocket client memory overflow","user":{"login":"willmcgugan","id":554369,"avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","rece
8000
ived_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-02T15:38:57Z","updated_at":"2018-04-20T23:31:29Z","closed_at":"2018-04-20T23:31:29Z","author_association":"CONTRIBUTOR","body":"As far as I can tell, tornado has no 'flow control' for websockets. A websocket will receive data as fast as it can, and [store the data in a deque](https://github.com/tornadoweb/tornado/blob/62e43f6b22e7b0bba1e37c2857396b439271ceb2/tornado/websocket.py#L1227). If that data is not consumed as fast as it is written, then that deque will grow in size indefinitely, ultimately leading to a memory error and killing the process.\r\n\r\nThis seems to be occurring in practice when we send large files over our Tornado websocket server. I also suspect that it makes a websocket server vulnerable to a DOS attack. A simple chat application for example, where one client is on a slow internet connection and the other is on a fast connection. If the client on the fast connection sends packets fast enough, it could kill the server.\r\n\r\nIs this a known issue? Are there any workarounds?\r\n\r\nI think the ideal solution may be to have no user space buffer at all, so that a websocket may only read as fast as the data is consumed.","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2340","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2340/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2340/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2340/events","html_url":"https://github.com/tornadoweb/tornado/issues/2340","id":310486276,"number":2340,"title":"Leaking file descriptors in 5.0 after loop.close","user":{"login":"mrocklin","id":306380,"avatar_url":"https://avatars3.githubusercontent.com/u/306380?v=4","gravatar_id":"","url":"https://api.github.com/users/mrocklin","html_url":"https://github.com/mrocklin","followers_url":"https://api.github.com/users/mrocklin/followers","following_url":"https://api.github.com/users/mrocklin/following{/other_user}","gists_url":"https://api.github.com/users/mrocklin/gists{/gist_id}","starred_url":"https://api.github.com/users/mrocklin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrocklin/subscriptions","organizations_url":"https://api.github.com/users/mrocklin/orgs","repos_url":"https://api.github.com/users/mrocklin/repos","events_url":"https://api.github.com/users/mrocklin/events{/privacy}","received_events_url":"https://api.github.com/users/mrocklin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-02T13:35:02Z","updated_at":"2018-04-03T00:58:11Z","closed_at":"2018-04-03T00:58:11Z","author_association":"NONE","body":"The command `loop.close(all_fds=True)` seems to still leave some file descriptors open.  This appears to be new.\r\n\r\n### 4.5.3\r\n\r\n```python\r\nIn [1]: import psutil\r\nIn [2]: from tornado.ioloop import IOLoop\r\nIn [3]: psutil.Process().num_fds()\r\nOut[3]: 14\r\n\r\nIn [4]: loop = IOLoop()\r\nIn [5]: psutil.Process().num_fds()\r\nOut[5]: 16\r\n\r\nIn [6]: loop.close(all_fds=True)\r\nIn [7]: psutil.Process().num_fds()\r\nOut[7]: 14\r\n\r\nIn [8]: import tornado\r\nIn [9]: tornado.version\r\nOut[9]: '4.5.3'\r\n```\r\n\r\n### 5.0\r\n\r\n```python\r\nIn [1]: import psutil\r\nIn [2]: from tornado.ioloop import IOLoop\r\nIn [3]: psutil.Process().num_fds()\r\nOut[3]: 14\r\n\r\nIn [4]: loop = IOLoop()\r\nIn [5]: psutil.Process().num_fds()\r\nOut[5]: 20\r\n\r\nIn [6]: loop.close(all_fds=True)\r\nIn [7]: psutil.Process().num_fds()\r\nOut[7]: 17\r\n\r\nIn [8]: import tornado\r\nIn [9]: tornado.version\r\nOut[9]: '5.0'\r\n```\r\n\r\nI've also tried this on master and get the same result","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2339","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2339/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2339/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2339/events","html_url":"https://github.com/tornadoweb/tornado/issues/2339","id":310277897,"number":2339,"title":"Release 5.0.2","user":{"login":"bdarnell","id":160562,"avatar_url":"https://avatars1.githubusercontent.com/u/160562?v=4","gravatar_id":"","url":"https://api.github.com/users/bdarnell","html_url":"https://github.com/bdarnell","followers_url":"https://api.github.com/users/bdarnell/followers","following_url":"https://api.github.com/users/bdarnell/following{/other_user}","gists_url":"https://api.github.com/users/bdarnell/gists{/gist_id}","starred_url":"https://api.github.com/users/bdarnell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bdarnell/subscriptions","organizations_url":"https://api.github.com/users/bdarnell/orgs","repos_url":"https://api.github.com/users/bdarnell/repos","events_url":"https://api.github.com/users/bdarnell/events{/privacy}","received_events_url":"https://api.github.com/users/bdarnell/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-31T22:49:26Z","updated_at":"2018-04-12T01:48:53Z","closed_at":"2018-04-12T01:48:53Z","author_association":"OWNER","body":"We've fixed a few regressions since 5.0.1, so it's about time for a new release. I think it should include\r\n\r\n- #2326 (memory leak, especially with sync HTTPClient)\r\n- #2327 (testing, improves compatibility with pytest-asyncio)\r\n- #2338 (PeriodicCallback misbehaves when clock moves backwards)\r\n","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2337","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2337/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2337/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2337/events","html_url":"https://github.com/tornadoweb/tornado/issues/2337","id":310254263,"number":2337,"title":"creating basic server breaks in 5.0.1, but works in 4.5.2","user":{"login":"heppg","id":5240331,"avatar_url":"https://avatars3.githubusercontent.com/u/5240331?v=4","gravatar_id":"","url":"https://api.github.com/users/heppg","html_url":"https://github.com/heppg","followers_url":"https://api.github.com/users/heppg/followers","following_url":"https://api.github.com/users/heppg/following{/other_user}","gists_url":"https://api.github.com/users/heppg/gists{/gist_id}","starred_url":"https://api.github.com/users/heppg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/heppg/subscriptions","organizations_url":"https://api.github.com/users/heppg/orgs","repos_url":"https://api.github.com/users/heppg/repos","events_url":"https://api.github.com/users/heppg/events{/privacy}","received_events_url":"https://api.github.com/users/heppg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-31T16:45:00Z","updated_at":"2018-03-31T17:10:50Z","closed_at":"2018-03-31T17:10:49Z","author_association":"NONE","body":"Create a server in a thread (code shortened for clarity):\r\n1547       self.app = self.make_app()\r\n1548       self.app.listen( 8080)\r\n1549       if debug:\r\n1550           print(\"ServerThread tornado ioloop started\")\r\n1551        tornado.ioloop.IOLoop.current().start()\r\n\r\nSystem is Python 3.5.3 (default, Jan 19 2017, 14:11:04)\r\n[GCC 6.3.0 20170124] on linux\r\n\r\n\r\nIn 5.0.1, I get an exception in app.listen:\r\nTraceback (most recent call last):\r\n  File \"/home/pi/scratchClient/src/server/scratchClientServer.py\", line 1548, in run\r\n    self.app.listen( 8080)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tornado/web.py\", line 1986, in listen\r\n    server.listen(port, address)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tornado/tcpserver.py\", line 145, in listen\r\n    self.add_sockets(sockets)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tornado/tcpserver.py\", line 159, in add_sockets\r\n    sock, self._handle_connection)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tornado/netutil.py\", line 219, in add_accept_handler\r\n    io_loop = IOLoop.current()\r\n  File \"/usr/local/lib/python3.5/dist-packages/tornado/ioloop.py\", line 283, in current\r\n    loop = asyncio.get_event_loop()\r\n  File \"/usr/lib/python3.5/asyncio/events.py\", line 671, in get_event_loop\r\n    return get_event_loop_policy().get_event_loop()\r\n  File \"/usr/lib/python3.5/asyncio/events.py\", line 583, in get_event_loop\r\n    % threading.current_thread().name)\r\nRuntimeError: There is no current event loop in thread 'GUIServerThread_0'.\r\n\r\nThe .IOLoop.current().start() is not executed.\r\n\r\nThe code runs with release 4.5.2. As a workaround, I changed the tornado version back to 4.5.2 in installation documentation.\r\n","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2334","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2334/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2334/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2334/events","html_url":"https://github.com/tornadoweb/tornado/issues/2334","id":310151194,"number":2334,"title":"on_finish() not being called when *server* finishes first; finish() called *twice*.  (c.f. #517)","user":{"login":"sam-falvo","id":1495032,"avatar_url":"https://avatars0.githubusercontent.com/u/1495032?v=4","gravatar_id":"","url":"https://api.github.com/users/sam-falvo","html_url":"https://github.com/sam-falvo","followers_url":"https://api.github.com/users/sam-falvo/followers","following_url":"https://api.github.com/users/sam-falvo/following{/other_user}","gists_url":"https://api.github.com/users/sam-falvo/gists{/gist_id}","starred_url":"https://api.github.com/users/sam-falvo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sam-falvo/subscriptions","organizations_url":"https://api.github.com/users/sam-falvo/orgs","repos_url":"https://api.github.com/users/sam-falvo/repos","events_url":"https://api.github.com/users/sam-falvo/events{/privacy}","received_events_url":"https://api.github.com/users/sam-falvo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-30T19:40:17Z","updated_at":"2018-03-30T22:16:50Z","closed_at":"2018-03-30T22:16:50Z","author_association":"NONE","body":"This is not a duplicate issue to #517, because I'm forcing the server to close the connection first.  Apparently twice, but this is actually a separate issue.\r\n\r\nSo far as I'm able to tell by spelunking through the code in Tornado, it unconditionally is supposed to call `on_finish`.  However, I'm showing *no* evidence this call is being made.  None of my logs contains any `on_finish` or `on_connection_close` output.\r\n\r\nI'm running the following code in my web-app for testing purposes:\r\n\r\n```python\r\nclass HealthHandler(CorsMixin, V3Handler):                                                                                                                                                    \r\n                                                                                                                                                                                              \r\n    \"\"\"                                                                                                                                                                                       \r\n    This class handles GETs to /.  This serves two purposes:                                                                                                                                  \r\n    for programmers, it's a nice cheat-sheet to create your own handler                                                                                                                       \r\n    classes with; and, for operations, it's a convenient health-check.                                                                                                                        \r\n    If the server responds, we know that the V3 event loop is up.                                                                                                                             \r\n    \"\"\"                                                                                                                                                                                       \r\n                                                                                                                                                                                              \r\n    CORS_ORIGIN = '*'                                                                                                                                                                         \r\n    CORS_METHODS = 'GET'                                                                                                                                                                      \r\n                                                                                                                                                                                              \r\n    def get(self):                                                                                                                                                                            \r\n        LOG.info(\"Health checked\")\r\n        self._ok(\"Health check OK\")                                                                                                                                                           \r\n```\r\n\r\nThe V3Handler class is defined like so:\r\n\r\n```python\r\nclass V3Handler(RequestHandler):                                                                                                                                                              \r\n    \"\"\"                                                                                                                                                                                       \r\n    This class provides a common handler base class for all V3 handlers.                                                                                                                      \r\n    It enhances RequestHandler with the following features:                                                                                                                                   \r\n                                                                                                                                                                                              \r\n    - Standard responses for API endpoints, including both error and success                                                                                                                  \r\n      methods.                                                                                                                                                                                \r\n                                                                                                                                                                                              \r\n    - Standardized request logging.                                                                                                                                                           \r\n    \"\"\"                                                                                                                                                                                       \r\n                                                                                                                                                                                              \r\n    # V3Handler-specific logic                                                                                                                                                                \r\n                                                                                                                                                                                              \r\n    def _log(self, meth, status, msg):                                                                                                                                                        \r\n        self.set_status(status)                                                                                                                                                               \r\n        self.write(msg)                                                                                                                                                                       \r\n        meth(\"{}\".format(msg))                                                                                                                                                                \r\n        self.finish()                                                                                                                                                                         \r\n                                                                                                                                                                                              \r\n    def _error(self, msg, status=404):                                                                                                                                                        \r\n        self._log(LOG.error, status, err(msg))                                                                                                                                                \r\n                                                                                                                                                                                              \r\n    def _exception(self, msg, status=500):                                                                                                                                                    \r\n        self._log(LOG.exception, status, err(msg))                                                                                                                                            \r\n                                                                                                                                                                                              \r\n    def _ok(self, msg=None):                                                                                                                                                                  \r\n        self.write(ok(msg))                                                                                                                                                                   \r\n        self.finish()                                                                                                                                                                         \r\n                                                                                                                                                                                              \r\n    def missing_field(self, term):                                                                                                                                                            \r\n        self._exception(missing_field(term))                                                                                                                                                  \r\n                                                                                                                                                                                              \r\n    def not_live_system(self):                                                                                                                                                                \r\n        self._error(                                                                                                                                                                          \r\n            \"The given serial or token combination \"                                                                                                                                          \r\n            \"is not associated with a live system.\"                                                                                                                                           \r\n        )                                                                                                                                                                                     \r\n                                                                                                                                                                                              \r\n    def no_data(self, qualifier=None):                                                                                                                                                        \r\n        self._error(                                                                                                                                                                          \r\n            \"No data found{}\".format(\" for {}\".format(qualifier) if qualifier else \"\")                                                                                                        \r\n        )                                                                                                                                                                                     \r\n                                                                                                                                                                                              \r\n    def method_not_allowed(self):                                                                                                                                                             \r\n        self._error(\"Method not allowed\", status=405)                                                                                                                                         \r\n                                                                                                                                                                                              \r\n    # overriding RequestHandler methods                                                                                                                                                       \r\n                                                                                                                                                                                              \r\n    def prepare(self):                                                                                                                                                                        \r\n        method = self.request.method                                                                                                                                                          \r\n        url = self.request.path                                                                                                                                                               \r\n        source = self.request.remote_ip                                                                                                                                                       \r\n        LOG.info(\"{} - {} {}\".format(source, method, url))                                                                                                                                    \r\n                                                                                                                                                                                              \r\n    def finish(self, *args, **kw_args):                                                                                                                                                       \r\n        print(\"FINISH!!\")                                                                                                                                                                     \r\n        self.on_finish()                                                                                                                                                                      \r\n        return super(V3Handler, self).finish(*args, **kw_args)                                                                                                                                \r\n                                                                                                                                                                                              \r\n    def on_finish(self):                                                                                                                                                                      \r\n        print(\"FINI\")                                                                                                                                                                         \r\n        LOG.info(\"FINI.\")                                                                                                                                                                     \r\n```\r\n\r\nWhen I issue a `curl` command to GET the / endpoint, I receive back a response and the HTTP connection closes, as one would expect.  I also find the following on the log output:\r\n\r\n```\r\n2018-03-30 12:29:22,225 - __main__ - INFO - Health checked\r\nFINISH!!\r\nFINI\r\n2018-03-30 12:29:22,225 - src.server.generic_handler - INFO - FINI.\r\nFINISH!!\r\nFINI\r\n2018-03-30 12:29:22,231 - src.server.generic_handler - INFO - FINI.\r\n```\r\n\r\nLooks like everything is working correctly; *however*, if I **remove** the invokation of `self.on_finish()` in my override of `finish`, the resulting logs are produced instead, clearly showing that `on_finish` is *not* being called by the `finish` method, and apparently contradicting the source listing:\r\n\r\n```\r\n2018-03-30 12:28:54,339 - __main__ - INFO - Health checked\r\nFINISH!!\r\nFINISH!!\r\n```\r\n\r\nIn my project's requirements.txt file, I have the following listed:\r\n\r\n```\r\ntornado==4.5.3\r\ntornado_cors==0.6.0\r\n```\r\n\r\nWhat steps must I take to *reliably* get `on_finish` called?\r\n\r\nThanks for any help you can provide.  If you need more information from me, I'd be happy to help provide it if I can.","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2333","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2333/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2333/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2333/events","html_url":"https://github.com/tornadoweb/tornado/issues/2333","id":309968156,"number":2333,"title":"ioloop: PeriodicCallback executes too often on windows","user":{"login":"wanghongzhou","id":12545839,"avatar_url":"https://avatars2.githubusercontent.com/u/12545839?v=4","gravatar_id":"","url":"https://api.github.com/users/wanghongzhou","html_url":"https://github.com/wanghongzhou","followers_url":"https://api.github.com/users/wanghongzhou/followers","following_url":"https://api.github.com/users/wanghongzhou/following{/other_user}","gists_url":"https://api.github.com/users/wanghongzhou/gists{/gist_id}","starred_url":"https://api.github.com/users/wanghongzhou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wanghongzhou/subscriptions","organizations_url":"https://api.github.com/users/wanghongzhou/orgs","repos_url":"https://api.github.com/users/wanghongzhou/repos","events_url":"https://api.github.com/users/wanghongzhou/events{/privacy}","received_events_url":"https://api.github.com/users/wanghongzhou/received_events","type":"User","site_admin":false},"labels":[{"id":131319116,"url":"https://api.github.com/repos/tornadoweb/tornado/labels/windows","name":"windows","color":"fbca04","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2018-03-30T03:48:17Z","updated_at":"2018-04-06T17:52:53Z","closed_at":"2018-04-06T17:52:53Z","author_association":"NONE","body":"## Here is the code:\r\nimport math\r\n\r\nimport logging\r\nfrom crontab import CronTab\r\nfrom tornado.ioloop import PeriodicCallback, IOLoop\r\n\r\nlogging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\r\n\r\n\r\nclass CronTabCallback(PeriodicCallback):\r\n\r\n    def __init__(self, callback, schedule):\r\n        self._callback = callback\r\n        self._crontab = CronTab(schedule)\r\n        super(CronTabCallback, self).__init__(self.run, self._calc_callbacktime())\r\n\r\n    def _calc_callbacktime(self, now=None):\r\n        return math.ceil(self._crontab.next(now)) * 1000.0\r\n\r\n    def run(self):\r\n        return self._callback()\r\n\r\n    def _schedule_next(self):\r\n        self.callback_time = self._calc_callbacktime()\r\n        logging.info('calc ---------------------')\r\n        logging.info('delay %s' % self.callback_time)\r\n        logging.info('last execute %s' % self._next_timeout)\r\n\r\n        last = self._next_timeout\r\n        super(CronTabCallback, self)._schedule_next()\r\n\r\n        if last == self._next_timeout:\r\n            logging.error('error !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')\r\n\r\n        logging.info('current: %s' % self.io_loop.time())\r\n        logging.info('calc next: %s' % self._next_timeout)\r\n        logging.info('--------------------------\\n')\r\n\r\n\r\ndef crontab(schedule):\r\n    def decorator(func):\r\n        CronTabCallback(func, schedule).start()\r\n        return func\r\n\r\n    return decorator\r\n\r\n\r\n@crontab('*/1 * * * *')\r\ndef run():\r\n    logging.info('execute ... \\n')\r\n\r\n\r\nif __name__ == '__main__':\r\n    IOLoop.current().start()\r\n\r\n## Here is the console log\r\n2018-03-30 11:33:00,311 - asyncio - DEBUG - Using selector: SelectSelector\r\n2018-03-30 11:33:00,316 - root - INFO - calc ---------------------\r\n2018-03-30 11:33:00,316 - root - INFO - delay 60000.0\r\n2018-03-30 11:33:00,316 - root - INFO - last execute 1522380780.3169544\r\n2018-03-30 11:33:00,316 - root - INFO - current: 1522380780.3169544\r\n2018-03-30 11:33:00,316 - root - INFO - **calc next: 1522380840.3169544**\r\n2018-03-30 11:33:00,316 - root - INFO - --------------------------\r\n\r\n**2018-03-30 11:34:00,313** - root - INFO - execute ... \r\n\r\n2018-03-30 11:34:00,313 - root - INFO - calc ---------------------\r\n2018-03-30 11:34:00,313 - root - INFO - delay 60000.0\r\n2018-03-30 11:34:00,313 - root - INFO - last execute 1522380840.3169544\r\n2018-03-30 11:34:00,313 - root - ERROR - error !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n2018-03-30 11:34:00,313 - root - INFO - current: 1522380840.3139544\r\n2018-03-30 11:34:00,313 - root - INFO - calc next: 1522380840.3169544\r\n2018-03-30 11:34:00,313 - root - INFO - --------------------------\r\n\r\n2018-03-30 11:34:00,318 - root - INFO - execute ... \r\n\r\n2018-03-30 11:34:00,318 - root - INFO - calc ---------------------\r\n2018-03-30 11:34:00,318 - root - INFO - delay 60000.0\r\n2018-03-30 11:34:00,318 - root - INFO - last execute 1522380840.3169544\r\n
8000
2018-03-30 11:34:00,318 - root - INFO - current: 1522380840.3189545\r\n2018-03-30 11:34:00,318 - root - INFO - calc next: 1522380900.3169544\r\n2018-03-30 11:34:00,318 - root - INFO - --------------------------\r\n\r\n## Environment:\r\nOS: windows 7\r\nPython:  python 3.6\r\nDependent library: crontab 0.22.0\r\n\r\nTornado 4.5.1 python2 (ok) python3(ok)\r\nTornado 5.0.1 python2 (ok) python3 (linux ok, window has issue)","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2325","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2325/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2325/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2325/events","html_url":"https://github.com/tornadoweb/tornado/issues/2325","id":308268540,"number":2325,"title":" 'HTTPClient' object has no attribute '_closed'  in tornado5.0","user":{"login":"DreamHackchosenone","id":29697934,"avatar_url":"https://avatars2.githubusercontent.com/u/29697934?v=4","gravatar_id":"","url":"https://api.github.com/users/DreamHackchosenone","html_url":"https://github.com/DreamHackchosenone","followers_url":"https://api.github.com/users/DreamHackchosenone/followers","following_url":"https://api.github.com/users/DreamHackchosenone/following{/other_user}","gists_url":"https://api.github.com/users/DreamHackchosenone/gists{/gist_id}","starred_url":"https://api.github.com/users/DreamHackchosenone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DreamHackchosenone/subscriptions","organizations_url":"https://api.github.com/users/DreamHackchosenone/orgs","repos_url":"https://api.github.com/users/DreamHackchosenone/repos","events_url":"https://api.github.com/users/DreamHackchosenone/events{/privacy}","received_events_url":"https://api.github.com/users/DreamHackchosenone/received_events","type":"User","site_admin":false},"labels":[{"id":114337843,"url":"https://api.github.com/repos/tornadoweb/tornado/labels/httpclient","name":"httpclient","color":"0052cc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-03-24T14:51:19Z","updated_at":"2018-03-25T14:20:13Z","closed_at":"2018-03-25T14:20:13Z","author_association":"NONE","body":"about httpclient.HTTPClient()\r\nI can't execute http_client = httpclient.HTTPClient() in tornado==5.0\r\nrunning this will throw Exception this：\r\nTraceback (most recent call last):\r\nFile \"/Users/zhonghao/anaconda3/envs/tornado_test/lib/python3.6/site-packages/tornado/httpclient.py\", line 85, in del\r\nself.close()\r\nFile \"/Users/zhonghao/anaconda3/envs/tornado_test/lib/python3.6/site-packages/tornado/httpclient.py\", line 89, in close\r\nif not self._closed:\r\nAttributeError: 'HTTPClient' object has no attribute '_closed'\r\n\r\nbut in tornado==4.5.2\r\nit works fine, this issue on macOS，can you tell me why？","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2324","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2324/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2324/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2324/events","html_url":"https://github.com/tornadoweb/tornado/issues/2324","id":308196683,"number":2324,"title":"Create AsyncIOLoop from existing asyncio event loop","user":{"login":"adamrothman","id":662688,"avatar_url":"https://avatars1.githubusercontent.com/u/662688?v=4","gravatar_id":"","url":"https://api.github.com/users/adamrothman","html_url":"https://github.com/adamrothman","followers_url":"https://api.github.com/users/adamrothman/followers","following_url":"https://api.github.com/users/adamrothman/following{/other_user}","gists_url":"https://api.github.com/users/adamrothman/gists{/gist_id}","starred_url":"https://api.github.com/users/adamrothman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adamrothman/subscriptions","organizations_url":"https://api.github.com/users/adamrothman/orgs","repos_url":"https://api.github.com/users/adamrothman/repos","events_url":"https://api.github.com/users/adamrothman/events{/privacy}","received_events_url":"https://api.github.com/users/adamrothman/received_events","type":"User","site_admin":false},"labels":[{"id":131319754,"url":"https://api.github.com/repos/tornadoweb/tornado/labels/testing","name":"testing","color":"0052cc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-03-23T22:29:11Z","updated_at":"2018-03-27T17:27:43Z","closed_at":"2018-03-25T16:34:20Z","author_association":"NONE","body":"Creating a new `AsyncIOLoop` always creates a new underlying asyncio event loop. I think this makes sense in most cases but it would be very helpful (especially for testing, read on) to be able to pass an existing asyncio event loop for Tornado to wrap.\r\n\r\nWe use [pytest](https://docs.pytest.org/en/latest/index.html) with the [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) plugin to run our test suite for several Tornado applications. After upgrading one of these apps to Tornado 5 and improving our test hygiene to use a new event loop for each test, our test suite broke.\r\n\r\nOur unit tests are simple because they don't interact with or depend on `tornado.testing.AsyncTestCase` at all. Our integration tests do (because they make requests against the application), however, and this is where I ran into trouble. When I ran the tests, I would get a ton of errors due to `Task`s getting `Future`s attached to a different loop, like this:\r\n\r\n>RuntimeError: Task <Task pending coro=<test_get_targets() running at /Users/adam/Other/src/pusheen/tests/integration/application_api_test.py:279> cb=[IOLoop.add_future.<locals>.<lambda>() at /Users/adam/Other/src/pusheen/.tox/verbose/lib/python3.6/site-packages/tornado/ioloop.py:721]> got Future <Task pending coro=<AioBaseClient._make_api_call() running at /Users/adam/Other/src/pusheen/.tox/verbose/lib/python3.6/site-packages/aiobotocore/client.py:65>> attached to a different loop\r\n\r\npytest-asyncio creates a new event loop for each async test that it runs (which is a good thing). Previously we were overriding this behavior to always return the \"main\" loop via `asyncio.get_event_loop()` and explicitly _not_ close the loop between tests. This worked under Tornado 4 because we were using `AsyncIOMainLoop`, and Tornado 4 did not close the underlying asyncio event loop in such a configuration. But this override has always felt kind of gross to me, so I resolved to remove it. After all, there's no reason it should be necessary; we are careful to pass the testing event loop to classes that require it so they don't grab the main loop by default. Plus, Tornado 5 _does_ close the underlying loop when closing `AsyncIOMainLoop`.\r\n\r\nBut making this change borked our tests.\r\n\r\nWe have some setup code that is shared between the unit and integration tests. This setup is handled by pytest, so a number of async singletons (e.g. DB connectors) get configured to use the event loop created by pytest-asyncio for each test.\r\n\r\n`tornado.testing.AsyncTestCase` _also_ creates a loop for each test – an `IOLoop` – by calling `get_new_ioloop` as part of `setUp`. This is still a good thing – but turned out to be the cause of my sadness. During the integration tests, our application logic is run by Tornado's loop, but per the above, the async singletons use pytest-asyncio's loop. When async code running on one loop tries to interact with async code on the other, people weep in the streets.\r\n\r\nBeing able to override `AsyncTestCase.get_new_ioloop` goes most of the way towards solving this issue. It's not difficult to expose pytest-asyncio's event loop to this function – the problem is that I can't use this existing asyncio event loop to instantiate the Tornado IOLoop `get_new_ioloop` is expected to return.\r\n\r\nFor now I'm working around this limitation by overriding pytest-asyncio's default behavior to first create an `AsyncIOLoop` and then using the underlying `.asyncio_loop`. This feels wrong, though. pytest shouldn't need to know about what's happening \"downstream\" as long as it implements a compatible test interface like `unittest.TestCase`.\r\n\r\nMine is just one (long-winded, sorry) case but I can imagine there are other situations in which users would want to provide an existing event loop to Tornado. What do you think @bdarnell?","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2323","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2323/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2323/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2323/events","html_url":"https://github.com/tornadoweb/tornado/issues/2323","id":307822408,"number":2323,"title":"AsyncHTTPClient keeps request objects forever when fetching error responses","user":{"login":"fabiant7t","id":81570,"avatar_url":"https://avatars3.githubusercontent.com/u/81570?v=4","gravatar_id":"","url":"https://api.github.com/users/fabiant7t","html_url":"https://github.com/fabiant7t","followers_url":"https://api.github.com/users/fabiant7t/followers","following_url":"https://api.github.com/users/fabiant7t/following{/other_user}","gists_url":"https://api.github.com/users/fabiant7t/gists{/gist_id}","starred_url":"https://api.github.com/users/fabiant7t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fabiant7t/subscriptions","organizations_url":"https://api.github.com/users/fabiant7t/orgs","repos_url":"https://api.github.com/users/fabiant7t/repos","events_url":"https://api.github.com/users/fabiant7t/events{/privacy}","received_events_url":"https://api.github.com/users/fabiant7t/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-22T21:31:53Z","updated_at":"2018-03-24T16:13:37Z","closed_at":"2018-03-22T22:06:52Z","author_association":"NONE","body":"Using Tornado as a proxy, I noticed that its memory usage increases. \r\nAsyncHTTPClient.fetch takes a request object and calls its URL. If the response is successful (2xx) or a redirection (3xx), this request object gets properly deleted/garbage collected.\r\nHowever, if the response is a client (4xx) or server error (5xx), the request is not being deleted and lives forever, eating RAM.\r\n\r\nTo reproduce in Python 3, spin up tornado_test.py and call\r\n1) http://localhost:8888/200\r\n-> You'll see 'Request object deleted' being printed to stdout right away\r\n2) http://localhost:8888/400\r\n-> You don't see 'Request object deleted' being printed to stdout. But you will after exiting the whole program with <Ctrl+C>.\r\n\r\nPython2 shows the same problem (see comment below).\r\n\r\n```\r\n#!/usr/bin/python3\r\nimport weakref                                                                                                                                                                                                                                                                                                                                                                                                                            \r\n                                                                                                                                                                                                                                                                                                                                                                                                                                          \r\nimport tornado.httpclient                                                                                                                                                                                                                                                                                                                                                                                                                 \r\nimport tornado.ioloop                                                                                                                                                                                                                                                                                                                                                                                                                     \r\nimport tornado.gen                                                                                                                                                                                                                                                                                                                                                                                                                        \r\nimport tornado.web                                                                                                                                                                                                                                                                                                                                                                                                                        \r\n                                                                                                                                                                                                                                                                                                                                                                                                                                          \r\n                                                                                                                                                                                                                                                                                                                                                                                                                                          \r\nclass MainHandler(tornado.web.RequestHandler):                                                                                                                                                                                                                                                                                                                                                                                            \r\n                                                                                                                                                                                                                                                                                                                                                                                                                                          \r\n    @tornado.gen.coroutine                                                                                                                                                                                                                                                                                                                                                                                                                \r\n    def get(self, status):                                                                                                                                                                                                                                                                                                                                                                                                                \r\n        request = tornado.httpclient.HTTPRequest(                                                                                                                                                                                                                                                                                                                                                                                         \r\n            url='https://httpstat.us/{}'.format(status)                                                                                                                                                                                                                                                                                                                                                                                   \r\n        )                                                                                                                                                                                                                                                                                                                                                                                                                                 \r\n        weakref.finalize(request, lambda: print('Request object deleted'))                                                                                                                                                                                                                                                                                                                                                                          \r\n                                                                                                                                                                                                                                                                                                                                                                                                                                          \r\n        client = tornado.httpclient.AsyncHTTPClient()                                                                                                                                                                                                                                                                                                                                                                                     \r\n        response = yield client.fetch(request, raise_error=False)                                                                                                                                                                                                                                                                                                                                                                         \r\n        # client.close()                                                                                                                                                                                                                                                                                                                                                                                                                  \r\n        self.set_status(response.code)                                                                                                                                                                                                                                                                                                                                                                                                    \r\n        self.write('Status %d' % response.code)                                                                                                                                                                                                                                                                                                                                                                                           \r\n        self.finish()                                                                                                                                                                                                                                                                                                                                                                                                                     \r\n                                                                                                                                                                                                                                                                                                                                                                                                                                          \r\n                                                                                                                                                                                                                                                                                                                                                                                                                                          \r\ndef make_app():                                                                                                                                                                                                                                                                                                                                                                                                                           \r\n    return tornado.web.Application([                                                                                                                                                                                                                                                                                                                                                                                                      \r\n        (r\"/(?P<status>\\d{3})\", MainHandler),                                                                                                                                                                                                                                                                                                                                                                                               \r\n    ])                                                                                                                                                                                                                                                                                                                                                                                                                                    \r\n                                                                                                                                                                                                                                                                                                                                                                                                                                          \r\n                                                                                                                                                                                                                                                                                                                                                                                                                                          \r\nif __name__ == \"__main__\":                                                                                                                                                                                                                                                                                                                                                                                                                \r\n    app = make_app()                                                                                                                                                                                                                                                                                                                                                                                                                      \r\n    app.listen(8888)                                                                                                                                                                                                                                                                                                                                                                                                                      \r\n    tornado.ioloop.IOLoop.current().start()\r\n```","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2321","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2321/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2321/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2321/events","html_url":"https://github.com/tornadoweb/tornado/issues/2321","id":307651881,"number":2321,"title":"Synchronous HTTPClient leaks memory in 5.0.1","user":{"login":"NicolasLM","id":7612656,"avatar_url":"https://avatars0.githubusercontent.com/u/7612656?v=4","gravatar_id":"","url":"https://api.github.com/users/NicolasLM","html_url":"https://github.com/NicolasLM","followers_url":"https://api.github.com/users/NicolasLM/followers","following_url":"https://api.github.com/users/NicolasLM/following{/other_user}","gists_url":"https://api.github.com/users/NicolasLM/gists{/gist_id}","starred_url":"https://api.github.com/users/NicolasLM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NicolasLM/subscriptions","organizations_url":"https://api.github.com/users/NicolasLM/orgs","repos_url":"https://api.github.com/users/NicolasLM/repos","events_url":"https://api.github.com/users/NicolasLM/events{/privacy}","received_events_url":"https://api.github.com/users/NicolasLM/received_events","type":"User","site_admin":false},"labels":[{"id":114337843,"url":"https://api.github.com/repos/tornadoweb/tornado/labels/httpclient","name":"httpclient","color":"0052cc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-22T13:51:07Z","updated_at":"2018-03-25T16:59:39Z","closed_at":"2018-03-25T16:59:39Z","author_association":"NONE","body":"The synchronous HTTPClient leaks memory for each request made since upgrading to Tornado 5.0.1.\r\n\r\n```python\r\nfrom tornado import httpclient\r\n\r\nwhile True:\r\n    try:\r\n        http_client = httpclient.HTTPClient()\r\n        response = http_client.fetch(\"http://localhost\")\r\n    except Exception:\r\n        pass\r\n    finally:\r\n        http_client.close()\r\n```\r\n\r\nRunning this script for 3 minutes in docker (`python:3.6-stretch`): \r\n- `tornado==4.5.3`: 18.52MiB / 1.952GiB\r\n- `tornado==5.0.1`: 350.28MiB / 1.952GiB\r\n\r\nNote, I cannot seem to reproduce the issue on macOS.","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2320","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2320/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2320/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2320/events","html_url":"https://github.com/tornadoweb/tornado/issues/2320","id":306522613,"number":2320,"title":"strange behavior of AsyncHTTPClient while using streaming mode in tornado 5.x","user":{"login":"serg666","id":10406902,"avatar_url":"https://avatars1.githubusercontent.com/u/10406902?v=4","gravatar_id":"","url":"https://api.github.com/users/serg666","html_url":"https://github.com/serg666","followers_url":"https://api.github.com/users/serg666/followers","following_url":"https://api.github.com/users/serg666/following{/other_user}","gists_url":"https://api.github.com/users/serg666/gists{/gist_id}","starred_url":"https://api.github.com/users/serg666/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/serg666/subscriptions","organizations_url":"https://api.github.com/users/serg666/orgs","repos_url":"https://api.github.com/users/serg666/repos","events_url":"https://api.github.com/users/serg666/events{/privacy}","received_events_url":"https://api.github.com/users/serg666/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-03-19T15:55:10Z","updated_at":"2018-03-22T15:53:36Z","closed_at":"2018-03-21T23:35:51Z","author_association":"NONE","body":"Hi! \r\n\r\nI have the following (tornado==4.5.3):\r\n```python\r\nimport logging\r\nimport asyncio\r\nimport tornado.httpclient\r\n\r\nimport tornado.platform.asyncio\r\n\r\n\r\nFORMAT='%(asctime)s,%(msecs)03d %(name)s [%(threadName)s] %(levelname)s: %(message)s'\r\nlog = logging.getLogger(__name__)\r\nlogging.basicConfig(format=FORMAT, datefmt='%Y-%m-%d %H:%M:%S%Z',\r\n                    level = logging.DEBUG)\r\n\r\nclass Download(object):\r\n    def streaming_callback(self, data):\r\n        log.debug('get chunk')\r\n\r\n    def async_callback(self, response):\r\n        log.debug('final response: {}'.format(response))\r\n\r\n    async def run(self):\r\n        await tornado.platform.asyncio.to_asyncio_future(\r\n            tornado.httpclient.AsyncHTTPClient().fetch(\r\n                tornado.httpclient.HTTPRequest('https://ya.ru/', streaming_callback=self.streaming_callback),\r\n                self.async_callback\r\n            )\r\n        )\r\n        log.debug('fetch done')\r\n\r\n\r\ntornado.platform.asyncio.AsyncIOMainLoop().install()\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(Download().run())\r\nlog.debug('Exit')\r\n```\r\n\r\nIf I run the code above under tornado==4.5.3, I see something like this:\r\n\r\n```\r\n2018-03-19 18:38:58MSK,807 asyncio [MainThread] DEBUG: Using selector: EpollSelector\r\n2018-03-19 18:38:58MSK,953 __main__ [MainThread] DEBUG: get chunk\r\n2018-03-19 18:38:58MSK,954 __main__ [MainThread] DEBUG: get chunk\r\n2018-03-19 18:38:58MSK,956 __main__ [MainThread] DEBUG: final response: HTTPResponse(_body=None,buffer=<_io.BytesIO object at 0x7f6258e49308>,code=200,effective_url='https://ya.ru/',error=None,headers=<tornado.httputil.HTTPHeaders object at 0x7f625941ad30>,reason='Ok',request=<tornado.httpclient.HTTPRequest object at 0x7f62593bfc88>,request_time=0.13659238815307617,time_info={})\r\n2018-03-19 18:38:58MSK,957 __main__ [MainThread] DEBUG: fetch done\r\n2018-03-19 18:38:58MSK,957 __main__ [MainThread] DEBUG: Exit\r\n```\r\n\r\ne.g. we have called `async_callback` inside `async def run` and before  `log.debug('fetch done')`\r\n\r\n\r\nDue to current documentation AsyncHTTPClient.fetch return asyncio future, so we do not need to use tornado.platform.asyncio directly.\r\n\r\n\r\nSo, I modify code like this:\r\n```python\r\nimport logging\r\nimport asyncio\r\nimport tornado.httpclient\r\n\r\n\r\nFORMAT='%(asctime)s,%(msecs)03d %(name)s [%(threadName)s] %(levelname)s: %(message)s'\r\nlog = logging.getLogger(__name__)\r\nlogging.basicConfig(format=FORMAT, datefmt='%Y-%m-%d %H:%M:%S%Z',\r\n                    level = logging.DEBUG)\r\
216c
n\r\nclass Download(object):\r\n    def streaming_callback(self, data):\r\n        log.debug('get chunk')\r\n\r\n    def async_callback(self, response):\r\n        log.debug('final response: {}'.format(response))\r\n\r\n    async def run(self):\r\n        await tornado.httpclient.AsyncHTTPClient().fetch(\r\n            tornado.httpclient.HTTPRequest('https://ya.ru/', streaming_callback=self.streaming_callback),\r\n            self.async_callback\r\n        )\r\n        log.debug('fetch done')\r\n\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(Download().run())\r\nlog.debug('Exit')\r\n```\r\n\r\nAnd when I run the code above, I see something like this:\r\n```\r\n2018-03-19 18:48:32MSK,943 asyncio [MainThread] DEBUG: Using selector: EpollSelector\r\n2018-03-19 18:48:33MSK,081 __main__ [MainThread] DEBUG: get chunk\r\n2018-03-19 18:48:33MSK,082 __main__ [MainThread] DEBUG: get chunk\r\n2018-03-19 18:48:33MSK,083 __main__ [MainThread] DEBUG: fetch done\r\n2018-03-19 18:48:33MSK,084 __main__ [MainThread] DEBUG: final response: HTTPResponse(_body=None,buffer=<_io.BytesIO object at 0x7f4d23d545c8>,code=200,effective_url='https://ya.ru/',error=None,headers=<tornado.httputil.HTTPHeaders object at 0x7f4d23d6c400>,reason='Ok',request=<tornado.httpclient.HTTPRequest object at 0x7f4d23d8aa90>,request_time=0.12746953964233398,time_info={})\r\n2018-03-19 18:48:33MSK,085 __main__ [MainThread] DEBUG: Exit\r\n```\r\n\r\nThe problem is, that `async_callback` has not called inside `async def run` before `log.debug('fetch done')`, like under tornado 4.5.3\r\n\r\nSo, how can I get response inside `async def run` and before `log.debug('fetch done')`?","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2314","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2314/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2314/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2314/events","html_url":"https://github.com/tornadoweb/tornado/issues/2314","id":306170036,"number":2314,"title":"Mistake in official user guide?","user":{"login":"nicolinux","id":1069286,"avatar_url":"https://avatars2.githubusercontent.com/u/1069286?v=4","gravatar_id":"","url":"https://api.github.com/users/nicolinux","html_url":"https://github.com/nicolinux","followers_url":"https://api.github.com/users/nicolinux/followers","following_url":"https://api.github.com/users/nicolinux/following{/other_user}","gists_url":"https://api.github.com/users/nicolinux/gists{/gist_id}","starred_url":"https://api.github.com/users/nicolinux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicolinux/subscriptions","organizations_url":"https://api.github.com/users/nicolinux/orgs","repos_url":"https://api.github.com/users/nicolinux/repos","events_url":"https://api.github.com/users/nicolinux/events{/privacy}","received_events_url":"https://api.github.com/users/nicolinux/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-17T16:32:26Z","updated_at":"2018-03-17T18:45:20Z","closed_at":"2018-03-17T18:45:20Z","author_association":"NONE","body":"Looking at the official [guide/async](http://www.tornadoweb.org/en/stable/guide/async.html), the async example shows the method: \r\n`def asynchronous_fetch(url, callback):`\r\n\r\nI wonder if the argument `callback` is correct since this would imply that calling the method would need to provide that callback.\r\nI am just starting out with Tornado so I admit that I have no clue about it, but looking at another example on StackOverflow which uses that same example, it makes way more sense to me for the async method to have this signature: \r\n`def asynchronous_fetch(url):`\r\n[StackOverflow example](https://stackoverflow.com/questions/31079717/synchronous-v-s-asynchronous)\r\n\r\nIf it is a small mistake, I'd suggest to fix it soon since this trips newbs big time when they try to wrap their head around the async concept in Tornado (speaking from experience :) )","score":1.0},{"url":"https://api.github.com/repos/tornadoweb/tornado/issues/2313","repository_url":"https://api.github.com/repos/tornadoweb/tornado","labels_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2313/labels{/name}","comments_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2313/comments","events_url":"https://api.github.com/repos/tornadoweb/tornado/issues/2313/events","html_url":"https://github.com/tornadoweb/tornado/issues/2313","id":305817226,"number":2313,"title":"AsyncHTTPTestCase block, and raise \"Async operation timed out after 5 seconds\"","user":{"login":"ityoung","id":12296804,"avatar_url":"https://avatars0.githubusercontent.com/u/12296804?v=4","gravatar_id":"","url":"https://api.github.com/users/ityoung","html_url":"https://github.com/ityoung","followers_url":"https://api.github.com/users/ityoung/followers","following_url":"https://api.github.com/users/ityoung/following{/other_user}","gists_url":"https://api.github.com/users/ityoung/gists{/gist_id}","starred_url":"https://api.github.com/users/ityoung/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ityoung/subscriptions","organizations_url":"https://api.github.com/users/ityoung/orgs","repos_url":"https://api.github.com/users/ityoung/repos","events_url":"https://api.github.com/users/ityoung/events{/privacy}","received_events_url":"https://api.github.com/users/ityoung/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-16T06:36:45Z","updated_at":"2018-03-16T08:02:59Z","closed_at":"2018-03-16T08:01:59Z","author_association":"NONE","body":"Hello, I met an error \"Async operation timed out after 5 seconds\", and I did find some question in issue, but didn'd solve my problem.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.5/unittest/case.py\", line 59, in testPartExecutor\r\n    yield\r\n  File \"/usr/lib/python3.5/unittest/case.py\", line 605, in run\r\n    testMethod()\r\n  File \"/usr/local/lib/python3.5/dist-packages/tornado/testing.py\", line 136, in __call__\r\n    result = self.orig_method(*args, **kwargs)\r\n  File \"/home/yangxin/Geetest/server/gt-message/test/test_pre_gateway.py\", line 95, in test_post\r\n    res = self.fetch('/pre_gateway', method='POST', body=json.dumps(opsalt_origin))\r\n  File \"/usr/local/lib/python3.5/dist-packages/tornado/testing.py\", line 406, in fetch\r\n    return self.wait()\r\n  File \"/usr/local/lib/python3.5/dist-packages/tornado/testing.py\", line 336, in wait\r\n    self.__rethrow()\r\n  File \"/usr/local/lib/python3.5/dist-packages/tornado/testing.py\", line 272, in __rethrow\r\n    raise_exc_info(failure)\r\n  File \"<string>\", line 4, in raise_exc_info\r\n  File \"/usr/local/lib/python3.5/dist-packages/tornado/testing.py\", line 320, in timeout_func\r\n    timeout)\r\nAssertionError: Async operation timed out after 5 seconds\r\n```\r\n\r\nthats my code below:\r\n\r\n```\r\nfrom tornado.testing import AsyncHTTPTestCase\r\nfrom tornado.web import Application\r\n\r\nfrom index import init_redis\r\nfrom handler.find import FindHandler\r\n\r\nimport unittest\r\nimport json\r\n\r\nimport asyncio\r\n\r\nopsalt_origin = {\r\n    'dns': 'unknown'\r\n}\r\n\r\n\r\nclass TestPreGateway(AsyncHTTPTestCase):\r\n\r\n    def setUp(self):\r\n        super(TestPreGateway, self).setUp()\r\n\r\n    def get_app(self):\r\n        return Application([('/find', FindHandler)])\r\n\r\n    def test_post(self):\r\n        asyncio.get_event_loop().run_until_complete(init_redis())\r\n        res = self.fetch('/find', method='POST', body=json.dumps(opsalt_origin))\r\n        print(res.body)\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n\r\n```\r\n\r\nbecause my `index.py` is something like this, so I just move the initial func to my test code:\r\n\r\n```\r\ndef initialize_utils():\r\n    asyncio.get_event_loop().run_until_complete(init_redis())\r\n\r\nif __name__ == \"__main__\":\r\n    ...\r\n    initialize_utils()\r\n    ...\r\n```\r\n\r\nI'm really confuse that if I want to test a handler which need to connect to redis, I did need to initialize my redis right? Then how to init an async redis setting before I fetch the path?","score":1.0}]}
0

