HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sun, 13 May 2018 13:07:07 GMT
Link: <https://api.github.com/search/issues?q=repo%3Airon%2Firon+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Airon%2Firon+type%3Aissue+state%3Aclosed&page=6>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CFE7:4F3F:1A948D8:3F678ED:5AF8387A
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 8
X-Ratelimit-Reset: 1526216865
X-Runtime-Rack: 0.613470
X-Xss-Protection: 1; mode=block

8000
{"total_count":179,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/iron/iron/issues/577","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/577/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/577/comments","events_url":"https://api.github.com/repos/iron/iron/issues/577/events","html_url":"https://github.com/iron/iron/issues/577","id":300074208,"number":577,"title":"how do I enable CORS ?","user":{"login":"dataf3l","id":3528304,"avatar_url":"https://avatars0.githubusercontent.com/u/3528304?v=4","gravatar_id":"","url":"https://api.github.com/users/dataf3l","html_url":"https://github.com/dataf3l","followers_url":"https://api.github.com/users/dataf3l/followers","following_url":"https://api.github.com/users/dataf3l/following{/other_user}","gists_url":"https://api.github.com/users/dataf3l/gists{/gist_id}","starred_url":"https://api.github.com/users/dataf3l/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dataf3l/subscriptions","organizations_url":"https://api.github.com/users/dataf3l/orgs","repos_url":"https://api.github.com/users/dataf3l/repos","events_url":"https://api.github.com/users/dataf3l/events{/privacy}","received_events_url":"https://api.github.com/users/dataf3l/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-02-25T23:50:17Z","updated_at":"2018-02-27T13:29:53Z","closed_at":"2018-02-26T18:10:45Z","author_association":"NONE","body":"Also, once answered, can you list yourselves here, so newbies like myself can easily solve this?\r\n\r\nhttps://github.com/monsur/enable-cors.org/issues/135","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/574","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/574/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/574/comments","events_url":"https://api.github.com/repos/iron/iron/issues/574/events","html_url":"https://github.com/iron/iron/issues/574","id":290226433,"number":574,"title":"BREW method","user":{"login":"Proximyst","id":19861299,"avatar_url":"https://avatars2.githubusercontent.com/u/19861299?v=4","gravatar_id":"","url":"https://api.github.com/users/Proximyst","html_url":"https://github.com/Proximyst","followers_url":"https://api.github.com/users/Proximyst/followers","following_url":"https://api.github.com/users/Proximyst/following{/other_user}","gists_url":"https://api.github.com/users/Proximyst/gists{/gist_id}","starred_url":"https://api.github.com/users/Proximyst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Proximyst/subscriptions","organizations_url":"https://api.github.com/users/Proximyst/orgs","repos_url":"https://api.github.com/users/Proximyst/repos","events_url":"https://api.github.com/users/Proximyst/events{/privacy}","received_events_url":"https://api.github.com/users/Proximyst/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-01-20T21:52:56Z","updated_at":"2018-01-21T12:46:16Z","closed_at":"2018-01-21T12:46:16Z","author_association":"NONE","body":"Under `::iron::method`, one does not find the method `BREW`, specified by [RFC7168ยง2.1](https://tools.ietf.org/html/rfc7168#section-2.1). As this RFC is approved and published for international use, Iron should also follow it.","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/572","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/572/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/572/comments","events_url":"https://api.github.com/repos/iron/iron/issues/572/events","html_url":"https://github.com/iron/iron/issues/572","id":282586732,"number":572,"title":"How can Build Source?!","user":{"login":"questionpython","id":25328620,"avatar_url":"https://avatars0.githubusercontent.com/u/25328620?v=4","gravatar_id":"","url":"https://api.github.com/users/questionpython","html_url":"https://github.com/questionpython","followers_url":"https://api.github.com/users/questionpython/followers","following_url":"https://api.github.com/users/questionpython/following{/other_user}","gists_url":"https://api.github.com/users/questionpython/gists{/gist_id}","starred_url":"https://api.github.com/users/questionpython/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/questionpython/subscriptions","organizations_url":"https://api.github.com/users/questionpython/orgs","repos_url":"https://api.github.com/users/questionpython/repos","events_url":"https://api.github.com/users/questionpython/events{/privacy}","received_events_url":"https://api.github.com/users/questionpython/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-12-16T01:01:58Z","updated_at":"2018-01-21T12:46:28Z","closed_at":"2018-01-21T12:46:28Z","author_association":"NONE","body":"HI.\r\nHow can Build Source to a binary file for use?!\r\n\r\nUsing `$ rustc` ?\r\nUsing `$ catgo build` ?\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/562","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/562/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/562/comments","events_url":"https://api.github.com/repos/iron/iron/issues/562/events","html_url":"https://github.com/iron/iron/issues/562","id":264816944,"number":562,"title":"refuse connection when testing with Apache Benchmark","user":{"login":"xcstream","id":895339,"avatar_url":"https://avatars2.githubusercontent.com/u/895339?v=4","gravatar_id":"","url":"https://api.github.com/users/xcstream","html_url":"https://github.com/xcstream","followers_url":"https://api.github.com/users/xcstream/followers","following_url":"https://api.github.com/users/xcstream/following{/other_user}","gists_url":"https://api.github.com/users/xcstream/gists{/gist_id}","starred_url":"https://api.github.com/users/xcstream/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xcstream/subscriptions","organizations_url":"https://api.github.com/users/xcstream/orgs","repos_url":"https://api.github.com/users/xcstream/repos","events_url":"https://api.github.com/users/xcstream/events{/privacy}","received_events_url":"https://api.github.com/users/xcstream/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-10-12T05:19:27Z","updated_at":"2017-10-12T06:05:34Z","closed_at":"2017-10-12T06:05:34Z","author_association":"NONE","body":"code: ironframework.io's example\r\ntarget: release\r\nos:macOS 10.12.6\r\n\r\nab -c 100 -n 50000 http://localhost:3000/\r\nThis is ApacheBench, Version 2.3 <$Revision: 1757674 $>\r\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\r\nLicensed to The Apache Software Foundation, http://www.apache.org/\r\n\r\nBenchmarking localhost (be patient)\r\nCompleted 5000 requests\r\nCompleted 10000 requests\r\nCompleted 15000 requests\r\napr_socket_recv: Connection refused (61)\r\nTotal of 16176 requests completed\r\n\r\nab -c 100 -n 50000 http://localhost:3000/\r\nThis is ApacheBench, Version 2.3 <$Revision: 1757674 $>\r\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\r\nLicensed to The Apache Software Foundation, http://www.apache.org/\r\n\r\nBenchmarking localhost (be patient)\r\nCompleted 5000 requests\r\nCompleted 10000 requests\r\nCompleted 15000 requests\r\napr_socket_recv: Operation timed out (60)\r\nTotal of 16661 requests completed\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/557","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/557/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/557/comments","events_url":"https://api.github.com/repos/iron/iron/issues/557/events","html_url":"https://github.com/iron/iron/issues/557","id":249882924,"number":557,"title":"Reading `req.body` has huge performance lack","user":{"login":"daniel-Q6wUOI","id":30154375,"avatar_url":"https://avatars2.githubusercontent.com/u/30154375?v=4","gravatar_id":"","url":"https://api.github.com/users/daniel-Q6wUOI","html_url":"https://github.com/daniel-Q6wUOI","followers_url":"https://api.github.com/users/daniel-Q6wUOI/followers","following_url":"https://api.github.com/users/daniel-Q6wUOI/following{/other_user}","gists_url":"https://api.github.com/users/daniel-Q6wUOI/gists{/gist_id}","starred_url":"https://api.github.com/users/daniel-Q6wUOI/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daniel-Q6wUOI/subscriptions","organizations_url":"https://api.github.com/users/daniel-Q6wUOI/orgs","repos_url":"https://api.github.com/users/daniel-Q6wUOI/repos","events_url":"https://api.github.com/users/daniel-Q6wUOI/events{/privacy}","received_events_url":"https://api.github.com/users/daniel-Q6wUOI/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-08-13T16:15:46Z","updated_at":"2017-09-20T06:50:54Z","closed_at":"2017-09-20T06:44:45Z","author_association":"NONE","body":"So, I am currently coding with **iron** (the web framework), since it is web stuff I want to read the users request body. And that's where I ran into damn big issues.\r\n\r\nWether I use `io::Read` or `io::BufReader`, wether I use `.read()`, `.read_to_end()` or `.read_to_string()`, my benchmark went from ~290k (without read) down to ~112 requests per second.\r\n\r\nExample code:\r\n```rust\r\nfn hello(req: &mut Request) -> IronResult<Response> {\r\n    let mut body = String::new();\r\n    let mut bytes = Vec::new();\r\n    let mut lbytes = vec![0;100];\r\n\r\n    // NOTICE: I checked, those reads are successful and return the correct value.\r\n    req.body.read_to_end(&mut bytes).unwrap();\r\n    // Or\r\n    req.body.read(&mut lbytes).unwrap();\r\n    // Or\r\n    req.body.read_to_string(&mut body).unwrap();\r\n\r\n    Ok(Response::with((status::Ok, \"Hello World!\")))\r\n}\r\n```\r\n\r\n**Does anyone have a workaround for the same issues? Is there maybe a duplicate question I didn't found? Is this issue known?**","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/553","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/553/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/553/comments","events_url":"https://api.github.com/repos/iron/iron/issues/553/events","html_url":"https://github.com/iron/iron/issues/553","id":241019744,"number":553,"title":"Read from WriteBody","user":{"login":"selaux","id":848854,"avatar_url":"https://avatars2.githubusercontent.com/u/848854?v=4","gravatar_id":"","url":"https://api.github.com/users/selaux","html_url":"https://github.com/selaux","followers_url":"https://api.github.com/users/selaux/followers","following_url":"https://api.github.com/users/selaux/following{/other_user}","gists_url":"https://api.github.com/users/selaux/gists{/gist_id}","starred_url":"https://api.github.com/users/selaux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/selaux/subscriptions","organizations_url":"https://api.github.com/users/selaux/orgs","repos_url":"https://api.github.com/users/selaux/repos","events_url":"https://api.github.com/users/selaux/events{/privacy}","received_events_url":"https://api.github.com/users/selaux/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-07-06T16:48:44Z","updated_at":"2017-07-07T07:27:52Z","closed_at":"2017-07-07T07:27:38Z","author_association":"NONE","body":"Hi. I'm currently implementing a compression middleware for iron: https://github.com/selaux/iron-pack\r\n\r\nIn order to do this I am reading from `res.body` in a `AfterMiddleware` and compressing the result using a `Modifier`. Unfortunately `WriteBody` does not implement `Read`, so the only way is to write the whole body somewhere first, which I would like to avoid. Is there any way that `Read` could be implemented for `WriteBody`? I tried already, but I dont know how to approach this correctly. Would this be valid for a PR? And if so, could you point me into a direction on how to start with this ๐ ?","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/551","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/551/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/551/comments","events_url":"https://api.github.com/repos/iron/iron/issues/551/events","html_url":"https://github.com/iron/iron/issues/551","id":238030070,"number":551,"title":"Release 0.6.0 with changes on master","user":{"login":"robinst","id":16778,"avatar_url":"https://avatars1.githubusercontent.com/u/16778?v=4","gravatar_id":"","url":"https://api.github.com/users/robinst","html_url":"https://github.com/robinst","followers_url":"https://api.github.com/users/robinst/followers","following_url":"https://api.github.com/users/robinst/following{/other_user}","gists_url":"https://api.github.com/users/robinst/gists{/gist_id}","starred_url":"https://api.github.com/users/robinst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robinst/subscriptions","organizations_url":"https://api.github.com/users/robinst/orgs","repos_url":"https://api.github.com/users/robinst/repos","events_url":"https://api.github.com/users/robinst/events{/privacy}","received_events_url":"https://api.github.com/users/robinst/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2017-06-23T03:19:18Z","updated_at":"2017-12-14T23:46:03Z","closed_at":"2017-12-14T23:46:03Z","author_association":"CONTRIBUTOR","body":"(From the comments here: https://github.com/iron/iron/pull/544#issuecomment-303621983)\r\n\r\nIt would be cool to get a 0.6.0 release with the changes in master since 0.5.1 (from January): https://github.com/iron/iron/compare/0.5.1...master\r\n\r\nThe following would be worth releasing:\r\n\r\n* Dependency cleanups: https://github.com/iron/iron/compare/0.5.1...master#diff-80398c5faae3c069e4e6aa2ed11b28c0\r\n* API change to use `std::error::Error`: https://github.com/iron/iron/compare/0.5.1...master#diff-9a269209bed069ffb36d5565a91c9840\r\n* Documentation improvements\r\n\r\n(It would be before hyper 0.11, as changing Iron to be based on async hyper will probably take a while.)\r\n\r\n**Update:** iron 0.6.0 has been released. Now the iron dependency needs to be bumped to \"0.6\" in all the other iron crates (and released):\r\n\r\n- [x] [router](https://github.com/iron/router): https://github.com/iron/router/pull/141\r\n- [x] [mount](https://github.com/iron/mount): https://github.com/iron/mount/pull/95\r\n- [x] [persistent](https://github.com/iron/persistent): https://github.com/iron/persistent/pull/64 / https://github.com/iron/persistent/pull/65\r\n- [x] [bodyparser](https://github.com/iron/body-parser) (depends on persistent): https://github.com/iron/body-parser/pull/79\r\n- [x] [urlencoded](https://github.com/iron/urlencoded) (depends on bodyparser): https://github.com/iron/urlencoded/pull/72\r\n- [x] [params](https://github.com/iron/params) (depends on bodyparser and urlencoded) https://github.com/iron/params/pull/39\r\n- [x] [iron-test](https://github.com/iron/iron-test) (depends on router, urlencoded) https://github.com/iron/iron-test/pull/47\r\n- [x] [staticfile](https://github.com/iron/staticfile) (depends on mount, iron-test) https://github.com/iron/staticfile/pull/100\r\n- [x] [logger](https://github.com/iron/logger)\r\n\r\n\r\nWhile we're at it, we should bump other dependencies as well if needed.","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/548","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/548/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/548/comments","events_url":"https://api.github.com/repos/iron/iron/issues/548/events","html_url":"https://github.com/iron/iron/issues/548","id":233128254,"number":548,"title":"How can I write a streaming compression(deflate, gzip) Middleware","user":{"login":"TheWaWaR","id":1160419,"avatar_url":"https://avatars0.githubusercontent.com/u/1160419?v=4","gravatar_id":"","url":"https://api.github.com/users/TheWaWaR","html_url":"https://github.com/TheWaWaR","followers_url":"https://api.github.com/users/TheWaWaR/followers","following_url":"https://api.github.com/users/TheWaWaR/following{/other_user}","gists_url":"https://api.github.com/users/TheWaWaR/gists{/gist_id}","starred_url":"https://api.github.com/users/TheWaWaR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TheWaWaR/subscriptions","organizations_url":"https://api.github.com/users/TheWaWaR/orgs","repos_url":"https://api.github.com/users/TheWaWaR/repos","events_url":"https://api.github.com/users/TheWaWaR/events{/privacy}","received_events_url":"https://api.github.com/users/TheWaWaR/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-06-02T09:35:16Z","updated_at":"2017-06-03T03:02:59Z","closed_at":"2017-06-03T03:02:59Z","author_association":"NONE","body":"### What `Response.body` looks like\r\n``` rust\r\n/// The response representation given to `Middleware`\r\npub struct Response {\r\n    // ... other fields\r\n    /// The body of the response.\r\n    pub body: Option<Box<WriteBody>>\r\n}\r\n```\r\n\r\n### What `WriteBody` looks like\r\n``` rust\r\n/// A trait which writes the body of an HTTP response.\r\npub trait WriteBody: Send {\r\n    /// Writes the body to the provided `Write`.\r\n    fn write_body(&mut self, res: &mut Write) -> io::Result<()>;\r\n}\r\n```\r\n\r\nAs you can see, `WriteBody` has only one method `write_body` to write itself to a given `Write` (which is hyper::server::Response<Streaming>). Once `write_body` is called, it write its entire data to the `Write`, which is not flexible.\r\n\r\nSo, in a `AfterMiddleware` how can I consume `Request.body` and Encode it with deflate/gzip then set it back to the same `Response`, streaming like? Means that we do not need to read all data from origin body then compress it.\r\n\r\nI can not see how to do this.\r\n\r\nI think if `Request.body` is a `io::Read` would be great! ","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/547","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/547/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/547/comments","events_url":"https://api.github.com/repos/iron/iron/issues/547/events","html_url":"https://github.com/iron/iron/issues/547","id":232791404,"number":547,"title":"-password instead of --password in https example","user":{"login":"memoryleak47","id":5725430,"avatar_url":"https://avatars3.githubusercontent.com/u/5725430?v=4","gravatar_id":"","url":"https://api.github.com/users/memoryleak47","html_url":"https://github.com/memoryleak47","followers_url":"https://api.github.com/users/memoryleak47/followers","following_url":"https://api.github.com/users/memoryleak47/following{/other_user}","gists_url":"https://api.github.com/users/memoryleak47/gists{/gist_id}","starred_url":"https://api.github.com/users/memoryleak47/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/memoryleak47/subscriptions","organizations_url":"https://api.github.com/users/memoryleak47/orgs","repos_url":"https://api.github.com/users/memoryleak47/repos","events_url":"https://api.github.com/users/memoryleak47/events{/privacy}","received_events_url":"https://api.github.com/users/memoryleak47/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-06-01T07:40:57Z","updated_at":"2017-07-04T13:53:46Z","closed_at":"2017-07-04T13:53:46Z","author_association":"NONE","body":"In examples/https.rs on line 11\r\nCurrent:\r\n`openssl pkcs12 -export -out identity.p12 -inkey localhost.key -in localhost.crt --password mypass`\r\n\r\nbut probabbly you ment:\r\n`openssl pkcs12 -export -out identity.p12 -inkey localhost.key -in localhost.crt -password mypass`","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/536","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/536/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/536/comments","events_url":"https://api.github.com/repos/iron/iron/issues/536/events","html_url":"https://github.com/iron/iron/issues/536","id":221914975,"number":536,"title":"Why are cookie and seesion in the graveyard? Recomended way to deal with cookies?","user":{"login":"dorfsmay","id":3446051,"avatar_url":"https://avatars0.githubusercontent.com/u/3446051?v=4","gravatar_id":"","url":"https://api.github.com/users/dorfsmay","html_url":"https://github.com/dorfsmay","followers_url":"https://api.github.com/users/dorfsmay/followers","following_url":"https://api.github.com/users/dorfsmay/following{/other_user}","gists_url":"https://api.github.com/users/dorfsmay/gists{/gist_id}","starred_url":"https://api.github.com/users/dorfsmay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dorfsmay/subscriptions","organizations_url":"https://api.github.com/users/dorfsmay/orgs","repos_url":"https://api.github.com/users/dorfsmay/repos","events_url":"https://api.github.com/users/dorfsmay/events{/privacy}","received_events_url":"https://api.github.com/users/dorfsmay/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2017-04-15T00:30:15Z","updated_at":"2017-04-15T15:48:50Z","closed_at":"2017-04-15T09:16:42Z","author_association":"CONTRIBUTOR","body":"Both the cookie and session plugin are in an org called \"iron-graveyard\", self-described as \"A holding site for old, deprecated iron packages.\".\r\n\r\n- The README.md in iron/iron links to iron/session and iron/cookie, but there's then a redirection to iron-graveyard. Is that ok? It is confusing, it looks as though those are current official plugins, but then show plugins that are said to be \"deprecated\". Should this be changed?\r\n\r\n- What is the recomended way to deal with cookies in the current version of iron?\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/534","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/534/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/534/comments","events_url":"https://api.github.com/repos/iron/iron/issues/534/events","html_url":"https://github.com/iron/iron/issues/534","id":221620545,"number":534,"title":"987k non 2xx responses","user":{"login":"Eilie","id":1063786,"avatar_url":"https://avatars1.githubusercontent.com/u/1063786?v=4","gravatar_id":"","url":"https://api.github.com/users/Eilie","html_url":"https://github.com/Eilie","followers_url":"https://api.github.com/users/Eilie/followers","following_url":"https://api.github.com/users/Eilie/following{/other_user}","gists_url":"https://api.github.com/users/Eilie/gists{/gist_id}","starred_url":"https://api.github.com/users/Eilie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Eilie/subscriptions","organizations_url":"https://api.github.com/users/Eilie/orgs","repos_url":"https://api.github.com/users/Eilie/repos","events_url":"https://api.github.com/users/Eilie/events{/privacy}","received_events_url":"https://api.github.com/users/Eilie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2017-04-13T16:44:45Z","updated_at":"2017-04-13T18:14:39Z","closed_at":"2017-04-13T18:11:14Z","author_association":"NONE","body":"Hello,\r\n\r\nTried to benchmark Iron with wrk and got following output:\r\n```\r\n ~ wrk --latency -t12 -c100 -d10s http://localhost:3000/name/foo\r\nRunning 10s test @ http://localhost:3000/name/foo\r\n  12 threads and 100 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   355.61us  798.10us  46.90ms   98.89%\r\n    Req/Sec    24.58k     4.16k   47.21k    86.14%\r\n  Latency Distribution\r\n     50%  281.00us\r\n     75%  414.00us\r\n     90%  571.00us\r\n     99%    1.20ms\r\n  987825 requests in 10.09s, 77.25MB read\r\n  Non-2xx or 3xx responses: 987825\r\nRequests/sec:  97895.62\r\nTransfer/sec:      7.66MB\r\n```\r\nWhat does following line mean?\r\n```\r\nNon-2xx or 3xx responses: 987825\r\n```","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/529","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/529/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/529/comments","events_url":"https://api.github.com/repos/iron/iron/issues/529/events","html_url":"https://github.com/iron/iron/issues/529","id":220439837,"number":529,"title":"http://ironframework.io has outdated dependency version","user":{"login":"Thomspoon","id":7809144,"avatar_url":"https://avatars1.githubusercontent.com/u/7809144?v=4","gravatar_id":"","url":"https://api.github.com/users/Thomspoon","html_url":"https://github.com/Thomspoon","followers_url":"https://api.github.com/users/Thomspoon/followers","following_url":"https://api.github.com/users/Thomspoon/following{/other_user}","gists_url":"https://api.github.com/users/Thomspoon/gists{/gist_id}","starred_url":"https://api.github.com/users/Thomspoon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Thomspoon/subscriptions","organizations_url":"https://api.github.com/users/Thomspoon/orgs","repos_url":"https://api.github.com/users/Thomspoon/repos","events_url":"https://api.github.com/users/Thomspoon/events{/privacy}","received_events_url":"https://api.github.com/users/Thomspoon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-04-09T01:32:09Z","updated_at":"2017-04-14T14:20:49Z","closed_at":"2017-04-14T14:20:49Z","author_association":"NONE","body":"Router, and a few other MiddleWares are \"broken\" if starting development from http://ironframework.io due to the fact that it tells you to import 0.4.1 instead of its current version 0.5.1.","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/525","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/525/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/525/comments","events_url":"https://api.github.com/repos/iron/iron/issues/525/events","html_url":"https://github.com/iron/iron/issues/525","id":211971472,"number":525,"title":"[Question] Request stub in test consuming Iron crate","user":{"login":"xliiv","id":298994,"avatar_url":"https://avatars3.githubusercontent.com/u/298994?v=4","gravatar_id":"","url":"https://api.github.com/users/xliiv","html_url":"https://github.com/xliiv","followers_url":"https://api.github.com/users/xliiv/followers","following_url":"https://api.github.com/users/xliiv/following{/other_user}","gists_url":"https://api.github.com/users/xliiv/gists{/gist_id}","starred_url":"https://api.github.com/users/xliiv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xliiv/subscriptions","organizations_url":"https://api.github.com/users/xliiv/orgs","repos_url":"https://api.github.com/users/xliiv/repos","events_url":"https://api.github.com/users/xliiv/events{/privacy}","received_events_url":"https://api.github.com/users/xliiv/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-03-05T18:19:27Z","updated_at":"2017-03-11T22:30:16Z","closed_at":"2017-03-11T22:30:16Z","author_association":"NONE","body":"I'd like to use `Request::stub` this:\r\nhttps://github.com/iron/iron/blob/a7c2ed64e6200ba96c1dd77f0eddf527bf0d51a3/src/request/mod.rs#L133\r\nin one of my tests in my binary (which consumes `iron` crate).\r\nI was told that it's impossible (because after compilation it's thrown away).\r\nOk.\r\n\r\nThen i went with this bare creation, like here:\r\nhttps://github.com/iron/iron/blob/a7c2ed64e6200ba96c1dd77f0eddf527bf0d51a3/src/request/mod.rs#L135\r\nThis cause a problem with `_p`. I was told that is made by intention to force to use `new`.\r\nFair enough..\r\nSo I decided to use `from_http` (https://docs.rs/iron/0.5.1/iron/request/struct.Request.html), like this\r\n```\r\n    fn request_stub<'a, 'b>() -> Request<'a, 'b> {\r\n        let req = HttpRequest {\r\n            remote_addr: \"localhost:3000\".to_socket_addrs().unwrap().next().unwrap(),\r\n            method: iron::method::Method::Get,\r\n            headers: Headers::new(),\r\n            uri: RequestUri::AbsoluteUri(Url::parse(\"http://www.rust-lang.org\").unwrap()),\r\n            version: HttpVersion::Http11,\r\n        };\r\n        Request::from_http(req,\r\n                  \"localhost:3000\".to_socket_addrs().unwrap().next().unwrap(),\r\n                  &iron::Protocol::http()).unwrap()\r\n    }\r\n```\r\nand this gives:\r\n```\r\n151 |         let req = HttpRequest {\r\n    |                   ^^^^^^^^^^^ missing `body`\r\n```\r\n`body` is private :)\r\nAny hint?","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/519","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/519/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/519/comments","events_url":"https://api.github.com/repos/iron/iron/issues/519/events","html_url":"https://github.com/iron/iron/issues/519","id":202763815,"number":519,"title":"Status code when responding with Path","user":{"login":"Boscop","id":535593,"avatar_url":"https://avatars1.githubusercontent.com/u/535593?v=4","gravatar_id":"","url":"https://api.github.com/users/Boscop","html_url":"https://github.com/Boscop","followers_url":"https://api.github.com/users/Boscop/followers","following_url":"https://api.github.com/users/Boscop/following{/other_user}","gists_url":"https://api.github.com/users/Boscop/gists{/gist_id}","starred_url":"https://api.github.com/users/Boscop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Boscop/subscriptions","organizations_url":"https://api.github.com/users/Boscop/orgs","repos_url":"https://api.github.com/users/Boscop/repos","events_url":"https://api.github.com/users/Boscop/events{/privacy}","received_events_url":"https://api.github.com/users/Boscop/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-01-24T09:22:29Z","updated_at":"2017-01-24T09:35:13Z","closed_at":"2017-01-24T09:35:13Z","author_association":"NONE","body":"When responding to a request with a Path, like `Response::with(Path::new(...))` will have status `None`. Chrome interprets this as 404 but still shows the image (I only tested it with images).\r\nSo now I'm responding with `Response::with((status::Ok, Path::new(...)))`\r\nBut this means that I always get the ok status.\r\nWhat's the best way to get the status code 200 or 404 depending on whether the file exists or not?\r\n","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/517","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.co
8000
m/repos/iron/iron/issues/517/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/517/comments","events_url":"https://api.github.com/repos/iron/iron/issues/517/events","html_url":"https://github.com/iron/iron/issues/517","id":201645619,"number":517,"title":"Redirect to desired page after login possible? ","user":{"login":"Boscop","id":535593,"avatar_url":"https://avatars1.githubusercontent.com/u/535593?v=4","gravatar_id":"","url":"https://api.github.com/users/Boscop","html_url":"https://github.com/Boscop","followers_url":"https://api.github.com/users/Boscop/followers","following_url":"https://api.github.com/users/Boscop/following{/other_user}","gists_url":"https://api.github.com/users/Boscop/gists{/gist_id}","starred_url":"https://api.github.com/users/Boscop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Boscop/subscriptions","organizations_url":"https://api.github.com/users/Boscop/orgs","repos_url":"https://api.github.com/users/Boscop/repos","events_url":"https://api.github.com/users/Boscop/events{/privacy}","received_events_url":"https://api.github.com/users/Boscop/received_events","type":"User","site_admin":false},"labels":[{"id":106003399,"url":"https://api.github.com/repos/iron/iron/labels/help%20wanted","name":"help wanted","color":"bfe5bf","default":true},{"id":339338273,"url":"https://api.github.com/repos/iron/iron/labels/question","name":"question","color":"d4c5f9","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-01-18T17:50:12Z","updated_at":"2017-01-19T16:06:25Z","closed_at":"2017-01-19T16:06:25Z","author_association":"NONE","body":"Let's say the user tries to access /post/42/edit but isn't logged in, so he isn't allowed to edit the post, it's easy to redirect him to /login but how to redirect to the original endpoint /post/42/edit after successful login (such that the usual checks are done that are done when accessing the url while logged in, e.g. that the user is owner of the post). \r\nI think the original path has to be passed to /login as a parameter like /login/:target, and the handler for /login extracts it and redirects. Can url segment parameters like this contain  slashes or should it be a URL encoded GET parameter? \r\nHow can a request handler access the target path to pass to /login? \r\n\r\nIs it just `request.url`?","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/514","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/514/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/514/comments","events_url":"https://api.github.com/repos/iron/iron/issues/514/events","html_url":"https://github.com/iron/iron/issues/514","id":200228367,"number":514,"title":"Re-export url crate","user":{"login":"gsquire","id":2665334,"avatar_url":"https://avatars0.githubusercontent.com/u/2665334?v=4","gravatar_id":"","url":"https://api.github.com/users/gsquire","html_url":"https://github.com/gsquire","followers_url":"https://api.github.com/users/gsquire/followers","following_url":"https://api.github.com/users/gsquire/following{/other_user}","gists_url":"https://api.github.com/users/gsquire/gists{/gist_id}","starred_url":"https://api.github.com/users/gsquire/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gsquire/subscriptions","organizations_url":"https://api.github.com/users/gsquire/orgs","repos_url":"https://api.github.com/users/gsquire/repos","events_url":"https://api.github.com/users/gsquire/events{/privacy}","received_events_url":"https://api.github.com/users/gsquire/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-01-11T22:36:57Z","updated_at":"2017-01-11T22:43:14Z","closed_at":"2017-01-11T22:40:41Z","author_association":"CONTRIBUTOR","body":"I know the names are conflicting, but it would be helpful to re-export the url crate's `Url` type. I found it unfortunate that I had to import the url crate to use the `Into` trait for iron's `Url`.\r\n\r\nThis came after the deprecation of `into_generic_url` in 0.4.1.","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/507","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/507/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/507/comments","events_url":"https://api.github.com/repos/iron/iron/issues/507/events","html_url":"https://github.com/iron/iron/issues/507","id":196532826,"number":507,"title":"doc is outdated","user":{"login":"bbigras","id":24027,"avatar_url":"https://avatars1.githubusercontent.com/u/24027?v=4","gravatar_id":"","url":"https://api.github.com/users/bbigras","html_url":"https://github.com/bbigras","followers_url":"https://api.github.com/users/bbigras/followers","following_url":"https://api.github.com/users/bbigras/following{/other_user}","gists_url":"https://api.github.com/users/bbigras/gists{/gist_id}","starred_url":"https://api.github.com/users/bbigras/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbigras/subscriptions","organizations_url":"https://api.github.com/users/bbigras/orgs","repos_url":"https://api.github.com/users/bbigras/repos","events_url":"https://api.github.com/users/bbigras/events{/privacy}","received_events_url":"https://api.github.com/users/bbigras/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-12-19T22:06:37Z","updated_at":"2017-04-14T14:56:51Z","closed_at":"2017-04-14T14:56:51Z","author_association":"NONE","body":"I don't see WriteBody in the documentation on http://ironframework.io/doc/iron/","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/505","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/505/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/505/comments","events_url":"https://api.github.com/repos/iron/iron/issues/505/events","html_url":"https://github.com/iron/iron/issues/505","id":193299293,"number":505,"title":"Broken documentation","user":{"login":"ysimonson","id":127386,"avatar_url":"https://avatars2.githubusercontent.com/u/127386?v=4","gravatar_id":"","url":"https://api.github.com/users/ysimonson","html_url":"https://github.com/ysimonson","followers_url":"https://api.github.com/users/ysimonson/followers","following_url":"https://api.github.com/users/ysimonson/following{/other_user}","gists_url":"https://api.github.com/users/ysimonson/gists{/gist_id}","starred_url":"https://api.github.com/users/ysimonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ysimonson/subscriptions","organizations_url":"https://api.github.com/users/ysimonson/orgs","repos_url":"https://api.github.com/users/ysimonson/repos","events_url":"https://api.github.com/users/ysimonson/events{/privacy}","received_events_url":"https://api.github.com/users/ysimonson/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-12-03T16:34:38Z","updated_at":"2017-04-14T14:57:43Z","closed_at":"2017-04-14T14:57:43Z","author_association":"NONE","body":"Hi! I found a couple of issues browsing the documentation:\r\n\r\n1) Certain pages are unstyled. e.g.: http://ironframework.io/doc/urlencoded/type.QueryMap.html\r\n2) Some things are documented twice. See `query_pairs` in [this search result](http://ironframework.io/doc/url/struct.Url.html?search=query). Maybe this is fixed by the [latest commit](https://github.com/iron/iron/commit/cfd484652431d196650ecb0f43ea8556306d2af4)?\r\n","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/504","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/504/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/504/comments","events_url":"https://api.github.com/repos/iron/iron/issues/504/events","html_url":"https://github.com/iron/iron/issues/504","id":190380434,"number":504,"title":"Use `#[doc(no_inline)]` in the prelude","user":{"login":"bluss","id":3209739,"avatar_url":"https://avatars1.githubusercontent.com/u/3209739?v=4","gravatar_id":"","url":"https://api.github.com/users/bluss","html_url":"https://github.com/bluss","followers_url":"https://api.github.com/users/bluss/followers","following_url":"https://api.github.com/users/bluss/following{/other_user}","gists_url":"https://api.github.com/users/bluss/gists{/gist_id}","starred_url":"https://api.github.com/users/bluss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bluss/subscriptions","organizations_url":"https://api.github.com/users/bluss/orgs","repos_url":"https://api.github.com/users/bluss/repos","events_url":"https://api.github.com/users/bluss/events{/privacy}","received_events_url":"https://api.github.com/users/bluss/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-18T17:47:05Z","updated_at":"2016-11-21T18:15:38Z","closed_at":"2016-11-21T18:14:24Z","author_association":"NONE","body":"Some items are being inlined into the prelude's docs, they should just be links to where the items are defined. It should be possible to fix this with doc(no_inline).","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/503","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/503/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/503/comments","events_url":"https://api.github.com/repos/iron/iron/issues/503/events","html_url":"https://github.com/iron/iron/issues/503","id":190344296,"number":503,"title":"Confused on how to use chain correctly ","user":{"login":"ghost","id":10137,"avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-18T15:20:16Z","updated_at":"2016-11-18T16:47:10Z","closed_at":"2016-11-18T16:47:10Z","author_association":"NONE","body":"I have the following code\r\n\r\n```rust \r\n\r\nstruct Manager(r2d2::Pool<MysqlConnectionManager>);\r\nimpl Key for Manager {\r\n    type Value = Manager;\r\n}\r\n\r\nfn main() {\r\n    let manager = database_utility::connect(Some(\"database\")).unwrap(); /\r\n    let config = r2d2::config::Builder::new().pool_size(20).build();\r\n    let pool = Manager(r2d2::Pool::new(config, manager).unwrap());\r\n    // The three lines above just build up the r2d2::Pool<MysqlConnectionManager> into Manager\r\n    let router = main::get_routes(); // returns router::Router\r\n    let chain = Chain::new(router).link(Read::<Manager>::both(pool));\r\n    Iron::new(chain).http(\"localhost:3000\").unwrap();\r\n}\r\n```\r\n\r\nHowever, I get the error\r\n\r\n```\r\n   |\r\n27 |     Iron::new(chain).http(\"localhost:3000\").unwrap();\r\n   |     ^^^^^^^^^ trait `for<'r, 'r, 'r> &mut iron::Chain: std::ops::Fn<(&'r mut iron::Request<'r, 'r>,)>` not satisfied\r\n   |\r\n   = note: required because of the requirements on the impl of `iron::Handler` for `&mut iron::Chain`\r\n   = note: required by `<iron::Iron<H>>::new`\r\n```\r\n\r\nFrom my understanding of this crate the variable `router` should have been used as the handler. With the r2d2 pool being both and after middleware as suggested by the iron persistent crate. So I am a little confused as to where I am going wrong. ","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/502","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/502/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/502/comments","events_url":"https://api.github.com/repos/iron/iron/issues/502/events","html_url":"https://github.com/iron/iron/issues/502","id":189575941,"number":502,"title":"[feature request/documentation problem] can/do we have a convenience function for making a simple IronError from a String","user":{"login":"makoConstruct","id":346569,"avatar_url":"https://avatars0.githubusercontent.com/u/346569?v=4","gravatar_id":"","url":"https://api.github.com/users/makoConstruct","html_url":"https://github.com/makoConstruct","followers_url":"https://api.github.com/users/makoConstruct/followers","following_url":"https://api.github.com/users/makoConstruct/following{/other_user}","gists_url":"https://api.github.com/users/makoConstruct/gists{/gist_id}","starred_url":"https://api.github.com/users/makoConstruct/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/makoConstruct/subscriptions","organizations_url":"https://api.github.com/users/makoConstruct/orgs","repos_url":"https://api.github.com/users/makoConstruct/repos","events_url":"https://api.github.com/users/makoConstruct/events{/privacy}","received_events_url":"https://api.github.com/users/makoConstruct/received_events","type":"User","site_admin":false},"labels":[{"id":339338273,"url":"https://api.github.com/repos/iron/iron/labels/question","name":"question","color":"d4c5f9","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-16T03:39:15Z","updated_at":"2017-04-14T14:58:48Z","closed_at":"2017-04-14T14:58:43Z","author_association":"NONE","body":"Can we get a convenience function for creating an IronError from a String? It seems like the most concise way to do this currently is:\r\n\r\n```\r\nstruct StringError(String);\r\nimpl fmt::Display for StringError {\r\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\r\n        Debug::fmt(self, f)\r\n    }\r\n}\r\nimpl Error for StringError {\r\n    fn description(&self) -> &str { &*self.0 }\r\n}\r\n\r\nfn ironError(msg:String)-> IronError {\r\n    IronError::new(StringError(msg), iron::status::BadRequest)\r\n}\r\n```\r\n\r\nWhich seems implausibly inconvenient and I wonder if I'm just missing something. If I am missing something, please add a note to http://ironframework.io/doc/iron/error/struct.IronError.html?search= to indicate that there is an easier way to produce them.","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/500","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/500/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/500/comments","events_url":"https://api.github.com/repos/iron/iron/issues/500/events","html_url":"https://github.com/iron/iron/issues/500","id":188207728,"number":500,"title":"Add HTTP/2 support. ","user":{"login":"sackery","id":3042843,"avatar_url":"https://avatars2.githubusercontent.com/u/3042843?v=4","gravatar_id":"","url":"https://api.github.com/users/sackery","html_url":"https://github.com/sackery","followers_url":"https://api.github.com/users/sackery/followers","following_url":"https://api.github.com/users/sackery/following{/other_user}","gists_url":"https://api.github.com/users/sackery/gists{/gist_id}","starred_url":"https://api.github.com/users/sackery/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sackery/subscriptions","organizations_url":"https://api.github.com/users/sackery/orgs","repos_url":"https://api.github.com/users/sackery/repos","events_url":"https://api.github.com/users/sackery/events{/privacy}","received_events_url":"https://api.github.com/users/sackery/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-11-09T10:03:14Z","updated_at":"2016-11-09T10:07:47Z","closed_at":"2016-11-09T10:07:47Z","author_association":"NONE","body":"The HTTP version 2 is the future of web, is there any plan Iron for supporting it?","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/498","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/498/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/498/comments","events_url":"https://api.github.com/repos/iron/iron/issues/498/events","html_url":"https://github.com/iron/iron/issues/498","id":187615852,"number":498,"title":"Using a BodyReader to read from a hoedown::Buffer makes an infinite loop.","user":{"login":"icefoxen","id":1335133,"avatar_url":"https://avatars3.githubusercontent.com/u/1335133?v=4","gravatar_id":"","url":"https://api.github.com/users/icefoxen","html_url":"https://github.com/icefoxen","followers_url":"https://api.github.com/users/icefoxen/followers","following_url":"https://api.github.com/users/icefoxen/following{/other_user}","gists_url":"https://api.github.com/users/icefoxen/gists{/gist_id}","starred_url":"https://api.github.com/users/icefoxen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icefoxen/subscriptions","organizations_url":"https://api.github.com/users/icefoxen/orgs","repos_url":"https://api.github.com/users/icefoxen/repos","events_url":"https://api.github.com/users/icefoxen/events{/privacy}","received_events_url":"https://api.github.com/users/icefoxen/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-11-07T03:06:35Z","updated_at":"2016-11-07T14:02:49Z","closed_at":"2016-11-07T14:02:49Z","author_association":"NONE","body":"At least on x86_64 Debian Testing, using stable rustc version 1.12.\r\n\r\nTest code:\r\n\r\n```.rust\r\nextern crate iron;\r\nextern crate router;\r\nextern crate hoedown;\r\n\r\nuse std::io;\r\n\r\nuse iron::prelude::*;\r\nuse iron::status;\r\nuse iron::response::BodyReader;\r\n\r\nuse router::Router;\r\n\r\nuse hoedown::Render;\r\n\r\nstatic SERVER_ADDRESS: &'static str = \"localhost:8080\";\r\n\r\nfn get_page(req: &mut Request) -> IronResult<Response> {\r\n    let test_md = \"# Hello world!\\n\\nHow are you?\\n\";\r\n    let md_bytes: &[u8] = test_md.as_ref();\r\n\r\n    let md = hoedown::Markdown::read_from(md_bytes);\r\n\r\n    let mut html = hoedown::Html::new(hoedown::renderer::html::Flags::empty(), 0);\r\n    let buffer = html.render(&md);\r\n    {\r\n        let b: &[u8] = buffer.as_ref();\r\n        println!(\"Buffer length: {}\", b.len())\r\n    }\r\n    // This returns the HTML text in an infinite loop forever.\r\n    let br: BodyReader<hoedown::Buffer> = BodyReader(buffer);\r\n    Ok(Response::with((status::Ok, br)))\r\n    // This works fine\r\n    // let stringggggg = buffer.to_str().unwrap();\r\n    // Ok(Response::with((status::Ok, stringggggg)))\r\n}\r\n\r\nfn main() {\r\n    println!(\"Starting...\");\r\n\r\n    let mut router = Router::new();\r\n    router.get(\"/:page\", get_page, \"page\");\r\n\r\n    let _server = Iron::new(router).http(SERVER_ADDRESS).unwrap();\r\n    println!(\"Server running on {}\", SERVER_ADDRESS);\r\n}\r\n```\r\n\r\nCargo file:\r\n\r\n```.toml\r\n[package]\r\nname = \"infinibang\"\r\nversion = \"0.1.0\"\r\n\r\n[dependencies]\r\niron = \"*\"\r\nrouter = \"*\"\r\nhoedown = \"*\"\r\n```\r\n\r\nWhen using the `buffer.to_str().unwrap()` line, I get:\r\n\r\n```\r\n$ curl http://localhost:8080/start\r\n<h1>Hello world!</h1>\r\n\r\n<p>How are you?</p>\r\n$ \r\n```\r\n\r\nWhen using the BodyReader version, I get:\r\n```\r\n$ curl http://localhost:8080/start\r\n<h1>Hello world!</h1>\r\n\r\n<p>How are you?</p>\r\n\r\n(continues on forever)\r\n```","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/493","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/493/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/493/comments","events_url":"https://api.github.com/repos/iron/iron/issues/493/events","html_url":"https://github.com/iron/iron/issues/493","id":185854560,"number":493,"title":"Website not show on public","user":{"login":"kocoten1992","id":7130705,"avatar_url":"https://avatars1.githubusercontent.com/u/7130705?v=4","gravatar_id":"","url":"https://api.github.com/users/kocoten1992","html_url":"https://github.com/kocoten1992","followers_url":"https://api.github.com/users/kocoten1992/followers","following_url":"https://api.github.com/users/kocoten1992/following{/other_user}","gists_url":"https://api.github.com/users/kocoten1992/gists{/gist_id}","starred_url":"https://api.github.com/users/kocoten1992/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocoten1992/subscriptions","organizations_url":"https://api.github.com/users/kocoten1992/orgs","repos_url":"https://api.github.com/users/kocoten1992/repos","events_url":"https://api.github.com/users/kocoten1992/events{/privacy}","received_events_url":"https://api.github.com/users/kocoten1992/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-10-28T07:16:35Z","updated_at":"2016-10-29T10:36:50Z","closed_at":"2016-10-29T10:28:14Z","author_association":"NONE","body":"Here is what I've try:\n\nThe code is:\n\n```\nextern crate iron;\n\nuse iron::prelude::*;\nuse iron::status;\n\nfn main() {\n    Iron::new(|_: &mut Request| {\n        Ok(Response::with((status::Ok, \"Hello World!\")))\n    }).http(\"somecooldomain.dev:80\").unwrap();\n}\n```\n\nchange in hosts file, /etc/hosts (ubuntu)\n\n```\n127.0.0.1 somecooldomain.dev\n127.0.0.1 www.somecooldomain.dev\n```\n\nAfter this point, I try somecooldomain.dev on my local ubuntu, it display very fine, this is what I did next, on router I map port 80 router to my ubuntu machine 80, 80->80\n\nThen I go to another computer (windows OS, on a different network), I change in hosts file, windows/system32/drivers/etc/hosts\n\n```\npublic.ipv4.ubuntu.machine somecooldomain.dev\npublic.ipv4.ubuntu.machine www.somecooldomain.dev\n```\n\nBut when on I try access `somecooldomain.dev` on my window machine, somehow it doesn't work\n\nIt said This site canโt be reached, ERR_CONNECTION_REFUSED, not sure what is going on here :(\n\nPlease help me, thanks a lot in advance :D\n","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/488","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/488/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/488/comments","events_url":"https://api.github.com/repos/iron/iron/issues/488/events","html_url":"https://github.com/iron/iron/issues/488","id":183390325,"number":488,"title":"GET responds with HTTP 400 given `Host: [::1]:8000` request header","user":{"login":"sanmai-NL","id":3374183,"avatar_url":"https://avatars3.githubusercontent.com/u/3374183?v=4","gravatar_id":"","url":"https://api.github.com/users/sanmai-NL","html_url":"https://github.com/sanmai-NL","followers_url":"https://api.github.com/users/sanmai-NL/followers","following_url":"https://api.github.com/users/sanmai-NL/following{/other_user}","gists_url":"https://api.github.com/users/sanmai-NL/gists{/gist_id}","starred_url":"https://api.github.com/users/sanmai-NL/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sanmai-NL/subscriptions","organizations_url":"https://api.github.com/users/sanmai-NL/orgs","repos_url":"https://api.github.com/users/sanmai-NL/repos","events_url":"https://api.github.com/users/sanmai-NL/events{/privacy}","received_events_url":"https://api.github.com/users/sanmai-NL/received_events","type":"User","site_admin":false},"labels":[{"id":106003396,"url":"https://api.github.com/repos/iron/iron/labels/bug","name":"bug","color":"fc2929","default":true},{"id":274721363,"url":"https://api.github.com/repos/iron/iron/labels/closing%20candidate","name":"closing candidate","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2016-10-17T11:23:46Z","updated_at":"2017-05-08T13:28:52Z","closed_at":"2017-05-08T13:27:44Z","author_association":"NONE","body":"This is a bug report. Given\n\n``` rust\nlet router = router!(index: get \"/\" => |req: &mut Request| // ...\n);\n// ...\nIron::new(router).http(\"::1:8000\").unwrap();\n```\n\n``` sh\n  curl -f -v http://[::1]:8000/\n```\n\nthis happens (unexpected)\n\n```\n*   Trying ::1...\n* TCP_NODELAY set\n* Connected to ::1 (::1) port 8000 (#0)\n> GET / HTTP/1.1\n> Host: [::1]:8000\n> User-Agent: curl/7.50.3\n> Accept: */*\n> \n* The requested URL returned error: 400 Bad Request\n* Curl_http_done: called premature == 1\n* Closing connection 0\ncurl: (22) The requested URL returned error: 400 Bad Request\n```\n\nwhereas (expected)\n\n``` sh\n  curl -f -v http://localhost:8000/\n```\n\n```\n*   Trying ::1...\n* TCP_NODELAY set\n* Connected to localhost (::1) port 8000 (#0)\n> GET / HTTP/1.1\n> Host: localhost:8000\n> User-Agent: curl/7.50.3\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n< Content-Length: 547\n< Content-Type: text/htmsl\n< Date: Mon, 17 Oct 2016 11:20:06 GMT\n< \n* Curl_http_done: called premature == 0\n* Connection #0 to host localhost left intact\n...\n```\n","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/484","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/484/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/484/comments","events_url":"https://api.github.com/repos/iron/iron/issues/484/events","html_url":"https://github.com/iron/iron/issues/484","id":180233268,"number":484,"title":"Connection refused with JVM client","user":{"login":"Synesso","id":21859,"avatar_url":"https://avatars3.githubusercontent.com/u/21859?v=4","gravatar_id":"","url":"https://api.github.com/users/Synesso","html_url":"https://github.com/Synesso","followers_url":"https://api.github.com/users/Synesso/followers","following_url":"https://api.github.com/users/Synesso/following{/other_user}","gists_url":"https://api.github.com/users/Synesso/gists{/gist_id}","starred_url":"https://api.github.com/users/Synesso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Synesso/subscriptions","organizations_url":"https://api.github.com/users/Synesso/orgs","repos_url":"https://api.github.com/users/Synesso/repos","events_url":"https://api.github.com/users/Synesso/events{/privacy}","received_events_url":"https://api.github.com/users/Synesso/received_events","type":"User","site_admin":false},"labels":[{"id":339338273,"url":"https://api.github.com/repos/iron/iron/labels/question","name":"question","color":"d4c5f9","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2016-09-30T06:54:28Z","updated_at":"2016-10-01T05:00:06Z","closed_at":"2016-10-01T05:00:06Z","author_association":"NONE","body":"```\ngit clone https://github.com/iron/iron.git\n(cd iron && cargo run --example hello)\n```\n\n```\n$ curl \"http://localhost:3000/\"\nHello world!\n```\n\nbut\n\n```\n$ scala\nscala> scala.io.Source.fromURL(\"http://localhost:3000/\").mkString\njava.net.ConnectException: Connection refused\n```\n\nI found this issue when my own Iron app suddenly stopped accepting requests. I raised a [stackoverflow question](http://stackoverflow.com/questions/39781623/localhost-iron-server-curl-connects-but-scala-cannot), but then it started working again. A few hours later, the app is no longer accepting requests from the JVM once more.\n- OSX 10.11.6\n- cargo 0.13.0-nightly (9399229 2016-09-14)\n\nalso tested with\n- cargo 0.13.0-nightly (19cfb67 2016-09-28)\n","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/483","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/483/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/483/comments","events_url":"https://api.github.com/repos/iron/iron/issues/483/events","html_url":"https://github.com/iron/iron/issues/483","id":180212978,"number":483,"title":"ssl feature is not documented in online docs","user":{"login":"vignesh-sankaran","id":4547287,"avatar_url":"https://avatars0.githubusercontent.com/u/4547287?v=4","gravatar_id":"","url":"https://api.github.com/users/vignesh-sankaran","html_url":"https://github.com/vignesh-sankaran","followers_url":"https://api.github.com/users/vignesh-sankaran/followers","following_url":"https://api.github.com/users/vignesh-sankaran/following{/other_user}","gists_url":"https://api.github.com/users/vignesh-sankaran/gists{/gist_id}","starred_url":"https://api.github.com/users/vignesh-sankaran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vignesh-sankaran/subscriptions","organizations_url":"https://api.github.com/users/vignesh-sankaran/orgs","repos_url":"https://api.github.com/users/vignesh-sankaran/repos","events_url":"https://api.github.com/users/vignesh-sankaran/events{/privacy}","received_events_url":"https://api.github.com/users/vignesh-sankaran/received_events","type":"User","site_admin":false},"labels":[{"id":106003396,"url":"https://api.github.com/repos/iron/iron/labels/bug","name":"bug","color":"fc2929","default":true},{"id":168701378,"url":"https://api.github.com/repos/iron/iron/labels/documentation","name":"documentation","color":"fbca04","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2016-09-30T03:36:53Z","updated_at":"2017-01-10T11:01:11Z","closed_at":"2017-01-10T11:01:11Z","author_association":"NONE","body":"Struggling to figure out how to start up Iron with HTTPS rather than the default HTTP. Do we also need to provide security certificates, or is that generated by Hyper?\n","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/480","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/480/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/480/comments","events_url":"https://api.github.com/repos/iron/iron/issues/480/events","html_url":"https://github.com/iron/iron/issues/480","id":177500602,"number":480,"title":"Cannot upload form multipart data over 512kB","user":{"login":"vojtechkral","id":424891,"avatar_url":"https://avatars2.githubusercontent.com/u/424891?v=4","gravatar_id":"","url":"https://api.github.com/users/vojtechkral","html_url":"https://github.com/vojtechkral","followers_url":"https://api.github.com/users/vojtechkral/followers","following_url":"https://api.github.com/users/vojtechkral/following{/other_user}","gists_url":"https://api.github.com/users/vojtechkral/gists{/gist_id}","starred_url":"https://api.github.com/users/vojtechkral/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vojtechkral/subscriptions","organizations_url":"https://api.github.com/users/vojtechkral/orgs","repos_url":"https://api.github.com/users/vojtechkral/repos","events_url":"https://api.github.com/users/vojtechkral/events{/privacy}","received_events_url":"https://api.github.com/users/vojtechkral/received_events","type":"User","site_admin":false},"labels":[{"id":106003396,"url":"https://api.github.com/repos/iron/iron/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-09-16T19:21:08Z","updated_at":"2016-10-06T18:53:35Z","closed_at":"2016-10-06T14:55:12Z","
14dc
author_association":"NONE","body":"Hi,\n  I'm not sure if this is an Iron or Hyper problem, but I'm unable to upload a file using html form if the file size is over 512kB using Chromium.\n\nFile with size of 512kB or less are uploaded fine. When using Firefox, files larger than 512kB can be uploaded just fine.\n\nThere's no error, there's nothing strange in the debug log, but Request body cannot be read and according to Chromium the request is failed with no status (no data received apparently).\n\nRequest headers:\n\n```\nAccept-Encoding: gzip, deflate\nAccept-Language: cs,en;q=0.8,sk;q=0.6\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nCache-Control: no-cache\nConnection: keep-alive\nContent-Length: 524581\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundaryRR14SThvtMDr9z5d\nHost: localhost:3000\nOrigin: http://localhost:3000\nPragma: no-cache\nReferer: http://localhost:3000/\nUpgrade-Insecure-Requests: 1, \nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.101 Safari/537.36\nDNT: 1\n```\n","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/477","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/477/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/477/comments","events_url":"https://api.github.com/repos/iron/iron/issues/477/events","html_url":"https://github.com/iron/iron/issues/477","id":172310169,"number":477,"title":"File as Iron Response","user":{"login":"navidnabavi","id":9695150,"avatar_url":"https://avatars1.githubusercontent.com/u/9695150?v=4","gravatar_id":"","url":"https://api.github.com/users/navidnabavi","html_url":"https://github.com/navidnabavi","followers_url":"https://api.github.com/users/navidnabavi/followers","following_url":"https://api.github.com/users/navidnabavi/following{/other_user}","gists_url":"https://api.github.com/users/navidnabavi/gists{/gist_id}","starred_url":"https://api.github.com/users/navidnabavi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/navidnabavi/subscriptions","organizations_url":"https://api.github.com/users/navidnabavi/orgs","repos_url":"https://api.github.com/users/navidnabavi/repos","events_url":"https://api.github.com/users/navidnabavi/events{/privacy}","received_events_url":"https://api.github.com/users/navidnabavi/received_events","type":"User","site_admin":false},"labels":[{"id":339338273,"url":"https://api.github.com/repos/iron/iron/labels/question","name":"question","color":"d4c5f9","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-08-21T08:03:59Z","updated_at":"2016-08-22T18:24:01Z","closed_at":"2016-08-22T18:24:01Z","author_association":"NONE","body":"Is it possible to return a file as response? \nWhat is the best way assuming there is no Nginx. Staticfiles package os Iron supporting only with mounting a folder. Is it possible to redirect to a static route internally like X-SEND or X-AXCEL-REDIRECt?\n","score":1.0},{"url":"https://api.github.com/repos/iron/iron/issues/473","repository_url":"https://api.github.com/repos/iron/iron","labels_url":"https://api.github.com/repos/iron/iron/issues/473/labels{/name}","comments_url":"https://api.github.com/repos/iron/iron/issues/473/comments","events_url":"https://api.github.com/repos/iron/iron/issues/473/events","html_url":"https://github.com/iron/iron/issues/473","id":171173658,"number":473,"title":"Displaying a response prints status message twice","user":{"login":"Mark-Simulacrum","id":5047365,"avatar_url":"https://avatars0.githubusercontent.com/u/5047365?v=4","gravatar_id":"","url":"https://api.github.com/users/Mark-Simulacrum","html_url":"https://github.com/Mark-Simulacrum","followers_url":"https://api.github.com/users/Mark-Simulacrum/followers","following_url":"https://api.github.com/users/Mark-Simulacrum/following{/other_user}","gists_url":"https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}","starred_url":"https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mark-Simulacrum/subscriptions","organizations_url":"https://api.github.com/users/Mark-Simulacrum/orgs","repos_url":"https://api.github.com/users/Mark-Simulacrum/repos","events_url":"https://api.github.com/users/Mark-Simulacrum/events{/privacy}","received_events_url":"https://api.github.com/users/Mark-Simulacrum/received_events","type":"User","site_admin":false},"labels":[{"id":106003396,"url":"https://api.github.com/repos/iron/iron/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-08-15T13:48:30Z","updated_at":"2016-08-18T22:39:46Z","closed_at":"2016-08-18T22:39:46Z","author_association":"NONE","body":"My response is displayed as:\n\n```\nHTTP/1.1 200 OK OK\nContent-Length: 735\nContent-Type: application/json\nAccess-Control-Allow-Origin: *\n```\n\nwith two repeating `OK`s; this is unexpected. Perhaps I'm not expecting the right thing though--my reference is [this](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Server_response) Wikipedia article.\n","score":1.0}]}
0

