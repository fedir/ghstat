HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 21 Apr 2018 07:27:16 GMT
Link: <https://api.github.com/search/issues?q=repo%3Agolang%2Fgo+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Agolang%2Fgo+type%3Aissue+state%3Aclosed&page=34>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CD6A:3706:37E0E12:6FB3C74:5ADAE7D3
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 27
X-Ratelimit-Reset: 1524295671
X-Runtime-Rack: 0.437796
X-Xss-Protection: 1; mode=block

8000
{"total_count":21484,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/golang/go/issues/24980","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24980/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24980/comments","events_url":"https://api.github.com/repos/golang/go/issues/24980/events","html_url":"https://github.com/golang/go/issues/24980","id":316411334,"number":24980,"title":"cmd/go: runtime: epollwait on fd 4 failed with 38 (on ancient CentOS 5.11)","user":{"login":"lukpank","id":2143180,"avatar_url":"https://avatars2.githubusercontent.com/u/2143180?v=4","gravatar_id":"","url":"https://api.github.com/users/lukpank","html_url":"https://github.com/lukpank","followers_url":"https://api.github.com/users/lukpank/followers","following_url":"https://api.github.com/users/lukpank/following{/other_user}","gists_url":"https://api.github.com/users/lukpank/gists{/gist_id}","starred_url":"https://api.github.com/users/lukpank/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lukpank/subscriptions","organizations_url":"https://api.github.com/users/lukpank/orgs","repos_url":"https://api.github.com/users/lukpank/repos","events_url":"https://api.github.com/users/lukpank/events{/privacy}","received_events_url":"https://api.github.com/users/lukpank/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/56","html_url":"https://github.com/golang/go/milestone/56","labels_url":"https://api.github.com/repos/golang/go/milestones/56/labels","id":2473074,"number":56,"title":"Go1.10","description":"","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":1,"closed_issues":819,"state":"closed","created_at":"2017-04-21T19:22:29Z","updated_at":"2018-04-20T21:58:52Z","due_on":"2018-01-31T08:00:00Z","closed_at":"2018-02-17T00:25:56Z"},"comments":4,"created_at":"2018-04-20T21:04:39Z","updated_at":"2018-04-20T23:02:57Z","closed_at":"2018-04-20T21:36:04Z","author_association":"NONE","body":"### What version of Go are you using (`go version`)?\r\n\r\ngo version go1.10.1 linux/amd64\r\n\r\n### Does this issue reproduce with the latest release?\r\n\r\nYes (on go1.10.1).\r\n\r\nBut previous go1.10 works without the issue.\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\nIt is (an ancient) CentOS 5 VM:\r\n\r\n```\r\n$ uname -a\r\nLinux localhost.localdomain 2.6.18-398.el5 #1 SMP Tue Sep 16 20:50:52 EDT 2014 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n\r\nFrom `go env` (~90% runs crashed with no stdout output, longest output below):\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOCACHE=\"/home/username/.cache/go-build\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\n```\r\n\r\n### What did you do?\r\n\r\nI run `go version`/`go env` (on the Centos5 VM) or `go build hello_world.go` (on the Centos5 VM or on some real machine running Centos5). Where `hello_world.go` comes from https://golang.org/ (almost, I used English word \"world\").\r\n\r\n### What did you expect to see?\r\n\r\nI expect no crash and proper output of `go version` / `go env` and successful compilation with `go build`.\r\n\r\nOr (may be) a note in release notes if such old kernel is not supported but even than I would not expect it to change in a point release (from 1.10 to 1.10.1).\r\n\r\nActually for go1.10 I see what was expected (on both the Centos 5 VM and the real machine running Centos 5).\r\n\r\n### What did you see instead?\r\n\r\nOn the real CentOS 5 machine `go version` works fine but `go build` has similar issue as described below.\r\n\r\nOn the CentOS 5 VM:\r\n1. `go version`, 1 of 5 runs displays expected output but almost always crashes as below (with or without proper output).\r\n2. `go env`, ~90% runs crashes with no output, ~10% display some output and crashes (similar to below).\r\n3. `go build` crashes (similar to below).\r\n\r\nExample crash of `go version`:\r\n\r\n```\r\n$ go version\r\nruntime: epollwait on fd 4 failed with 38\r\nfatal error: runtime: netpoll failed\r\n\r\nruntime stack:\r\nruntime.throw(0x8b4145, 0x17)\r\n        /usr/local/go/src/runtime/panic.go:616 +0x81\r\nruntime.netpoll(0x76ecc806f00, 0x2b2300000000)\r\n        /usr/local/go/src/runtime/netpoll_epoll.go:75 +0x216\r\nruntime.sysmon()\r\n        /usr/local/go/src/runtime/proc.go:4265 +0x424\r\nruntime.mstart1(0x0)\r\n        /usr/local/go/src/runtime/proc.go:1227 +0xe7\r\nruntime.mstart()\r\n        /usr/local/go/src/runtime/proc.go:1193 +0x76\r\n\r\ngoroutine 1 [chan receive, locked to thread]:\r\ntext/template/parse.(*lexer).nextItem(...)\r\n        /usr/local/go/src/text/template/parse/lex.go:195\r\ntext/template/parse.(*Tree).peek(...)\r\n        /usr/local/go/src/text/template/parse/parse.go:95\r\ntext/template/parse.(*Tree).parse(0xc4200b6100)\r\n        /usr/local/go/src/text/template/parse/parse.go:280 +0xb8f\r\ntext/template/parse.(*Tree).Parse(0xc4200b6100, 0x8c94da, 0x8f3, 0x0, 0x0, 0x0, 0x0, 0xc420198510, 0xc420051f00, 0x2, ...)\r\n        /usr/local/go/src/text/template/parse/parse.go:233 +0x226\r\ntext/template/parse.Parse(0x8aa77d, 0x4, 0x8c94da, 0x8f3, 0x0, 0x0, 0x0, 0x0, 0xc420051f00, 0x2, ...)\r\n        /usr/local/go/src/text/template/parse/parse.go:55 +0x108\r\ntext/template.(*Template).Parse(0xc420171940, 0x8c94da, 0x8f3, 0xc420051ef0, 0x1fad, 0x8a9d7a)\r\n        /usr/local/go/src/text/template/template.go:198 +0x118\r\n\r\ngoroutine 5 [runnable]:\r\nos/signal.loop()\r\n        /usr/local/go/src/os/signal/signal_unix.go:20\r\ncreated by os/signal.init.0\r\n        /usr/local/go/src/os/signal/signal_unix.go:28 +0x41\r\n\r\ngoroutine 6 [runnable]:\r\ntext/template/parse.(*lexer).run(0xc4201adc70)\r\n        /usr/local/go/src/text/template/parse/lex.go:226\r\ncreated by text/template/parse.lex\r\n        /usr/local/go/src/text/template/parse/lex.go:221 +0x15f\r\n```","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24978","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24978/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24978/comments","events_url":"https://api.github.com/repos/golang/go/issues/24978/events","html_url":"https://github.com/golang/go/issues/24978","id":316404034,"number":24978,"title":"x/build/cmd/gerritbot: GitHub changes override new PatchSets","user":{"login":"FiloSottile","id":1225294,"avatar_url":"https://avatars1.githubusercontent.com/u/1225294?v=4","gravatar_id":"","url":"https://api.github.com/users/FiloSottile","html_url":"https://github.com/FiloSottile","followers_url":"https://api.github.com/users/FiloSottile/followers","following_url":"https://api.github.com/users/FiloSottile/following{/other_user}","gists_url":"https://api.github.com/users/FiloSottile/gists{/gist_id}","starred_url":"https://api.github.com/users/FiloSottile/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FiloSottile/subscriptions","organizations_url":"https://api.github.com/users/FiloSottile/orgs","repos_url":"https://api.github.com/users/FiloSottile/repos","events_url":"https://api.github.com/users/FiloSottile/events{/privacy}","received_events_url":"https://api.github.com/users/FiloSottile/received_events","type":"User","site_admin":false},"labels":[{"id":223401461,"url":"https://api.github.com/repos/golang/go/labels/Builders","name":"Builders","color":"ededed","default":false}],"state":"closed","locked":false,"assignee":{"login":"andybons","id":365204,"avatar_url":"https://avatars3.githubusercontent.com/u/365204?v=4","gravatar_id":"","url":"https://api.github.com/users/andybons","html_url":"https://github.com/andybons","followers_url":"https://api.github.com/users/andybons/followers","following_url":"https://api.github.com/users/andybons/following{/other_user}","gists_url":"https://api.github.com/users/andybons/gists{/gist_id}","starred_url":"https://api.github.com/users/andybons/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andybons/subscriptions","organizations_url":"https://api.github.com/users/andybons/orgs","repos_url":"https://api.github.com/users/andybons/repos","events_url":"https://api.github.com/users/andybons/events{/privacy}","received_events_url":"https://api.github.com/users/andybons/received_events","type":"User","site_admin":false},"assignees":[{"login":"andybons","id":365204,"avatar_url":"https://avatars3.githubusercontent.com/u/365204?v=4","gravatar_id":"","url":"https://api.github.com/users/andybons","html_url":"https://github.com/andybons","followers_url":"https://api.github.com/users/andybons/followers","following_url":"https://api.github.com/users/andybons/following{/other_user}","gists_url":"https://api.github.com/users/andybons/gists{/gist_id}","starred_url":"https://api.github.com/users/andybons/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andybons/subscriptions","organizations_url":"https://api.github.com/users/andybons/orgs","repos_url":"https://api.github.com/users/andybons/repos","events_url":"https://api.github.com/users/andybons/events{/privacy}","received_events_url":"https://api.github.com/users/andybons/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/22","html_url":"https://github.com/golang/go/milestone/22","labels_url":"https://api.github.com/repos/golang/go/milestones/22/labels","id":1067491,"number":22,"title":"Unreleased","description":"Issues that do not affect released Go code and binaries.\r\n","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":825,"closed_issues":1371,"state":"open","created_at":"2015-04-14T18:48:22Z","updated_at":"2018-04-21T00:07:30Z","due_on":"2099-12-31T08:00:00Z","closed_at":null},"comments":2,"created_at":"2018-04-20T20:36:59Z","updated_at":"2018-04-20T23:43:17Z","closed_at":"2018-04-20T23:43:17Z","author_association":"MEMBER","body":"In golang.org/cl/108456 @agl kept fighting gerritbot, who would re-upload from GH every time he pushed a new PatchSet. That should not happen.","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24974","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24974/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24974/comments","events_url":"https://api.github.com/repos/golang/go/issues/24974/events","html_url":"https://github.com/golang/go/issues/24974","id":316348280,"number":24974,"title":"cmd/test2json: colon in test name breaks JSON","user":{"login":"zolotov","id":140920,"avatar_url":"https://avatars1.githubusercontent.com/u/140920?v=4","gravatar_id":"","url":"https://api.github.com/users/zolotov","html_url":"https://github.com/zolotov","followers_url":"https://api.github.com/users/zolotov/followers","following_url":"https://api.github.com/users/zolotov/following{/other_user}","gists_url":"https://api.github.com/users/zolotov/gists{/gist_id}","starred_url":"https://api.github.com/users/zolotov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zolotov/subscriptions","organizations_url":"https://api.github.com/users/zolotov/orgs","repos_url":"https://api.github.com/users/zolotov/repos","events_url":"https://api.github.com/users/zolotov/events{/privacy}","received_events_url":"https://api.github.com/users/zolotov/received_events","type":"User","site_admin":false},"labels":[{"id":373399998,"url":"https://api.github.com/repos/golang/go/labels/NeedsFix","name":"NeedsFix","color":"ededed","default":false},{"id":150880243,"url":"https://api.github.com/repos/golang/go/labels/help%20wanted","name":"help wanted","color":"fbca04","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/62","html_url":"https://github.com/golang/go/milestone/62","labels_url":"https://api.github.com/repos/golang/go/milestones/62/labels","id":2827591,"number":62,"title":"Go1.11","description":"","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":881,"closed_issues":342,"state":"open","created_at":"2017-10-10T13:39:17Z","updated_at":"2018-04-21T04:19:32Z","due_on":"2018-07-31T07:00:00Z","closed_at":null},"comments":1,"created_at":"2018-04-20T17:20:32Z","updated_at":"2018-04-20T18:28:08Z","closed_at":"2018-04-20T18:28:08Z","author_association":"CONTRIBUTOR","body":"go version go1.10 linux/amd64\r\n\r\nInitial bug report: https://youtrack.jetbrains.com/issue/GO-5589\r\n\r\nGiven a test file:\r\n\r\n```\r\npackage my_test\r\n\r\nimport (\r\n\t\"testing\"\r\n\t\"fmt\"\r\n)\r\n\r\nfunc TestHello(t *testing.T) {\r\n\ttestCases := []struct {\r\n\t\ttType string\r\n\t}{\r\n\r\n\t\t{\r\n\t\t\ttType: \"1\",\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttType: \"2\",\r\n\t\t},\r\n\t}\r\n\r\n\tfor _, tc := range testCases {\r\n\t\tt.Run(fmt.Sprintf(\"Test running: %s\\n\", tc.tType), func(t *testing.T) {\r\n\t\t\tfmt.Println(\"Test\")\r\n\t\t})\r\n\t}\r\n}\r\n```\r\n\r\nRun it with `-json` parameter.\r\n\r\nExpected output:\r\n\r\n```\r\n{\"Time\":\"2018-04-20T20:16:22.638761309+03:00\",\"Action\":\"run\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello\"}\r\n{\"Time\":\"2018-04-20T20:16:22.638873428+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello\",\"Output\":\"=== RUN   TestHello\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:22.638882163+03:00\",\"Action\":\"run\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_1_\"}\r\n{\"Time\":\"2018-04-20T20:16:22.638886907+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_1_\",\"Output\":\"=== RUN   TestHello/Test_running:_1_\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:22.638892041+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_1_\",\"Output\":\"Test\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:22.638896226+03:00\",\"Action\":\"run\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_2_\"}\r\n{\"Time\":\"2018-04-20T20:16:22.63889915+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_2_\",\"Output\":\"=== RUN   TestHello/Test_running:_2_\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:22.638902623+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_2_\",\"Output\":\"Test\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:22.638908441+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello\",\"Output\":\"--- PASS: TestHello (0.00s)\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:22.638912874+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_1_\",\"Output\":\"    --- PASS: TestHello/Test_running:_1_ (0.00s)\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:22.63891675+03:00\",\"Action\":\"pass\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_1_\",\"Elapsed\":0}\r\n{\"Time\":\"2018-04-20T20:16:22.63892361+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_2_\",\"Output\":\"    --- PASS: TestHello/Test_running:_2_ (0.00s)\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:22.638930025+03:00\",\"Action\":\"pass\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_2_\",\"Elapsed\":0}\r\n{\"Time\":\"2018-04-20T20:16:22.638934151+03:00\",\"Action\":\"pass\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello\",\"Elapsed\":0}\r\n{\"Time\":\"2018-04-20T20:16:22.638937701+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Output\":\"PASS\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:22.638957862+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Output\":\"ok  \\tcommand-line-arguments\\t0.001s\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:22.639187148+03:00\",\"Action\":\"pass\",\"Package\":\"command-line-arguments\",\"Elapsed\":0.001}\r\n```\r\n\r\nActual output:\r\n\r\n```\r\n{\"Time\":\"2018-04-20T20:16:01.004893526+03:00\",\"Action\":\"run\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello\"}\r\n{\"Time\":\"2018-04-20T20:16:01.004995034+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello\",\"Output\":\"=== RUN   TestHello\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:01.005003725+03:00\",\"Action\":\"run   testhello/test_running\",\"Package\":\"command-line-arguments\",\"Test\":\"_1_\"}\r\n{\"Time\":\"2018-04-20T20:16:01.005009167+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"_1_\",\"Output\":\"=== RUN   TestHello/Test_running:_1_\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:01.005016144+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"_1_\",\"Output\":\"Test\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:01.005021323+03:00\",\"Action\":\"run   testhello/test_running\",\"Package\":\"command-line-arguments\",\"Test\":\"_2_\"}\r\n{\"Time\":\"2018-04-20T20:16:01.005025563+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"_2_\",\"Output\":\"=== RUN   TestHello/Test_running:_2_\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:01.005030331+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"_2_\",\"Output\":\"Test\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:01.005036985+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello\",\"Output\":\"--- PASS: TestHello (0.00s)\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:01.005042738+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_1_\",\"Output\":\"    --- PASS: TestHello/Test_running:_1_ (0.00s)\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:01.005047803+03:00\",\"Action\":\"pass\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_1_\",\"Elapsed\":0}\r\n{\"Time\":\"2018-04-20T20:16:01.005054281+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_2_\",\"Output\":\"    --- PASS: TestHello/Test_running:_2_ (0.00s)\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:01.005058741+03:00\",\"Action\":\"pass\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello/Test_running:_2_\",\"Elapsed\":0}\r\n{\"Time\":\"2018-04-20T20:16:01.005062809+03:00\",\"Action\":\"pass\",\"Package\":\"command-line-arguments\",\"Test\":\"TestHello\",\"Elapsed\":0}\r\n{\"Time\":\"2018-04-20T20:16:01.005067007+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Output\":\"PASS\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:01.005071381+03:00\",\"Action\":\"output\",\"Package\":\"command-line-arguments\",\"Output\":\"ok  \\tcommand-line-arguments\\t(cached)\\n\"}\r\n{\"Time\":\"2018-04-20T20:16:01.005079909+03:00\",\"Action\":\"pass\",\"Package\":\"command-line-arguments\",\"Elapsed\":0}\r\n```","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24973","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24973/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24973/comments","events_url":"https://api.github.com/repos/golang/go/issues/24973/events","html_url":"https://github.com/golang/go/issues/24973","id":316319581,"number":24973,"title":"x/crypto: cryptobyte: encode int64 with context-specific tags","user":{"login":"mirtchovski","id":2047078,"avatar_url":"https://avatars2.githubusercontent.com/u/2047078?v=4","gravatar_id":"","url":"https://api.github.com/users/mirtchovski","html_url":"https://github.com/mirtchovski","followers_url":"https://api.github.com/users/mirtchovski/followers","following_url":"https://api.github.com/users/mirtchovski/following{/other_user}","gists_url":"https://api.github.com/users/mirtchovski/gists{/gist_id}","starred_url":"https://api.github.com/users/mirtchovski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mirtchovski/subscriptions","organizations_url":"https://api.github.com/users/mirtchovski/orgs","repos_url":"https://api.github.com/users/mirtchovski/repos","events_url":"https://api.github.com/users/mirtchovski/events{/privacy}","received_events_url":"https://api.github.com/users/mirtchovski/received_events","type":"User","site_admin":false},"labels":[{"id":236419512,"url":"https://api.github.com/repos/golang/go/labels/Proposal","name":"Proposal","color":"ededed","default":false},{"id":874035922,"url":"https://api.github.com/repos/golang/go/labels/Proposal-Crypto","name":"Proposal-Crypto","color":"890b3b","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/22","html_url":"https://github.com/golang/go/milestone/22","labels_url":"https://api.github.com/repos/golang/go/milestones/22/labels","id":1067491,"number":22,"title":"Unreleased","description":"Issues that do not affect released Go code and binaries.\r\n","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":825,"closed_issues":1371,"state":"open","created_at":"2015-04-14T18:48:22Z","updated_at":"2018-04-21T00:07:30Z","due_on":"2099-12-31T08:00:00Z","closed_at":null},"comments":5,"created_at":"2018-04-20T15:47:53Z","updated_at":"2018-04-20T17:12:05Z","closed_at":"2018-04-20T17:12:05Z","author_association":"CONTRIBUTOR","body":"We frequently have to deal with asn.1 formatted with context-specific\r\ntags even for things like integers, for example:\r\n\r\nhttp://lapo.it/asn1js/#A0108004010203048102050682040708090A\r\n\r\nTo do that efficiently with cryptobyte I've added two additional\r\nfunctions to marshal such values to and from int64:\r\n\r\nfunc (b *Builder) AddInt64(tag asn1.Tag, v int64)\r\nfunc (s *String) ReadASN1Int64(out *int64, tag asn1.Tag) bool\r\n\r\nI assume versions for uint64 will also be required.\r\n\r\nDoes it make sense to add those to the cryptobyte API or is there a workaround?","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24972","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24972/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24972/comments","events_url":"https://api.github.com/repos/golang/go/issues/24972/events","html_url":"https://github.com/golang/go/issues/24972","id":316304244,"number":24972,"title":"Variadic func changes []byte(s) cap","user":{"login":"inancgumus","id":621232,"avatar_url":"https://avatars3.githubusercontent.com/u/621232?v=4","gravatar_id":"","url":"https://api.github.com/users/inancgumus","html_url":"https://github.com/inancgumus","followers_url":"https://api.github.com/users/inancgumus/followers","following_url":"https://api.github.com/users/inancgumus/following{/other_user}","gists_url":"https://api.github.com/users/inancgumus/gists{/gist_id}","starred_url":"https://api.github.com/users/inancgumus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/inancgumus/subscriptions","organizations_url":"https://api.github.com/users/inancgumus/orgs","repos_url":"https://api.github.com/users/inancgumus/repos","events_url":"https://api.github.com/users/inancgumus/events{/privacy}","received_events_url":"https://api.github.com/users/inancgumus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-20T15:05:19Z","updated_at":"2018-04-20T18:22:11Z","closed_at":"2018-04-20T18:22:11Z","author_association":"CONTRIBUTOR","body":"### What version of Go are you using (`go version`)?\r\nGo 1.10.1\r\n\r\n### Does this issue reproduce with the latest release?\r\nYes.\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\ndarwin/amd64\r\n\r\n### What did you do?\r\nWhen you call a variadic func with a byte slice, calling `cap` is creating different results.\r\n\r\n```go\r\nx := []byte(\"a\")\r\n    \r\n// without this, Println prints 32 32\r\nfunc(a ...[]byte) {}(x)\r\n\t\r\nfmt.Println(cap(x), cap([]byte(\"a\"))) // 8 32\r\n```\r\n\r\nhttps://play.golang.org/p/ZcrsUNAbPZr\r\n\r\n### What did you expect to see?\r\n32 32\r\n\r\n### What did you see instead?\r\n8 32","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24971","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24971/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24971/comments","events_url":"https://api.github.com/repos/golang/go/issues/24971/events","html_url":"https://github.com/golang/go/issues/24971","id":316295858,"number":24971,"title":"x/sys/unix: add constants and types from hdreg.h for Linux block device ioctls","user":{"login":"mdlayher","id":1926905,"avatar_url":"https://avatars3.githubusercontent.com/u/1926905?v=4","gravatar_id":"","url":"https://api.github.com/users/mdlayher","html_url":"https://github.com/mdlayher","followers_url":"https://api.github.com/users/mdlayher/followers","following_url":"https://api.github.com/users/mdlayher/following{/other_user}","gists_url":"https://api.github.com/users/mdlayher/gists{/gist_id}","starred_url":"https://api.github.com/users/mdlayher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdlayher/subscriptions","organizations_url":"https://api.github.com/users/mdlayher/orgs","repos_url":"https://api.github.com/users/mdlayher/repos","events_url":"https://api.github.com/users/mdlayher/events{/privacy}","received_events_url":"https://api.github.com/users/mdlayher/received_events","type":"User","site_admin":false},"labels":[{"id":199753215,"url":"https://api.github.com/repos/golang/go/labels/OS-Linux","name":"OS-Linux","color":"ededed","default":false}],"state":"closed","locked":false,"assignee":{"login":"mdlayher","id":1926905,"avatar_url":"https://avatars3.githubusercontent.com/u/1926905?v=4","gravatar_id":"","url":"https://api.github.com/users/mdlayher","html_url":"https://github.com/mdlayher","followers_url":"https://api.github.com/users/mdlayher/followers","following_url":"https://api.github.com/users/mdlayher/following{/other_user}","gists_url":"https://api.github.com/users/mdlayher/gists{/gist_id}","starred_url":"https://api.github.com/users/mdlayher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdlayher/subscriptions","organizations_url":"https://api.github.com/users/mdlayher/orgs","repos_url":"https://api.github.com/users/mdlayher/repos","events_url":"https://api.github.com/users/mdlayher/events{/privacy}","received_events_url":"https://api.github.com/users/mdlayher/received_events","type":"User","site_admin":false},"assignees":[{"login":"mdlayher","id":1926905,"avatar_url":"https://avatars3.githubusercontent.com/u/1926905?v=4","gravatar_id":"","url":"https://api.github.com/users/mdlayher","html_url":"https://github.com/mdlayher","followers_url":"https://api.github.com/users/mdlayher/followers","following_url":"https://api.github.com/users/mdlayher/following{/other_user}","gists_url":"https://api.github.com/users/mdlayher/gists{/gist_id}","starred_url":"https://api.github.com/users/mdlayher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdlayher/subscriptions","organizations_url":"https://api.github.com/users/mdlayher/orgs","repos_url":"https://api.github.com/users/mdlayher/repos","events_url":"https://api.github.com/users/mdlayher/events{/privacy}","received_events_url":"https://api.github.com/users/mdlayher/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/22","html_url":"https://github.com/golang/go/milestone/22","labels_url":"https://api.github.com/repos/golang/go/milestones/22/labels","id":1067491,"number":22,"title":"Unreleased","description":"Issues that do not affect released Go code and binaries.\r\n","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":825,"closed_issues":1371,"state":"open","created_at":"2015-04-14T18:48:22Z","updated_at":"2018-04-21T00:07:30Z","due_on":"2099-12-31T08:00:00Z","closed_at":null},"comments":1,"created_at":"2018-04-20T14:43:26Z","updated_at":"2018-04-20T14:53:32Z","closed_at":"2018-04-20T14:53:31Z","author_association":"MEMBER","body":"I'd like to add some constants and types from [hdreg.h](https://elixir.bootlin.com/linux/latest/source/include/uapi/linux/hdreg.h) for the manipulation of block devices under Linux.\r\n\r\nI intend to use these in my [blo
8000
ck](https://github.com/mdlayher/block) package and believe they would be useful in @dswarbrick's [smart](https://github.com/dswarbrick/smart) package as well.\r\n\r\nI'll send a CL for this.","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24970","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24970/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24970/comments","events_url":"https://api.github.com/repos/golang/go/issues/24970/events","html_url":"https://github.com/golang/go/issues/24970","id":316292340,"number":24970,"title":"net/http: get does not work","user":{"login":"yyq2013","id":4711455,"avatar_url":"https://avatars1.githubusercontent.com/u/4711455?v=4","gravatar_id":"","url":"https://api.github.com/users/yyq2013","html_url":"https://github.com/yyq2013","followers_url":"https://api.github.com/users/yyq2013/followers","following_url":"https://api.github.com/users/yyq2013/following{/other_user}","gists_url":"https://api.github.com/users/yyq2013/gists{/gist_id}","starred_url":"https://api.github.com/users/yyq2013/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yyq2013/subscriptions","organizations_url":"https://api.github.com/users/yyq2013/orgs","repos_url":"https://api.github.com/users/yyq2013/repos","events_url":"https://api.github.com/users/yyq2013/events{/privacy}","received_events_url":"https://api.github.com/users/yyq2013/received_events","type":"User","site_admin":false},"labels":[{"id":373402289,"url":"https://api.github.com/repos/golang/go/labels/NeedsInvestigation","name":"NeedsInvestigation","color":"ededed","default":false},{"id":199753992,"url":"https://api.github.com/repos/golang/go/labels/OS-Windows","name":"OS-Windows","color":"ededed","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/62","html_url":"https://github.com/golang/go/milestone/62","labels_url":"https://api.github.com/repos/golang/go/milestones/62/labels","id":2827591,"number":62,"title":"Go1.11","description":"","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":881,"closed_issues":342,"state":"open","created_at":"2017-10-10T13:39:17Z","updated_at":"2018-04-21T04:19:32Z","due_on":"2018-07-31T07:00:00Z","closed_at":null},"comments":14,"created_at":"2018-04-20T14:34:12Z","updated_at":"2018-04-21T03:36:31Z","closed_at":"2018-04-21T03:36:31Z","author_association":"NONE","body":"Please answer these questions before submitting your issue. Thanks!\r\n\r\n\r\n### What version of Go are you using (`go version`)?\r\nC:\\WINDOWS\\system32>go version\r\ngo version go1.10.1 windows/amd64\r\n\r\n### Does this issue reproduce with the latest release?\r\nYes\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nwin10 64bit\r\nC:\\WINDOWS\\system32>go env\r\nset GOARCH=amd64\r\nset GOBIN=\r\nset GOCACHE=C:\\Users\\Administrator\\AppData\\Local\\go-build\r\nset GOEXE=.exe\r\nset GOHOSTARCH=amd64\r\nset GOHOSTOS=windows\r\nset GOOS=windows\r\nset GOPATH=C:\\Users\\Administrator\\go\r\nset GORACE=\r\nset GOROOT=C:\\Go\r\nset GOTMPDIR=\r\nset GOTOOLDIR=C:\\Go\\pkg\\tool\\windows_amd64\r\nset GCCGO=gccgo\r\nset CC=gcc\r\nset CXX=g++\r\nset CGO_ENABLED=1\r\nset CGO_CFLAGS=-g -O2\r\nset CGO_CPPFLAGS=\r\nset CGO_CXXFLAGS=-g -O2\r\nset CGO_FFLAGS=-g -O2\r\nset CGO_LDFLAGS=-g -O2\r\nset PKG_CONFIG=pkg-config\r\nset GOGCCFLAGS=-m64 -mthreads -fmessage-length=0 -fdebug-prefix-map=C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\go-build873199622=/tmp/go-build -gno-record-gcc-switches\r\n\r\n### What did you do?\r\nhttp.Get(url) doesn't work with default transport, if I set a custom it works fine like following:\r\n\r\n```\r\n\ttr := &http.Transport{}\r\n\thttp.DefaultClient.Transport =tr\r\n        http.Get(url)...\r\n```\r\n\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"net/http\"\r\n\t\"io/ioutil\"\r\n\t\"fmt\"\r\n\t\"log\"\r\n)\r\n\r\nfunc main() {\r\n\t//tr := &http.Transport{}\r\n\t//http.DefaultClient.Transport =tr\r\n\tres, err:= http.Get(\"https://www.github.com/\")\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t\treturn\r\n\t}\r\n\r\n\tdefer res.Body.Close()\r\n\r\n\tbody,err:=ioutil.ReadAll(res.Body)\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t\treturn\r\n\t}\r\n\r\n\tfmt.Println(string(body))\r\n}\r\n```\r\n\r\n### What did you expect to see?\r\nPrint the html content\r\n\r\n### What did you see instead?\r\nThere is an error with less meaning.\r\nGet https://www.github.com/: unexpected EOF","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24962","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24962/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24962/comments","events_url":"https://api.github.com/repos/golang/go/issues/24962/events","html_url":"https://github.com/golang/go/issues/24962","id":316120540,"number":24962,"title":"gccgo: build process should not be serial bottlenecked","user":{"login":"ppbrown","id":1723129,"avatar_url":"https://avatars1.githubusercontent.com/u/1723129?v=4","gravatar_id":"","url":"https://api.github.com/users/ppbrown","html_url":"https://github.com/ppbrown","followers_url":"https://api.github.com/users/ppbrown/followers","following_url":"https://api.github.com/users/ppbrown/following{/other_user}","gists_url":"https://api.github.com/users/ppbrown/gists{/gist_id}","starred_url":"https://api.github.com/users/ppbrown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ppbrown/subscriptions","organizations_url":"https://api.github.com/users/ppbrown/orgs","repos_url":"https://api.github.com/users/ppbrown/repos","events_url":"https://api.github.com/users/ppbrown/events{/privacy}","received_events_url":"https://api.github.com/users/ppbrown/received_events","type":"User","site_admin":false},"labels":[{"id":150880243,"url":"https://api.github.com/repos/golang/go/labels/help%20wanted","name":"help wanted","color":"fbca04","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/23","html_url":"https://github.com/golang/go/milestone/23","labels_url":"https://api.github.com/repos/golang/go/milestones/23/labels","id":1069171,"number":23,"title":"Gccgo","description":"Issues to be fixed in the gccgo distribution (as opposed to the main Go repos).\r\n","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":25,"closed_issues":161,"state":"open","created_at":"2015-04-15T17:34:15Z","updated_at":"2018-04-20T07:02:50Z","due_on":null,"closed_at":null},"comments":6,"created_at":"2018-04-20T04:04:53Z","updated_at":"2018-04-20T20:53:21Z","closed_at":"2018-04-20T04:54:24Z","author_association":"NONE","body":"this is for the gcc 7.3.0 codebase.\r\n\r\nI have a 100 cpu-thread box.\r\nI'm running with gmake -j 50\r\n\r\nIt hits some part of the go build stage.. and then grinds to a crawl.\r\n\r\n\r\nhere is a snippet of some of the crazy long output at this point:\r\n\r\nf=`echo net/smtp.lo | sed -e 's/.lo$/.o/'`; gobjcopy -j .go_export $f net/smtp.s-gox.tmp; /bin/sh ../../../../libgo/mvifdiff.sh net/smtp.s-gox.tmp `echo net/smtp.s-gox | sed -e 's/s-gox/gox/'`\r\necho timestamp > net/smtp.s-gox\r\n\r\n\r\nsorry I'm not a GNU makefile expert, so cant suggest a patch :(\r\nI just know that when it builds normal C or C++ based libs, it does the nice massively parallel compiles, but when it hits that stage of compling, with\r\nlibtool (blahblah) gccgo blahblah..\r\n\r\nsuddenly, it seems to stop parallelizing for a long time, comparatively speaking \r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24957","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24957/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24957/comments","events_url":"https://api.github.com/repos/golang/go/issues/24957/events","html_url":"https://github.com/golang/go/issues/24957","id":316086318,"number":24957,"title":"Cannot range over named type literal when underlying type is a slice or array","user":{"login":"albrow","id":800857,"avatar_url":"https://avatars3.githubusercontent.com/u/800857?v=4","gravatar_id":"","url":"https://api.github.com/users/albrow","html_url":"https://github.com/albrow","followers_url":"https://api.github.com/users/albrow/followers","following_url":"https://api.github.com/users/albrow/following{/other_user}","gists_url":"https://api.github.com/users/albrow/gists{/gist_id}","starred_url":"https://api.github.com/users/albrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albrow/subscriptions","organizations_url":"https://api.github.com/users/albrow/orgs","repos_url":"https://api.github.com/users/albrow/repos","events_url":"https://api.github.com/users/albrow/events{/privacy}","received_events_url":"https://api.github.com/users/albrow/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-20T00:36:31Z","updated_at":"2018-04-20T01:02:22Z","closed_at":"2018-04-20T01:02:22Z","author_association":"CONTRIBUTOR","body":"### What version of Go are you using (`go version`)?\r\n\r\n1.10.1\r\n\r\n### Does this issue reproduce with the latest release?\r\n\r\nYes\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\nI'm running this example on the Go Playground. Since the result is a syntax error, I don't believe operating system and processor architecture are relevant. (However, I can provide information about my machine if needed).\r\n\r\n### What did you do?\r\n\r\nI attempted to run the following program ([available on the Playground](https://play.golang.org/p/LAL1QhyVrmo)):\r\n\r\n```go\r\ntype T []int\r\n\r\nfunc main() {\r\n\tfor _, x := range T{1, 2, 3} {\r\n\t\tfmt.Println(x)\r\n\t}\r\n}\r\n```\r\n\r\n### What did you expect to see?\r\n\r\nI would expect the code to compile and run.\r\n\r\n### What did you see instead?\r\n\r\nThe Go compiler produced a syntax error:\r\n\r\n```\r\nprog.go:10:29: syntax error: unexpected }, expecting := or = or comma\r\nprog.go:13:1: syntax error: non-declaration statement outside function body\r\n```\r\n\r\n### Additional Info\r\n\r\nThe Go Spec defines a [`RangeClause`](https://golang.org/ref/spec#RangeClause) as:\r\n\r\n```\r\nRangeClause = [ ExpressionList \"=\" | IdentifierList \":=\" ] \"range\" Expression .\r\n```\r\n\r\nThe key point here is that an `Expression` is expected after the `\"range\"` literal. Following the definitions in the spec shows that:\r\n\r\n1.  [`CompositeLit`](https://golang.org/ref/spec#Composite_literals) is an `Expression`\r\n2. The `LiteralType` component of a `CompositeLit` can be a `TypeName` (\"T\" in the example above).\r\n\r\nThere is nothing in the spec that I could find to indicate that this syntax is not allowed.\r\n\r\nThe following examples do actually compile and run as expected:\r\n\r\n[Playground Link](https://play.golang.org/p/uGu59fP89HW)\r\n\r\n```go\r\nfunc main() {\r\n\tfor _, x := range []int{1, 2, 3} {\r\n\t\tfmt.Println(x)\r\n\t}\r\n}\r\n```\r\n\r\n[Playground Link](https://play.golang.org/p/j_SxcL3sf5M)\r\n\r\n```go\r\ntype T []int\r\n\r\nfunc main() {\r\n\tfor _, x := range T([]int{1, 2, 3}) {\r\n\t\tfmt.Println(x)\r\n\t}\r\n}\r\n```\r\n\r\n[Playground Link](https://play.golang.org/p/2xRJXqAu3Qf)\r\n\r\n```go\r\ntype T []int\r\n\r\nfunc main() {\r\n\tlist := T{1, 2, 3}\r\n\tfor _, x := range list {\r\n\t\tfmt.Println(x)\r\n\t}\r\n}\r\n```\r\n\r\nI believe this is happening because the `'{'` after the type name is being interpreted as the beginning of the `BLOCK`.\r\n\r\nI've recently spent some time studying the code for the Go parser. At first glance it seems like it would be difficult to distinguish between the beginning of a block and a composite literal expression without arbitrary lookahead. One possible solution is to simply add a note to the spec indicating that this syntax is not allowed.\r\n\r\nIt is also possible that the Go Spec contains many such edge cases, and noting all of them in a public document is impractical. I just wanted to bring some attention to this particular case to see if it is worth doing something about.\r\n","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24954","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24954/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24954/comments","events_url":"https://api.github.com/repos/golang/go/issues/24954/events","html_url":"https://github.com/golang/go/issues/24954","id":316022490,"number":24954,"title":"Add fmt.Error()","user":{"login":"hgdsraj","id":18648613,"avatar_url":"https://avatars3.githubusercontent.com/u/18648613?v=4","gravatar_id":"","url":"https://api.github.com/users/hgdsraj","html_url":"https://github.com/hgdsraj","followers_url":"https://api.github.com/users/hgdsraj/followers","following_url":"https://api.github.com/users/hgdsraj/following{/other_user}","gists_url":"https://api.github.com/users/hgdsraj/gists{/gist_id}","starred_url":"https://api.github.com/users/hgdsraj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hgdsraj/subscriptions","organizations_url":"https://api.github.com/users/hgdsraj/orgs","repos_url":"https://api.github.com/users/hgdsraj/repos","events_url":"https://api.github.com/users/hgdsraj/events{/privacy}","received_events_url":"https://api.github.com/users/hgdsraj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-19T20:08:16Z","updated_at":"2018-04-19T20:09:38Z","closed_at":"2018-04-19T20:09:38Z","author_association":"NONE","body":"Please answer these questions before submitting your issue. Thanks!\r\n\r\n\r\n### What version of Go are you using (`go version`)?\r\n1.10\r\n\r\n\r\n### Does this issue reproduce with the latest release?\r\nYes\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nAmd X86-64 -> Darwin\r\n\r\n### What did you do?\r\nNo error, just fmt.Error would be useful\r\n\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\n\r\n### What did you expect to see?\r\nAn fmt.Error\r\n\r\n### What did you see instead?\r\nno fmt.Error\r\n","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24952","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24952/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24952/comments","events_url":"https://api.github.com/repos/golang/go/issues/24952/events","html_url":"https://github.com/golang/go/issues/24952","id":316007083,"number":24952,"title":"sync: add example for Cond","user":{"login":"kevinburke","id":234019,"avatar_url":"https://avatars1.githubusercontent.com/u/234019?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinburke","html_url":"https://github.com/kevinburke","followers_url":"https://api.github.com/users/kevinburke/followers","following_url":"https://api.github.com/users/kevinburke/following{/other_user}","gists_url":"https://api.github.com/users/kevinburke/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinburke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinburke/subscriptions","organizations_url":"https://api.github.com/users/kevinburke/orgs","repos_url":"https://api.github.com/users/kevinburke/repos","events_url":"https://api.github.com/users/kevinburke/events{/privacy}","received_events_url":"https://api.github.com/users/kevinburke/received_events","type":"User","site_admin":false},"labels":[{"id":150880209,"url":"https://api.github.com/repos/golang/go/labels/Documentation","name":"Documentation","color":"aaffaa","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/6","html_url":"https://github.com/golang/go/milestone/6","labels_url":"https://api.github.com/repos/golang/go/milestones/6/labels","id":1055141,"number":6,"title":"Unplanned","description":"No plan to fix in any specific release.\r\n","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":1283,"closed_issues":1022,"state":"open","created_at":"2015-04-06T20:47:19Z","updated_at":"2018-04-21T06:04:14Z","due_on":"2099-12-31T08:00:00Z","closed_at":null},"comments":3,"created_at":"2018-04-19T19:20:50Z","updated_at":"2018-04-19T20:59:15Z","closed_at":"2018-04-19T19:44:53Z","author_association":"CONTRIBUTOR","body":"It would be nice to have a complete example for the Cond struct - signaling or broadcasting from one goroutine, and receiving it in another one.","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24950","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24950/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24950/comments","events_url":"https://api.github.com/repos/golang/go/issues/24950/events","html_url":"https://github.com/golang/go/issues/24950","id":315948643,"number":24950,"title":"syscall: Segfault on Select on ARM64 and MIPS64","user":{"login":"zx2c4","id":10643,"avatar_url":"https://avatars1.githubusercontent.com/u/10643?v=4","gravatar_id":"","url":"https://api.github.com/users/zx2c4","html_url":"https://github.com/zx2c4","followers_url":"https://api.github.com/users/zx2c4/followers","following_url":"https://api.github.com/users/zx2c4/following{/other_user}","gists_url":"https://api.github.com/users/zx2c4/gists{/gist_id}","starred_url":"https://api.github.com/users/zx2c4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zx2c4/subscriptions","organizations_url":"https://api.github.com/users/zx2c4/orgs","repos_url":"https://api.github.com/users/zx2c4/repos","events_url":"https://api.github.com/users/zx2c4/events{/privacy}","received_events_url":"https://api.github.com/users/zx2c4/received_events","type":"User","site_admin":false},"labels":[{"id":357033853,"url":"https://api.github.com/repos/golang/go/labels/WaitingForInfo","name":"WaitingForInfo","color":"ededed","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-04-19T16:20:26Z","updated_at":"2018-04-19T16:37:57Z","closed_at":"2018-04-19T16:37:43Z","author_association":"CONTRIBUTOR","body":"The `select` syscall takes a timespec param. If it contains a time of zero, select returns immediately. If it contains a positive amount of time, select times out after that amount of time. If it is null, it never times out. Sometimes this latter behavior is desirable. It's well documented, mentioned in the man page, and used widely. However, https://go-review.googlesource.com/c/sys/+/70610 introduced a regression whereby Go will segfault if the timespec is nil, on ARM64 and MIPS64.\r\n\r\nThe current code for those platforms is:\r\n\r\n```go\r\nfunc Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error) {\r\n        ts := Timespec{Sec: timeout.Sec, Nsec: timeout.Usec * 1000}\r\n        return pselect(nfd, r, w, e, &ts, nil)\r\n}\r\n```\r\n\r\nThe correct code should be:\r\n\r\n```go\r\nfunc Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error) {\r\n        if timeout != nil {\r\n                ts := Timespec{Sec: timeout.Sec, Nsec: timeout.Usec * 1000}\r\n                return pselect(nfd, r, w, e, &ts, nil)\r\n        } else {\r\n                return pselect(nfd, r, w, e, nil, nil)\r\n        }\r\n}\r\n```\r\n\r\nCurrently I'm having to patch my local installation of Go to produce working executables for Android devices.\r\n\r\nCC: @ianlancetaylor @tklauser ","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24948","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24948/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24948/comments","events_url":"https://api.github.com/repos/golang/go/issues/24948/events","html_url":"https://github.com/golang/go/issues/24948","id":315889544,"number":24948,"title":"go test -bench","user":{"login":"zjb0807","id":16496415,"avatar_url":"https://avatars0.githubusercontent.com/u/16496415?v=4","gravatar_id":"","url":"https://api.github.com/users/zjb0807","html_url":"https://github.com/zjb0807","followers_url":"https://api.github.com/users/zjb0807/followers","following_url":"https://api.github.com/users/zjb0807/following{/other_user}","gists_url":"https://api.github.com/users/zjb0807/gists{/gist_id}","starred_url":"https://api.github.com/users/zjb0807/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zjb0807/subscriptions","organizations_url":"https://api.github.com/users/zjb0807/orgs","repos_url":"https://api.github.com/users/zjb0807/repos","events_url":"https://api.github.com/users/zjb0807/events{/privacy}","received_events_url":"https://api.github.com/users/zjb0807/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-19T13:56:52Z","updated_at":"2018-04-19T14:04:19Z","closed_at":"2018-04-19T14:04:07Z","author_association":"NONE","body":"Please answer these questions before submitting your issue. Thanks!\r\n\r\n\r\n### What version of Go are you using (`go version`)?\r\ngo1.10.1\r\n\r\n### Does this issue reproduce with the latest release?\r\nYES\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n```\r\n[chain33@localhost chain33]$ go env\r\nGOARCH=\"amd64\"\r\nGOBIN=\"/home/chain33/gopath/bin\"\r\nGOCACHE=\"/home/chain33/.cache/go-build\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/chain33/gopath\"\r\nGORACE=\"\"\r\nGOROOT=\"/home/chain33/go\"\r\nGOTMPDIR=\"\"\r\nGOTOOLDIR=\"/home/chain33/go/pkg/tool/linux_amd64\"\r\nGCCGO=\"gccgo\"\r\nCC=\"gcc\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\nCGO_CFLAGS=\"-g -O2\"\r\nCGO_CPPFLAGS=\"\"\r\nCGO_CXXFLAGS=\"-g -O2\"\r\nCGO_FFLAGS=\"-g -O2\"\r\nCGO_LDFLAGS=\"-g -O2\"\r\nPKG_CONFIG=\"pkg-config\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build079524249=/tmp/go-build -gno-record-gcc-switches\"\r\n```\r\n\r\n### What did you do?\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"testing\"\r\n)\r\nfunc Test_1(t *testing.T) {\r\n\tfmt.Println(\"Test_1\")\r\n}\r\n\r\nfunc Test_2(t *testing.T) {\r\n\tfmt.Println(\"Test_2\")\r\n}\r\n\r\nfunc Benchmark_1(b *testing.B) {\r\n\tfmt.Println(\"Benchmark_1\")\r\n}\r\n\r\nfunc Benchmark_2(b *testing.B) {\r\n\tfmt.Println(\"Benchmark_2\")\r\n}\r\n```\r\nto run:\r\n```\r\ngo test -bench=Benchmark_1\r\n```\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nA link on play.golang.org is best.\r\n\r\n\r\n### What did you expect to see?\r\n```\r\ngoos: linux\r\ngoarch: amd64\r\nBenchmark_1-4   \tBenchmark_1\r\nBenchmark_1\r\nBenchmark_1\r\nBenchmark_1\r\nBenchmark_1\r\n2000000000\t         0.00 ns/op\r\nPASS\r\nok  \t_/home/chain33\t0.006s\r\n```\r\n### What did you see instead?\r\n[chain33@localhost ~]$ go test -bench=Benchmark_1\r\n```\r\nTest_1\r\nTest_2\r\nBenchmark_1\r\ngoos: linux\r\ngoarch: amd64\r\nBenchmark_1-4   \tBenchmark_1\r\nBenchmark_1\r\nBenchmark_1\r\nBenchmark_1\r\nBenchmark_1\r\n2000000000\t         0.00 ns/op\r\nPASS\r\nok  \t_/home/chain33\t0.006s\r\n```\r\n\r\nWhen I specify benchmarks function name，why does Test_1, Test_2, Benchmark_1 run？","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24947","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24947/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24947/comments","events_url":"https://api.github.com/repos/golang/go/issues/24947/events","html_url":"https://github.com/golang/go/issues/24947","id":315846970,"number":24947,"title":"Nil pointer to struct implementing error interface is nil, but error(x) == nil returns false","user":{"login":"wallnutkraken","id":15041657,"avatar_url":"https://avatars2.githubusercontent.com/u/15041657?v=4","gravatar_id":"","url":"https://api.github.com/users/wallnutkraken","html_url":"https://github.com/wallnutkraken","followers_url":"https://api.github.com/users/wallnutkraken/followers","following_url":"https://api.github.com/users/wallnutkraken/following{/other_user}","gists_url":"https://api.github.com/users/wallnutkraken/gists{/gist_id}","starred_url":"https://api.github.com/users/wallnutkraken/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wallnutkraken/subscriptions","organizations_url":"https://api.github.com/users/wallnutkraken/orgs","repos_url":"https://api.github.com/users/wallnutkraken/repos","events_url":"https://api.github.com/users/wallnutkraken/events{/privacy}","received_events_url":"https://api.github.com/users/wallnutkraken/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-19T12:02:25Z","updated_at":"2018-04-19T12:39:18Z","closed_at":"2018-04-19T12:39:18Z","author_association":"NONE","body":"### What version of Go are you using (`go version`)?\r\ngo version go1.9.4 linux/amd64\r\n\r\n### Does this issue reproduce with the latest release?\r\nYes.\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/home/gnugat/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nGCCGO=\"gccgo\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build810068483=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\nCGO_CFLAGS=\"-g -O2\"\r\nCGO_CPPFLAGS=\"\"\r\nCGO_CXXFLAGS=\"-g -O2\"\r\nCGO_FFLAGS=\"-g -O2\"\r\nCGO_LDFLAGS=\"-g -O2\"\r\nPKG_CONFIG=\"pkg-config\"\r\n\r\n### What did you do?\r\nhttps://play.golang.org/p/x5Ix8wmC0Oj\r\n\r\n\r\n### What did you expect to see?\r\n```\r\nerrImpl is nil\r\nerror(errImpl) is nil\r\n```\r\n\r\n### What did you see instead?\r\n```\r\nerrImpl is nil\r\nErrImpl value: <nil>\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24944","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24944/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24944/comments","events_url":"https://api.github.com/repos/golang/go/issues/24944/events","html_url":"https://github.com/golang/go/issues/24944","id":315790268,"number":24944,"title":"cmd/compile: false positive error","user":{"login":"dotaheor","id":25079101,"avatar_url":"https://avatars3.githubusercontent.com/u/25079101?v=4","gravatar_id":"","url":"https://api.github.com/users/dotaheor","html_url":"https://github.com/dotaheor","followers_url":"https://api.github.com/users/dotaheor/followers","following_url":"https://api.github.com/users/dotaheor/following{/other_user}","gists_url":"https://api.github.com/users/dotaheor/gists{/gist_id}","starred_url":"https://api.github.com/users/dotaheor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dotaheor/subscriptions","organizations_url":"https://api.github.com/users/dotaheor/orgs","repos_url":"https://api.github.com/users/dotaheor/repos","events_url":"https://api.github.com/users/dotaheor/events{/privacy}","received_events_url":"https://api.github.com/users/dotaheor/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-19T09:09:06Z","updated_at":"2018-04-19T09:13:03Z","closed_at":"2018-04-19T09:13:03Z","author_association":"NONE","body":"\r\n### What version of Go are you using (`go version`)?\r\n\r\ngo version go1.10.1 linux/amd64\r\n\r\n### Does this issue reproduce with the latest release?\r\n\r\nyes\r\n\r\n### What did you do?\r\n\r\n```\r\npackage main\r\n\r\nfunc main() {\r\n\t// The following line compiles error: \r\n\t//     syntax error: unexpected return at end of statement\r\n\tstatRuneCount := func (s string) (n int) {for range s {n++} return}\r\n\tprintln(statRuneCount(\"abc\"))\r\n}\r\n```\r\n\r\n### What did you expect to see?\r\n\r\nNo errors.\r\n\r\n### What did you see instead?\r\n\r\n```\r\n./a.go:6:62: syntax error: unexpected return at end of statemen\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24942","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24942/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24942/comments","events_url":"https://api.github.com/repos/golang/go/issues/24942/events","html_url":"https://github.com/golang/go/issues/24942","id":315724893,"number":24942,"title":"net: File method of {TCP,UDP,IP,Unix}Conn and {TCP,Unix}Listener should leave the socket in nonblocking mode","user":{"login":"rothskeller","id":2825177,"avatar_url":"https://avatars0.githubusercontent.com/u/2825177?v=4","gravatar_id":"","url":"https://api.github.com/users/rothskeller","html_url":"https://github.com/rothskeller","followers_url":"https://api.github.com/users/rothskeller/followers","following_url":"https:
8000
//api.github.com/users/rothskeller/following{/other_user}","gists_url":"https://api.github.com/users/rothskeller/gists{/gist_id}","starred_url":"https://api.github.com/users/rothskeller/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rothskeller/subscriptions","organizations_url":"https://api.github.com/users/rothskeller/orgs","repos_url":"https://api.github.com/users/rothskeller/repos","events_url":"https://api.github.com/users/rothskeller/events{/privacy}","received_events_url":"https://api.github.com/users/rothskeller/received_events","type":"User","site_admin":false},"labels":[{"id":373399998,"url":"https://api.github.com/repos/golang/go/labels/NeedsFix","name":"NeedsFix","color":"ededed","default":false},{"id":150880243,"url":"https://api.github.com/repos/golang/go/labels/help%20wanted","name":"help wanted","color":"fbca04","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/62","html_url":"https://github.com/golang/go/milestone/62","labels_url":"https://api.github.com/repos/golang/go/milestones/62/labels","id":2827591,"number":62,"title":"Go1.11","description":"","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":881,"closed_issues":342,"state":"open","created_at":"2017-10-10T13:39:17Z","updated_at":"2018-04-21T04:19:32Z","due_on":"2018-07-31T07:00:00Z","closed_at":null},"comments":11,"created_at":"2018-04-19T04:35:35Z","updated_at":"2018-04-20T04:05:34Z","closed_at":"2018-04-19T23:34:22Z","author_association":"NONE","body":"### What version of Go are you using (`go version`)?\r\n1.10.1\r\n\r\n### Does this issue reproduce with the latest release?\r\nYes.\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nlinux/amd64 and darwin/amd64\r\n\r\n### What did you do?\r\n\r\n```go\r\nlistener, _ := net.Listen(\"tcp\", \":8000\")\r\nlistenerFH, _ := listener.(*net.TCPListener).File()\r\nserver.Serve(listener)\r\n// later, in a different goroutine\r\nserver.Shutdown(context.Background())\r\n```\r\n\r\n### What did you expect to see?\r\n\r\nServer graceful shutdown.\r\n\r\n### What did you see instead?\r\n\r\nShutdown() returned immediately but Serve() never returned.\r\n\r\n### Diagnosis\r\n\r\nThe call to File() on the listener puts the socket in blocking mode.  As a result, when the listener is closed, the Accept() called by Serve() does not return.  Note that, if the call to File() is moved so that it occurs after the call to Accept(), the problem does not occur.\r\n\r\nResponse from iant@golang.org on golang-nuts, April 18, 2018:\r\n\r\n> Before about Go 1.9 or so the os package could not handle a non-blocking descriptor, so File had to change the connection to blocking mode in order to make it usable.  Now, however, the os package does use nonblocking descriptors where possible.  We could probably change the File method to use a nonblocking *os.File.  Please do open an issue for that.\r\n","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24941","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24941/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24941/comments","events_url":"https://api.github.com/repos/golang/go/issues/24941/events","html_url":"https://github.com/golang/go/issues/24941","id":315716713,"number":24941,"title":"x/mobile/cmd/gomobile: gomobile bind fails a package importing gl","user":{"login":"hajimehoshi","id":16950,"avatar_url":"https://avatars2.githubusercontent.com/u/16950?v=4","gravatar_id":"","url":"https://api.github.com/users/hajimehoshi","html_url":"https://github.com/hajimehoshi","followers_url":"https://api.github.com/users/hajimehoshi/followers","following_url":"https://api.github.com/users/hajimehoshi/following{/other_user}","gists_url":"https://api.github.com/users/hajimehoshi/gists{/gist_id}","starred_url":"https://api.github.com/users/hajimehoshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hajimehoshi/subscriptions","organizations_url":"https://api.github.com/users/hajimehoshi/orgs","repos_url":"https://api.github.com/users/hajimehoshi/repos","events_url":"https://api.github.com/users/hajimehoshi/events{/privacy}","received_events_url":"https://api.github.com/users/hajimehoshi/received_events","type":"User","site_admin":false},"labels":[{"id":651551874,"url":"https://api.github.com/repos/golang/go/labels/mobile","name":"mobile","color":"A4C639","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/22","html_url":"https://github.com/golang/go/milestone/22","labels_url":"https://api.github.com/repos/golang/go/milestones/22/labels","id":1067491,"number":22,"title":"Unreleased","description":"Issues that do not affect released Go code and binaries.\r\n","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":825,"closed_issues":1371,"state":"open","created_at":"2015-04-14T18:48:22Z","updated_at":"2018-04-21T00:07:30Z","due_on":"2099-12-31T08:00:00Z","closed_at":null},"comments":6,"created_at":"2018-04-19T03:38:45Z","updated_at":"2018-04-20T08:11:16Z","closed_at":"2018-04-20T08:11:16Z","author_association":"CONTRIBUTOR","body":"### What version of Go are you using (`go version`)?\r\n\r\n```\r\ngo version go1.10 darwin/amd64\r\n```\r\n\r\n### Does this issue reproduce with the latest release?\r\n\r\nYes\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\n```\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOCACHE=\"/Users/hajimehoshi/Library/Caches/go-build\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"darwin\"\r\nGOOS=\"darwin\"\r\nGOPATH=\"/Users/hajimehoshi/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTMPDIR=\"\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\r\nGCCGO=\"gccgo\"\r\nCC=\"clang\"\r\nCXX=\"clang++\"\r\nCGO_ENABLED=\"1\"\r\nCGO_CFLAGS=\"-g -O2\"\r\nCGO_CPPFLAGS=\"\"\r\nCGO_CXXFLAGS=\"-g -O2\"\r\nCGO_FFLAGS=\"-g -O2\"\r\nCGO_LDFLAGS=\"-g -O2\"\r\nPKG_CONFIG=\"pkg-config\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/7t/qw3np69559591s1v0mk5_p1m0000gn/T/go-build050927311=/tmp/go-build -gno-record-gcc-switches -fno-common\"\r\n```\r\n\r\n### What did you do?\r\n\r\n```\r\n$ cat $GOPATH/src/github.com/hajimehoshi/gomobilebindtest/test.go \r\n// +build android\r\n\r\npackage gomobilebindtest\r\n\r\nimport (\r\n        _ \"golang.org/x/mobile/gl\"\r\n)\r\n\r\nfunc Foo() {}\r\n\r\n$ gomobile bind -v github.com/hajimehoshi/gomobilebindtest\r\n```\r\n\r\n\r\n### What did you expect to see?\r\n\r\nBuilding succeeds.\r\n\r\n\r\n### What did you see instead?\r\n\r\nBuilding fails with this error:\r\n\r\n```\r\ntype-checking package \"github.com/hajimehoshi/gomobilebindtest\" failed (/Users/hajimehoshi/go/src/github.com/hajimehoshi/gomobilebindtest/test.go:6:4: could not import golang.org/x/mobile/gl (type-checking package \"golang.org/x/mobile/gl\" failed (/Users/hajimehoshi/go/src/golang.org/x/mobile/gl/gl.go:20:12: undeclared name: context)))\r\ncan't load package: package gobind: cannot find package \"gobind\" in any of:\r\n        /usr/local/go/src/gobind (from $GOROOT)\r\n        /var/folders/7t/qw3np69559591s1v0mk5_p1m0000gn/T/gomobile-work-299819452/src/gobind (from $GOPATH)\r\n        /Users/hajimehoshi/go/src/gobind\r\ngomobile: go build -v -buildmode=c-shared -o=/var/folders/7t/qw3np69559591s1v0mk5_p1m0000gn/T/gomobile-work-299819452/android/src/main/jniLibs/armeabi-v7a/libgojni.so gobind failed: exit status 1\r\n```","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24937","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24937/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24937/comments","events_url":"https://api.github.com/repos/golang/go/issues/24937/events","html_url":"https://github.com/golang/go/issues/24937","id":315600148,"number":24937,"title":"cmd/compile: optimize switch string(byteSlice) lookups","user":{"login":"dchenk","id":17372886,"avatar_url":"https://avatars1.githubusercontent.com/u/17372886?v=4","gravatar_id":"","url":"https://api.github.com/users/dchenk","html_url":"https://github.com/dchenk","followers_url":"https://api.github.com/users/dchenk/followers","following_url":"https://api.github.com/users/dchenk/following{/other_user}","gists_url":"https://api.github.com/users/dchenk/gists{/gist_id}","starred_url":"https://api.github.com/users/dchenk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dchenk/subscriptions","organizations_url":"https://api.github.com/users/dchenk/orgs","repos_url":"https://api.github.com/users/dchenk/repos","events_url":"https://api.github.com/users/dchenk/events{/privacy}","received_events_url":"https://api.github.com/users/dchenk/received_events","type":"User","site_admin":false},"labels":[{"id":373399998,"url":"https://api.github.com/repos/golang/go/labels/NeedsFix","name":"NeedsFix","color":"ededed","default":false},{"id":150880191,"url":"https://api.github.com/repos/golang/go/labels/Performance","name":"Performance","color":"ededed","default":false},{"id":150880243,"url":"https://api.github.com/repos/golang/go/labels/help%20wanted","name":"help wanted","color":"fbca04","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/6","html_url":"https://github.com/golang/go/milestone/6","labels_url":"https://api.github.com/repos/golang/go/milestones/6/labels","id":1055141,"number":6,"title":"Unplanned","description":"No plan to fix in any specific release.\r\n","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":1283,"closed_issues":1022,"state":"open","created_at":"2015-04-06T20:47:19Z","updated_at":"2018-04-21T06:04:14Z","due_on":"2099-12-31T08:00:00Z","closed_at":null},"comments":4,"created_at":"2018-04-18T18:51:55Z","updated_at":"2018-04-21T00:51:28Z","closed_at":"2018-04-21T00:51:28Z","author_association":"CONTRIBUTOR","body":"I see this pattern commonly:\r\n```\r\nswitch string(byteSlice) {\r\ncase \"some_key\":\r\n    // Stuff ...\r\ncase \"another\":\r\n    // Stuff ...\r\n// More cases ...\r\n}\r\n```\r\n(Instances of this pattern exist in the standard library.)\r\n\r\nHere an allocation is made for the string, copying the contents of the `[]byte`. It'd be great if the contents of the slice could be used without an allocation of a string, using simply a string header pointing to the same location as the slice. This will avoid creating a ton of garbage.\r\n\r\nThis is the same kind of proposal as #3512 by @bradfitz (and I think the implementation would look similar).","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24933","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24933/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24933/comments","events_url":"https://api.github.com/repos/golang/go/issues/24933/events","html_url":"https://github.com/golang/go/issues/24933","id":315584904,"number":24933,"title":"x/tools: fix mixed style of indentation in javascript files","user":{"login":"ysmolsky","id":140245,"avatar_url":"https://avatars2.githubusercontent.com/u/140245?v=4","gravatar_id":"","url":"https://api.github.com/users/ysmolsky","html_url":"https://github.com/ysmolsky","followers_url":"https://api.github.com/users/ysmolsky/followers","following_url":"https://api.github.com/users/ysmolsky/following{/other_user}","gists_url":"https://api.github.com/users/ysmolsky/gists{/gist_id}","starred_url":"https://api.github.com/users/ysmolsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ysmolsky/subscriptions","organizations_url":"https://api.github.com/users/ysmolsky/orgs","repos_url":"https://api.github.com/users/ysmolsky/repos","events_url":"https://api.github.com/users/ysmolsky/events{/privacy}","received_events_url":"https://api.github.com/users/ysmolsky/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/22","html_url":"https://github.com/golang/go/milestone/22","labels_url":"https://api.github.com/repos/golang/go/milestones/22/labels","id":1067491,"number":22,"title":"Unreleased","description":"Issues that do not affect released Go code and binaries.\r\n","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":825,"closed_issues":1371,"state":"open","created_at":"2015-04-14T18:48:22Z","updated_at":"2018-04-21T00:07:30Z","due_on":"2099-12-31T08:00:00Z","closed_at":null},"comments":7,"created_at":"2018-04-18T18:05:03Z","updated_at":"2018-04-18T20:17:34Z","closed_at":"2018-04-18T18:34:42Z","author_association":"MEMBER","body":"While working in x/tool/... and x/playground with JS I have encountered mix of indentation, 2/4 spaces and tabs. It’s confusing to edit such files.  For example in emacs I have to constantly fight it by switching indent-mode.\r\n\r\nI would like to fix this by agreeing to use tabs only (following go style) and fix all files to the unified format.\r\n\r\nI am very eager to do this.\r\n\r\n@andybons @bradfitz ","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24925","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24925/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24925/comments","events_url":"https://api.github.com/repos/golang/go/issues/24925/events","html_url":"https://github.com/golang/go/issues/24925","id":315563849,"number":24925,"title":"runtime: sigprof handler crashes backtracing runtime.nanotime","user":{"login":"heschik","id":24611692,"avatar_url":"https://avatars1.githubusercontent.com/u/24611692?v=4","gravatar_id":"","url":"https://api.github.com/users/heschik","html_url":"https://github.com/heschik","followers_url":"https://api.github.com/users/heschik/followers","following_url":"https://api.github.com/users/heschik/following{/other_user}","gists_url":"https://api.github.com/users/heschik/gists{/gist_id}","starred_url":"https://api.github.com/users/heschik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/heschik/subscriptions","organizations_url":"https://api.github.com/users/heschik/orgs","repos_url":"https://api.github.com/users/heschik/repos","events_url":"https://api.github.com/users/heschik/events{/privacy}","received_events_url":"https://api.github.com/users/heschik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"heschik","id":24611692,"avatar_url":"https://avatars1.githubusercontent.com/u/24611692?v=4","gravatar_id":"","url":"https://api.github.com/users/heschik","html_url":"https://github.com/heschik","followers_url":"https://api.github.com/users/heschik/followers","following_url":"https://api.github.com/users/heschik/following{/other_user}","gists_url":"https://api.github.com/users/heschik/gists{/gist_id}","starred_url":"https://api.github.com/users/heschik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/heschik/subscriptions","organizations_url":"https://api.github.com/users/heschik/orgs","repos_url":"https://api.github.com/users/heschik/repos","events_url":"https://api.github.com/users/heschik/events{/privacy}","received_events_url":"https://api.github.com/users/heschik/received_events","type":"User","site_admin":false},"assignees":[{"login":"heschik","id":24611692,"avatar_url":"https://avatars1.githubusercontent.com/u/24611692?v=4","gravatar_id":"","url":"https://api.github.com/users/heschik","html_url":"https://github.com/heschik","followers_url":"https://api.github.com/users/heschik/followers","following_url":"https://api.github.com/users/heschik/following{/other_user}","gists_url":"https://api.github.com/users/heschik/gists{/gist_id}","starred_url":"https://api.github.com/users/heschik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/heschik/subscriptions","organizations_url":"https://api.github.com/users/heschik/orgs","repos_url":"https://api.github.com/users/heschik/repos","events_url":"https://api.github.com/users/heschik/events{/privacy}","received_events_url":"https://api.github.com/users/heschik/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2018-04-18T17:00:17Z","updated_at":"2018-04-18T17:42:42Z","closed_at":"2018-04-18T17:36:20Z","author_association":"CONTRIBUTOR","body":"If a sigprof is received while runtime.nanotime is executing, the runtime may crash with a stack like this:\r\n\r\n```\r\nruntime: invalid pc-encoded table [...]\r\nruntime.throw(0xc52c894, 0x1c)\r\n  src/runtime/panic.go:622 +0x8a fp=0xc435e35260 sp=0xc435e35240 pc=0x26adb4a\r\nruntime.pcvalue(0x119a4080, 0x15ea31c0, 0xc401b4e585, 0x39ad635, 0xc435e35488, 0x15ea3101, 0x0)\r\n  src/runtime/symtab.go:763 +0x529 fp=0xc435e35310 sp=0xc435e35260 pc=0x26cc029\r\nruntime.funcspdelta(0x119a4080, 0x15ea31c0, 0x39ad635, 0xc435e35488, 0xb0080b1a00000000)\r\n  src/runtime/symtab.go:815 +0x5f fp=0xc435e35380 sp=0xc435e35310 pc=0x26cc4df\r\nruntime.gentraceback(0x26dfd17, 0x7fc8115df708, 0x0, 0xc43e926300, 0x0, 0xc435e356f8, 0x40, 0x0, 0x0, 0x6, ...)\r\n  src/runtime/traceback.go:249 +0x1873 fp=0xc435e35698 sp=0xc435e35380 pc=0x26d38d3\r\nruntime.sigprof(0x26dfd17, 0x7fc8115df708, 0x0, 0xc43e926300, 0xc43b160c00)\r\n  src/runtime/proc.go:3755 +0x3e9 fp=0xc435e35938 sp=0xc435e35698 pc=0x26b81f9\r\nruntime.sighandler(0xc40000001b, 0xc435e35bf0, 0xc435e35ac0, 0xc43e926300)\r\n  src/runtime/signal_sighandler.go:33 +0x678 fp=0xc435e359b8 sp=0xc435e35938 pc=0x26c3218\r\nruntime.sigtrampgo(0x1b, 0xc435e35bf0, 0xc435e35ac0)\r\n  src/runtime/signal_unix.go:349 +0x21c fp=0xc435e35a68 sp=0xc435e359b8 pc=0x26c3c2c\r\n```\r\n\r\nTo add the running stack trace to the profile, the handler needs to walk the stack frame-by-frame, and to do that it needs to know how big each stack frame is. The compiler records that information in the pc-to-sp table, but runtime.nanotime does manual stack alignment:\r\nhttps://github.com/golang/go/blob/0a4b962c17a9584a177c06b3c0c3119f250bbbaa/src/runtime/sys_linux_amd64.s#L258-L259\r\nwhich isn't (can't be) tracked in the table. When the signal handler walks the stack, it computes the wrong size for that frame, and then reads the wrong place looking for the return address, finding stack garbage instead and crashing.\r\n\r\nThe problem was introduced in a158382b1c9c0b95a7d41865a405736be6bc585f, which shipped in 1.10, so this should be considered for a backport for 1.10.2.","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24924","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24924/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24924/comments","events_url":"https://api.github.com/repos/golang/go/issues/24924/events","html_url":"https://github.com/golang/go/issues/24924","id":315560797,"number":24924,"title":"runtime: use tgkill instead of tkill to keep Android happy","user":{"login":"zx2c4","id":10643,"avatar_url":"https://avatars1.githubusercontent.com/u/10643?v=4","gravatar_id":"","url":"https://api.github.com/users/zx2c4","html_url":"https://github.com/zx2c4","followers_url":"https://api.github.com/users/zx2c4/followers","following_url":"https://api.github.com/users/zx2c4/following{/other_user}","gists_url":"https://api.github.com/users/zx2c4/gists{/gist_id}","starred_url":"https://api.github.com/users/zx2c4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zx2c4/subscriptions","organizations_url":"https://api.github.com/users/zx2c4/orgs","repos_url":"https://api.github.com/users/zx2c4/repos","events_url":"https://api.github.com/users/zx2c4/events{/privacy}","received_events_url":"https://api.github.com/users/zx2c4/received_events","type":"User","site_admin":false},"labels":[{"id":373399998,"url":"https://api.github.com/repos/golang/go/labels/NeedsFix","name":"NeedsFix","color":"ededed","default":false},{"id":626114820,"url":"https://api.github.com/repos/golang/go/labels/release-blocker","name":"release-blocker","color":"b60205","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/62","html_url":"https://github.com/golang/go/milestone/62","labels_url":"https://api.github.com/repos/golang/go/milestones/62/labels","id":2827591,"number":62,"title":"Go1.11","description":"","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":881,"closed_issues":342,"state":"open","created_at":"2017-10-10T13:39:17Z","updated_at":"2018-04-21T04:19:32Z","due_on":"2018-07-31T07:00:00Z","closed_at":null},"comments":3,"created_at":"2018-04-18T16:50:50Z","updated_at":"2018-04-18T17:43:06Z","closed_at":"2018-04-18T17:43:05Z","author_association":"CONTRIBUTOR","body":"Go uses tkill in the panic routine. From the tkill man page:\r\n\r\n       tkill() is an obsolete predecessor to\r\n       tgkill().   It allows only the target\r\n       thread ID to be specified, which  may\r\n       result in the wrong thread being sig‐\r\n       naled if a thread terminates and  its\r\n       thread  ID  is recycled.  Avoid using\r\n       this system call.\r\n\r\nAndroid sets a seccomp filter that disallows tkill but allows tgkill. Therefore the solution is to switch Go to using tgkill. According to the man page, there are other good reasons for switching to tgkill too.\r\n\r\nThis is similar to https://github.com/golang/go/issues/23750 but is yet-another mole.","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24914","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24914/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24914/comments","events_url":"https://api.github.com/repos/golang/go/issues/24914/events","html_url":"https://github.com/golang/go/issues/24914","id":315326537,"number":24914,"title":"reflect: documentation on NumMethod is incorrect","user":{"login":"dsnet","id":6354026,"avatar_url":"https://avatars1.githubusercontent.com/u/6354026?v=4","gravatar_id":"","url":"https://api.github.com/users/dsnet","html_url":"https://github.com/dsnet","followers_url":"https://api.github.com/users/dsnet/followers","following_url":"https://api.github.com/users/dsnet/following{/other_user}","gists_url":"https://api.github.com/users/dsnet/gists{/gist_id}","starred_url":"https://api.github.com/users/dsnet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsnet/subscriptions","organizations_url":"https://api.github.com/users/dsnet/orgs","repos_url":"https://api.github.com/users/dsnet/repos","events_url":"https://api.github.com/users/dsnet/events{/privacy}","received_events_url":"https://api.github.com/users/dsnet/received_events","type":"User","site_admin":false},"labels":[{"id":150880209,"url":"https://api.github.com/repos/golang/go/labels/Documentation","name":"Documentation","color":"aaffaa","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-18T04:25:23Z","updated_at":"2018-04-18T17:32:43Z","closed_at":"2018-04-18T17:32:43Z","author_association":"MEMBER","body":"[Consider the following](https://play.golang.org/p/rsC-F8IYO8w):\r\n```go\r\ntype iface interface {\r\n\tprivate()\r\n\tPublic()\r\n}\r\nt := reflect.TypeOf((*iface)(nil)).Elem()\r\nfor i := 0; i < t.NumMethod(); i++ {\r\n\tfmt.Println(t.Method(i))\r\n}\r\n```\r\n\r\nThis currently prints:\r\n```\r\n{Public  func() <invalid Value> 0}\r\n{private main func() <invalid Value> 1}\r\n```\r\n\r\nThe documented behavior of `reflect.Type.NumMethod` is:\r\n> NumMethod returns the number of **exported** methods in the value's method set.\r\n\r\nHowever, you can clearly see that `private` is included as part of the count.\r\n\r\nIt seems to me that for `reflect.Interface`, the `NumMethod` does include unexported methods, while it excludes them for all other kinds.","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24907","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24907/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24907/comments","events_url":"https://api.github.com/repos/golang/go/issues/24907/events","html_url":"https://github.com/golang/go/issues/24907","id":315309471,"number":24907,"title":"cmd/compile/internal/ssa: a wrong arm64 rule","user":{"login":"benshi001","id":24586233,"avatar_url":"https://avatars1.githubusercontent.com/u/24586233?v=4","gravatar_id":"","url":"https://api.github.com/users/benshi001","html_url":"https://github.com/benshi001","followers_url":"https://api.github.com/users/benshi001/followers","following_url":"https://api.github.com/users/benshi001/following{/other_user}","gists_url":"https://api.github.com/users/benshi001/gists{/gist_id}","starred_url":"https://api.github.com/users/benshi001/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benshi001/subscriptions","organizations_url":"https://api.github.com/users/benshi001/orgs","repos_url":"https://api.github.com/users/benshi001/repos","events_url":"https://api.github.com/users/benshi001/events{/privacy}","received_events_url":"https://api.github.com/users/benshi001/received_events","type":"User","site_admin":false},"labels":[{"id":373399998,"url":"https://api.github.com/repos/golang/go/labels/NeedsFix","name":"NeedsFix","color":"ededed","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/62","html_url":"https://github.com/golang/go/milestone/62","labels_url":"https://api.github.com/repos/golang/go/milestones/62/labels","id":2827591,"number":62,"title":"Go1.11","description":"","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":881,"closed_issues":342,"state":"open","created_at":"2017-10-10T13:39:17Z","updated_at":"2018-04-21T04:19:32Z","due_on":"2018-07-31T07:00:00Z","closed_at":null},"comments":1,"created_at":"2018-04-18T02:42:41Z","updated_at":"2018-04-19T15:08:54Z","closed_at":"2018-04-19T15:08:53Z","author_association":"MEMBER","body":"In the file cmd/compile/internal/ssa/gen/ARM64.rules, line 1468 - 1498.\r\n\r\nThe rule seems to combine 8 load-byte to a single LE load dword. However the final REV is wrong, since it is a LE load.\r\n\r\nI will correct it along with my CL touching that part.\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24903","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24903/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24903/comments","events_url":"https://api.github.com/repos/golang/go/issues/24903/events","html_url":"https://github.com/golang/go/issues/24903","id":315218067,"number":24903,"title":"encoding/json: documented behavior unmarshaling JSON null into json.Unmarshaler is unclear","user":{"login":"anzdaddy","id":13160581,"avatar_url":"https://avatars0.githubusercontent.com/u/13160581?v=4","gravatar_id":"","url":"https://api.github.com/users/anzdaddy","html_url":"https://github.com/anzdaddy","followers_url":"https://api.github.com/users/anzdaddy/followers","following_url":"https://api.github.com/users/anzdaddy/following{/other_user}","gists_url":"https://api.github.com/users/anzdaddy/gists{/gist_id}","starred_url":"https://api.gi
5ac5
thub.com/users/anzdaddy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anzdaddy/subscriptions","organizations_url":"https://api.github.com/users/anzdaddy/orgs","repos_url":"https://api.github.com/users/anzdaddy/repos","events_url":"https://api.github.com/users/anzdaddy/events{/privacy}","received_events_url":"https://api.github.com/users/anzdaddy/received_events","type":"User","site_admin":false},"labels":[{"id":150880209,"url":"https://api.github.com/repos/golang/go/labels/Documentation","name":"Documentation","color":"aaffaa","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-17T20:27:13Z","updated_at":"2018-04-17T23:12:42Z","closed_at":"2018-04-17T22:08:30Z","author_association":"NONE","body":"### What version of Go are you using (`go version`)?\r\n\r\n1.10.1\r\n\r\n### Does this issue reproduce with the latest release?\r\n\r\nYes\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\nN/A\r\n\r\n### What did you do?\r\n\r\nI read the documentation for `json.Unmarshal` and `json.Unmarshaler.UnmarshalJSON`, and the relevant code:\r\n\r\nhttps://github.com/golang/go/blob/568d4848f672ecec3f9199452e9da1776a9fbba9/src/encoding/json/decode.go#L482-L494\r\n\r\n### What did you expect to see?\r\n\r\nA statement to the effect that `json.Unmarshal` will zero the value before calling `json.Unmarshaler.UnmarshalJSON`.\r\n\r\n### What did you see instead?\r\n\r\nAccording to the documentation, `json.Unmarshal` passes `null` to `json.Unmarshaler.UnmarshalJSON`. However, it doesn't explain that, prior to making the call, it sets the field to the zero value.\r\n\r\nThis is hinted at in the documentation for `json.Unmarshaler`, wherein it requires treating null inputs as a no-op, but this leaves the reader wondering what state the field is left in if it wasn't already the zero value.","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24898","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24898/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24898/comments","events_url":"https://api.github.com/repos/golang/go/issues/24898/events","html_url":"https://github.com/golang/go/issues/24898","id":315178989,"number":24898,"title":"proposal: x/crypto/sm3: new package","user":{"login":"FiloSottile","id":1225294,"avatar_url":"https://avatars1.githubusercontent.com/u/1225294?v=4","gravatar_id":"","url":"https://api.github.com/users/FiloSottile","html_url":"https://github.com/FiloSottile","followers_url":"https://api.github.com/users/FiloSottile/followers","following_url":"https://api.github.com/users/FiloSottile/following{/other_user}","gists_url":"https://api.github.com/users/FiloSottile/gists{/gist_id}","starred_url":"https://api.github.com/users/FiloSottile/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FiloSottile/subscriptions","organizations_url":"https://api.github.com/users/FiloSottile/orgs","repos_url":"https://api.github.com/users/FiloSottile/repos","events_url":"https://api.github.com/users/FiloSottile/events{/privacy}","received_events_url":"https://api.github.com/users/FiloSottile/received_events","type":"User","site_admin":false},"labels":[{"id":236419512,"url":"https://api.github.com/repos/golang/go/labels/Proposal","name":"Proposal","color":"ededed","default":false},{"id":874035922,"url":"https://api.github.com/repos/golang/go/labels/Proposal-Crypto","name":"Proposal-Crypto","color":"890b3b","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/30","html_url":"https://github.com/golang/go/milestone/30","labels_url":"https://api.github.com/repos/golang/go/milestones/30/labels","id":1373555,"number":30,"title":"Proposal","description":"Proposals that are pending (not yet accepted/rejected).\r\n","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":189,"closed_issues":470,"state":"open","created_at":"2015-10-24T01:40:49Z","updated_at":"2018-04-20T20:25:27Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2018-04-17T18:28:49Z","updated_at":"2018-04-20T19:07:13Z","closed_at":"2018-04-20T19:07:12Z","author_association":"MEMBER","body":"SM3 is Shang Mi 3, Commercial Cryptographic hash algorithm 3.\r\n\r\nhttps://tools.ietf.org/html/draft-shen-sm3-hash-01\r\n\r\nOpenSSL 1.1.1.pre2\r\nhttps://github.com/openssl/openssl/tree/master/crypto/sm3\r\n\r\narmv8.2 has SM3 hardware instructions.\r\nhttps://community.arm.com/processors/b/blog/posts/introducing-2017s-extensions-to-the-arm-architecture\r\n\r\nLinux kernel\r\nhttps://github.com/torvalds/linux/blob/master/crypto/sm3_generic.c\r\n\r\nhttps://golang.org/cl/106615 by @mengzhuo ","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24894","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24894/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24894/comments","events_url":"https://api.github.com/repos/golang/go/issues/24894/events","html_url":"https://github.com/golang/go/issues/24894","id":314991776,"number":24894,"title":"x/crypto/acme/autocert: clarify usage of (*Manager).GetCertificate","user":{"login":"gertcuykens","id":863731,"avatar_url":"https://avatars2.githubusercontent.com/u/863731?v=4","gravatar_id":"","url":"https://api.github.com/users/gertcuykens","html_url":"https://github.com/gertcuykens","followers_url":"https://api.github.com/users/gertcuykens/followers","following_url":"https://api.github.com/users/gertcuykens/following{/other_user}","gists_url":"https://api.github.com/users/gertcuykens/gists{/gist_id}","starred_url":"https://api.github.com/users/gertcuykens/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gertcuykens/subscriptions","organizations_url":"https://api.github.com/users/gertcuykens/orgs","repos_url":"https://api.github.com/users/gertcuykens/repos","events_url":"https://api.github.com/users/gertcuykens/events{/privacy}","received_events_url":"https://api.github.com/users/gertcuykens/received_events","type":"User","site_admin":false},"labels":[{"id":150880209,"url":"https://api.github.com/repos/golang/go/labels/Documentation","name":"Documentation","color":"aaffaa","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/22","html_url":"https://github.com/golang/go/milestone/22","labels_url":"https://api.github.com/repos/golang/go/milestones/22/labels","id":1067491,"number":22,"title":"Unreleased","description":"Issues that do not affect released Go code and binaries.\r\n","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":825,"closed_issues":1371,"state":"open","created_at":"2015-04-14T18:48:22Z","updated_at":"2018-04-21T00:07:30Z","due_on":"2099-12-31T08:00:00Z","closed_at":null},"comments":9,"created_at":"2018-04-17T10:07:15Z","updated_at":"2018-04-17T22:09:15Z","closed_at":"2018-04-17T18:35:50Z","author_association":"NONE","body":"Would be nice to have a example of `cert, err := m.GetCertificate(...)` so the certificates can be used in GRPC. I fail to come up with a solution.\r\n```go\r\n    m := &autocert.Manager{\r\n        Cache:      autocert.DirCache(\"tls\"),\r\n        Prompt:     autocert.AcceptTOS,\r\n        HostPolicy: autocert.HostWhitelist(\"example.com\"),\r\n    }\r\n    go http.ListenAndServe(\":http\", m.HTTPHandler(nil))\r\n    cert, err := m.GetCertificate(...)\r\n    if err != nil {\r\n        t.Fatalf(\"Failed to generate certificates %s\", err)\r\n    }\r\n    creds := credentials.NewServerTLSFromCert(cert)\r\n    srv := grpc.NewServer(grpc.Creds(creds))\r\n    reflection.Register(srv)\r\n```\r\nhttps://godoc.org/golang.org/x/crypto/acme/autocert\r\n\r\nhttps://stackoverflow.com/questions/49874945/acme-certificate-for-grpc\r\n\r\nSOLUTION:\r\n```go\r\n        m := &autocert.Manager{\r\n\t\tCache:      autocert.DirCache(\"tls\"),\r\n\t\tPrompt:     autocert.AcceptTOS,\r\n\t\tHostPolicy: autocert.HostWhitelist(\"gps.nyimbo.nl\"),\r\n\t}\r\n\tgo http.ListenAndServe(\":http\", m.HTTPHandler(nil))\r\n\tcreds := credentials.NewTLS(&tls.Config{GetCertificate: m.GetCertificate})\r\n\tsrv := grpc.NewServer(grpc.Creds(creds))\r\n\treflection.Register(srv)\r\n```","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24892","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24892/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24892/comments","events_url":"https://api.github.com/repos/golang/go/issues/24892/events","html_url":"https://github.com/golang/go/issues/24892","id":314954616,"number":24892,"title":"Memory usage not going down on macOS","user":{"login":"genbits","id":3424362,"avatar_url":"https://avatars0.githubusercontent.com/u/3424362?v=4","gravatar_id":"","url":"https://api.github.com/users/genbits","html_url":"https://github.com/genbits","followers_url":"https://api.github.com/users/genbits/followers","following_url":"https://api.github.com/users/genbits/following{/other_user}","gists_url":"https://api.github.com/users/genbits/gists{/gist_id}","starred_url":"https://api.github.com/users/genbits/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/genbits/subscriptions","organizations_url":"https://api.github.com/users/genbits/orgs","repos_url":"https://api.github.com/users/genbits/repos","events_url":"https://api.github.com/users/genbits/events{/privacy}","received_events_url":"https://api.github.com/users/genbits/received_events","type":"User","site_admin":false},"labels":[{"id":357033853,"url":"https://api.github.com/repos/golang/go/labels/WaitingForInfo","name":"WaitingForInfo","color":"ededed","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2018-04-17T08:24:50Z","updated_at":"2018-04-17T13:19:41Z","closed_at":"2018-04-17T13:19:41Z","author_association":"NONE","body":"### What version of Go are you using (`go version`)?\r\n1.9.4 and 1.10.1\r\n\r\n### Does this issue reproduce with the latest release?\r\nyes\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nmacOS 10.13.1 darwin amd64\r\n(edit: also macOS 10.13.4)\r\n\r\n### What did you do?\r\nI created a super simple tcp server. Source: https://play.golang.org/p/wGAwdtU1nGY\r\nI stress-tested it using `tcpkali` like so:\r\n`tcpkali -em \"testing\\r\\n\" -c 100 -r 1000 -T 60  127.0.0.1:8888`\r\nand then I waited for a few minutes, while the server is idle.\r\nI could see that the RSS usage is going up during the test (using `ps` I can see RSS at 12384).\r\nBUT this number is not going down even after 10 minutes of idle.\r\n\r\nI ran the same test on ubuntu 14.04, and memory starts to go down as expected after around 5 minutes.\r\n\r\n### What did you expect to see?\r\nused memory going down after a few minutes of idle\r\n\r\n### What did you see instead?\r\nused memory not going down even after 20 minutes.\r\nto make it worse, another stress-test makes the RSS usage increase to 12532. This number is also not going down when the server is back in idle mode.\r\n","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24891","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24891/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24891/comments","events_url":"https://api.github.com/repos/golang/go/issues/24891/events","html_url":"https://github.com/golang/go/issues/24891","id":314952974,"number":24891,"title":"strings.TrimRight works not the same","user":{"login":"756445638","id":12948870,"avatar_url":"https://avatars2.githubusercontent.com/u/12948870?v=4","gravatar_id":"","url":"https://api.github.com/users/756445638","html_url":"https://github.com/756445638","followers_url":"https://api.github.com/users/756445638/followers","following_url":"https://api.github.com/users/756445638/following{/other_user}","gists_url":"https://api.github.com/users/756445638/gists{/gist_id}","starred_url":"https://api.github.com/users/756445638/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/756445638/subscriptions","organizations_url":"https://api.github.com/users/756445638/orgs","repos_url":"https://api.github.com/users/756445638/repos","events_url":"https://api.github.com/users/756445638/events{/privacy}","received_events_url":"https://api.github.com/users/756445638/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-17T08:19:48Z","updated_at":"2018-04-17T08:27:27Z","closed_at":"2018-04-17T08:25:25Z","author_association":"NONE","body":"Please answer these questions before submitting your issue. Thanks!\r\n\r\n\r\n### What version of Go are you using (`go version`)?\r\n\r\ngo version go1.8.5 windows/amd64\r\n### Does this issue reproduce with the latest release?\r\nno \r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nset GOARCH=amd64\r\nset GOBIN=\r\nset GOEXE=.exe\r\nset GOHOSTARCH=amd64\r\nset GOHOSTOS=windows\r\nset GOOS=windows\r\nset GOPATH=D:\\backstage\\newest\\hmi-server\\code\\gopath;D:\\golib\r\nset GORACE=\r\nset GOROOT=C:\\Go\r\nset GOTOOLDIR=C:\\Go\\pkg\\tool\\windows_amd64\r\nset GCCGO=gccgo\r\nset CC=gcc\r\nset GOGCCFLAGS=-m64 -mthreads -fmessage-length=0 -fdebug-prefix-map=C:\\Users\\yuyang\\AppData\\Local\\Temp\\go-build583116219=/tmp/go-build -gno-record-gcc-switches\r\nset CXX=g++\r\nset CGO_ENABLED=1\r\nset PKG_CONFIG=pkg-config\r\nset CGO_CFLAGS=-g -O2\r\nset CGO_CPPFLAGS=\r\nset CGO_CXXFLAGS=-g -O2\r\nset CGO_FFLAGS=-g -O2\r\nset CGO_LDFLAGS=-g -O2\r\n\r\n\r\n### What did you do?\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"strings\"\r\n)\r\n\r\nfunc main() {\r\n\tfmt.Println(strings.TrimRight(\"opc.tcp://188.0.0.181:4840\", \":4840\"))\r\n\tfmt.Println(strings.TrimRight(\"opc.tcp://188.0.0.182:4840\", \":4840\"))\r\n\tfmt.Println(strings.TrimRight(\"opc.tcp://188.0.0.183:4840\", \":4840\"))\r\n\tfmt.Println(strings.TrimRight(\"opc.tcp://188.0.0.184:4840\", \":4840\"))\r\n\tfmt.Println(strings.TrimRight(\"opc.tcp://188.0.0.185:4840\", \":4840\"))\r\n\tfmt.Println(strings.TrimRight(\"opc.tcp://188.0.0.186:4840\", \":4840\"))\r\n}\r\n```\r\n\r\n### What did you expect to see?\r\nopc.tcp://188.0.0.181\r\nopc.tcp://188.0.0.182\r\nopc.tcp://188.0.0.183\r\nopc.tcp://188.0.0.184\r\nopc.tcp://188.0.0.185\r\nopc.tcp://188.0.0.186\r\n\r\n\r\n\r\n### What did you see instead?\r\n\r\nopc.tcp://188.0.0.181\r\nopc.tcp://188.0.0.182\r\nopc.tcp://188.0.0.183\r\nopc.tcp://188.0.0.1\r\nopc.tcp://188.0.0.185\r\nopc.tcp://188.0.0.186","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24888","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24888/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24888/comments","events_url":"https://api.github.com/repos/golang/go/issues/24888/events","html_url":"https://github.com/golang/go/issues/24888","id":314842555,"number":24888,"title":"crypto/x509: partial wildcards not supported","user":{"login":"kmala","id":12552530,"avatar_url":"https://avatars1.githubusercontent.com/u/12552530?v=4","gravatar_id":"","url":"https://api.github.com/users/kmala","html_url":"https://github.com/kmala","followers_url":"https://api.github.com/users/kmala/followers","following_url":"https://api.github.com/users/kmala/following{/other_user}","gists_url":"https://api.github.com/users/kmala/gists{/gist_id}","starred_url":"https://api.github.com/users/kmala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kmala/subscriptions","organizations_url":"https://api.github.com/users/kmala/orgs","repos_url":"https://api.github.com/users/kmala/repos","events_url":"https://api.github.com/users/kmala/events{/privacy}","received_events_url":"https://api.github.com/users/kmala/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-16T22:37:43Z","updated_at":"2018-04-17T00:47:38Z","closed_at":"2018-04-17T00:47:38Z","author_association":"NONE","body":"Please answer these questions before submitting your issue. Thanks!\r\n\r\n\r\n### What version of Go are you using (`go version`)?\r\ngo version go1.9.5 linux/amd64\r\n\r\n### Does this issue reproduce with the latest release?\r\nYes\r\n\r\n### What operating system and processor architecture are you using (`go env`)?\r\nGOARCH=\"amd64\"\r\nGOBIN=\"\"\r\nGOEXE=\"\"\r\nGOHOSTARCH=\"amd64\"\r\nGOHOSTOS=\"linux\"\r\nGOOS=\"linux\"\r\nGOPATH=\"/go\"\r\nGORACE=\"\"\r\nGOROOT=\"/usr/local/go\"\r\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\r\nGCCGO=\"gccgo\"\r\nCC=\"gcc\"\r\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build007879267=/tmp/go-build -gno-record-gcc-switches\"\r\nCXX=\"g++\"\r\nCGO_ENABLED=\"1\"\r\nCGO_CFLAGS=\"-g -O2\"\r\nCGO_CPPFLAGS=\"\"\r\nCGO_CXXFLAGS=\"-g -O2\"\r\nCGO_FFLAGS=\"-g -O2\"\r\nCGO_LDFLAGS=\"-g -O2\"\r\nPKG_CONFIG=\"pkg-config\"\r\n\r\n### What did you do?\r\ntrying to match certificate test*.foo.com with host testabc.foo.com\r\n\r\n\r\n### What did you expect to see?\r\nExpecting the host will match the certificate identifier. This is valid according to the RFC https://tools.ietf.org/html/rfc6125#section-6.4.3 where the client can validate this. \r\n\r\n### What did you see instead?\r\n\r\nx509: certificate is valid for test*.foo.com, not testabc.foo.com","score":1.0},{"url":"https://api.github.com/repos/golang/go/issues/24886","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24886/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24886/comments","events_url":"https://api.github.com/repos/golang/go/issues/24886/events","html_url":"https://github.com/golang/go/issues/24886","id":314789199,"number":24886,"title":"access: cflewis","user":{"login":"cflewis","id":43708,"avatar_url":"https://avatars2.githubusercontent.com/u/43708?v=4","gravatar_id":"","url":"https://api.github.com/users/cflewis","html_url":"https://github.com/cflewis","followers_url":"https://api.github.com/users/cflewis/followers","following_url":"https://api.github.com/users/cflewis/following{/other_user}","gists_url":"https://api.github.com/users/cflewis/gists{/gist_id}","starred_url":"https://api.github.com/users/cflewis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cflewis/subscriptions","organizations_url":"https://api.github.com/users/cflewis/orgs","repos_url":"https://api.github.com/users/cflewis/repos","events_url":"https://api.github.com/users/cflewis/events{/privacy}","received_events_url":"https://api.github.com/users/cflewis/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"andybons","id":365204,"avatar_url":"https://avatars3.githubusercontent.com/u/365204?v=4","gravatar_id":"","url":"https://api.github.com/users/andybons","html_url":"https://github.com/andybons","followers_url":"https://api.github.com/users/andybons/followers","following_url":"https://api.github.com/users/andybons/following{/other_user}","gists_url":"https://api.github.com/users/andybons/gists{/gist_id}","starred_url":"https://api.github.com/users/andybons/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andybons/subscriptions","organizations_url":"https://api.github.com/users/andybons/orgs","repos_url":"https://api.github.com/users/andybons/repos","events_url":"https://api.github.com/users/andybons/events{/privacy}","received_events_url":"https://api.github.com/users/andybons/received_events","type":"User","site_admin":false},"assignees":[{"login":"andybons","id":365204,"avatar_url":"https://avatars3.githubusercontent.com/u/365204?v=4","gravatar_id":"","url":"https://api.github.com/users/andybons","html_url":"https://github.com/andybons","followers_url":"https://api.github.com/users/andybons/followers","following_url":"https://api.github.com/users/andybons/following{/other_user}","gists_url":"https://api.github.com/users/andybons/gists{/gist_id}","starred_url":"https://api.github.com/users/andybons/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andybons/subscriptions","organizations_url":"https://api.github.com/users/andybons/orgs","repos_url":"https://api.github.com/users/andybons/repos","events_url":"https://api.github.com/users/andybons/events{/privacy}","received_events_url":"https://api.github.com/users/andybons/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2018-04-16T19:36:34Z","updated_at":"2018-04-17T01:04:17Z","closed_at":"2018-04-17T01:04:17Z","author_association":"NONE","body":"Hello there,\r\nI have joined Google's team working on Go and would appreciate GitHub access, as well as Gerrit access and TryBot access.\r\n\r\nThe docs tell me I should reference https://go-review.googlesource.com/#/admin/groups/1030,members , so please consider it referenced :)","score":1.0}]}
0

