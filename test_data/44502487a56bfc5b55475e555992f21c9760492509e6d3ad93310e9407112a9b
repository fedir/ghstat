HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sun, 13 May 2018 13:15:37 GMT
Link: <https://api.github.com/search/issues?q=repo%3AMithrilJS%2Fmithril.js+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3AMithrilJS%2Fmithril.js+type%3Aissue+state%3Aclosed&page=34>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: D1F9:4F42:44FD1C6:8AFF3AC:5AF83A78
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 23
X-Ratelimit-Reset: 1526217397
X-Runtime-Rack: 0.516707
X-Xss-Protection: 1; mode=block

8000
{"total_count":1082,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2138","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2138/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2138/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2138/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2138","id":320315156,"number":2138,"title":"Does ospec have its own CHANGELOG.md?","user":{"login":"maranomynet","id":86827,"avatar_url":"https://avatars1.githubusercontent.com/u/86827?v=4","gravatar_id":"","url":"https://api.github.com/users/maranomynet","html_url":"https://github.com/maranomynet","followers_url":"https://api.github.com/users/maranomynet/followers","following_url":"https://api.github.com/users/maranomynet/following{/other_user}","gists_url":"https://api.github.com/users/maranomynet/gists{/gist_id}","starred_url":"https://api.github.com/users/maranomynet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maranomynet/subscriptions","organizations_url":"https://api.github.com/users/maranomynet/orgs","repos_url":"https://api.github.com/users/maranomynet/repos","events_url":"https://api.github.com/users/maranomynet/events{/privacy}","received_events_url":"https://api.github.com/users/maranomynet/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-05-04T15:17:49Z","updated_at":"2018-05-04T20:04:38Z","closed_at":"2018-05-04T20:04:30Z","author_association":"CONTRIBUTOR","body":"I was looking for version info about `ospec` and noticed that it doesn't seem to have a proper change log of its own.\r\n..or am I missing something?","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2132","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2132/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2132/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2132/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2132","id":316517873,"number":2132,"title":"Cached nodes are not handled properly in some branches of the keyed diff algo.","user":{"login":"pygy","id":54515,"avatar_url":"https://avatars1.githubusercontent.com/u/54515?v=4","gravatar_id":"","url":"https://api.github.com/users/pygy","html_url":"https://github.com/pygy","followers_url":"https://api.github.com/users/pygy/followers","following_url":"https://api.github.com/users/pygy/following{/other_user}","gists_url":"https://api.github.com/users/pygy/gists{/gist_id}","starred_url":"https://api.github.com/users/pygy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pygy/subscriptions","organizations_url":"https://api.github.com/users/pygy/orgs","repos_url":"https://api.github.com/users/pygy/repos","events_url":"https://api.github.com/users/pygy/events{/privacy}","received_events_url":"https://api.github.com/users/pygy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-04-21T19:19:04Z","updated_at":"2018-04-23T11:52:08Z","closed_at":"2018-04-23T11:52:08Z","author_association":"OWNER","body":"[Tests here](https://flems.io/#0=N4IgzgpgNhDGAuEAmIBcIB0ALeBbKIANCAGYCWMYaA2qAHYCGuEamO+RIsA9nYn6xABfQvSYt0GAFZViPPhAHp5YeAAIAToqQQNagLxrcGLXR0aAOnRXqN3busNJusAK7M+GAEbckATytuDDAABzgACgsQVxCkBkQowjUSV2t4Ml5wgEpgKzU1IK8IEm4tAFEGWCxwlLSMumzcunz8uwcMADc6XwgwAzU6VygoPJa2+AxEAA94AGFefkc1KJXmtSEs0e5IrkqsZDUAawg-A+6dPtxuDog1AHd95vh9tSgyVTV3zQgbjUgkRLJVIIeqNKwWeAQjoMPQMfrAeAMADmqGWIAYgOOflRUQxwnBkPg0L0XnhiJRaK8mJOOJAVPxdAhUJhalgZORtNg1OxaK5DKZRJZSHZFKiAKIRxpaPFQnBjMJpnM4XGSWoDCSXiSsCSSAAupt5RDFbplfZ4KqkFqNUkGPq5QLtuMMFUKEgAHI9MAYGB0JHPLIYCAAR1cDCgYHCABYDQ7Te0XVB3Z7qAAGXUYc4QN3iAPB0PhnYAESiMcJjrNzqwro9F2oAEZ05ns8xcyGwxGorMSwSIeX41XEzXetQAEyNnrNiCt-MdkAAIW7hvgfYmCaTtYAzOOdJPp+2dgBBRcQjYE7ZRWB7A5Ys6eozXW4PRRqJBkEgkA4dMhw563XAMEJAVqEFMiyNQmgFYkCkGWJ4luQwglCPxsh7QVYRFWk8SSLFMMBeJ4D+VFgF4GI4kQVESNgxAhFlJcoNJQwEQ5SluVpekbXgAiwCIyiyIgCiYL4mjUKgtlGPJTlWN5PDOMI8DeLggTSLg4S6KFDDpSksUZK4njBMU6DlOo2jUONDQ43NNQ1WtVkdTtJczIs1VNRfG0tXs1CV0ratPW9RQ-SwPcC2jTyLO8wdkzTDMJxzQM2wLKIFxAUtezCtchzAettyzWK833KJi2S0KnXS5Mx2indcvi2cjyKpcvNKzdst3OKZx2Ls6tjBTEGdMMoHmVJ4CCiMU1LU86HGoINFSbJOEgGAQLoKh0A3AAOVAN2EUQQEYZhWGdMBZC4BZFHgQQhF1Yg3joQ5ltoHbxFYXAyGeDQKE4VwNAIdAcHgEJuIAegB1IQkOJFnW4XAAee16KAAATrDBEYANmhl6sDeqBpCO+A-DCVgwFgN6QjOkQxD29BuFCOBsY+r7WF+-7UCBkGwYhqGYYx+HEZRgGqbCWA+ep2BaeIXH8fQQnidJ3UhCAA)\r\n\r\nWhen going from `[A, B. C, D]` to `[D, C, B, A]` where the vnodes are keyed and reused from one render to the next, they are not moved in the DOM. There's another issue when cached nodes are scrambled, diff isn't actually skipped.\r\n\r\nFix coming soon (tacked to #2130).","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2128","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2128/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2128/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2128/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2128","id":316061700,"number":2128,"title":"Error when inserting node during render: \"Failed to execute 'insertBefore' on 'Node'\"","user":{"login":"JacksonJN","id":31047566,"avatar_url":"https://avatars3.githubusercontent.com/u/31047566?v=4","gravatar_id":"","url":"https://api.github.com/users/JacksonJN","html_url":"https://github.com/JacksonJN","followers_url":"https://api.github.com/users/JacksonJN/followers","following_url":"https://api.github.com/users/JacksonJN/following{/other_user}","gists_url":"https://api.github.com/users/JacksonJN/gists{/gist_id}","starred_url":"https://api.github.com/users/JacksonJN/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JacksonJN/subscriptions","organizations_url":"https://api.github.com/users/JacksonJN/orgs","repos_url":"https://api.github.com/users/JacksonJN/repos","events_url":"https://api.github.com/users/JacksonJN/events{/privacy}","received_events_url":"https://api.github.com/users/JacksonJN/received_events","type":"User","site_admin":false},"labels":[{"id":86465857,"url":"https://api.github.com/repos/MithrilJS/mithril.js/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-04-19T22:22:52Z","updated_at":"2018-04-23T11:52:05Z","closed_at":"2018-04-23T11:52:05Z","author_association":"NONE","body":"## Expected Behavior\r\nWhen rendering there should be no errors and all the elements should be rendered in the correct order.\r\n\r\n## Current Behavior\r\nWhen [inserting a node](https://github.com/MithrilJS/mithril.js/blob/next/render/render.js#L469) during the render process, if `nextSibling` is not a proper child of `parent` then the following error occurs:\r\n```\r\nDOMException: Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.\r\n```\r\nThis happens in the following situations that I have found. In all cases `nextSibling.parentNode`  becomes null:\r\n1. In `updateNodes` when the keys between the compared nodes match while traversing the nodes backwards.\r\n   * `nextSibling` is assigned to `o.dom` of the element that got updated. `o.dom` can be removed from the dom if the tags are different, causing `o.dom.parentNode` to be null. `nextSibling` is set to `o.dom` causing the error if `insertNode` is eventually called with the same `nextSibling`. \r\nhttps://github.com/MithrilJS/mithril.js/blob/ec43ca089c67b1af3bc3f729d18dd5eaa283ea53/render/render.js#L314-L318\r\nhttps://github.com/MithrilJS/mithril.js/blob/ec43ca089c67b1af3bc3f729d18dd5eaa283ea53/render/render.js#L322-L328\r\n    * Additionally, this can happen when there are more old nodes than new nodes. In this case the call to `updateNode` the next sibling is determined by calling `getNextSibling` with the old nodes. If an old node exists but was removed it could return that node which would be set to `nextSibling`.\r\nhttps://github.com/MithrilJS/mithril.js/blob/ec43ca089c67b1af3bc3f729d18dd5eaa283ea53/render/render.js#L462-L467\r\n2. In `updateNodes` when keys do not match between compared nodes while traversing backwards: \r\n   * `nextSibling` is set to the node that gets created. \r\nhttps://github.com/MithrilJS/mithril.js/blob/ec43ca089c67b1af3bc3f729d18dd5eaa283ea53/render/render.js#L328-L330\r\nBut that node can be a fragment and `parentNode` for a fragment is also null.\r\nhttps://github.com/MithrilJS/mithril.js/blob/ec43ca089c67b1af3bc3f729d18dd5eaa283ea53/render/render.js#L92-L102\r\n\r\nThose are the only cases where `nextSibling` is set to a value without a parent as far as I could tell.\r\n\r\nThis commit: https://github.com/MithrilJS/mithril.js/commit/02aab654f0b1b02e35234fca9dc47c306ba62bd7 removed the check for `nextSibling.parentNode` inside `insertNode`. This is causing the underlying issues to not be hidden. Whereas before the commit the error wasn't present, there still was issues with ordering of the rendered elements since the check caused `appendChild` to be called instead of `insertBefore`.\r\n\r\n## Possible Solution\r\nIn the first case above the old element `o.dom` was removed. Then it's assigned to `nextSibling`. Instead I think `v.dom` should be the next sibling since it is the element that is on the dom.\r\n```javascript\r\nupdateNode(parent, o, v, hooks, getNextSibling(old, oldEnd + 1, nextSibling), ns)\r\nnextSibling = v.dom\r\n```\r\n`getNextSibling` should be updated to not return a dom element if it doesn't have a parent. That way it doesn't set `nextSibling` to a removed node.\r\n```javascript\r\nfunction getNextSibling(vnodes, i, \r\n    for (; i < vnodes.length; \r\n        if (vnodes[i] != null && vnodes[i].dom != null && vnodes[i].dom.parentNode != null) return vnodes[i].dom\r\n    }\r\n    return nextSibling\r\n}\r\n```\r\nAnd for the second case the created fragment is set to `nextSibling`. Instead `v.dom` should be used since the fragment itself isn't a part of the dom. `v.dom` is already set to the first child of the fragment.\r\n```javascript\r\ncreateNode(parent, v, hooks, ns, nextSibling)\r\nnextSibling = v.dom\r\n```\r\nI did some testing with the above changes and it appears to fix the error successfully and keep the correct order of elements. But I'm not too familiar with the code so I'm looking for some feedback.\r\n\r\nI'd be happy to create the PR with these fixes if they're correct.\r\n\r\n## Steps to Reproduce (for bugs)\r\nSimple steps to reproduce the first case:\r\n1. Render node:\r\n   * Tag \"div\" with key \"2\".\r\n2. Render nodes:\r\n   * Tag \"span\" with key \"1\".\r\n   * Tag \"span\" with key \"2\".\r\n\r\nCode snippet: [Flems](https://flems.io/#0=N4IgZglgNgpgziAXAbVAOwIYFsZJAOgCsEAaEAYwHs0AXGWvAekYAIBRDOATxbrhohoA5gB00zFmIlU0-FuSwAHFgF4WAChoYhJFmkoATGAEpVAPhbJe23cBYBrGF0QsABo64ASYPqMBfVxY-XVc+Gm9fGACWAF0AbjEpVhk5ACd6I1SAOUN4VQ0tHRZ8Esi4UxULLHx0tEz1A0pyAFccWnwAI0MuXTL8LAxFdUjzFix1EvwFIcLe3OMF4wS0JJZazJyjOHUREAMIADdd3QAGEgAmJdX1mGzc7d24RQwVkF0ARgurlbRqm9SGk1WvQaJ1urpkGIWGMdmhofDJHtDscoQiWHYPC5duddkESKiEbswjiQKjjGIYt8xH8MrdAS02qCugYepZUeMCfDHs9Xvi4WiMU4sSB3rjgpzoUT4DRRaT+cY+dCOfzCSAni8USr4YLnIiSXiJYjibsyRSlm81TBYOQBNQEIgQAB2RDnAAcID8MTIUEE9ntqBAmBweCwEBoAAtUtALc1UlA8OGaDRFHBEMxmmhFPYhFNKFhGKGI1GoAABd74csAVgLYcj0CIpBANC4ilwDrg5CjihoFueNHI4fgSGQI7OIBgBl0IC9yAAtJ8QAB9fgYOguDNGSBoCdTmcL6ckZBjmAHegH86Okiui4nAAsN9vM6PZFSlFbqWbYgPyAXYAzNogagWAgOA2CUZt1EoDpCBgG1TGARIaDAShUg0A4MFQjxgLhKCYLg4CwA0cNOAAeQAdzQKYMCgKBIOg2CaF0DwFjWGAaFjOEwGouAYEQ9J2NSOEaFSZpeLQPwvxnMc-zQADqAPd4ADYSHec5lNdABOc4ry0p8xzgKYoE4OBJMPBcRAEQj1AAQhAsDuy4dQVzofBV2E8oWAAMk8lhbNA8DHLc1JyngxCLPQ1DtzIgBBJNgvyYAJJWGgLOQgEIocJxsJYIKPIQ5KLIsiArOIuByMo8hqNo3KmKcFj8sKlKmqi2L3OQDwYnyXL2qcGIwqapLGsGprcvyFq4pM5Kku-MdUpQtCMAU5TzhOS93ldStlPWza9LIGA8NtNByXE0yfzIAAFV9Qx487KCgLhIBo-BFFfGhKGbVt8C3KqeDUGS5LQdRKpojoMHIexQuS-iON4cMQPwCN6FhRr-sO9R0KgUTIcaizocElhLrzECYFu+7HqgGp4Du08gaq0HwfUBYEcHQHUcAwHsaaxq8bhDHRP6iy-GOoa+RR-80fSThqE57m2JhwnrpJu6HugCn0jgamYFpkGwfsRnjGZpG2eoRn0QFpqeYJq7idJlWnvSA71EljWjuWHGaCF-rhuO6apIu62buVsBz3vABmStKxIRTb0rT5o9j3bwEECddlMb8FwapqZrIMjBEaMj8HOpabxIR0NLvUvy8fQ9nxABWbaD1XTvMj2WCtHiCI0azc7qSgC-rnjnte96WxgL7BB+mWaB7-PC4DseXvekfPu+mjfqtonA7J1Wh6Xj6x9X+7EN9w9ZpoDKB6V+6D1D7T3gjyvQ9Dx-Q8TrcU5ANO9zITOLOzkAhBQCgtRQuxcVpXneOXCB5dE6Nxos3Mggs25QA7sVLugDgEU0vrvN6+9x6YDXlPDBoMsHzxwcvA+E8175Evrbcm5C8GHy4MfU6Z8L6vmLu8UOGkrznAvLwi8idU5iAyoub884yDum-iADS-98iowUmtS8GlVLKRUWpROIIIDcQQaSLmlkNAYSEAZAQOBKDNBoKYAAHpGBGEAzEWK6qkYxdiHEpTQP-d2aUNDF2jipe+t5rzvACa6IR+iipWXEfuaRRiDIwCscJMGNBfIqDUPExJNoWAAB8sksH-uoGxqR8ArmLree8qkTiujWitKpYT3ZRLIN49GGFMo8EEKxJ4doTBt1SK+VIPUuAxHTntXpKFcxGHyIU4pWh2KTXdvMugoyinq0UF0uRahUgHjKSQSsz9VJPx4fs7hicVlrJnBIkAAyhl+zlAs+pXpzifCUipc43CnmvJUYnA4EByAwHyGI85C4pFmTILIm56gZ59zIF6d4SiVIxw0kEhFoSa5jkKH1KauiLLMDgC8MMPABywXsLwSgLB9gdnMakbQfzWxvlgCwMAV0yWUEEEINwBxIjTNXH8tQkxXCIWNnCQl4MADKMytYctyLoFCEAhBUKnmg9GnLnJ-OsqklgMq5UENMEWPuegYBkXYEsnYIBXCSqMFyuggQsDNDkPoZJHQ-lYEMMVCAH9hYe0QswHIa5YZ-PDJQSgxKQIsGeHAHiBgcpwD9W4CMIFAhGOBLQElOUaJ6sXlYrgrK-VesYImxk0bc4RnMck9IABHZoEAozCBygy5oNEcq9IwDwKqTRVzsxTY0FgGt8AsAAJLJO4pQXNWhHDRowAYdCtBqUasIojBlSSY0tF6SCdlkRAghvnZAYKg7nFJuSYIXNVUWA+jALBLg5B6U4GLQYAyArxYduBlAAAEoGvW5rum-3Pi0zVVD8gfstWJRqwkeBftxnLfGcaDKDEUPdSCUYtXUV0PmkE5QvYMqofdM2BUmrCvsGK7lSqpUaoQ-Kr2LCPE3OxYwTsMBVy+PAffE4boVKVmYyi0cZBni1EYiwD9vQGkgGGWqATNz0kiogB0H0wgPX3JILfeTW1FKQMjkpFTJzeacsaFgCjwnwotNWeGyTsBzoYVQwlSq3Z2bCi0FJ3ibw-UTpsxgOzxxeDMl1ESFzsA3NIUDTQZzrmHPCRsx53z4YbOpF8wYSLbmqBQCEK+ZoihAs+Yc-F4U8XEvmMULsE+tdUoPqArR7lN874qJUopRSlTKvVY47XAAMuobjIJdD8eE3oOA0LT5kH1QkiTUnWWQzK4pyrrpmNjeY4nDFjVBMZRa7Qd4FnBiHVS-Z3QiMnNGm8+t9z3Q1u+eQu9A7wXUihe6OF2LwWYtGii+lu62Xksnd0BlxEWWku5Y9MJiQ9qWC2uzfOxe75Q1meTQMMdS64ZQEjVaGAjInKmCnSBcM+B+oSARBlfYBx8iNAZCCKYks6BsFgPD3YWPhE4fR-CLH+BBDblSM+gAKgAWQa-kXYAAeGgBgzAQA54wbnZguc88IPzwXJpKesARCkO6Y8gFCAaIcWnaB6dM9Z7JmgEhZyzgsLsCAhA3P6BYMLiw7S4CysTKjnDGU6BKHyJ4XHBO6NE5JyCZrlAjN2dMzxhANzkADB7DCysl43RrUUppVT4eNKVkTuToT0jjCeJw3NlptvlBqAd00J33Lidw7dwtmUx1hOKtkKodVuxEzJjTIwMitf8BkVDvgFCQhGArROCcRgcADiiE-th92afleq5Z2ztQnOu9sqsVgKAsgVAiDnyASvKXmC14Lg3pvzjW-t47+PufuwzC4gANR8c5QOaABhagsCP5zzv3f9+3P0Wn-IA-t38AAMJQ4MOh9ufzM6eKanQA8NjFSV0LaR0SBcpMAjSauTjEAY-XIKYD-WoLFAaVhRBJqADbTJ-XAL0BTUOUA7hCAggupT1SjQ8C5RqADZccVf9ZVcVVAvRCJG+S8IJDSZTFgtgxOBrYqc9S9CVTlQTAFHrNUcVNrSIXQANG+Z+BTSBRSVglSVg1gk5AYH0AALy1jm05SoO5XwG+QNWEyfVfSDX-iohoiVUkIuHKQ0kdGq3kOsJOETifSIwtRVWEx0LdTIn-lEPmA10VRG1DjWisMdACKCMdCEWSnTEUAMG5UQm+wACpYjEIWBYiWASxuNsB0Rc9GQskAAxKlIQRkPwEHHjFgWcGNAvZBPPWgRI5I1IjCdI4AAANUiGQE6lyTQHrSgEKLukjVKPnR9DkEoEIg-WjUGJjSMn4BODcH+EZkCCfQZRQmqLRCWOWJWLRCgyKOSVGPnWEhgCA2SRqLSKwHRCaNyBaOyT0A6MKOGJKKjRyi6FPF0A6EcW8XnWXWKNcGmOMFmKqitwsiSJSMOPRGyKKzQBaMKIDSDWjVKJeBynIAZHrVXHmlGMMxoFnH+BYAhL9A0GoBKzoEYGoGSyiLoA9X+NqKpSOOAEyNXTaMuL6xoAG2kzZV6MHDpMmIABESJmc9BchO4yIYAABydIMlOjRklgItcMHKRY1Y6UmUlYxlbQRkWGVcYCaNX7PozgGgSYsMOHbKMMOZfY2Uw0o0gvRYsk+o-k8ffk84-kgPcMK03JMVatNlGkmiQo2QUwZkv5N41dAADVZz0GwHgGeF+V0DQReGYWSlJJ5mjQOBZU-0jNiMYFzRYEZzhmjUFTJWKjAHHTqBB37EHGjX6JoBGKGLKEePeglI8AnBylzIzCrIMF+M1yTPCNYAAHU-lc4aJEBc1kzyxhSOwoxHVgJiyWAhB6BbhqJu1hJmgbRYw9iJBzhe1kIWgRihIWT9gwBCJqIhAZUIwji3xTEIAVD207RkzG9MyOxbVo0OSuSRg3wJzDo70WyWAABiF8lgEiU8VIXQsibsls5M1Mv5Qk7lTYeAU2QVP86jG4owbiMU2sXgKMb5ScyqHifUrXYUxZUMbcQtQcRGVCPokCEcszVpas+aOspwFOZ86EdQV-WMHjLDPkk9N9eY-Clkl-ZJZ4KtWdbktAWcdohtMoGsyNIwHUgi-gaNcirgSiqC6ENBLoCMbkrYRtICtAes3tRnEiDktCS4FgdssYZtE9blfCjARwHKSdF4QoP5LYtixdCMVcZMpUCAKxasjcwiENX7OAZLVZD8asl4SNHiJMelICedes7CksmNdiuAiZRircAwD1dC1y6NRGI4vyvMwlJKlkm8zubcCcaszQYiGgC0mNDoESZNayr0+YZM0ogYTAMcjKv5WAMAN6L81MHKJq24TMzc1lZDIUvCmASCps+EUo7oxSvIRq5JN6ViZ1U8AAfmTL+NKKilGqStJUEB4g-DmufL+JgqgDgoUuSush7OfMApPUIvHSFOoCw21KpToEjUoC-I1VkhgF0HFJrLbisV+SsyAheJZMEvaVcG6MCDsvcSguIu+XN1uuyi3UpQUu402LnXXKzKEqhpZI+Lh3upgFArgECCATfEbIkDfJYDZKzNZSOqgsAvSCKsiowG7XsVgz+VcpYr+1UoosjSLPCpgArUnNgGEAjHxubPJpZnkDzDyHnQGHaUZu3N3PDCOOBpVO7VgzDGymQljA2OjScjptPSzRrRpo6DDANjJsGpOsirhtHMoFFsjHMSEAlPkolPZpJUUFnHzjhE4CYp1vquWpymSTowHBPRPCtAxIwFPGTPnVxRwFaUXJTLTPluojImbSSpEj+W8UkurPtrluIq0XSCw0Xl+XDWrI6B4Cg2TP4BgEUH5oApZJ4hkEjVNp2sLXgvtvSBau4mQ1zMSRaryGoAasIodqdr7hdrbpZIrNuGTPkreiwFnGS0MULOoDZVdpCqcGjQDwHHeANv-OOpZLjVSBrowmSR3ItqS2tpYFttOvEuPvenHr+2UFdqAXdpjQ8CXtXBXvLo3qTqrTkFSq3v8oYnZnHTTUNVtU7RFLbi6vIDdVoAYvgohuaBPNLzIkHAuu3BI2TOdSFJkAECEGaHMVVPuDFNuD+RgFrA6rWtuEhsEDel0HSGmurMZTzBI1YlnBQkyGrPaRhOHtSFzh4mLpQkhqLPUsHB4AGB4HSAMBnL+XnXaKwEdVQlGMEsmqHJzvgAjRRqTpholKrsOhfsFtUdjAUo0Y7UaDyHrM6sIh+r+WgdgZweSSoC-PzsLqHrwthnSDHn7RBsGqeLP3HXRExA1Whz7TqHiUKP2ABgwhbVrNQuHJTVit8cjTkYKv0vzKWwXq4BLOTKWq7qfO0c9todltRsBsbSpXseVOIlPFrWXvDCW3aQkYNTXXuECC7uUv0tSEcEjU4GTLNWVXsAgBSwQtElcC0cGr7QRvwcaf4FVk9qqd+pqY6bqYKYMrlpKfoH5IdV2LhHKerMmpGoydFkGsRhbTQcJwnH5qjr+SpWECssIhGrieVLjrgDQGWeFtscjQLoivfomsjF2O7R-rtHlrDWUbenaaoYxqxpmP4Y9z+UEuIqBdPEjQzFgHDSaZaduP6bgC6Z6enJgH6cNokAHW7QDXrWeYhfeg2fifnS2E7G6cOm4uhtVv0Z+Zcwxvlt+3fDPRtEeNggwFtXEYDS4efLhvOr+SSRgeoU1sqMhtdsusLrIlJVxpTGlSQbMYwx3V4GlbVtbruoVYWOfPnXYZVcoF7T7RtKWw8rnMiZ7gkpzK4DjRrXiU+uSSEaHJprPUNQLr4G4senMaPLHmTMJqyrvPfEsexdYH8bGA92sc4DyFcGAroFApmORtcFxMxtyDjZZZQlyb+SyvvJut-t7VfT5K-J2YkHWPcveiXQjc7gkZ5OocjSclgmoFadzJVo-AlNNvKpMdTR3LXuowrp0ebY2OpcRs3PkDopBCutkFIZwaUv-HrbDHZh+l0FgAnQB1WvDVEjQtYB9FMpfNhRUWRu3Y0gPd7T0pysjXkfMYGB8tQgZccWLQ7gscfLFIQcFYMEIE4F+TKuhzSdwaoYwCqcoDHMccmYhZqaLOyhprjqKYPTuYeZsfweeZ4H5cesFbqBDo+YuZjUloS31ZiJuQzMJJDhIFvBODwJvFDldE+BWjI-eETi8K2EE0oZ4MZM8IxLfS63PDDwsNvH8M4-8Nj3wB5qEAjHo6iqHBuQ12-wI+eXOFvEUkdGvGk9k-qzPgsm-z730UEzQWEwyhXA-HyDOGFqwGdTQAa3oEE4lLUGZ1XBRywvyW6P49M4UvY6jm0gU9dHk5k7c744E6E8BV61SRUGE261rhE4MnPDOFhQsMdFvAo9vCi+o9RTIHs95vDET189gLA3QIwkC7kRAgAFUWauBzxQDIvg8SvQiEv79Zs0u-5cOUJBMFpUIIA9O4hgJjcQv+PhN1AWudPkkOcDOjOGt-4HPwwWuNPhMev-4D8D8v5CPI5ovIvXR7xpO5PoDa4p4quyCW5-5fC0vhjkAIBhNujkAJublOo1ULj4wHkeFzhrvAlXkLDXRXlE5+LdrvI8k0ujuDvpE9uTuhCzu1B+LzwKP3PFvbvQfiCNu5wW48uCvqy1A9uvuQUQBFUjvfva4Yh8BHBzxruYu3Pn5pO8fnuOivIfJBNPutOyhjutAPx-4MesJUkgeLh3Py5buWfE4y8LvLukfTAYfjG1AMWk9BMauhC7kaASrsDgD5NI5pONJQ4lvbxZfVvjwTLzZheoe0D-58tyDA8Rf9EtetuqN9FFVEe1ILh8eFfw8LDWClOyA4B8v6yOs3u7PvPzP1VhikuzP-5htqudeCtwk-NUJGfKwXOFeKsZfPkKv5p1AU9Gvxvqffexxmv3vNuyAmu+vui4-d62vhjjCeaiv5N8e2MiOLgi-7CKutgPeIxRu0vEezphDd7JvpvsMheE+0CFkUfoc-Dpe2MqsS+TgqsIemoO+DBkAxvpE0exxOp-OQvzxpfru2MoFzgF+y+YCQvR+a-rkkeevWjclUf4+p+Afie3ufv9+OeXuvfhbaBBAFJrxZCS-gkXPY5VJYEr-2ixIW+-8Fl25FFKt7-rC--FIsCaHOvxT7I9M+NPU7mXnq4vcSea-CAP9zkSA8cCEBe-oilQE28QAzWUHLxj25j8t+8fWnuIVY69Auso5CXk-Hkwh5g+LGJfnwgwHiZjMrKSCNDl3CgDa+C4Cfr1iPyfA6SDJa-jgSkJUC1IQg2TonEZILBVeWcH3kNxQR-JFUkqWfhYRL6hwTgFHXZKoMThOF4AIA9XmAPH4EDIB6qJASpBDxqDb4Zgx5GIMnDJ9dBEAUMpfhYA8Cc++g3eroB64OD3gXvU6Nr0-7qcHkIeZaLskrDycghGA2gNKmAF4C6+nAg8CJx-6PIS+RHbvkkPZ64Ca+4A1vrEMxK+4TBFwNQbeHARL8ChK-WuMIGYHWCohHAgwUIQ8G9AJeEXBIUUIfhNCY8FXBgYNhkxBcLkrEcgBekZJBdE+7pSQYLFMjhwlBRQx0MkMmGJwhACoTrBrkh4+Cbk+vDXob3dg8wcOTPC4IEMCRLdKwuwxOBxG8Etx3Yw0IaObHSC9DL02aDZIx2zQ5IVSAAJUY47ZyhtHeAAsIMROw7hMmNTu7HmyBpdqagOzqsjuiSCRqwI6HLmFkirhyhz0QEUXjWEDQFIgSK8CXzYzd8MRseAjLpwC5pcWAk-Goe4LxHyFf+S-YPoXwpGJxSiPAgYIoEC4ao2sSed2PA2jAwploj-YISEK5GJwzAagHrutykGgCMo-8UlJCJH7dEcROvEjgpiX6KRuEJfeURpCsFSjN+ug1gXX0kH-xsc8PXwDfzyGKi-Eco6OInBR5l54eNgi5G92siXC+hrKYTA8LFGH8G0x-M-h0Qv6Sj4+U3JgoR3n6yE-RB7MQVABm66DPRu9KbpINU7yC3RNEUwD1wjE4ZGoUYqyPq3p5u9MedUP4f72074toczwq4fSjUDu47oKSTnrALDG6c+RMTSvhKVKKgiKYLvUwA8PUDFigRzo4MbANtHXCZMwwt6NDilFTc3BXog-L2OjZJsjAWAnjNKjaxEDISugADlkHaGMk3hMTKUXUP6yMDOheLcxHmMY7PV5hvYxVF2NFJO8EY2gc0XxjPGzDsI61GgLGwLwbZKAuRBUm7koBzDtwG4jobMMkFnC-BSPDLo1GN529YekaB4QcAzG-R2xgo92Im3vHYD3hcAKnrvS9Asc5xnWecWxEXGfjlx3RXQFNx67rj6Sm42YZ8POGJj9EFYmgAmIWSFFkxaEGMR2IAlD8rIvPVmtkl34QSGJ0E-RNC3HFgVcJU5VwYJN07cDSJFE-scON7G-j3Y8YkceRKQR0TIInE6fuBOYhZj3YlEwccJKolyTReY4uCVOMZF8ZZxfoDCXeKXFMCBJlEwiXwK3FDD5JrcGQTxC2QRcZOagoIiEI8maJZB6kv8boJFE3IxRMTZAN0TYDnh3O2w15NL0UhRSwkZolSfV2tHHj7RYnGJmwDqDa5WBZHcYTFNk6RTRBFXb3qANF76ZUIcAXMQYHzF9CeUGgesaWJgFO9oc6UyNFWOd7Dcbi9YmsU2NyQti6pRgjoqYDe7JSexpBP3nJgqRoi1I3CaKdNM0TYShsXQhcNuIJZVTeCAw3rPZJKkCAb4t3bYbFzOBqR9ppoyJGl2GnOlck-8HToz3k7RxZee02XichfG0Bo+H3LTl7zMmLif+DQxSLshc4-Tb4icbiTHxsFjggpR3MLmSKqyL8oZJQscCFKal1A1RFyDUeZAcnaiaChgfUY0Nk4nBopjoXGYnDd6JSfINon4UIA9Fc8+Ek02TjHG2FRdWhMBBZMDPKk7jKpe4-IK2PqlH8fIoU3Mq1KhEu8OpgIrqexI0Ccz+psYzsWTLEkWR9JybB8UZIOAmTSBC4iyWUKskIzI03AmycRLmEsyVpe4kgTLK+FnTyxV4i8eBMKA89x2H4Aya1hJTPj8ir498WrPJnSI5ZE4hWZQBnGoTTJZA8yfNPVksC0puZbWbwN1kkCvByeHAu3ivA3SQC+PcPPKNNE1pgR+AbTLomlI-ZXZ-6dOXmHoKi9eZBgWcAR1K5qREUFHWQuR3Z4ZBtcP4oXmjOkQgy9oPkpicLxu4l8Lg+M4vheDvCwy2+fki5BlGmo7ZDu6yDVApB4TXdICFHGeXNIxQt8tpOY1matMLG1TARXMl0TzL8YBMrELAfmQ2UFl1jhZjY0Wb1I3kSyOxQ06WQXP94KR7u8nR0CtGnnPzE4CswTCPLsxjybkPsiEueD2Qh4n5ocWea8ni4wEI59XM6etNgKbS-x-CKTk-M0hdy3QyoirnkXhwfz7qo877u9N4H-zchF4J+LPKIWD8FklAQTMAO6L+MjAViNUWOGKRot8g4UskY6HDjLRWFO0Cru3xOmgDP5sAb+UITzlHFzu+ChoawvGxdyyO-cgBEwrS58KJedffVhnK1BZzWAH4oiV+P-TGFtMCkObuwui7484ur8CrrnOUVbS-ADcraR1ick-5exFBRaDgR4QUCLwMcWea4sTiaK1AyijrIaWzmBy2U8PIRbfNF7SShR0nKOLPIjiRKE45fZqR4OE7OChCGuYaBYoeTlJ2F1hQBZkue6uzFpvWKBYgLyj9QIoN8aXktzk6yiKl5wRONEVGna8KCmhFVPkDs5aE6AwS9Aj6Mfmy8ulZHY6T4jS6kyCx2aN7pdPxbnhtIXSqLl3KsJK8B5iwhcEeOlm+T-htBblAlFCXuxBAYYLgqy2qlaDXIE0d4crONkbKmoqnf+MBQUiqRJp42V0Pj1uXGKYC9sgSe1ibmyBoF4cr8UsGPp+Floj3WUf8uqUmKXlYhSBWTI+XZDCJpS8YXcveAHTYV0ilca8tAE9C7RwgCFcQIPGkExh4St0FRyZ5Uccl-ivJbAQKU3IsVZEpMdCtxWLc8pboGTuVxgKxsM+aXXoO6LE7mxaM4yskRtH75M8e+icXjCCuIx1LokW-UTEIVdlTxflTPTJbKoKkwEFZ-GPQIJnG4Sra4Uq8jNiu0gkc3QVSaXm52mHArg5yK3Qaiu7E6A5EkKuktSqW7lwJsN3dvECpgIWpT80OWoCSvNX9CrVmK9RbaouDlwJFjq8bKkLEKWiFwUCmwWKtrjWrSC8C5aNHlxkBqsRFXRAvQE9Vkqah1qpzs8hUHRdI4ea++M9yKCCZI17pLMYsqGW-CMuWymgK-jzCrJtwz05VdkOSXIIO4v+aROWvyi+COUB4KpPCnky4y4VQ62ONIq9YvThRjS8VG4T0LSIDCb6YwsDEUG5rcZscUdTEpgKOEAMLhaRLOo8I-yROEg8iZpxwI6rLwKgzaGHFxkmiKuH6Y9R-yRHyDSCEXVdcEIvW4zakaCzBoyApzzLVhQhZ9fAXowPIylQ68PB+og2wJISGuR9UITHFcEvpykFQdYU+AoblMDhPZQBgEKXSRCcQ0DUoJQ1lwh1QRVBav1bXHCB5+WZTl8L7UPJwuyGypBXBUHjZZlgYEtadPBVRqyA-8eyZPLRHAL28BauFQTIq5rUtAT1YTuf2kRRyVl5Ch5HfGQ3BIZO8mZTYAK4WYpRVaBDMiBFXmvDhVWwBVCmKhF1TzuDUnyJZz5ouZtgIIk+e1NKLu9T5HOCzlZ1cgdAbNAs+ze10bGCiMo3Rd-GflqAmdkuzS4AfYXLFhaMebq8-PQAi0j97CCBQLfQBrGiyTg5sAEXdAC3ur6AwWszqFobL1ijwnURqQVsBFFbEt2WuECVvhF3Ryt0W2oCloeFpbyJGUYYllpi3Gd2puo+4EVtgF7cEt9W2Lcf0p4Da01lEQWU1vNiKpLNKOaza2Pa1BavNbWsbblojCmBnNLAGbW5o80GAFtOWpbWUD22dbku9USQZbAxbmxfxv4y2FxFkG6ZDeMkQAnIWvDAKLwOq1SE-MTj7cMe3ipuWiAkBAatg32zea9x8gI8ftdDMzdzLgEQ7qgBeUCiDtMCWxwdQS0aTRuu31CtoKg+TCtHvg47VBDM2uEx3xFvd1FtknMPDtyAX9ngN8e8C9r4T8Jb4fCRlbXCEkZBhO6DdJMJgv5fpkIK65DReF2Q47Jhjy2uBOI-Qc7qAdABJLJr16bCl+v-W+IGpx2BrY8fBKnaysv7S7MhU8dCPzpV2oildgSMQXDwJHIFSpJGWVH+m63OE6CaOgec+tKQFqbudylXXcpqWoR1Y9aZJGoH0JVRDC9gEwrRG1Gcpco+AAjtlKfgnArCBfaPSzrHDpBeJgmIPfst3VCF3hqXAvoruAXzciF0XROG933ijFsNaXQQrXBVRN40AjqNKPg3MK4En44Sp+LfDY3wBvdsipHguqDQp6Q98BHDTcgr3yQHkUhZDU-AHVN6v1MBRPejVPDJ7t1qygAoevvXmFc1cvRnavvj17QrErYG0BOCKmaj-eeGAjHQC0HSpSM2qdpY1GoBJ60lOyEfUqIL5KjYEWAREcVP94RINAnOhJCDr61aY8wEmNQgxNgHWRSo-jOgIllgbM42IAaW9PstyiDSfIRe0svAUKAXjHgwkUmr3jsDMANKWlMIMO34B0NYcBaOxV8Osif7QQ9Y0wOQZq1AjLAH6GbG-rOU+TqDnUxQLanDBaCTlF+sJcHwE3cIqZByPhEInAAglU43GigP7rfTd6bkAGMPRHpe3RcCh8mRQ86trhX7p9Cii5Cnp3XipmOS+gQYrui4SK5e60aRSgbVSj5hCTpXYMTPEOCiduQhRAyJ3wBUEb4ykLjsoceTIaChSkN+AUFHjF7+Cpe3DdoXUPUNVAdenVQUOL6r6iOz3MQxoXgKtKx4YRjGn7pogB6l11EbHoYbxWeH3dFXOffATT119K91+9PUev6jyCRsuegoXIVX2KFI+DxSo6NIN66939+ygjgrrl7AKFDvRlOSuCeqwbpEhRGxb5L1037TePR--tMfU0wFu1-UYGUQdXQ26x4Oi6RIqg8DnBUDIADwLiAeFbGdjIEfY7khAg7K9xkBm9OoC2MsQeYzI5iRoHsA7Srw3hoIq8esKJwtjwmIresnLzx5QBex2AgcacDbHp+euEyECYunSJh0sBN7lsZ-AH9LDrwJHRBjhBji2Ap4ZtWGq2NtZqIWMKo1ZCcN8weUfxjcDAHfif5YTPkQ42CZADEncQJWlJPDzxOfp0tv+6oMSfZykhKuFsVE1qsAk8La45Q545AgUMgE0NgSDDSYosOIhcIDEE4-V0QNyJOTtJsk88dwJP8nFmpwVScb4wsmLxQvf47XDJMUndTIESI1Ly4RnBw4VplOROENOiyzj3BAsTAEuPQHrjIJ243yetwtJZADWDUtQviT5AtjyuGhSRDAAmpuyn8AkxoD9MBnd5+8koktjhMgnikzQdzcJHUD6c4z-AQM1YmEwomBIPwexahGWPJpVjqOgU48dTNwAfQvyLM7oEUgX8GeMKMYX4htPrqOzYC2uJYasTSYnj0iB0FRl7yCYMuMgsVuHsmPWng+eO8OI8kJ1jhVKxweriGdrM-ItYOZmgHmY8FzDiTyS-qIpPhPhbaTMJ2AfCeo47HXgsAok-qdpOCoxD6JzEzQBP1yIPAKIyOC9uD5BEpeF4DfSABhK3A+kgmE4MJk8HkrOyu1JoF9IvXRwfpimGTgubIAARTwVJBgGlw6xgTOUKBk819SvPDb4C2mZ6NgIR3T9M85AVyMhZgCoXMhFGQrLJFtAEcY9-hcbMhrk798wkw0QTBmRAO0AYA4Bw6G6cMDbANYsYX5FPEtgiXUgvyb-W9yciUpfklexNqLMksKWCSkRNZQ8JUspGq95JlCPg3COaX5L2l3iR6mGg4pmwPmZKHh3Ut0ARU32TvBZb2LWWiSMAMVFwFgDqAyzQq4OfwHcusmcMw-GSz5F8v0oodW83gAEcubQ4djcpm0AyYQORWpyflmK-RDitUmkroV9VN0UFESAAAQhWRiZeR9UhqYiork3L4NaApgWK8WUbKNQJAuXGy+Y0cuhpXw74AQBbWKZB0vSxEc5vGS8RR8Mohxs3I5e4mKoQrMAAZNUqZPBStjlICooyGmR+XJrU-DKxNdmuXbzYEgZ4eEfGstWs27VjKsqSNy30xypZqxIRXNhNJBrIJ7KNleWWkGPTXAbY2bn-iOXBMk6uvixHHOMhhOAk8a-BFcLjXlrXJiXKcIuHemho9xoqED2fixxkNdysYWRyfiIWPQixn3oFbCug6IrtKKK5GhlNoHrDmByQVdZaRDWcI0ObiR0esiPXnrcIf66YC8uLXYAwNyw6Df96hKrttFpsv7SqJWWQSV9FyxibdzKqcTepzGP5ZLPzWVjzhsxZl1QhPp6YxKfnola7pPnpruwe87ARmpi3RILAFwIKk8u+aWkXuqAD7p1tjxHCZZ4TCkuTLPp8GRVAC1vqMiYAqWoxANIanWLStmmqYXsvwwIZq2gweQYirHXjoaAXmWwWVEdBavkmnKdjNwNQCxbPlI6J1IW7QC4Il16c2ERZFxGktgw7W0aQho4ydb835obDVK24ypx7UJSNNVwD1YMCwBU7NAa1FAcMDHNzyJ1aq8yjyC-ZBACDJWjkzcAkRy7DCUeK4EfE5RYyEAPq4NXhDhlQ0xLK-pOXIa3Az0tQaS69TlqeX8AOYL5kmFuDlBjmt4P223ADuBl5aP7RQK2FPakp50dd2AKkEmLV69L8gKqNmjDDHNKwBrTiCCVnCgxlGPN5JHff3shATwZ45xGxAvFQZ+mulU5qXTrO1KZK0IOWo6iAQFx709FjtI3eJo2hTYiURCFg5+QUHh4+8fIEPYOjZ5j9L3D1AQ5tAj3PoQDxu-In5ueWDguulpEA4ftP40ykIEANQEPwn2EYo8Bgx0acMcPJid50Q73jEcp7QH1PADroBPDicfJiqUR35XvsnB8ADDtWxI4wd8OpHaj24Bo60du5FHMZzQCre3DaO-jmtqq5Y-xyW3LZRiBRWigUdvSOVyUReW9DsftBLbrucIW3E+GWwTbbjEYQFashk2pblVyJzQBZvY2YAxe289Y8kcsBtbCt3WHrc54HnW56WlpAA6yBn21Aq5us1rEuBTarIAGAB9Gmn4mnk4cVZw5U-WVlO0InKSpyzfVRpPwYhZo4a0bIBmXGAAD9BwDAFs54nzJ+iOrifFtGbmn8BBp5jfsPlOWnT5xCbNYtksmungkJp80nFtBX-DON82zsc1uiybz2zk8+XdTijWFnMzpZ20856I52TrkAwAYEbvp26A9OGm8UmKfqBLg7w-AJU90C3aeIYkip9c5WfMnxbl29tbYo8dIjobXoNgi8iF1vIYp8mFRDFMJm3Pw1LcsVhTwIt5hjCvEsKUPs7lEcuO14El70oq5vPBMeTwMj89aezX-n3EEwJs+Oe62dHAMGw9IiKfrmvnu5xZ6hkZeyCgX-L2gMs5BMrWan24ae5SoGiQvO4Wz3W5jdgHmO9nKppJ7o6vMPDWXJJyw9VdTg87KNeiXweFH7WqZ-+JLp+YRzvCfa2horwTLE46f2BIxfj0EBOiedPmXn45AEDS5wAoy-OxV9gE+ewfPnPhGBPMA8-dcghPXbz7l-We+f1OlngrwF+bB70GADwvfOQkRx+lzd++EcTRE9aRkLgk3zL8iakqR7-oWTUNj2Iz2eREdUNVr1DfEZHNpctLle2tdofn0KKFwnewPY4VbfUBa1eh7FZ+atdudPgRHMdy-zEPZDno7Bj6928kNd69adQD6-pCMuKXDmk5nHYR3cPR7lMVr1gt2dBmyRDmye5dwYFT26HF9kQTPRQNrfR60BRHA9hgL9Czvyp87pC4u8D3nvV3tvdd-JsV1nBouwSS8MB9hSx5SsaXToHnEveQeKjdGzuWS+CRAFgPbGYQzY-ENjnauUlmACcSMANWujPCAxZAkI5cJIEsCfD41fb118e30hoQrIYmhbvG9SHno6R56MnIYAY42fVVFg8L74PoKgw7W64QDqDFE+2uMquyvm6SCvglR5Fa6MseY9BiqwonESsl7QBZe-SDOuoBP3FB4SxQ0Lv0+i6xwHL5t-+JTfYffk9arAGAnHfvAFe94RQ1AU0TUeF3GRqQ44VTdjw+9QhZyLoq2H5rTeAXuY7XHSBceoPRR23XB9rhHLl97h++Mi-zVou2hEQuKlJ+o0O6rI1NsBEB-vjmvcvwXhPXIFMSaGFwIF8lf8ER6vr3DK0b88UKCKaIAmTpYTGV5qHkNSUNNThKB5qRdfKkf54YgqHq4AvnqPqtCaIuq+ELCOzOoz2QC2CGuUYA1lpE1zUAnAWuafX2QZBd6repupgbId9sZjtLmA6bs4GS9eSu6ChSNt+ECG2Av799c0VCM0ka5J81vM7zb8BG2-re9vN3s+MNGhi+ITvwecd0vzALPc3GAU0AcV+ExGAjIhXclWoCUiIQDgEMhIQULLhEeLwgYirl+jB+6D9AB6pHlaEGARpx5bJbQvxvu51H5Rk31gtN94dkRGYlih4+oHGI+71UkxB4bj5uLM-95-PexBLf0Rc+AefcTlXTF1j7ecMv485U3NKLM+0bgGnhVAnWhU+RPLuv84LA1EXJivNxYYH3Eh8E+YfNQ0osJmcfegHFoA-gJnrr4ph7T7jjbvwnJ-ALXJDvv80lFERgXQBbvuvucHHkKIYUcKLjnZ7m456UbBtzwJCjx918NsltQKq6aaADmklanDKP8Dstnqd3hHYBaV39-B5PjVTywAvOkQW6KvqchdHdvt16JjYxcBUVx3DhEfkbZGmNY9Z4GCZdU0f39xIZ1jgx9dXHGTs-C7-JyKuIvzp4Jgt+zRNNdFpDWn9i7aQu-Nr8BUBFLUTgqUdPgG+Py4CyRcHZjwv9eN1SGolqbAY1LsEXEl1I0NIc-BgALjcA1-VBqqH+t5ONebhvTY3zyeDgwprwB7NP9VncN4F2Lqa1b-V0m4kizVf+B0pRzczyR4QMdEH-gn0CGUV8uOVhRr84Ahwj9BPvBn1CdBYa2xft8yDQE-RZPPZxlxMrSw0ld3US-g1hYAX52NQTADHTv8i-Iby5tE-BfzP8OZZvxoBYAZnFj8jnKP2YCTAJyFX9yAD1BEZF-YpB4D8gC-3IB7jO4yJdYUKf38JKweAJkDTRaSzUBFwD3wuQPfBcC99wUMP0z1X1UD3JdCOcl0BkREFpCUDBMJs2kRHQb33FhoLPQOCQyXYDwwF+oTZDS56AsiBFRbgb5F+QNHfgLP9hMDMBa8hTD1GYVgkPQODwHPGOCi5DhcsxYBjAtLlMCkecwPBQvAlwKsCykGQJ78EUGn0ddgLbnVSkv0dIHH83JMAh3dYUI90-d2-OP10E-A6NTHAxfU4S0COOGThu53DGKUaMYCF3yMD1A0AUqCyAD30T4-oSwN99chBXjUggPLSGqwDA6OWFFjbDMCWxfdXDhBIOsUqh6CyAXByc5kfVggmwLeKbAq53IUOEWAtVPTDltWIU-zIhQTOtA1d1-ciUWCagniWcDTgxINcDvydc08DnA-k15Njgh4PcCYADR08p3NClkdQnYfzEoZpgr7wHkMoUGGgAIjG-Ts9x3Kwjx0FeMAhRtNYVIDElHA0AWmCjfY4I6D-AjaxPUnObHSL55uAkJKDkeYMTm83gxfw+CngtM1+DByLWFfB3oIELQBV6W+U4svQWLjRE2MSYW0hOQ4Pk0RIAKxBOBWQ0ASSwXILThaR-4fs3kRuVcBDHUbCWUOkUQSD914dcLUgU89V6ZPik5I4MdQkVtQ6RRjspXdXwXBCA1L3F9DuFUP3NR-YSBLQ5cX0CYdzg2JBOApndQAdDzZS+XWc4Qfs2g8V3fsx6pjER0IcDUTU6lUp1ARKF9C4AR0PuMfvcxBvhwuDw1jhJTHZDs8QCQ4ToB-kLEIuQugkUHyQw-brG0DEwipXzCCjLdQH9yglQOY5P9cf1jhFua8CrDjdQoxLDBMJYIIBHCKgErD1oO6SrCHpCrjaDUIRcHTCgUYTDBQahNQCoB0gR4SsDg+ZjC1CVoJfjV1UIRQP7DJEQcPxdaQKLBfU4UScMp9Nwmny5NywcsEExKwYTFDhPEOUA5M9RAYIi5qBLcL4Q+-GAjUA8Pd-mkRqgWhDgRaDF8O3h4EUvxwDMdHZG5C6BP8LdBqlL0EtBrQR8jwBFuSsBdBjwz0D8AgAA)\r\n\r\n## Your Environment\r\n* Version used: Branch `next`. Error doesn't occur in v1.1.6 or below because it doesn't include mentioned commit.\r\n* Browser Name and version: All\r\n* Operating System and version (desktop or mobile): Windows 10 desktop\r\n* Link to your project: NA\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2125","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2125/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2125/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2125/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2125","id":315674566,"number":2125,"title":"[Question] How can I prevent a video element being redrawn on a route change?","user":{"login":"bentranter","id":5421627,"avatar_url":"https://avatars2.githubusercontent.com/u/5421627?v=4","gravatar_id":"","url":"https://api.github.com/users/bentranter","html_url":"https://github.com/bentranter","followers_url":"https://api.github.com/users/bentranter/followers","following_url":"https://api.github.com/users/bentranter/following{/other_user}","gists_url":"https://api.github.com/users/bentranter/gists{/gist_id}","starred_url":"https://api.github.com/users/bentranter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bentranter/subscriptions","organizations_url":"https://api.github.com/users/bentranter/orgs","repos_url":"https://api.github.com/users/bentranter/repos","events_url":"https://api.github.com/users/bentranter/events{/privacy}","received_events_url":"https://api.github.com/users/bentranter/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-04-18T23:17:00Z","updated_at":"2018-04-19T14:02:52Z","closed_at":"2018-04-19T14:02:52Z","author_association":"NONE","body":"In part of my app, I show a video. I want that video to keep playing after a route change. A simplified version of the code I have now is:\r\n\r\n```js\r\nvar root = document.body\r\n\r\nvar video = {\r\n  view: function() {\r\n    return [\r\n      m(\"video\", {\r\n        src: \"https://www.w3schools.com/tags/movie.mp4\",\r\n        autoplay: !0\r\n      })\r\n    ]\r\n  }\r\n}\r\n\r\nvar view1 = {\r\n  view: function() {\r\n    return [\r\n      m(\"h1\", \"View 1\"),\r\n      m(\"a\", {\r\n        oncreate: m.route.link,\r\n        href: \"/page-2\"\r\n      }, \"Next\"),\r\n      m(video)\r\n    ]\r\n  }\r\n}\r\n\r\nvar view2 = {\r\n  view: function() {\r\n    return [\r\n      m(\"h1\", \"View 2\"),\r\n      m(\"a\", {\r\n        oncreate: m.route.link,\r\n        href: \"/\"\r\n      }, \"Prev\"),\r\n      m(video)\r\n    ]\r\n  }\r\n}\r\n\r\nm.route(root, \"/\", {\r\n  \"/\": view1,\r\n  \"/page-2\": view2\r\n})\r\n```\r\n\r\n## Expected Behavior\r\n\r\nWhen `page-1` is drawn, the video playback begins as expected. When I click the link to visit `/page-2`, the video playback should continue uninterrupted.\r\n\r\n## Current Behavior\r\n\r\nWhen `page-1` is drawn, the video playback begins as expected. When I click the link to visit `/page-2`, the video playback stops, the video is reloaded due to a redraw, and playback begins again from the start of the video.\r\n\r\n## Steps to Reproduce\r\n\r\nSee [this fiddle](https://jsfiddle.net/dqcx1ffx/5/).\r\n\r\n\r\n## Your Environment\r\n\r\n* Version used: Mithril.js 1.1.6\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2118","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/r
8000
epos/MithrilJS/mithril.js/issues/2118/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2118/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2118/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2118","id":313887924,"number":2118,"title":"Select onchange requires redraw","user":{"login":"yossicadaner","id":326006,"avatar_url":"https://avatars1.githubusercontent.com/u/326006?v=4","gravatar_id":"","url":"https://api.github.com/users/yossicadaner","html_url":"https://github.com/yossicadaner","followers_url":"https://api.github.com/users/yossicadaner/followers","following_url":"https://api.github.com/users/yossicadaner/following{/other_user}","gists_url":"https://api.github.com/users/yossicadaner/gists{/gist_id}","starred_url":"https://api.github.com/users/yossicadaner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yossicadaner/subscriptions","organizations_url":"https://api.github.com/users/yossicadaner/orgs","repos_url":"https://api.github.com/users/yossicadaner/repos","events_url":"https://api.github.com/users/yossicadaner/events{/privacy}","received_events_url":"https://api.github.com/users/yossicadaner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-04-12T21:07:50Z","updated_at":"2018-04-27T19:46:54Z","closed_at":"2018-04-27T19:46:54Z","author_association":"NONE","body":"B\"H\r\n\r\nIt seems for selects to work correctly require an explicit redraw. Shouldn't this be rolled into the api?\r\n\r\nhttps://jsfiddle.net/yossicadaner1/0hoa4a26/16/\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2117","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2117/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2117/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2117/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2117","id":313605188,"number":2117,"title":"Site: Content issues after latest publish","user":{"login":"tivac","id":49545,"avatar_url":"https://avatars0.githubusercontent.com/u/49545?v=4","gravatar_id":"","url":"https://api.github.com/users/tivac","html_url":"https://github.com/tivac","followers_url":"https://api.github.com/users/tivac/followers","following_url":"https://api.github.com/users/tivac/following{/other_user}","gists_url":"https://api.github.com/users/tivac/gists{/gist_id}","starred_url":"https://api.github.com/users/tivac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tivac/subscriptions","organizations_url":"https://api.github.com/users/tivac/orgs","repos_url":"https://api.github.com/users/tivac/repos","events_url":"https://api.github.com/users/tivac/events{/privacy}","received_events_url":"https://api.github.com/users/tivac/received_events","type":"User","site_admin":false},"labels":[{"id":86465857,"url":"https://api.github.com/repos/MithrilJS/mithril.js/labels/bug","name":"bug","color":"fc2929","default":true},{"id":394673449,"url":"https://api.github.com/repos/MithrilJS/mithril.js/labels/documentation","name":"documentation","color":"1d76db","default":false}],"state":"closed","locked":false,"assignee":{"login":"tivac","id":49545,"avatar_url":"https://avatars0.githubusercontent.com/u/49545?v=4","gravatar_id":"","url":"https://api.github.com/users/tivac","html_url":"https://github.com/tivac","followers_url":"https://api.github.com/users/tivac/followers","following_url":"https://api.github.com/users/tivac/following{/other_user}","gists_url":"https://api.github.com/users/tivac/gists{/gist_id}","starred_url":"https://api.github.com/users/tivac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tivac/subscriptions","organizations_url":"https://api.github.com/users/tivac/orgs","repos_url":"https://api.github.com/users/tivac/repos","events_url":"https://api.github.com/users/tivac/events{/privacy}","received_events_url":"https://api.github.com/users/tivac/received_events","type":"User","site_admin":false},"assignees":[{"login":"tivac","id":49545,"avatar_url":"https://avatars0.githubusercontent.com/u/49545?v=4","gravatar_id":"","url":"https://api.github.com/users/tivac","html_url":"https://github.com/tivac","followers_url":"https://api.github.com/users/tivac/followers","following_url":"https://api.github.com/users/tivac/following{/other_user}","gists_url":"https://api.github.com/users/tivac/gists{/gist_id}","starred_url":"https://api.github.com/users/tivac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tivac/subscriptions","organizations_url":"https://api.github.com/users/tivac/orgs","repos_url":"https://api.github.com/users/tivac/repos","events_url":"https://api.github.com/users/tivac/events{/privacy}","received_events_url":"https://api.github.com/users/tivac/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2018-04-12T07:20:27Z","updated_at":"2018-04-13T09:12:08Z","closed_at":"2018-04-13T09:12:08Z","author_association":"OWNER","body":"- [ ] Installation page has some broken formatting\r\n- [ ] Missing sidebar on [integrating with other librarries](https://mithril.js.org/integrating-libs.html)\r\n- [ ] No link to [support page](https://mithril.js.org/support.html) in the sidebar","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2109","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2109/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2109/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2109/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2109","id":308285337,"number":2109,"title":"mithril x jsx configuration update.","user":{"login":"spankie","id":13089295,"avatar_url":"https://avatars0.githubusercontent.com/u/13089295?v=4","gravatar_id":"","url":"https://api.github.com/users/spankie","html_url":"https://github.com/spankie","followers_url":"https://api.github.com/users/spankie/followers","following_url":"https://api.github.com/users/spankie/following{/other_user}","gists_url":"https://api.github.com/users/spankie/gists{/gist_id}","starred_url":"https://api.github.com/users/spankie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spankie/subscriptions","organizations_url":"https://api.github.com/users/spankie/orgs","repos_url":"https://api.github.com/users/spankie/repos","events_url":"https://api.github.com/users/spankie/events{/privacy}","received_events_url":"https://api.github.com/users/spankie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-24T18:07:19Z","updated_at":"2018-03-28T06:42:22Z","closed_at":"2018-03-28T06:42:22Z","author_association":"NONE","body":"## Current Behavior\r\nsetting up a mithril app with jsx throws errors when using webpack v4.2.0 with the configuration instructinos @ https://mithril.js.org/jsx.html\r\nwebpack v4.2.0 configuration is different from that of v3.10.0 which is the last version i know works well with the configuration instruction.\r\n\r\n## Context\r\nsetting up a mithril app with jsx throws errors when using webpack v4.2.0\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2108","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2108/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2108/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2108/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2108","id":307066450,"number":2108,"title":"No whitespace between inline elements","user":{"login":"pockata","id":543561,"avatar_url":"https://avatars2.githubusercontent.com/u/543561?v=4","gravatar_id":"","url":"https://api.github.com/users/pockata","html_url":"https://github.com/pockata","followers_url":"https://api.github.com/users/pockata/followers","following_url":"https://api.github.com/users/pockata/following{/other_user}","gists_url":"https://api.github.com/users/pockata/gists{/gist_id}","starred_url":"https://api.github.com/users/pockata/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pockata/subscriptions","organizations_url":"https://api.github.com/users/pockata/orgs","repos_url":"https://api.github.com/users/pockata/repos","events_url":"https://api.github.com/users/pockata/events{/privacy}","received_events_url":"https://api.github.com/users/pockata/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-03-20T22:48:41Z","updated_at":"2018-03-21T22:45:25Z","closed_at":"2018-03-21T13:00:30Z","author_association":"NONE","body":"<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behavior\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nWhen Mithril renders a component with two `span` elements (it can be any element with `display: inline/inline-block`) the generated code should be equal to writing the two inline elements on multiple lines.  \r\n\r\nThis example should clear things up a bit:\r\n```js\r\nm(\"div\", [\r\n    m(\"span\", \"left\"),\r\n    m(\"span\", \"right\")\r\n]);\r\n```\r\n\r\nShould generate\r\n```html\r\n<div>\r\n<span>left</span>\r\n<span>right</span>\r\n</div>\r\n```\r\nwhich should render as\r\n```\r\nleft right\r\n```\r\nbut it doesn't.\r\n\r\n## Current Behavior\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nThe generated output is\r\n```html\r\n<div><span>left></span><span>right</span></div>\r\n```\r\nwhich renders as\r\n```\r\nleftright\r\n```\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nA workaround is adding an empty span element or a space character at the end of the first string.\r\n```js\r\nm(\"div\", [\r\n    m(\"span\", \"left\"),\r\n    m(\"span\", \"\"),\r\n    m(\"span\", \"right\")\r\n]);\r\n\r\n// or\r\n\r\nm(\"div\", [\r\n    m(\"span\", \"left \"),\r\n    m(\"span\", \"right\")\r\n]);\r\n```\r\n\r\nFor a JSX-styled code, you can add a `&nbsp;` between the two tags.\r\n```jsx\r\n<span>left</span>\r\n&nbsp;\r\n<span>right</span>\r\n``` \r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\nHere is a link to a [pen](https://codepen.io/pockata/pen/LdWyVp) showing both scenarios side by side.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nI was trying to use this method for creating even spacing between inline elements;\r\nhttps://codepen.io/absolutholz/post/evenly-spacing-elements-with-text-align-justify\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Version used: 1.1.6\r\n* Browser Name and version: Firefox 61 (Nightly), Chromium 65 \r\n* Operating System and version (desktop or mobile): Arch Linux\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2106","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2106/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2106/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2106/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2106","id":305718833,"number":2106,"title":"Question: mysterious vnode.children nesting ","user":{"login":"barneycarroll","id":83627,"avatar_url":"https://avatars0.githubusercontent.com/u/83627?v=4","gravatar_id":"","url":"https://api.github.com/users/barneycarroll","html_url":"https://github.com/barneycarroll","followers_url":"https://api.github.com/users/barneycarroll/followers","following_url":"https://api.github.com/users/barneycarroll/following{/other_user}","gists_url":"https://api.github.com/users/barneycarroll/gists{/gist_id}","starred_url":"https://api.github.com/users/barneycarroll/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/barneycarroll/subscriptions","organizations_url":"https://api.github.com/users/barneycarroll/orgs","repos_url":"https://api.github.com/users/barneycarroll/repos","events_url":"https://api.github.com/users/barneycarroll/events{/privacy}","received_events_url":"https://api.github.com/users/barneycarroll/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-03-15T21:04:03Z","updated_at":"2018-03-17T15:11:46Z","closed_at":"2018-03-16T23:27:37Z","author_association":"OWNER","body":"I'm playing around with feasibility / ergonomics studies for functor components. Precedent React convention tends towards components that expose a custom attribute / props interface and accept the view / render function in the place of `children`, which makes a certain amount of sense and certainly involves less typing ceremony.\r\n\r\nWhen I try to implement this pattern in Mithril I end up unexpectedly having to query `vnode.children[0].children` from the consuming component to access the function I passed in as the last argument — I would expect this to be exposed as `vnode.children[0]`. \r\n\r\nWhy might this be? Does this make sense to people more familiar with the internal vnode engine? Have I hit upon a dangerous ambiguity, or is this a harmless piece of implementation trivia?\r\n\r\n[Here's a minimal repro.](https://flems.io/#0=N4IgZglgNgpgziAXAbVAOwIYFsZJAOgAsAXLKEAGhAGMB7NYmBvEAXwvW10QICsEqdBk2J4s+AE5MAJjAkAKabWoBXHA3wAjWtICeFADpoABMazzgR06YBuEGAHdExm8YC8APivXb+aoWhpKTRkAAYAXT8AqCCmeQBKb3ZvUwT3D2MAcgAJGCgoWgBCTO9EtHjKGlosAAdoOTxNDE08tg4QTBw8PzgBKuFmHjZwqigINABrBBROLp4sCGJCCWhKlQlyHhJiGrhEAHp9lTQaiYBzP2r9haWVqAABAEZ8Z4A2a8Xl6Hx+SuJdGrcEC-VjhVhAA)","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2099","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2099/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2099/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2099/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2099","id":301984338,"number":2099,"title":"Turn m.trust into a component?","user":{"login":"pygy","id":54515,"avatar_url":"https://avatars1.githubusercontent.com/u/54515?v=4","gravatar_id":"","url":"https://api.github.com/users/pygy","html_url":"https://github.com/pygy","followers_url":"https://api.github.com/users/pygy/followers","following_url":"https://api.github.com/users/pygy/following{/other_user}","gists_url":"https://api.github.com/users/pygy/gists{/gist_id}","starred_url":"https://api.github.com/users/pygy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pygy/subscriptions","organizations_url":"https://api.github.com/users/pygy/orgs","repos_url":"https://api.github.com/users/pygy/repos","events_url":"https://api.github.com/users/pygy/events{/privacy}","received_events_url":"https://api.github.com/users/pygy/received_events","type":"User","site_admin":false},"labels":[{"id":205363681,"url":"https://api.github.com/repos/MithrilJS/mithril.js/labels/breaking%20change%20proposal","name":"breaking change proposal","color":"006b75","default":false},{"id":86465861,"url":"https://api.github.com/repos/MithrilJS/mithril.js/labels/question","name":"question","color":"cc317c","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-03T09:38:10Z","updated_at":"2018-03-05T16:46:09Z","closed_at":"2018-03-05T16:45:56Z","author_association":"OWNER","body":"We could turn `m.trust(str)` into a component `m(m.Trust, {ns?: namespace}, str)` and remove the corresponding logic from the core renderer. This may or may not be a good idea...\r\n\r\n```JS\r\nm.Trust = function() {\r\n  view() { return \"\"},\r\n  oncreate(vnode){\r\n    // replace the textNode with actual DOM (see createHTML in render/render.js).\r\n  },\r\n  onbeforeupdate(vnode, previous) {\r\n    return !(vnode.children === previous.children && vnode.attrs.ns === previous.attrs.ns)\r\n  },\r\n  onupdate(vnode){\r\n    removeTheOldElements()\r\n    this.oncreate(vnode)\r\n  }\r\n}\r\n```","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2096","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2096/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2096/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2096/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2096","id":301591911,"number":2096,"title":"[suggestion] Add support for trusting bits of SVG (IE10+)","user":{"login":"pygy","id":54515,"avatar_url":"https://avatars1.githubusercontent.com/u/54515?v=4","gravatar_id":"","url":"https://api.github.com/users/pygy","html_url":"https://github.com/pygy","followers_url":"https://api.github.com/users/pygy/followers","following_url":"https://api.github.com/users/pygy/following{/other_user}","gists_url":"https://api.github.com/users/pygy/gists{/gist_id}","starred_url":"https://api.github.com/users/pygy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pygy/subscriptions","organizations_url":"https://api.github.com/users/pygy/orgs","repos_url":"https://api.github.com/users/pygy/repos","events_url":"https://api.github.com/users/pygy/events{/privacy}","received_events_url":"https://api.github.com/users/pygy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-01T22:58:51Z","updated_at":"2018-03-14T18:29:54Z","closed_at":"2018-03-14T16:42:50Z","author_association":"OWNER","body":"From a Gitter conversation: we could support trusted SVG strings by leveraging the DOMParser API (whose `parseFromString()` method is supported by IE 10+).\r\n\r\nSomething like this would go a long way:\r\n\r\n```JS\r\nconst parser = new DOMParser()\r\nconst nodes = parser.parseFromString(\r\n  \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + src + \"</svg>\", \r\n  \"image/svg+xml\"\r\n).firstChild.childNodes\r\n// append the nodes\r\n```\r\n\r\n[flems](https://flems.io/#0=N4IgZglgNgpgziAXAbVAOwIYFsZJAOgAsAXLKEAGhAGMB7NYmBvEAXwvW10QICsEqdBk2J44AJ2oACALxSABgB5GAD2JSw9YgFow2aAE8ZAHRABBcRAxQpAOQzjxtAO6mNW7XAgAvGCZAATADs+ABsblAQaDDahDAQAOYk-gAsbpoM2s7xScT+AEa0UAAmpgB8xmhSUspwAA4YVSr+AMxBbkamAQCsbqo6jdSEtOL+cMQOxG7WiWg4DPkYcDCR0f5YEMXFsOUAKgZ1MIhSAEoAsgBiF1ItAAwAmlIA9FKhd1IAygAyFJ9PtscAIwALQAwgARQEBFopbqhIIADkUT2I9UaFSqNVRDSarXaICknRAoVufRgam0g2Go1M40m00iCTmIkWy1WflMGy2OxAGOq1QAqpV+Vi0VVxgZYAUlisojE4IQIGBiIg4ABXfLlLDI7Ho4X8453ADWADVfoAkwH11VqOKkEqlplZsuinkVytVGvKaB1Yr5BqkgNC+BC+Hw3VuAAlvL8AJJW0W2+0ckBO9mupUq9Wa3knH04v3VIGA263Mz6vN670o8nEMrySqVITjKQNcTLcSyKTRZxScEAeTOAAUHO2ABQASkb9GbxHEMBgndb7fwS5gFycWA+s6iCVHpkUcAAbgkpCoyGg4CZjKYSMQ6ognk9nM-8M4WvgRgkngES7cnkeEmvco3AAajtSQpDA-d-2PCpKGqUwICwDAEhgGCEhAs8oFMSc0EqLB8DnNBihgcRR2KWhqDVeZiHwQpigMX4sD3EAAOQZxNmIQgZBJW4AF1TF+YB6GoOcMEYUdgAorBWHHYB9Wk-AMDqQ5iNBRUSlHWd53wSA22IdToGKXSIH0wySlw1hZPHSgaFoLA6mgUi8EWfIVjYDgQEwHA8Hwag4AEOzhGYHg2D4qhViNBAUE4HyeA2LjLHIKg1XEcgeFvOo4AfJ41TQOojQSPz7KeBLCCSgABQF8Gq0JSogRLoHwfhbOIA5uBAFrWD41ggA)","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2090","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2090/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2090/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2090/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2090","id":298286563,"number":2090,"title":"`onbeforeremove` does not always trigger when navigating away","user":{"login":"osban","id":25636115,"avatar_url":"https://avatars1.githubusercontent.com/u/25636115?v=4","gravatar_id":"","url":"https://api.github.com/users/osban","html_url":"https://github.com/osban","followers_url":"https://api.github.com/users/osban/followers","following_url":"https://api.github.com/users/osban/following{/other_user}","gists_url":"https://api.github.com/users/osban/gists{/gist_id}","starred_url":"https://api.github.com/users/osban/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/osban/subscriptions","organizations_url":"https://api.github.com/users/osban/orgs","repos_url":"https://api.github.com/users/osban/repos","events_url":"https://api.github.com/users/osban/events{/privacy}","received_events_url":"https://api.github.com/users/osban/received_events","type":"User","site_admin":false},"labels":[{"id":205363681,"url":"https://api.github.com/repos/MithrilJS/mithril.js/labels/breaking%20change%20proposal","name":"breaking change proposal","color":"006b75","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2018-02-19T14:04:45Z","updated_at":"2018-02-19T21:06:37Z","closed_at":"2018-02-19T21:06:37Z","author_association":"NONE","body":"In case of `Layout -> Parent -> Child` components, `onbeforeremove` in `Child` is triggered normally when clicking and navigating away through `Parent`, but not when clicking and navigating away through `Layout`.\r\n\r\n## Expected Behavior\r\n`onbeforeremove` should always trigger when navigating away from the component, `Child` in this case.\r\n\r\n## Current Behavior\r\n`onbeforeremove` in `Child` is triggered normally when clicking and navigating away through `Parent`, but not when clicking and navigating away through `Layout`.\r\n\r\n## Steps to Reproduce (for bugs)\r\n[Flems](https://flems.io/#0=N4IgZglgNgpgziAXAbVAOwIYFsZJAOgAsAXLKEAGhAGMB7NYmBvEAXwvW10QICsEqdBk2J4hcYgAIAMhgCetAK5SAvJOAAdNJMkA3CDADuiPWloATGJJUA+Sci06dWABQBycxF1uKjp8-cMH3U-fx1CACcYMBM3AHofULD6aiiMRhMsfAilRnwoCDQAaySddkkNEAAJWhxKgEpfbTDXNyCKEOawyUjo2LjiDDgixK7ktFSYdJhM7NyYfMKSsbKOyoAVIZKQeqTGpNa4GGpiCHpg3TNLfGpCaHMotF3mgF0tVi0tcSkABQxH1SdHT0QoQYgmFzACTTVj1ax2KGDPKDYbWSRgDBQI7sPz6IwQxEwuG2ewHdyebxNbqtQgAJmClT+AIaVJa7gARspiOcOsAUgVqEUIcS7NDkVs0cQIooYOVKgBlQi0Qws0qSVqc4jctDBPkTAVCyQuEWSMULFFFNEYrGytbVCCWBp7Vk6M34C2SABknvVLgAwncoOZnjo3mgPmgvvQJJIA-c0ZpmvR2dFaFFFAAHczTYXw9QZlyVZOp9NZ6YNHFJtApsBpmBRLC0XQzI0m4AFovVkv1mCN5sV1l44ytvMOMatCmjanuOkMkBxoNOsYhyRhiNaLI5ZQwFzmWjURQ4Bj4dkWOQdeK6vyVOKVEzAR6WCK5kmuWQKZT1Ss6G8Wu-qR96xfOw33kXIOlcJkRHqL93nqNgOBATAcDwG44AEGh6EYZgeDYF4qAKYoEBQTgUJ4LAwUiaBKBARQInIHgSGIDM4EQOI4kUNAMyKABzG5ajiCjiCoqAAAEAEZ8EkgBWQTKIiaB8H4GjiDkDNuBAZT2FIjShJEgBaCQ0iwGi6IYkAmJYtiOK43j+KwOThIUqBDKlKYsAkqT8AABjiIz3KUjDVPUvAtJeVggA).\r\n\r\n## Context\r\nI want to remove temporary files in the `onbeforeremove`.\r\n\r\n## Your Environment\r\n* Version used: 1.1.6\r\n* Browser Name and version: Firefox 58.0.2\r\n* Operating System and version (desktop or mobile): desktop Windows 10\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2089","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2089/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2089/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2089/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2089","id":298005788,"number":2089,"title":"double escape is required even if I pass RegExp object to input pattern attributes","user":{"login":"yumetodo","id":10869046,"avatar_url":"https://avatars0.githubusercontent.com/u/10869046?v=4","gravatar_id":"","url":"https://api.github.com/users/yumetodo","html_url":"https://github.com/yumetodo","followers_url":"https://api.github.com/users/yumetodo/followers","following_url":"https://api.github.com/users/yumetodo/following{/other_user}","gists_url":"https://api.github.com/users/yumetodo/gists{/gist_id}","starred_url":"https://api.github.com/users/yumetodo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yumetodo/subscriptions","organizations_url":"https://api.github.com/users/yumetodo/orgs","repos_url":"https://api.github.com/users/yumetodo/repos","events_url":"https://api.github.com/users/yumetodo/events{/privacy}","received_events_url":"https://api.github.com/users/yumetodo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2018-02-17T13:43:59Z","updated_at":"2018-02-21T14:26:48Z","closed_at":"2018-02-21T14:26:48Z","author_association":"NONE","body":"In `input` tag's attribute `pattern`, to pass regex pattern, even if it's `RegExp` object, we need to escape `/`.\r\n\r\n## Expected Behavior\r\n\r\n```js\r\nm(\"input\", {\r\n     \"type\": \"text\",\r\n     \"value\": this.data.expected_dia_ore_num_per_chunk,\r\n     \"pattern\": /(0|\\d{1,}\\.\\d*)/,\r\n     \"min\": 0\r\n})\r\n```\r\n\r\nproduce\r\n\r\n```html\r\n<input pattern=\"/(0|\\d{1,}\\.\\d*)/\" min=\"0\" type=\"text\">\r\n```\r\n\r\n`\"pattern\": new RegExp(\"(0|\\d{1,}\\.\\d*)\")` is same as above.\r\n\r\n## Current Behavior\r\n\r\nAbove example code produce\r\n\r\n```html\r\n<input pattern=\"/(0|d{1,}.d*)/\" min=\"0\" type=\"text\">\r\n```\r\n\r\nSo, I need to write like below:\r\n\r\n```js\r\nm(\"input\", {\r\n     \"type\": \"text\",\r\n     \"value\": this.data.expected_dia_ore_num_per_chunk,\r\n     \"pattern\": \"(0|\\\\d{1,}\\\\.\\\\d*)\",\r\n     \"min\": 0\r\n})\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2082","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2082/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2082/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2082/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2082","id":294846132,"number":2082,"title":"Input don't update if value changed to \"undefined\"","user":{"login":"ftaiolivista","id":150721,"avatar_url":"https://avatars3.githubusercontent.com/u/150721?v=4","gravatar_id":"","url":"https://api.github.com/users/ftaiolivista","html_url":"https://github.com/ftaiolivista","followers_url":"https://api.github.com/users/ftaiolivista/followers","following_url":"https://api.github.com/users/ftaiolivista/following{/other_user}","gists_url":"https://api.github.com/users/ftaiolivista/gists{/gist_id}","starred_url":"https://api.github.com/users/ftaiolivista/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ftaiolivista/subscriptions","organizations_url":"https://api.github.com/users/ftaiolivista/orgs","repos_url":"https://api.github.com/users/ftaiolivista/repos","events_url":"https://api.github.com/users/ftaiolivista/events{/privacy}","received_events_url":"https://api.github.com/users/ftaiolivista/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-02-06T17:28:30Z","updated_at":"2018-02-08T23:48:16Z","closed_at":"2018-02-08T23:48:16Z","author_association":"CONTRIBUTOR","body":"I have an input text field binded to a variable.\r\nIf I change the variable, after redraw I see the input content change.\r\nBut if I change the variable to \"undefined\" the input content don't change.\r\n\r\n## Expected Behavior\r\nI expect the input content to become empty\r\n\r\n## Current Behavior\r\nThe redraw of input field seems to ignore the value change if the new value == undefined\r\n\r\n## Steps to Reproduce (for bugs)\r\nWrite on input field, click \"save\" to reset. (the input don't reset)\r\nhttps://jsfiddle.net/hphg5ca2/12/\r\n\r\n## Your Environment\r\n* Version used: Tested on current stable and next\r\n* Link to your project: https://jsfiddle.net/hphg5ca2/12/\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2080","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2080/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2080/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2080/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2080","id":294009536,"number":2080,"title":"Backport the event optimizations made in v2","user":{"login":"isiahmeadows","id":4483844,"avatar_url":"https://avatars1.githubusercontent.com/u/4483844?v=4","gravatar_id":"","url":"https://api.github.com/users/isiahmeadows","html_url":"https://github.com/isiahmeadows","followers_url":"https://api.github.com/users/isiahmeadows/followers","following_url":"https://api.github.com/users/isiahmeadows/following{/other_user}","gists_url":"https://api.github.com/users/isiahmeadows/gists{/gist_id}","starred_url":"https://api.github.com/users/isiahmeadows/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/isiahmeadows/subscriptions","organizations_url":"https://api.github.com/users/isiahmeadows/orgs","repos_url":"https://api.github.com/users/isiahmeadows/repos","events_url":"https://api.github.com/users/isiahmeadows/events{/privacy}","received_events_url":"https://api.github.com/users/isiahmeadows/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-02-02T20:12:46Z","updated_at":"2018-02-21T14:50:26Z","closed_at":"2018-02-21T14:50:26Z","author_association":"COLLABORATOR","body":"Basically, the optimizations in #1949 *really* should be backported to v1 (mod the `handleEvent` addition unless we're okay with dropping that in a patch release). It should definitely help fix the [odd lack of proper event handler diffing in the presence of an `onevent` hook](https://github.com/MithrilJS/mithril.js/blob/v1_1_x/render/render.js#L574) (which is *always* set for `m.redraw`).","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2078","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2078/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2078/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2078/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2078","id":292153635,"number":2078,"title":"Howto force oninit with m(\"a[href=/]\", {oncreate: m.route.link})","user":{"login":"pericazivkovic","id":535911,"avatar_url":"https://avatars0.githubusercontent.com/u/535911?v=4","gravatar_id":"","url":"https://api.github.com/users/pericazivkovic","html_url":"https://github.com/pericazivkovic","followers_url":"https://api.github.com/users/pericazivkovic/followers","following_url":"https://api.github.com/users/pericazivkovic/following{/other_user}","gists_url":"https://api.github.com/users/pericazivkovic/gists{/gist_id}","starred_url":"https://api.github.com/users/pericazivkovic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pericazivkovic/subscriptions","organizat
8000
ions_url":"https://api.github.com/users/pericazivkovic/orgs","repos_url":"https://api.github.com/users/pericazivkovic/repos","events_url":"https://api.github.com/users/pericazivkovic/events{/privacy}","received_events_url":"https://api.github.com/users/pericazivkovic/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-01-27T21:21:14Z","updated_at":"2018-01-28T21:40:57Z","closed_at":"2018-01-28T21:40:57Z","author_association":"NONE","body":"I have forced oninit with key usage in routing like described here (https://mithril.js.org/route.html#key-parameter). I would like to have same behaviour for href links that use `oncreate:m.route.link`.\r\n\r\nHow can I specify `{state: {key: Date.now()}}` for hrefs ?","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2076","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2076/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2076/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2076/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2076","id":290546627,"number":2076,"title":"Mithril scanned as Trojan/Generic.ASVCS3S.3FA","user":{"login":"rebootcode","id":9850427,"avatar_url":"https://avatars1.githubusercontent.com/u/9850427?v=4","gravatar_id":"","url":"https://api.github.com/users/rebootcode","html_url":"https://github.com/rebootcode","followers_url":"https://api.github.com/users/rebootcode/followers","following_url":"https://api.github.com/users/rebootcode/following{/other_user}","gists_url":"https://api.github.com/users/rebootcode/gists{/gist_id}","starred_url":"https://api.github.com/users/rebootcode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rebootcode/subscriptions","organizations_url":"https://api.github.com/users/rebootcode/orgs","repos_url":"https://api.github.com/users/rebootcode/repos","events_url":"https://api.github.com/users/rebootcode/events{/privacy}","received_events_url":"https://api.github.com/users/rebootcode/received_events","type":"User","site_admin":false},"labels":[{"id":86465861,"url":"https://api.github.com/repos/MithrilJS/mithril.js/labels/question","name":"question","color":"cc317c","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-01-22T17:19:07Z","updated_at":"2018-01-22T23:32:07Z","closed_at":"2018-01-22T22:51:54Z","author_association":"NONE","body":"It sounds weird but files inside \"mithril.js\" is considered as trojan.\r\n\r\nVirusTotal URL - https://www.virustotal.com/#/file/d7d810b95725ca20774614866cff1dca438552f9a3960f298c88b6f99f9ffaa3/detection","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2071","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2071/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2071/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2071/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2071","id":287496778,"number":2071,"title":"Random `key` param does not recreate component inside RouteResolver","user":{"login":"ACXgit","id":3874459,"avatar_url":"https://avatars0.githubusercontent.com/u/3874459?v=4","gravatar_id":"","url":"https://api.github.com/users/ACXgit","html_url":"https://github.com/ACXgit","followers_url":"https://api.github.com/users/ACXgit/followers","following_url":"https://api.github.com/users/ACXgit/following{/other_user}","gists_url":"https://api.github.com/users/ACXgit/gists{/gist_id}","starred_url":"https://api.github.com/users/ACXgit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ACXgit/subscriptions","organizations_url":"https://api.github.com/users/ACXgit/orgs","repos_url":"https://api.github.com/users/ACXgit/repos","events_url":"https://api.github.com/users/ACXgit/events{/privacy}","received_events_url":"https://api.github.com/users/ACXgit/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-01-10T16:30:58Z","updated_at":"2018-01-10T22:25:52Z","closed_at":"2018-01-10T21:49:28Z","author_association":"CONTRIBUTOR","body":"I have a tree of components like this: `m(Layout, m(A), m(B))` where I want to:\r\n\r\n1. keep `Layout` and `A` fixed\r\n2. recreate `B` on route change.\r\n\r\nPoint 1 is easily achieved with RouteResolver as in the [Wrapping a layout component](https://mithril.js.org/route.html#wrapping-a-layout-component) example.\r\n\r\n## Expected Behavior\r\nI was trying to achieve point 2 forcing a random `key` param on `B`, as I knew that a component with a random `key` param should always being recreated\r\n\r\n## Current Behavior\r\n`B` is not recreated across route changes\r\n\r\n## Steps to Reproduce\r\n[Example flem](https://flems.io/#0=N4IgZglgNgpgziAXAbVAOwIYFsZJAOgCsEAaEAYwHs0AXGWvKtOGgAikoHNOYAnVgLysIAE3o0IkPoIB8rABTAAOmlatqENBDZrEC4AGsYATwC+ASlmsmcSrHwdO80eMkRpAalYApAMoB5ADl8Fl5NTkljeSNjVgB+fRiLVj0AclTLL1T1LS0aDJIVNWoAVwAHEQw6FMSTZIE5GzsYBy5nMVo3Tx8A4NDwyOiTeNqzSzSM1iyc8sq6AqLWADd3AHc1Db15SwbWLHlUgAsAJlSSYQ6JKV5zQrQLFRUbNgAZDGNKErYhZVVlta2wHIh2gIl49HqcmQizU+yOAEYzqxUgAlT7VJFYfC8dEtHg0ba3GGsYlwkpQM7EtTIVIAekR5zppwAuvgsBgyvIcV8YLIqRs4VAIEj+Rs9gcMEjfmKZRtqORwVVeXosdy6A5NAY7rLZYdwWAZXo1TBtTq1KZzqKZcbTWaiX9ZfbHbbWE6NsTgaDwWhTcyVKZHmhnqxgABBc4AIVMglYaBg6wACjiAB5RYAWkOLfE1RQZmI7OSOHi8IbGcz+8toFSq3HyESUcglHC0fAAI0oImMjPpUsWdMRemlG29Yl4egAJHyHQL5G8Pl9zvtQ7dxRHzsBWDE9AARJX4NCUVbbVgWN0Wvu006D4kjvgTqey-Zz9GL+TL19rkObkw7vcHo+WKepoBvc5ggKYzJkEKaAGAgKDoNguCICAWDaHq0AgGQJS8FAeCHDQNBlHAiC0rSJRoGUBicPgVBYLSqE0OhUAAALwvgbEAGz0WhYRQEQpAgDQxhlEhIDEOBzKmEAA)\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Version used: 1.1.6\r\n* Browser Name and version: Firefox Nightly 59.0a1 (2018-01-08) (64 bit)\r\n* Operating System and version (desktop or mobile): Windows 10\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2058","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2058/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2058/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2058/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2058","id":284410960,"number":2058,"title":"How to manipulate a component that depends on data from a m.request","user":{"login":"raaffaaeell","id":6959662,"avatar_url":"https://avatars1.githubusercontent.com/u/6959662?v=4","gravatar_id":"","url":"https://api.github.com/users/raaffaaeell","html_url":"https://github.com/raaffaaeell","followers_url":"https://api.github.com/users/raaffaaeell/followers","following_url":"https://api.github.com/users/raaffaaeell/following{/other_user}","gists_url":"https://api.github.com/users/raaffaaeell/gists{/gist_id}","starred_url":"https://api.github.com/users/raaffaaeell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/raaffaaeell/subscriptions","organizations_url":"https://api.github.com/users/raaffaaeell/orgs","repos_url":"https://api.github.com/users/raaffaaeell/repos","events_url":"https://api.github.com/users/raaffaaeell/events{/privacy}","received_events_url":"https://api.github.com/users/raaffaaeell/received_events","type":"User","site_admin":false},"labels":[{"id":86465861,"url":"https://api.github.com/repos/MithrilJS/mithril.js/labels/question","name":"question","color":"cc317c","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-12-25T06:40:18Z","updated_at":"2017-12-26T19:48:07Z","closed_at":"2017-12-26T19:48:07Z","author_association":"NONE","body":"I'm learning mithril and I was wondering if I'm doing this the wrong way. I was reading the request API and put up together a simple component like the doc\r\n\r\n```js\r\nvar Data = {\r\n    ads: {\r\n        list: [],\r\n        fetch: function() {\r\n            m.request({\r\n                method: \"GET\",\r\n                url: \"/api/v1/ads\",\r\n            })\r\n            .then(function(items) {\r\n                Data.ads.list = items\r\n            })\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThen I have my table like this\r\n\r\n```js\r\nvar table = {\r\n    oninit: Data.ads.fetch,\r\n\r\n    view: function (vnode) {\r\n        return m(\"table.table.table-striped.table-hover\", [\r\n            m(\"thead\", [m(\"tr\", [\r\n                m(\"th\", \"Id\"),\r\n                m(\"th\", \"Remetente\"),\r\n                m(\"th\", \"Tipo\"),\r\n                m(\"th\", \"Valor\")\r\n            ])]),\r\n            m(\"tbody.list\", [\r\n                Data.ads.list.map(function (ad) {\r\n                    return m(\"tr\", [\r\n                        m(\"td.id\", ad.id),\r\n                        m(\"td.remetente\", ad.remetente),\r\n                        m(\"td.tipo\", ad.tipo),\r\n                        m(\"td.valor\", ad.valor)\r\n                    ])\r\n                })\r\n\r\n            ])\r\n        ])\r\n    }\r\n};\r\n```\r\n\r\nWhat I was trying to do is use a third party lib to make my table searchable and sortable. But for it to work, I need the whole component rendered, then apply it.\r\n\r\nIs there a way to do this or I should go with another approach to this problem ?","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2056","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2056/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2056/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2056/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2056","id":281852367,"number":2056,"title":"Some attributes need quoting for IE9","user":{"login":"gi-john","id":31453013,"avatar_url":"https://avatars3.githubusercontent.com/u/31453013?v=4","gravatar_id":"","url":"https://api.github.com/users/gi-john","html_url":"https://github.com/gi-john","followers_url":"https://api.github.com/users/gi-john/followers","following_url":"https://api.github.com/users/gi-john/following{/other_user}","gists_url":"https://api.github.com/users/gi-john/gists{/gist_id}","starred_url":"https://api.github.com/users/gi-john/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gi-john/subscriptions","organizations_url":"https://api.github.com/users/gi-john/orgs","repos_url":"https://api.github.com/users/gi-john/repos","events_url":"https://api.github.com/users/gi-john/events{/privacy}","received_events_url":"https://api.github.com/users/gi-john/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2017-12-13T18:34:44Z","updated_at":"2017-12-13T22:35:17Z","closed_at":"2017-12-13T21:11:18Z","author_association":"NONE","body":"Mithril says it supports IE9, but there are some keywords that need quoting; for instance:\r\n\r\nhttps://github.com/MithrilJS/mithril.js/blob/0ae9bc1ea35fdef616f43a451ddbdd632bbebf5a/mithril.js#L43\r\n\r\nHappy to dig in a bit, but I have a feeling this would be a really quick fix for someone familiar with the codebase.","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2048","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2048/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2048/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2048/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2048","id":279487576,"number":2048,"title":"NPM API key format changed recently","user":{"login":"pygy","id":54515,"avatar_url":"https://avatars1.githubusercontent.com/u/54515?v=4","gravatar_id":"","url":"https://api.github.com/users/pygy","html_url":"https://github.com/pygy","followers_url":"https://api.github.com/users/pygy/followers","following_url":"https://api.github.com/users/pygy/following{/other_user}","gists_url":"https://api.github.com/users/pygy/gists{/gist_id}","starred_url":"https://api.github.com/users/pygy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pygy/subscriptions","organizations_url":"https://api.github.com/users/pygy/orgs","repos_url":"https://api.github.com/users/pygy/repos","events_url":"https://api.github.com/users/pygy/events{/privacy}","received_events_url":"https://api.github.com/users/pygy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-12-05T18:47:30Z","updated_at":"2017-12-05T18:56:12Z","closed_at":"2017-12-05T18:56:12Z","author_association":"OWNER","body":"@tivac I looked at the Travis npm release log (because of https://github.com/npm/registry/issues/249) This may be relevant for you:\r\n\r\n```text\r\nPreparing deploy\r\nNPM version: 5.5.1\r\nAuthenticated with email npm@patcavit.com\r\nNPM API key format changed recently. If your deployment fails, check your API key in ~/.npmrc.\r\nhttp://docs.travis-ci.com/user/deployment/npm/\r\n~/.npmrc size: 48\r\n```\r\n\r\n(I eneded up posting this accidentally as https://github.com/npm/registry/issues/250, sorry for the confusion)","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2044","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2044/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2044/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2044/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2044","id":278661608,"number":2044,"title":"How to set body class?","user":{"login":"millken","id":176581,"avatar_url":"https://avatars1.githubusercontent.com/u/176581?v=4","gravatar_id":"","url":"https://api.github.com/users/millken","html_url":"https://github.com/millken","followers_url":"https://api.github.com/users/millken/followers","following_url":"https://api.github.com/users/millken/following{/other_user}","gists_url":"https://api.github.com/users/millken/gists{/gist_id}","starred_url":"https://api.github.com/users/millken/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/millken/subscriptions","organizations_url":"https://api.github.com/users/millken/orgs","repos_url":"https://api.github.com/users/millken/repos","events_url":"https://api.github.com/users/millken/events{/privacy}","received_events_url":"https://api.github.com/users/millken/received_events","type":"User","site_admin":false},"labels":[{"id":86465861,"url":"https://api.github.com/repos/MithrilJS/mithril.js/labels/question","name":"question","color":"cc317c","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-12-02T06:49:47Z","updated_at":"2017-12-08T10:00:53Z","closed_at":"2017-12-08T10:00:53Z","author_association":"NONE","body":"\r\n`<body class=\"page1\">`\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2039","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2039/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2039/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2039/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2039","id":278464071,"number":2039,"title":"Add documentation for integrating 3rd party components / libs","user":{"login":"cavemansspa","id":17560206,"avatar_url":"https://avatars3.githubusercontent.com/u/17560206?v=4","gravatar_id":"","url":"https://api.github.com/users/cavemansspa","html_url":"https://github.com/cavemansspa","followers_url":"https://api.github.com/users/cavemansspa/followers","following_url":"https://api.github.com/users/cavemansspa/following{/other_user}","gists_url":"https://api.github.com/users/cavemansspa/gists{/gist_id}","starred_url":"https://api.github.com/users/cavemansspa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cavemansspa/subscriptions","organizations_url":"https://api.github.com/users/cavemansspa/orgs","repos_url":"https://api.github.com/users/cavemansspa/repos","events_url":"https://api.github.com/users/cavemansspa/events{/privacy}","received_events_url":"https://api.github.com/users/cavemansspa/received_events","type":"User","site_admin":false},"labels":[{"id":394673449,"url":"https://api.github.com/repos/MithrilJS/mithril.js/labels/documentation","name":"documentation","color":"1d76db","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-12-01T13:20:17Z","updated_at":"2017-12-11T08:48:42Z","closed_at":"2017-12-11T08:48:42Z","author_association":"CONTRIBUTOR","body":"The question comes up on gitter periodically.  I don't see any docs in current website.  Old docs had [Integrating with Other Libraries](https://mithril.js.org/archive/v0.2.5/integration.html)\r\n\r\nHappy to take a crack at putting a doc together for current site.\r\n\r\nPlease comment if you have any suggestions / best practices to include in doc.\r\n\r\n[FullCalendar Example](https://flems.io/#0=N4IgZglgNgpgziAXAbVAOwIYFsZJAOgAsAXLKEAGhAGMB7NYmBvAHigjQGsACAJxigBeADog4xAJ6w4hGDGKjuhfmBEgSxAA5xEAel3UAJmgBWcfNSi0ArobBQM-C7Sy6MJjAA9d7AEZxdMGsoKGoMWDRDR10AZnwAdnwABkDg0PCmKN58LA4LODhRAD4QAF8KdGxcRAIzShp6RmYagDdHbgAxNIBhDMj2wW5gYTQR4WJ6an4MRkRuAAoWtFpDGABKbkEiobGFYjo0OFpYfCsAc3mAci6Q3qh+3kRESenGS7WR7i-vr4ASReWq3whhca3wQVufSy82GaB+8O++m4mmsxG4EhsvG4tE0xAg9Dg3AwkW4YRCvgw1E4hNk-E+CO4pQ+cMZFHpuxaEBgAHc5gCVutNttYeNxj9+MRrLw4VgroYIC13vSvqVuCNSmM0FgcjYGPMQdRrDgGPhfCsJBQdqNiJyeXylgKNlsrQy+PIpXDkMrXdxZZdCABGS6Wy53TKOd5slk+33zG5QMMPZmugC63o1aCZZQqIEwODw+QQVAOTWIeDKKao7C4CBQlXzNVyxGU0HqUvINQ02j0umsaE0nDOzlcTZbUAAAgH8FOAKy6Ue8aD4OpUSSaaogOrlesbrAuJhlqjtvBdnT6PsDod0Ef7hjjgBM04AnPh7-Pb8Rl0WQGuN1uc3mf4AI7WDAvASG2vAduoxBaGevb9oOw66CYIFgRI45xI+Aa6PK4goWh4FfvUv54P+O54BC6QRFkkHQaePYXkh16pCEZLhrwmEJMkuEQPhVHsQ8xGrhI65kQgpQpqUQA)","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2036","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2036/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2036/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2036/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2036","id":277949857,"number":2036,"title":"[ospec] Async stack traces are not displayed properly","user":{"login":"pygy","id":54515,"avatar_url":"https://avatars1.githubusercontent.com/u/54515?v=4","gravatar_id":"","url":"https://api.github.com/users/pygy","html_url":"https://github.com/pygy","followers_url":"https://api.github.com/users/pygy/followers","following_url":"https://api.github.com/users/pygy/following{/other_user}","gists_url":"https://api.github.com/users/pygy/gists{/gist_id}","starred_url":"https://api.github.com/users/pygy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pygy/subscriptions","organizations_url":"https://api.github.com/users/pygy/orgs","repos_url":"https://api.github.com/users/pygy/repos","events_url":"https://api.github.com/users/pygy/events{/privacy}","received_events_url":"https://api.github.com/users/pygy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-11-29T23:50:39Z","updated_at":"2017-11-30T23:17:56Z","closed_at":"2017-11-30T23:17:56Z","author_association":"OWNER","body":"in `ospec/tests/test-ospec.js` change line 42 to read\r\n\r\n```\r\n\t\t\t\to(results.length).equals(22)(\"Two results\")\r\n```\r\n\r\n## Expected Behavior\r\n\r\nospec points to the correct assertion line\r\n\r\n## Current Behavior\r\n```\r\n1 assertions completed in 222ms, of which 0 failed\r\nreporting > reports per instance:\r\nTwo results\r\n\r\n2\r\nshould equal\r\n22\r\n\r\n    at Timer.listOnTimeout (timers.js:270:5)\r\n```\r\n## Possible Solution\r\n\r\nnot sure yet\r\n\r\n## Your Environment\r\n\r\n* Version used: ospec@1.4.0\r\n* Browser Name and version: Node@8.9.1\r\n* Operating System and version (desktop or mobile): OS X","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2027","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2027/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2027/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2027/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2027","id":276987986,"number":2027,"title":"Layout problems on the mobile documentation site","user":{"login":"cjh9","id":18718330,"avatar_url":"https://avatars2.githubusercontent.com/u/18718330?v=4","gravatar_id":"","url":"https://api.github.com/users/cjh9","html_url":"https://github.com/cjh9","followers_url":"https://api.github.com/users/cjh9/followers","following_url":"https://api.github.com/users/cjh9/following{/other_user}","gists_url":"https://api.github.com/users/cjh9/gists{/gist_id}","starred_url":"https://api.github.com/users/cjh9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjh9/subscriptions","organizations_url":"https://api.github.com/users/cjh9/orgs","repos_url":"https://api.github.com/users/cjh9/repos","events_url":"https://api.github.com/users/cjh9/events{/privacy}","received_events_url":"https://api.github.com/users/cjh9/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-11-27T11:36:34Z","updated_at":"2018-04-03T01:59:11Z","closed_at":"2018-04-03T01:59:11Z","author_association":"NONE","body":"1. Go on the documentation site from mobile\r\n\r\n2. Tap on the hamburger icon\r\n\r\n![mithril js org_ iphone 6](https://user-images.githubusercontent.com/18718330/33264851-834d4478-d36f-11e7-8654-06ee53e5b3bb.png)\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2023","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2023/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2023/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2023/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2023","id":276662629,"number":2023,"title":"The recycling pool can leak memory in keyed mode.","user":{"login":"pygy","id":54515,"avatar_url":"https://avatars1.githubusercontent.com/u/54515?v=4","gravatar_id":"","url":"https://api.github.com/users/pygy","html_url":"https://github.com/pygy","followers_url":"https://api.github.com/users/pygy/followers","following_url":"https://api.github.com/users/pygy/following{/other_user}","gists_url":"https://api.github.com/users/pygy/gists{/gist_id}","starred_url":"https://api.github.com/users/pygy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pygy/subscriptions","organizations_url":"https://api.github.com/users/pygy/orgs","repos_url":"https://api.github.com/users/pygy/repos","events_url":"https://api.github.com/users/pygy/events{/privacy}","received_events_url":"https://api.github.com/users/pygy/received_events","type":"User","site_admin":false},"labels":[{"id":86465857,"url":"https://api.github.com/repos/MithrilJS/mithril.js/labels/bug","name":"bug","color":"fc2929","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-11-24T16:35:17Z","updated_at":"2018-04-16T07:45:52Z","closed_at":"2018-04-16T07:45:52Z","author_association":"OWNER","body":"It has already been mentioned in https://github.com/MithrilJS/mithril.js/issues/1991#issuecomment-340107437 by  @starsolaris, and it is more obvious now that the pool-related logic has been made explicit in #2021: if your key space is not finite (using an increasing counter or random numbers as keys) the DOM node pools can leak memory. The nodes that are removed are added to the pool, then moved from pool to pool as they are never recycled.\r\n\r\nThe cleanest solution would probably be to disable the pool by default for keyed nodes, by setting `vnode.reuse = false` as per #1675.\r\n\r\nAlternatively, we could document the potential leak and tell users to opt out of the pool if they know their key space is too big. I'd rather provide a safe default personally.\r\n\r\nAt last, we could peg the lengths of the pools, but that would entail array slices (if we want LRU eviction), and thus `O(N)` copies (even if slices are \"copy on write\", we do append to the pools).\r\n\r\n@starsolaris, waiting for #1675 and explicit pool control, you can add a dummy `oncreate` or `onupdate` hook to the problem nodes. Mithril doesn't add vnodes whose DOM node may have been mutated by hand to the pool.\r\n\r\nEdit: re. LRU, actually I got it the wrong way around. The most recent nodes are located at the begining of the pools so we could just stop adding nodes past a given length.","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2019","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2019/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2019/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2019/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2019","id":275461049,"number":2019,"title":"Defy ospec objective and allow custom reporter callback for o.run()","user":{"login":"zyrolasting","id":1312121,"avatar_url":"https://avatars1.githubusercontent.com/u/1312121?v=4","gravatar_id":"","url":"https://api.github.com/users/zyrolasting","html_url":"https://github.com/zyrolasting","followers_url":"https://api.github.com/users/zyrolasting/followers","following_url":"https://api.github.com/users/zyrolasting/following{/other_user}","gists_url":"https://api.github.com/users/zyrolasting/gists{/gist_id}","starred_url":"https://api.github.com/users/zyrolasting/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zyrolasting/subscriptions","organizations_url":"https://api.github.com/users/zyrolasting/orgs","repos_url":"https://api.github.com/users/zyrolasting/repos","events_url":"https://api.github.com/users/zyrolasting/events{/privacy}","received_events_url":"https://api.github.com/users/zyrolasting/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-11-20T18:54:47Z","updated_at":"2017-11-21T13:02:22Z","closed_at":"2017-11-21T13:02:22Z","author_association":"CONTRIBUTOR","body":"PR at #2020\r\n\r\n## Context\r\nospec declares that it disallows custom test reporters. I want to advocate for the opposite position.\r\n\r\nI maintain several apps and SDKs that must provide unit tests, integration tests and functional tests. My deliverables are built either for Node.js or the browser, and tests may be bundled into the app itself. All of the tests for each should run with the same one command, returning a exit code equal to the number of failures.\r\n\r\nGiven this, I want programmatic access to `ospec` results that I may easily consume and deliver in a custom CI or test procedure. I don't want to parse what another reporter outputs to get this information, which is the consequence of black-boxing reporters.\r\n\r\n## Current Behavior\r\n\r\nThe `report()` function in `ospec.js` [assumes STDOUT and STDERR are sufficient for reporting](https://github.com/MithrilJS/mithril.js/blob/next/ospec/ospec.js#L237), blocking all access to the results array. This forces consumers to run `ospec` as a child process and pipe its results to a stream that may parse results from a string.\r\n\r\nBut that's assuming you run tests in Node. If you run ospec tests in the browser, an entirely different approach is necessary to extract results.\r\n\r\n## Possible Solution\r\n\r\nPass a custom, and optional reporter callback to `o.run()`. If the callback is not present, fall back to default behavior. The function accepts the test results array as its only parameter.\r\n\r\nIf you want details on how this would go, consider the following two cases where I run a bundled browser app and a bundled Node app. Note how the custom reporter exists to talk back to the test runner, which then translates that into an exit code.\r\n\r\n# Browser app case\r\n\r\n## Runner script\r\n\r\n    const {Chrome} = require('navalia'); // headless Chrome\r\n    const WebSocket = require('ws');\r\n\r\n\r\n    const wss = new WebSocket.Server({ port: 6262 });\r\n    const chrome = new Chrome();\r\n\r\n    wss.on('connection', (ws) => {\r\n        ws.on('message', (results) => {\r\n            // Clean up\r\n            chrome.done();\r\n\r\n            const {appName, failures} = JSON.parse(results);\r\n            const nfails = failures.length;\r\n\r\n            if (nfails > 0) {\r\n                console.error(`${appName}: ${nfails} failures`);\r\n\r\n                for (const {message, stack} of failures) {\r\n                    console.error(message);\r\n                    console.error(stack);\r\n                }\r\n            }\r\n\r\n            // Non-zero exit code will fail CI build.\r\n            process.exit(nfails);\r\n        });\r\n    });\r\n\r\n    await chrome.goto(`file://${__dirname}/dist/index.html`);\r\n\r\n\r\n## In the test build's `index.html`\r\n\r\n    o.run((results) => {\r\n        const report = {\r\n            appName: document.title,\r\n            failures: results\r\n                .filter(({pass}) => {\r\n                    return !pass;\r\n                })\r\n                .map((result) => {\r\n                    return {\r\n                        context: result.context,\r\n                        message: result.message,\r\n                        stack: result.error.stack,\r\n                    };\r\n                });\r\n        };\r\n\r\n        const client = new WebSocket('ws://localhost:6262');\r\n\r\n        client.send(JSON.stringify(report));\r\n    });\r\n\r\n\r\n# Node.js case\r\n\r\n## Runner script\r\n\r\n    const child_process = require('child_process');\r\n\r\n    const handle = child_process.spawn('node', [`${__dirname}/dist/index.js`], {\r\n        stdio: 'inherit', // So the results printed in index.js appear in this process' STDIO streams\r\n    });\r\n\r\n    handle.on('close', (code) => process.exit(code));\r\n\r\n\r\n## In the test build's `index.js`\r\n\r\n    o.run((results) => {\r\n        const failures = results.filter(({pass}) => !pass);\r\n\r\n        for (const {message, stack} of failures) {\r\n            console.error(`${message}\\n${stack}\\n\\n`);\r\n        }\r\n\r\n        process.exit(results.filter(({pass}) => !pass).length);\r\n    });\r\n\r\n\r\n## Anticipated discussion points\r\n\r\n* **Should the results array be deeply copied before sent to the reporter function to protect data integrity?** I'm thinking no. If ospec gives me data that's not meant for modification and I modify it, that's on me.  \r\n* **Should the results be passed as is, or in a different representation?**. Be aware that passing the results array as-is means that future changes to a test result object is a breaking change for reporters
28c4
. If someone is concerned by someone knowing more internals, I'd argue I have to know internals to parse ospec's stdio streams anyway.","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2016","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2016/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2016/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2016/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2016","id":274443855,"number":2016,"title":"state always equal in onbeforeupdate hook","user":{"login":"bloody-ux","id":19991767,"avatar_url":"https://avatars2.githubusercontent.com/u/19991767?v=4","gravatar_id":"","url":"https://api.github.com/users/bloody-ux","html_url":"https://github.com/bloody-ux","followers_url":"https://api.github.com/users/bloody-ux/followers","following_url":"https://api.github.com/users/bloody-ux/following{/other_user}","gists_url":"https://api.github.com/users/bloody-ux/gists{/gist_id}","starred_url":"https://api.github.com/users/bloody-ux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bloody-ux/subscriptions","organizations_url":"https://api.github.com/users/bloody-ux/orgs","repos_url":"https://api.github.com/users/bloody-ux/repos","events_url":"https://api.github.com/users/bloody-ux/events{/privacy}","received_events_url":"https://api.github.com/users/bloody-ux/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2017-11-16T09:16:31Z","updated_at":"2017-11-20T08:33:24Z","closed_at":"2017-11-20T08:33:24Z","author_association":"NONE","body":"In below code, when state is changed, `vnode.state` is always equal to `oldVnode.state`.  Do I make some mistake?\r\n\r\n``` javascript\r\n onbeforeupdate(vnode, oldVnode) { \r\n    console.log(vnode.state === oldVnode.state); // always true\r\n    console.log('before updated');\r\n },\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2011","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2011/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2011/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2011/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2011","id":271005356,"number":2011,"title":"Docs: Unit testing example throws an error","user":{"login":"orbitbot","id":2631164,"avatar_url":"https://avatars3.githubusercontent.com/u/2631164?v=4","gravatar_id":"","url":"https://api.github.com/users/orbitbot","html_url":"https://github.com/orbitbot","followers_url":"https://api.github.com/users/orbitbot/followers","following_url":"https://api.github.com/users/orbitbot/following{/other_user}","gists_url":"https://api.github.com/users/orbitbot/gists{/gist_id}","starred_url":"https://api.github.com/users/orbitbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/orbitbot/subscriptions","organizations_url":"https://api.github.com/users/orbitbot/orgs","repos_url":"https://api.github.com/users/orbitbot/repos","events_url":"https://api.github.com/users/orbitbot/events{/privacy}","received_events_url":"https://api.github.com/users/orbitbot/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-11-03T14:52:58Z","updated_at":"2017-11-03T19:36:13Z","closed_at":"2017-11-03T19:02:55Z","author_association":"CONTRIBUTOR","body":"Based on @DavidBlindloss 's [gitter comment](https://gitter.im/mithriljs/mithril.js?at=59fbab415a1758ed0f807dd5) and [this comment](https://gitter.im/mithriljs/mithril.js?at=59fc730a32e080696e5e05b2) , we noted that [the docs](https://github.com/MithrilJS/mithril.js/blob/000cc8382a278b4aad7c9b8bd5e66c2d9758a491/docs/testing.md#unit-testing) don't reflect the optimisation that a single textnode child will not have the `children` array expected by the docs, perhaps as an implementation detail after the docs were last updated.\r\n\r\n## Expected Behavior\r\n[tweaked flems](https://flems.io/#0=N4IgZglgNgpgziAXAbVAOwIYFsZJAOgAsAXLKEAGhAGMB7NYmBvEAXwvW10QICsEqdBk2J4AOmljEABAFkAngGFaWAA70R0gLzTgE6dIBuEGAHdE0sAFc01YhHoAKAJS79B6QCcYxK57TSWI5iIAAmEIYhFNIhABIwUFC00qa0nlChIc7urAYSrBIStPhwqjDUwSAKymoaDFGWNnYOaC5uAR60ld6+-nDSGNLhkZSNtvZOrnodHh6GGJ5GaLShMNpySirqaCL4xmYu7rN5M8dCcLSw+EkA5o6Gy6vZaEfHXQ8rMPjEGDfO+DAAI5WDBQOCVYZZV6zd6PL6MAAexH+QJBYMq8USyVS6UyIGes1YzyJhWW+E8NhcbA4IEwODw+GocAENHojGYPDYAF0qFAIGgANYIFCcek8WilcqUEB+cg8EjEVRwRAAehVNlUApujJUKolZWoAAEAIz4AAs+AADHrJdR8PxpcR5GU8A6qKoMMRqIR4EhkP7LVRiCFSSAecgALTGqhYFZWK4wBHqTzEBDh6MgeaLWhhijIQMgdZoXMAJhLFGNAGYKABWACctbrXK57FF3BAWAgxEInmg0tleAVStV6rQmu1dCwKs73d7UBN+FNNenXZ70HtLKdLp4DtYLaAA) by @pygy \r\n\r\n## Current Behavior\r\n\r\n[flems](https://flems.io/#0=N4IgZglgNgpgziAXAbVAOwIYFsZJAOgAsAXLKEAGhAGMB7NYmBvEAXwvW10QICsEqdBk2J4AOmljEABAFkAngGFaWAA70R0gLzTgE6dIBuEGAHdE0sAFc01YhHoAKAJS79B6QCcYxK57TSWI5iIAAmEIYhFNIhABIwUFC00qa0nlChIc7urAYSrBIStPhwqjDUwSAKymoaDFGWNnYOaC5uAR60ld6+-nDSGNLhkZSNtvZOrnodHh6GGJ5GaLShMNpySirqaCL4xmYu7rN5M8dCcLSw+EkA5o6Gy6vZaEfHXQ8rMPjEGDfO+DAAI5WDBQOCVYZZV6zd6PL7UQjQULeNDXJg3YiEf5AkFgxwARmex069zh+ARSJRyAADABdb6-bHA0HgkIAYihpxhpM+5MRGSpdL5lKYTNxrJA8USyVS6UyICJHlYz2VhWW+E8NhcbA4IEwODw5LgAho9EYzB4bFpVCgEDQAGsEChOAaeLRSuVKCA-OQeCRiKo4IgAPTBmyqe03ckqYPusrUAAC+PwABZ8NTYx7qPh+F7iPIynhc1RVBhiAj4EhkNXqVRiCE1SBrcgALT4qhYFZWK4wAAe6k8xAQzfbIHmi1oTYoNKo6zQU4ATAuKPiAMwUACsAE5N1vabT2C7uCAsBBMZ5oF6fXh-YGQ2G0BGo3QsMHT+foEn8MmN2+z4QLygHMTXzQseFzVgDyAA) based on [unit testing docs](https://github.com/MithrilJS/mithril.js/blob/000cc8382a278b4aad7c9b8bd5e66c2d9758a491/docs/testing.md#unit-testing)\r\n\r\n## Possible Solution\r\n\r\nUpdate docs, either do something more fancy to stick to the `children` solution, or simplify.\r\n\r\n## Steps to Reproduce (for bugs)\r\n\r\nSee current behavior.\r\n","score":1.0},{"url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2010","repository_url":"https://api.github.com/repos/MithrilJS/mithril.js","labels_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2010/labels{/name}","comments_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2010/comments","events_url":"https://api.github.com/repos/MithrilJS/mithril.js/issues/2010/events","html_url":"https://github.com/MithrilJS/mithril.js/issues/2010","id":270814695,"number":2010,"title":"Children being rendered twice","user":{"login":"soulofmischief","id":30357883,"avatar_url":"https://avatars3.githubusercontent.com/u/30357883?v=4","gravatar_id":"","url":"https://api.github.com/users/soulofmischief","html_url":"https://github.com/soulofmischief","followers_url":"https://api.github.com/users/soulofmischief/followers","following_url":"https://api.github.com/users/soulofmischief/following{/other_user}","gists_url":"https://api.github.com/users/soulofmischief/gists{/gist_id}","starred_url":"https://api.github.com/users/soulofmischief/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soulofmischief/subscriptions","organizations_url":"https://api.github.com/users/soulofmischief/orgs","repos_url":"https://api.github.com/users/soulofmischief/repos","events_url":"https://api.github.com/users/soulofmischief/events{/privacy}","received_events_url":"https://api.github.com/users/soulofmischief/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2017-11-02T21:33:19Z","updated_at":"2017-11-07T00:59:49Z","closed_at":"2017-11-07T00:59:49Z","author_association":"CONTRIBUTOR","body":"When conditionally rendering vnode.children, they will frequently be rendered twice, and when the conditional is false again only some children instances are removed. In Chrome this can cause a buildup of duplicate child components.\r\n\r\n## Expected Behavior\r\nOnly one instance of vnode.children should be conditionally rendered\r\n\r\n## Current Behavior\r\nMultiple instances of vnode.children are being conditionally rendered, and sometimes only some instances are removed in Chrome\r\n\r\n## Possible Solution\r\nEDIT: Wrapping the return value of renderChildren in a div seems to resolve the issue? Is returning vnode.children directly undefined behavior? Because returning ({ vnode.state.show ? vnode.children : null }) directly in the view function also produces the bug.\r\n\r\n## Steps to Reproduce (for bugs)\r\nMount this ES6 component and rapidly adjust the width of your window back and forth to keep triggering the conditional render. Eventually duplicate children build up in Chrome. In Firefox, two instances of vnode.children seem to be consistently rendered and removed.\r\n\r\n```\r\nimport m from 'mithril'\r\n\r\nfunction MyComponent ( vnode ) {\r\n  return {\r\n\r\n    renderChildren() {\r\n      if ( vnode.state.show ) {\r\n        return vnode.children\r\n      } else {\r\n        return null\r\n      }\r\n    },\r\n\r\n    oncreate( vnode ) {\r\n      vnode.state.show = window.matchMedia( '(max-width: 599px)' ).matches\r\n    },\r\n\r\n    onbeforeupdate( vnode ) {\r\n      vnode.state.show = window.matchMedia( '(max-width: 599px)' ).matches\r\n      m.redraw()\r\n    },\r\n\r\n    view() {\r\n      return (\r\n        <div>\r\n          { this.renderChildren() }\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return {\r\n    view() {\r\n      return (\r\n        <MyComponent>\r\n          Hello\r\n        </MyComponent>\r\n      )\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n## Context\r\nI'm trying to create a higher order component that conditionally renders its children based on the result of window.matchMedia. The full component selects the appropriate media query with a switch statement that takes a provided attribute as an argument.\r\n\r\n## Your Environment\r\n* Version used: 1.1.5\r\n* Browser Name and version: Firefox 56 (64-bit) & Chrome 61.0.3163.100 (64-bit)\r\n* Operating System and version (desktop or mobile): Fedora 26\r\n* Webpack + Babel + JSX","score":1.0}]}
0

