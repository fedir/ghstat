HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 24 Mar 2018 12:30:33 GMT
Link: <https://api.github.com/search/issues?q=repo%3Afacebook%2Freact+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Afacebook%2Freact+type%3Aissue+state%3Aclosed&page=34>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: D07B:5F56:32D162B:6D5E821:5AB644E8
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 27
X-Ratelimit-Reset: 1521894679
X-Runtime-Rack: 0.357561
X-Xss-Protection: 1; mode=block

8000
{"total_count":5365,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/facebook/react/issues/12443","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12443/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12443/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12443/events","html_url":"https://github.com/facebook/react/issues/12443","id":308150376,"number":12443,"title":"this.setState not a function : componentDidMount","user":{"login":"malinga91","id":7546904,"avatar_url":"https://avatars0.githubusercontent.com/u/7546904?v=4","gravatar_id":"","url":"https://api.github.com/users/malinga91","html_url":"https://github.com/malinga91","followers_url":"https://api.github.com/users/malinga91/followers","following_url":"https://api.github.com/users/malinga91/following{/other_user}","gists_url":"https://api.github.com/users/malinga91/gists{/gist_id}","starred_url":"https://api.github.com/users/malinga91/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malinga91/subscriptions","organizations_url":"https://api.github.com/users/malinga91/orgs","repos_url":"https://api.github.com/users/malinga91/repos","events_url":"https://api.github.com/users/malinga91/events{/privacy}","received_events_url":"https://api.github.com/users/malinga91/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-23T19:19:10Z","updated_at":"2018-03-23T19:34:39Z","closed_at":"2018-03-23T19:34:39Z","author_association":"NONE","body":"```\r\nconstructor() {\r\n        super()\r\n        **this.state = {\r\n            isUserLogged: false,\r\n            loggedUser: {},\r\n        };**\r\n    }\r\n\r\n    componentDidMount() {\r\n        var that = this;\r\n\r\n        //let self = this;\r\n        let scriptTag = document.createElement('script');\r\n        scriptTag.type = 'text/javascript';\r\n        scriptTag.src = \"http://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.4&appId=xxxxx\";\r\n        scriptTag.addEventListener('load', function (e) {\r\n\r\n            this.FB = window.FB;\r\n            this.FB.Event.subscribe('auth.statusChange', this.onStatusChange);\r\n            this.FB.getLoginStatus(function(response) {\r\n\r\n                if(response.status === 'connected'){\r\n                    that.setState({\r\n                        isUserLogged : true,\r\n                    });\r\n\r\n                    window.FB.api('/me/', {fields: 'id,name,first_name,picture{url}'}, function(response) {\r\n                             **this.setState({\r\n                                     loggedUser : response\r\n                              });**\r\n                    });\r\n\r\n                }else{\r\n                    that.setState({\r\n                        isUserLogged : false\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        document.body.appendChild(scriptTag);\r\n        console.log(this.state.loggedUser);\r\n\r\n    }\r\n```\r\n\r\nI can't assign the value return from FB.api to the **this.state.loggedUser**. I'm getting an error this.setState is not a function. I tried bind(this) too.\r\n\r\nHow to solve this?","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12438","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12438/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12438/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12438/events","html_url":"https://github.com/facebook/react/issues/12438","id":307962885,"number":12438,"title":"iphone right sliding function","user":{"login":"z810276431","id":16434735,"avatar_url":"https://avatars1.githubusercontent.com/u/16434735?v=4","gravatar_id":"","url":"https://api.github.com/users/z810276431","html_url":"https://github.com/z810276431","followers_url":"https://api.github.com/users/z810276431/followers","following_url":"https://api.github.com/users/z810276431/following{/other_user}","gists_url":"https://api.github.com/users/z810276431/gists{/gist_id}","starred_url":"https://api.github.com/users/z810276431/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/z810276431/subscriptions","organizations_url":"https://api.github.com/users/z810276431/orgs","repos_url":"https://api.github.com/users/z810276431/repos","events_url":"https://api.github.com/users/z810276431/events{/privacy}","received_events_url":"https://api.github.com/users/z810276431/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-23T09:51:43Z","updated_at":"2018-03-23T12:57:37Z","closed_at":"2018-03-23T12:57:37Z","author_association":"NONE","body":"when iphone right back to the last page,the Screen flickered.It first skip to now page and then back to the last page","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12437","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12437/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12437/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12437/events","html_url":"https://github.com/facebook/react/issues/12437","id":307845117,"number":12437,"title":"Bad cohabitation between a ref and a state in a same component","user":{"login":"Drillan767","id":16261166,"avatar_url":"https://avatars0.githubusercontent.com/u/16261166?v=4","gravatar_id":"","url":"https://api.github.com/users/Drillan767","html_url":"https://github.com/Drillan767","followers_url":"https://api.github.com/users/Drillan767/followers","following_url":"https://api.github.com/users/Drillan767/following{/other_user}","gists_url":"https://api.github.com/users/Drillan767/gists{/gist_id}","starred_url":"https://api.github.com/users/Drillan767/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Drillan767/subscriptions","organizations_url":"https://api.github.com/users/Drillan767/orgs","repos_url":"https://api.github.com/users/Drillan767/repos","events_url":"https://api.github.com/users/Drillan767/events{/privacy}","received_events_url":"https://api.github.com/users/Drillan767/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-22T23:03:48Z","updated_at":"2018-03-23T08:33:17Z","closed_at":"2018-03-22T23:21:02Z","author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nI want to report what looks like a bug.\r\n\r\n**What is the current behavior?**\r\n\r\nFor an unknown reason, a `ref` attribute doesn't seem to get well together with a `state`.\r\nFor a bit of background, I'm trying to recreate the following [Codepen](https://codepen.io/j_holtslander/pen/KQrWVy?page=1&).\r\n\r\nI managed to recreate the \"bug\", here is the [CodeSandbox link](https://codesandbox.io/s/n767lrv8zj)\r\n\r\nFor an unknown reason, `this.heightRef` returns null when I want to see it in a console.log(). However, if I remove everything related to `this.state.json` (in the constructor, the `return` or the `<Gmaps>` props, so lines 13, 26, 33 and change the props line 30 by something else), everything works fine and `console.log()`  actually returns the wanted value.\r\n\r\n**What is the expected behavior?**\r\n\r\nI expect to be able to get my value even though a state has been previously defined and is used\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nreact@16.2.0, Chrome 65. I don't know if this used to work before because I never had to use it until now.\r\n","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12436","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12436/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12436/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12436/events","html_url":"https://github.com/facebook/react/issues/12436","id":307799797,"number":12436,"title":"Functional components with lifecycle methods and state","user":{"login":"Josema","id":1819888,"avatar_url":"https://avatars0.githubusercontent.com/u/1819888?v=4","gravatar_id":"","url":"https://api.github.com/users/Josema","html_url":"https://github.com/Josema","followers_url":"https://api.github.com/users/Josema/followers","following_url":"https://api.github.com/users/Josema/following{/other_user}","gists_url":"https://api.github.com/users/Josema/gists{/gist_id}","starred_url":"https://api.github.com/users/Josema/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Josema/subscriptions","organizations_url":"https://api.github.com/users/Josema/orgs","repos_url":"https://api.github.com/users/Josema/repos","events_url":"https://api.github.com/users/Josema/events{/privacy}","received_events_url":"https://api.github.com/users/Josema/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-22T20:19:52Z","updated_at":"2018-03-22T21:13:32Z","closed_at":"2018-03-22T21:13:32Z","author_association":"NONE","body":"What about if we could have functional components that can be turned into components with state.\r\n\r\nThe problem:\r\n```js\r\nfunction Button({ value }) {\r\n  return <button>{value}</button>\r\n}\r\n```\r\nIf our needs changes and we need to apply local state we must change this function into a class\r\n```js\r\nclass Button extends Component {\r\n  constructor(props) { ... }\r\n  shouldComponentUpdate() { ... }\r\n  render() {\r\n       return <button>{this.props.value} {this.state.countdown}</button>\r\n  }\r\n}\r\n```\r\n\r\nIf we use the prototype of the function we can reuse our function.\r\n\r\n```js\r\nfunction Button({ value }, { countdown }) {\r\n  return <button>{value} {countdown}</button>\r\n}\r\n\r\nButton.prototype.constructor = props => { ... }\r\nButton.prototype.shouldComponentUpdate = () => { ... }\r\n```\r\n\r\nThe benefits of this approach are that we educate people to use functional components in the first place. Also, avoid rewrite too much code when adding features to our app.\r\n\r\nOf course there are downsides. This change a lot the style of the code that we all learned in React, and also this is much more verbose `Button.prototype.shouldComponentUpdate = () => { ... }` than `shouldComponentUpdate() { ... }`\r\n\r\nBut in my opinion, the code is much more elegant and remove the need of using classes which personally I don't like at all.\r\n\r\nAny thoughts? Is this too crazy to add as an option/feature?","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12432","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12432/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12432/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12432/events","html_url":"https://github.com/facebook/react/issues/12432","id":307756758,"number":12432,"title":"Remove DEV-only warnings from shallow renderer","user":{"login":"bvaughn","id":29597,"avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"bvaughn","id":29597,"avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false},"assignees":[{"login":"bvaughn","id":29597,"avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2018-03-22T18:08:16Z","updated_at":"2018-03-22T18:32:38Z","closed_at":"2018-03-22T18:32:38Z","author_association":"CONTRIBUTOR","body":"For consideration.\r\n\r\nThese warnings are already covered by renderers based on react-reconciler. Maybe we don't gain that much by mirroring them in the shallow renderer? Maybe it's not worth the added complexity? Particularly with more complicated warnings like the ones being added for #12419 and #12404.","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12423","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12423/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12423/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12423/events","html_url":"https://github.com/facebook/react/issues/12423","id":307625648,"number":12423,"title":"react-test-renderr","user":{"login":"thyforhtian","id":875767,"avatar_url":"https://avatars1.githubusercontent.com/u/875767?v=4","gravatar_id":"","url":"https://api.github.com/users/thyforhtian","html_url":"https://github.com/thyforhtian","followers_url":"https://api.github.com/users/thyforhtian/followers","following_url":"https://api.github.com/users/thyforhtian/following{/other_user}","gists_url":"https://api.github.com/users/thyforhtian/gists{/gist_id}","starred_url":"https://api.github.com/users/thyforhtian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thyforhtian/subscriptions","organizations_url":"https://api.github.com/users/thyforhtian/orgs","repos_url":"https://api.github.com/users/thyforhtian/repos","events_url":"https://api.github.com/users/thyforhtian/events{/privacy}","received_events_url":"https://api.github.com/users/thyforhtian/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-03-22T12:39:04Z","updated_at":"2018-03-22T12:42:35Z","closed_at":"2018-03-22T12:42:35Z","author_association":"NONE","body":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\n**What is the current behavior?**\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12422","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12422/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12422/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12422/events","html_url":"https://github.com/facebook/react/issues/12422","id":307548170,"number":12422,"title":"Why I can't set value for selects programatically in React? How to do it?","user":{"login":"wzup","id":3880497,"avatar_url":"https://avatars1.githubusercontent.com/u/3880497?v=4","gravatar_id":"","url":"https://api.github.com/users/wzup","html_url":"https://github.com/wzup","followers_url":"https://api.github.com/users/wzup/followers","following_url":"https://api.github.com/users/wzup/following{/other_user}","gists_url":"https://api.github.com/users/wzup/gists{/gist_id}","starred_url":"https://api.github.com/users/wzup/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wzup/subscriptions","organizations_url":"https://api.github.com/users/wzup/orgs","repos_url":"https://api.github.com/users/wzup/repos","events_url":"https://api.github.com/users/wzup/events{/privacy}","received_events_url":"https://api.github.com/users/wzup/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2018-03-22T08:34:28Z","updated_at":"2018-03-23T15:24:56Z","closed_at":"2018-03-23T15:24:56Z","author_association":"NONE","body":"Here is how I can set selects using pure JS. Plain, simple and effective:\r\n```\r\n<select id=\"mySelect\">\r\n    <option value=\"1\">1<option>\r\n    <option value=\"2\">2<option>\r\n</select>\r\n\r\n$(\"#mySelect\").value = '1'\r\n```\r\n\r\nNot with React. This approach for some reason doesn't work in React. Select values are not updated. Why? How can I do in React?\r\n\r\nI have a usual DOM `<form>` with a `[reset]` button. On click `reset` the default browser behavior is to clear all form fields. Why I can't set select after it?\r\n```\r\nonReset(ev) {\r\n    // First I update state. \r\n    // And AFTER the DOM has been updated, I want to set selects programatically using refs\r\n    this.setState((state, props) => {\r\n        return {\r\n            birthday: moment(this.props.user.birthday),\r\n            error: null,\r\n            foo: this.props.foo\r\n        }\r\n    }, () => {\r\n\r\n        // These both approaches do not work! Why?\r\n        this.country.value = this.props.user.country;\r\n        this.role.value = this.props.user.role;\r\n\r\n        ReactDOM.findDOMNode(this.country).value = this.props.user.country;\r\n        ReactDOM.findDOMNode(this.role).value = this.props.user.role;\r\n    });\r\n}\r\n\r\nrender() {\r\n    return (\r\n        <form action=\"\" onReset={ (ev)=> { this.onReset(ev) } }>\r\n\r\n            <select id=\"country\" ref={ node => this.country = node }>\r\n                <option value=\"us\">USA<option>\r\n                <option value=\"ca\">Canada<option>\r\n            </select>\r\n\r\n            <select id=\"role\" ref={ node => this.role = node }>\r\n                <option value=\"admin\">Admin<option>\r\n                <option value=\"user\">User<option>\r\n            </select>\r\n\r\n            <botton type={'reset'}>\r\n        </form>\r\n    )\r\n}\r\n```\r\n\r\nDon't advice me to use controlled components. I know that. I want to set it as above, without rolling back to controlled components.","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12418","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12418/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12418/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12418/events","html_url":"https://github.com/facebook/react/issues/12418","id":307340594,"number":12418,"title":"Wrong `backgroundColor` value after changing from valid to invalid color","user":{"login":"BrodaNoel","id":1837969,"avatar_url":"https://avatars0.githubusercontent.com/u/1837969?v=4","gravatar_id":"","url":"https://api.github.com/users/BrodaNoel","html_url":"https://github.com/BrodaNoel","followers_url":"https://api.github.com/users/BrodaNoel/followers","following_url":"https://api.github.com/users/BrodaNoel/following{/other_user}","gists_url":"https://api.github.com/users/BrodaNoel/gists{/gist_id}","starred_url":"https://api.github.com/users/BrodaNoel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BrodaNoel/subscriptions","organizations_url":"https://api.github.com/users/BrodaNoel/orgs","repos_url":"https://api.github.com/users/BrodaNoel/repos","events_url":"https://api.github.com/users/BrodaNoel/events{/privacy}","received_events_url":"https://api.github.com/users/BrodaNoel/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-21T17:16:18Z","updated_at":"2018-03-21T17:37:36Z","closed_at":"2018-03-21T17:32:53Z","author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nWhen changing the backgroundColor from a valid color to `null`, the valid color persists.\r\n\r\n**Steps to reproduce:**\r\nhttps://codesandbox.io/s/56j748w8l\r\n\r\n**What is the expected behavior?**\r\nAfter changing the backgroundColor to an invalid format, the backgroundColor should be set to `null`, so then CSS is going to ignore the value due to it's an invalid value\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n* React 16.2.0\r\n* Chrome 65.0.3325.162 (Official Build) (64-bit)\r\n","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12413","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12413/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12413/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12413/events","html_url":"https://github.com/facebook/react/issues/12413","id":307206068,"number":12413,"title":"Why refs are immutable? \"object is not extensible\"","user":{"login":"wzup","id":3880497,"avatar_url":"https://avatars1.githubusercontent.com/u/3880497?v=4","gravatar_id":"","url":"https://api.github.com/users/wzup","html_url":"https://github.com/wzup","followers_url":"https://api.github.com/users/wzup/followers","following_url":"https://api.github.com/users/wzup/following{/other_user}","gists_url":"https://api.github.com/users/wzup/gists{/gist_id}","starred_url":"https://api.github.com/users/wzup/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wzup/subscriptions","organizations_url":"https://api.github.com/users/wzup/orgs","repos_url":"https://api.github.com/users/wzup/repos","events_url":"https://api.github.com/users/wzup/events{/privacy}","received_events_url":"https://api.github.com/users/wzup/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-03-21T11:24:26Z","updated_at":"2018-03-22T00:53:08Z","closed_at":"2018-03-21T11:51:43Z","author_association":"NONE","body":"Why I cannot set `this.refs`? Why `refs` are immutable?\r\n\r\n```\r\nconstructor(props, context) {\r\n    super(props, context);\r\n    this.refs = { bar: null };\r\n}\r\n\r\n// I set ref\r\n<section ref={node => this.refs.foo = node}></section>\r\n\r\n// Now this throws. Why?\r\n<button onClick={ev=>{\r\n    this.refs.foo.value = 'bar'; // Uncaught TypeError: Cannot add property foo, object is not extensible\r\n   this.refs.bar = '1';  // Uncaught TypeError: Cannot add property foo, object is not extensible\r\n}}>ONE</button>\r\n```\r\n\r\nWhy this works well in JS, but in React it doesn't work?\r\n```\r\ndocument.getElementById(\"mytext\").value = \"My value\";\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12411","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12411/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12411/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12411/events","html_url":"https://github.com/facebook/react/issues/12411","id":307021751,"number":12411,"title":"UNSAFE_* Lifecycle hooks don't run if getDerivedStateFromProps is present","user":{"login":"jquense","id":339286,"avatar_url":"https://avatars2.githubusercontent.com/u/339286?v=4","gravatar_id":"","url":"https://api.github.com/users/jquense","html_url":"https://github.com/jquense","followers_url":"https://api.github.com/users/jquense/followers","following_url":"https://api.github.com/users/jquense/following{/other_user}","gists_url":"https://api.github.com/users/jquense/gists{/gist_id}","starred_url":"https://api.github.com/users/jquense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jquense/subscriptions","organizations_url":"https://api.github.com/users/jquense/orgs","repos_url":"https://api.github.com/users/jquense/repos","events_url":"https://api.github.com/users/jquense/events{/privacy}","received_events_url":"https://api.github.com/users/jquense/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"bvaughn","id":29597,"avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false},"assignees":[{"login":"bvaughn","id":29597,"avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":19,"created_at":"2018-03-20T20:14:42Z","updated_at":"2018-03-22T18:16:55Z","closed_at":"2018-03-22T18:16:55Z","author_association":"COLLABORATOR","body":"https://codesandbox.io/s/xl7k7j1k6w\r\n\r\nNot sure if this is intended or not, the longer term existence of these hooks suggested to me that they have their purposes still, so might be needed in conjunction with gDSFP. The particular use-case that caused me to discover this was a migrating: https://github.com/react-bootstrap/react-bootstrap/blob/master/src/Dropdown.js#L137 where document focus needs to be checked _prior_ to an update flushing because the update changes visual state and drops focus. I could move this to `render()` but React has traditionally yelled at me when doing ref stuff there. Admittedly in the migrated code i don't need `findDOMNode` so it'd be fine.","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12410","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12410/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12410/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12410/events","html_url":"https://github.com/facebook/react/issues/12410","id":306973923,"number":12410,"title":"Controlling radio input with checked and onClick props gives warning","user":{"login":"rodgobbi","id":3410227,"avatar_url":"https://avatars1.githubusercontent.com/u/3410227?v=4","gravatar_id":"","url":"https://api.github.com/users/rodgobbi","html_url":"https://github.com/rodgobbi","followers_url":"https://api.github.com/users/rodgobbi/followers","following_url":"https://api.github.com/users/rodgobbi/following{/other_user}","gists_url":"https://api.github.com/users/rodgobbi/gists{/gist_id}","starred_url":"https://api.github.com/users/rodgobbi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rodgobbi/subscriptions","organizations_url":"https://api.github.com/users/rodgobbi/orgs","repos_url":"https://api.github.com/users/rodgobbi/repos","events_url":"https://api.github.com/users/rodgobbi/events{/privacy}","received_events_url":"https://api.github.com/users/rodgobbi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-20T17:52:11Z","updated_at":"2018-03-20T17:56:20Z","closed_at":"2018-03-20T17:56:20Z","author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n**What is the current behavior?**\r\nIn any `input` of type `radio`, if I control it with the `checked` props and a handler to the `onClick` event, I still receive a warning that the form field needs a `onChange` handler. To suppress this warning, I pass an useless inline function to the `onChange` props.\r\n**What is the expected behavior?**\r\nNot give a warning if I control the component with an event other than `onChange`. I can't assure all possibilities but it's very common for me to control `radio` inputs with `onClick` handlers.\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n16.2.0\r\n\r\nI didn't test this behavior with a `checkbox` input, but I wonder that the same behavior would be desirable.","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12409","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12409/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12409/comments","events_url":"https://api.github.com/repos/faceb
8000
ook/react/issues/12409/events","html_url":"https://github.com/facebook/react/issues/12409","id":306942421,"number":12409,"title":"Passing elements to a function requires manual keys to be present","user":{"login":"hyperknot","id":494223,"avatar_url":"https://avatars2.githubusercontent.com/u/494223?v=4","gravatar_id":"","url":"https://api.github.com/users/hyperknot","html_url":"https://github.com/hyperknot","followers_url":"https://api.github.com/users/hyperknot/followers","following_url":"https://api.github.com/users/hyperknot/following{/other_user}","gists_url":"https://api.github.com/users/hyperknot/gists{/gist_id}","starred_url":"https://api.github.com/users/hyperknot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hyperknot/subscriptions","organizations_url":"https://api.github.com/users/hyperknot/orgs","repos_url":"https://api.github.com/users/hyperknot/repos","events_url":"https://api.github.com/users/hyperknot/events{/privacy}","received_events_url":"https://api.github.com/users/hyperknot/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-20T16:30:09Z","updated_at":"2018-03-20T17:19:44Z","closed_at":"2018-03-20T17:02:29Z","author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\nBug/feature\r\n\r\n**What is the current behavior?**\r\nReact requires manual keys present on each tag when passing an element via a function to render. If not, it gives a key warning.\r\n\r\nI'm passing an element created from JSX via a mobx store. This element requires manual keys to be present on each child tag. Even for simple example this is incredibly hard to do, and doesn't allow using any child component, thus severely limiting this functionality.\r\n\r\nThe passed JSX can be considered static, so the key requirement shouldn't apply here at all.\r\n\r\nIs it possible to tell React to consider an element as static?\r\n\r\nCodesandbox minimal case:\r\nhttps://codesandbox.io/s/4qm2p107r7\r\n\r\n```\r\nexport class OverlayStore {\r\n  @observable activePopup = null\r\n\r\n  @action\r\n  setPopup(element) {\r\n    this.activePopup = element\r\n  }\r\n}\r\n\r\n@observer\r\nexport class App extends React.Component {\r\n  render() {\r\n    return <div>{overlayStore.activePopup}</div>\r\n  }\r\n}\r\n\r\nconst overlayStore = new OverlayStore()\r\nrender(<App />, document.getElementById('root'))\r\n\r\noverlayStore.setPopup(\r\n  <p>\r\n    Long<br key=\"1\" />\r\n    Text<br key=\"2\" />\r\n    <a href=\"/link\" key=\"3\">\r\n      Link\r\n    </a>\r\n  </p>\r\n)\r\n```\r\n\r\n\r\n\r\n**What is the expected behavior?**\r\nShould not require manually setting keys to values like 1, 2, 3, etc.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nLatest stable dependencies via Codesandbox. Chrome / macOS but doesn't matter.","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12406","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12406/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12406/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12406/events","html_url":"https://github.com/facebook/react/issues/12406","id":306831859,"number":12406,"title":"Circle Ci failing test","user":{"login":"JoeCortopassi","id":943606,"avatar_url":"https://avatars0.githubusercontent.com/u/943606?v=4","gravatar_id":"","url":"https://api.github.com/users/JoeCortopassi","html_url":"https://github.com/JoeCortopassi","followers_url":"https://api.github.com/users/JoeCortopassi/followers","following_url":"https://api.github.com/users/JoeCortopassi/following{/other_user}","gists_url":"https://api.github.com/users/JoeCortopassi/gists{/gist_id}","starred_url":"https://api.github.com/users/JoeCortopassi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JoeCortopassi/subscriptions","organizations_url":"https://api.github.com/users/JoeCortopassi/orgs","repos_url":"https://api.github.com/users/JoeCortopassi/repos","events_url":"https://api.github.com/users/JoeCortopassi/events{/privacy}","received_events_url":"https://api.github.com/users/JoeCortopassi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-20T11:46:41Z","updated_at":"2018-03-20T14:59:09Z","closed_at":"2018-03-20T14:59:09Z","author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\nBug \r\n\r\n**What is the current behavior?**\r\nBroken build process due to invalid response from http://react.zpao.com/\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\nAny new PR will have the \"facebook-open-source-bot\" post something similar to this:\r\n<img width=\"775\" alt=\"screen shot 2018-03-20 at 6 39 41 am\" src=\"https://user-images.githubusercontent.com/943606/37652617-1614ef8e-2c0a-11e8-8185-c6405aa07b8f.png\">\r\nthis error will also cause the CircleCI tests to fail\r\n<img width=\"768\" alt=\"screen shot 2018-03-20 at 6 43 38 am\" src=\"https://user-images.githubusercontent.com/943606/37652610-0ebc9138-2c0a-11e8-90f2-905652100621.png\">\r\n```\r\nError:  { FetchError: invalid json response body at http://react.zpao.com/builds/master/_commits/e1ff342bf7f451fb995e0ea2bfb10889deef022f/results.json reason: Unexpected token < in JSON at position 0\r\n    at /home/circleci/project/node_modules/node-fetch/lib/body.js:48:31\r\n    at <anonymous>\r\n    at process._tickCallback (internal/process/next_tick.js:188:7)\r\n  name: 'FetchError',\r\n  message: 'invalid json response body at http://react.zpao.com/builds/master/_commits/e1ff342bf7f451fb995e0ea2bfb10889deef022f/results.json reason: Unexpected token < in JSON at position 0',\r\n  type: 'invalid-json' }\r\n```\r\n\r\n**What is the expected behavior?**\r\nValid json response","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12403","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12403/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12403/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12403/events","html_url":"https://github.com/facebook/react/issues/12403","id":306567007,"number":12403,"title":"server side react-dom render hrefLang as hrefLang","user":{"login":"webcarrot","id":679767,"avatar_url":"https://avatars1.githubusercontent.com/u/679767?v=4","gravatar_id":"","url":"https://api.github.com/users/webcarrot","html_url":"https://github.com/webcarrot","followers_url":"https://api.github.com/users/webcarrot/followers","following_url":"https://api.github.com/users/webcarrot/following{/other_user}","gists_url":"https://api.github.com/users/webcarrot/gists{/gist_id}","starred_url":"https://api.github.com/users/webcarrot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/webcarrot/subscriptions","organizations_url":"https://api.github.com/users/webcarrot/orgs","repos_url":"https://api.github.com/users/webcarrot/repos","events_url":"https://api.github.com/users/webcarrot/events{/privacy}","received_events_url":"https://api.github.com/users/webcarrot/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-19T17:50:08Z","updated_at":"2018-03-19T19:37:22Z","closed_at":"2018-03-19T19:37:22Z","author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\n\r\n**What is the current behavior?**\r\nreact-dom/server render \"hrefLang\" as \"hrefLang\"\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem:**\r\nhttps://codesandbox.io/s/3x09moz93q\r\n\r\n**What is the expected behavior?**\r\nRender \"hrefLang\" attribute as \"hreflang\" on server-side.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n16.0.0 - 16.4.0\r\nWorks in 15.6.2","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12400","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12400/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12400/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12400/events","html_url":"https://github.com/facebook/react/issues/12400","id":306391706,"number":12400,"title":"React not able to get the application environment at UI with DefinePlugin?","user":{"login":"VishalGulati","id":14342323,"avatar_url":"https://avatars1.githubusercontent.com/u/14342323?v=4","gravatar_id":"","url":"https://api.github.com/users/VishalGulati","html_url":"https://github.com/VishalGulati","followers_url":"https://api.github.com/users/VishalGulati/followers","following_url":"https://api.github.com/users/VishalGulati/following{/other_user}","gists_url":"https://api.github.com/users/VishalGulati/gists{/gist_id}","starred_url":"https://api.github.com/users/VishalGulati/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/VishalGulati/subscriptions","organizations_url":"https://api.github.com/users/VishalGulati/orgs","repos_url":"https://api.github.com/users/VishalGulati/repos","events_url":"https://api.github.com/users/VishalGulati/events{/privacy}","received_events_url":"https://api.github.com/users/VishalGulati/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-19T09:44:22Z","updated_at":"2018-03-19T16:45:42Z","closed_at":"2018-03-19T16:45:42Z","author_association":"NONE","body":"I am working on a React application. In there I have to showcase different functionality based on whether app is running in dev mode or production. My query is how do I get this application environment in my React code?\r\n\r\nI tried below code but it did not work:\r\n\r\n    // webpack.config.js\r\n      plugins: [\r\n        new webpack.DefinePlugin({\r\n          appenv: JSON.stringify('dev')\r\n        })\r\n      ]\r\n    // any-component.js\r\n    console.log(\"Env: \" + appenv);\r\n    \r\n    //error\r\n    appenv is not defined.\r\n\r\nI also tried `EnvironmentPlugin` of webpack but got same error. Could anyone help? TIA.\r\n\r\nCC: @rouzbeh84 @simon04 \r\n","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12398","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12398/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12398/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12398/events","html_url":"https://github.com/facebook/react/issues/12398","id":306259211,"number":12398,"title":"Unhandled Rejection (SyntaxError): Unexpected token < in JSON at position 0","user":{"login":"Eparrita","id":34838881,"avatar_url":"https://avatars0.githubusercontent.com/u/34838881?v=4","gravatar_id":"","url":"https://api.github.com/users/Eparrita","html_url":"https://github.com/Eparrita","followers_url":"https://api.github.com/users/Eparrita/followers","following_url":"https://api.github.com/users/Eparrita/following{/other_user}","gists_url":"https://api.github.com/users/Eparrita/gists{/gist_id}","starred_url":"https://api.github.com/users/Eparrita/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Eparrita/subscriptions","organizations_url":"https://api.github.com/users/Eparrita/orgs","repos_url":"https://api.github.com/users/Eparrita/repos","events_url":"https://api.github.com/users/Eparrita/events{/privacy}","received_events_url":"https://api.github.com/users/Eparrita/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-18T17:14:50Z","updated_at":"2018-03-18T17:38:01Z","closed_at":"2018-03-18T17:38:01Z","author_association":"NONE","body":"Hello all, I'm new with react. I want import some datas of my file data.json. The code is:\r\n\r\n**Portfolio.js**\r\n\r\n```\r\nimport React, { Component } from 'react';\r\n\r\nclass Portfolio extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = { websites: [] }\r\n  }\r\n  componentWillMount(){\r\n    fetch('./data.json')\r\n      .then(response => response.json())\r\n      .then(({websites}) => this.setStates({websites}));\r\n   }\r\n  render() {\r\n     let websites = this.state.websites\r\n    return (\r\n      <div className=\"portfolio\" id=\"portfolio\">\r\n        <div className=\"container v-center align-center\">\r\n          <h2>Portfolio</h2>\r\n          <p>My latest portfolio list</p>\r\n          {websites.map(item =>\r\n            <div className=\"sm-12 md-12 lg-12\">\r\n            <h1 key={item.title}>{item.title}</h1>\r\n            <p>{item.description}</p>\r\n          </div>\r\n\r\n        )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n```\r\n\r\n\r\n**data.json**\r\n\r\n```\r\n{\r\n  \"websites\":[\r\n    {\r\n      \"title\":\"Estancia La Vera Cruz\",\r\n      \"image\":\"./assets/images/estancia.jpg\",\r\n      \"description\":\"The Estancia La Vera Cruz, is a recognized company of international class that offers hotel services. My work with the Estancia team began from 2011, reprogramming his first website made in PHP. I created a template for Joomla 1.5 keeping the original version, I made SEO on page and the google positioning using the words Estancias en Venezuela. In 2014, the website was completely changed by a responsive, flat and minimalist design, I continued using Joomla as CMS with the version 3.5\",\r\n      \"year\":\"2011 - 2018\",\r\n      \"qualities\": [\r\n        \"qualita 1\",\r\n        \"qualita 2\",\r\n        \"qualita 3\"\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n**This is the error**\r\n\r\n```\r\nUnhandled Rejection (SyntaxError): Unexpected token < in JSON at position 0\r\n(anonymous function)\r\nsrc/partial/Portfolio.js:10\r\n   7 | }\r\n   8 | componentWillMount(){\r\n   9 |   fetch('./data.json')\r\n> 10 |     .then(response => response.json())\r\n  11 |     .then(({websites}) => this.setStates({websites}));\r\n  12 |  }\r\n  13 | render() {\r\n```\r\nPlease I need your help","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12396","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12396/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12396/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12396/events","html_url":"https://github.com/facebook/react/issues/12396","id":306214649,"number":12396,"title":"PROPOSAL: Allow void elements to have children with override property","user":{"login":"dxprog","id":950392,"avatar_url":"https://avatars3.githubusercontent.com/u/950392?v=4","gravatar_id":"","url":"https://api.github.com/users/dxprog","html_url":"https://github.com/dxprog","followers_url":"https://api.github.com/users/dxprog/followers","following_url":"https://api.github.com/users/dxprog/following{/other_user}","gists_url":"https://api.github.com/users/dxprog/gists{/gist_id}","starred_url":"https://api.github.com/users/dxprog/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dxprog/subscriptions","organizations_url":"https://api.github.com/users/dxprog/orgs","repos_url":"https://api.github.com/users/dxprog/repos","events_url":"https://api.github.com/users/dxprog/events{/privacy}","received_events_url":"https://api.github.com/users/dxprog/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-18T05:27:16Z","updated_at":"2018-03-18T19:14:41Z","closed_at":"2018-03-18T17:48:04Z","author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature.\r\n\r\n**What is the current behavior?**\r\n\r\nWhen creating one of the whitelisted void elements, an error is thrown:\r\n\r\n```javascript\r\n<link>https://reactjs.org/blog/</link>\r\n<link dangerouslySetInnerHTML={{ __html: 'https://reactjs.org/blog/' }} />\r\nReact.createElement('link', null, 'https://reactjs.org/blog/');\r\n\r\n// Invariant Violation: link is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\r\n```\r\n\r\nThis is a correct assumption to make for 100% of all browser front-ends.\r\n\r\n**What is the proposed new behavior?**\r\n\r\nIn the exceptional case of generating SGML-like code (likely server rendered), it may become necessary to override the default behaviour of these whitelisted HTML void elements. For example, RSS uses the `link` tag to denote the site's root URL and the URL for individual `item` entries. The actual value is a `TextNode` of the `link` tag and will cause the above error when trying to generate via a React component.\r\n\r\nMy proposed solution would add a new, lengthily named property that bypasses the void element check and allows for these items to be rendered with `children`/`dangerouslySetInnerHTML`. Example implementation:\r\n\r\n```javascript\r\n<link allowInvalidVoidElementChildren={true}>https://reactjs.org/blog/</link>\r\n<link allowInvalidVoidElementChildren={true} dangerouslySetInnerHTML={{ __html: 'https://reactjs.org/blog/' }} />\r\nReact.createElement('link', { allowInvalidVoidElementChildren: true }, 'https://reactjs.org/blog/');\r\n\r\n// <link>https://reactjs.org/blog/</link>\r\n```\r\n\r\nMuch in the vein of `dangerouslySetInnerHTML`, the property is named such that it:\r\n\r\n- Likely avoids name collisions from any existing consumer code\r\n- Makes it explicit that setting this flag causes non-standard and potentially undesirable effects for most usual use cases\r\n\r\nThis feature should be implemented in a way that all existing unit tests pass without alteration. New unit tests would be added to ensure that the new functionality works as intended.\r\n\r\nThe following files have been identified as the places to implement this feature:\r\n\r\n- `packages/react-dom/src/shared/assertValidProps.js`\r\n- `packages/react-dom/src/__tests__/ReactDOMComponent-test.js`\r\n- `packages/react-dom/src/shared/DOMProperty.js`\r\n\r\n**Did this work in previous versions of React?**\r\n\r\nIf this worked in previous versions of React, it was likely a bug.\r\n","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12395","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12395/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12395/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12395/events","html_url":"https://github.com/facebook/react/issues/12395","id":306156362,"number":12395,"title":"why im getting key iterator warnings?","user":{"login":"k1r0s","id":6052309,"avatar_url":"https://avatars2.githubusercontent.com/u/6052309?v=4","gravatar_id":"","url":"https://api.github.com/users/k1r0s","html_url":"https://github.com/k1r0s","followers_url":"https://api.github.com/users/k1r0s/followers","following_url":"https://api.github.com/users/k1r0s/following{/other_user}","gists_url":"https://api.github.com/users/k1r0s/gists{/gist_id}","starred_url":"https://api.github.com/users/k1r0s/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k1r0s/subscriptions","organizations_url":"https://api.github.com/users/k1r0s/orgs","repos_url":"https://api.github.com/users/k1r0s/repos","events_url":"https://api.github.com/users/k1r0s/events{/privacy}","received_events_url":"https://api.github.com/users/k1r0s/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-17T13:25:38Z","updated_at":"2018-03-17T16:03:45Z","closed_at":"2018-03-17T16:03:44Z","author_association":"NONE","body":"If I put back the keys then my form stops working\r\n\r\nplease refer to https://github.com/facebook/react/issues/12364","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12390","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12390/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12390/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12390/events","html_url":"https://github.com/facebook/react/issues/12390","id":305906458,"number":12390,"title":"Could we get more friendly error stack from ErrorBoudary?","user":{"login":"NE-SmallTown","id":18418010,"avatar_url":"https://avatars3.githubusercontent.com/u/18418010?v=4","gravatar_id":"","url":"https://api.github.com/users/NE-SmallTown","html_url":"https://github.com/NE-SmallTown","followers_url":"https://api.github.com/users/NE-SmallTown/followers","following_url":"https://api.github.com/users/NE-SmallTown/following{/other_user}","gists_url":"https://api.github.com/users/NE-SmallTown/gists{/gist_id}","starred_url":"https://api.github.com/users/NE-SmallTown/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NE-SmallTown/subscriptions","organizations_url":"https://api.github.com/users/NE-SmallTown/orgs","repos_url":"https://api.github.com/users/NE-SmallTown/repos","events_url":"https://api.github.com/users/NE-SmallTown/events{/privacy}","received_events_url":"https://api.github.com/users/NE-SmallTown/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-03-16T12:16:51Z","updated_at":"2018-03-18T22:54:27Z","closed_at":"2018-03-18T22:54:27Z","author_association":"CONTRIBUTOR","body":"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nMaybe a feature?\r\n\r\n**What is the current behavior?**\r\n\r\nCurrently the error Component Stack(i.e. `arguments[0]` of `componentDidCatch`) is something like:\r\n```\r\nin Foo\r\nin Connect(Foo)\r\nin Bar\r\nin div\r\nin ...\r\n```\r\nBut in production, they would be formatted to:\r\n```\r\nin t\r\nin Connect(t)\r\nin s\r\nin t\r\nin ...\r\n```\r\nThis is almost **useless for our debugging.**\r\n\r\n**What is the expected behavior?**\r\n\r\nI want to request a feature which allow us to define our **own** static **componentName field**, the reason why don't use `displayName` is that the `displayName` is used by react-devtools or others libs, if we use this static field for our components, **everyone** could see our components/project structure(maybe there is others potential risk) , that's not what we expect.\r\n\r\nSo, if react could support custom static **componentName field**, e.g. `myDisplayName`, then we could set `myDisplayName` field for our components and react-devtools **can't inspect this**. And react read `myDisplayName` field rather than `displayName` to get the component name and insert they into the error stack string and then call the `componentDidCatch`.\r\n\r\nI know that if we implement this, we **still** could get the components/project structure by using some libs like babel to decompile or just make react-devtools to support this field. But that increase the cost.\r\n","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12389","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12389/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12389/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12389/events","html_url":"https://github.com/facebook/react/issues/12389","id":305892957,"number":12389,"title":"propagateContextChange Stuck in an Infinite Loop","user":{"login":"grahammendick","id":1761227,"avatar_url":"https://avatars0.githubusercontent.com/u/1761227?v=4","gravatar_id":"","url":"https://api.github.com/users/grahammendick","html_url":"https://github.com/grahammendick","followers_url":"https://api.github.com/users/grahammendick/followers","following_url":"https://api.github.com/users/grahammendick/following{/other_user}","gists_url":"https://api.github.com/users/grahammendick/gists{/gist_id}","starred_url":"https://api.github.com/users/grahammendick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/grahammendick/subscriptions","organizations_url":"https://api.github.com/users/grahammendick/orgs","repos_url":"https://api.github.com/users/grahammendick/repos","events_url":"https://api.github.com/users/grahammendick/events{/privacy}","received_events_url":"https://api.github.com/users/grahammendick/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2018-03-16T11:25:26Z","updated_at":"2018-03-23T10:47:01Z","closed_at":"2018-03-20T13:07:00Z","author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nIn the process of converting [my Navigation router](https://grahammendick.github.io/navigation/) to the new context API I found that `propagateContextChange` sometimes gets stuck in an infinite loop. I’ve created a [JsFiddle of the problem](https://jsfiddle.net/pxzo0foq/42/). If you click the 'Name' sort Hyperlink **two times** then, on the **second click**, it enters the infinite loop. The JsFiddle is as simple as I could make it. For example, if you get rid of the 'Date of Birth' column then the problem doesn’t happen!?\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nhttps://jsfiddle.net/pxzo0foq/42/\r\n\r\n**What is the expected behavior?**\r\n\r\nIt should not get stuck in an infinite loop\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact version 16.3.0-alpha.2. \r\nThis is to do with the new Context API introduced in 16.3","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12388","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12388/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12388/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12388/events","html_url":"https://github.com/facebook/react/issues/12388","id":305813147,"number":12388,"title":"Gitter Room","user":{"login":"ghulamhussain","id":16648097,"avatar_url":"https://avatars2.githubusercontent.com/u/16648097?v=4","gravatar_id":"","url":"https://api.github.com/users/ghulamhussain","html_url":"https://github.com/ghulamhussain","followers_url":"https://api.github.com/users/ghulamhussain/followers","following_url":"https://api.github.com/users/ghulamhussain/following{/other_user}","gists_url":"https://api.github.com/users/ghulamhussain/gists{/gist_id}","starred_url":"https://api.github.com/users/ghulamhussain/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghulamhussain/subscriptions","organizations_url":"https://api.github.com/users/ghulamhussain/orgs","repos_url":"https://api.github.com/users/ghulamhussain/repos","events_url":"https://api.github.com/users/ghulamhussain/events{/privacy}","received_events_url":"https://api.github.com/users/ghulamhussain/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-16T06:11:53Z","updated_at":"2018-03-18T18:07:18Z","closed_at":"2018-03-18T18:07:18Z","author_association":"NONE","body":"please make a react room on gitter ","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12381","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12381/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12381/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12381/events","html_url":"https://github.com/facebook/react/issues/12381","id":305525757,"number":12381,"title":"async-safe way of reading this.state?","user":{"login":"linkenneth","id":1477555,"avatar_url":"https://avatars1.githubusercontent.com/u/1477555?v=4","gravatar_id":"","url":"https://api.github.com/users/linkenneth","html_url":"https://github.com/linkenneth","followers_url":"https://api.github.com/users/linkenneth/followers","following_url":"https://api.github.com/users/linkenneth/following{/other_user}","gists_url":"https://api.github.com/users/linkenneth/gists{/gist_id}","starred_url":"https://api.github.com/users/linkenneth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linkenneth/subscriptions","organizations_url":"https://api.github.com/users/linkenneth/orgs","repos_url":"https://api.github.com/users/linkenneth/repos","events_url":"https://api.github.com/users/linkenneth/events{/privacy}","received_events_url":"https://api.github.com/users/linkenneth/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2018-03-15T12:09:02Z","updated_at":"2018-03-20T10:00:31Z","closed_at":"2018-03-20T10:00:31Z","author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\nfeature request / question?\r\n\r\nI'm having a problem that I'm sure some people have had, though I feel like it should be much more solvable. Suppose I have a component that receives state updates from many sources. For example,\r\n\r\n```javascript\r\nclass Counter extends React.Component {\r\n  constructor (props) {\r\n    this.state = { number : 0 };\r\n  }\r\n\r\n  onButtonAClicked () {\r\n    this.setState((prevState) => { prevState.number + 1 });\r\n  }\r\n\r\n  onButtonBClicked () {\r\n    this.setState((prevState) => { prevState.number + 2 });\r\n  }\r\n}\r\n```\r\n\r\nNow, somewhere outside of the `render()` method I need to read `this.state`. Since `this.setState` is asynchronous, there is no safe way to read this number if you don't know the sequence of clicks since the last actual update of this.state. One safe way seems to be using an empty `setState` with a callback to do things:\r\n\r\n```javascript\r\nreadAndDoStuff () {\r\n  this.setState({}, () => {\r\n    // actually do things with this.state\r\n  });\r\n}\r\n```\r\n\r\nbut my requirement is that this method that reads this.state must be synchronous. Also, this form seems a bit odd to me if I don't actually intend to set any state. It seems that `this.setState` being asynchronous forcing my own application to have to make all reads of `this.state` to be asynchronous as well.\r\n\r\nI could instead keep track of my own state and entirely ignore `this.state`. This means I keep `this.state2 = { number: 1 };` and replace calls of `this.setState` with `this.state2[number]++; this.forceUpdate();`, but this just solves the problem by bypassing React entirely.\r\n\r\nMy question is: is there a way to force the immediate setting of state to read `this.state`, or what is a recommended solutio
5f56
n for something like this?","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12378","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12378/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12378/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12378/events","html_url":"https://github.com/facebook/react/issues/12378","id":305519000,"number":12378,"title":"Different behavior of updating DOM while using ternary operator vs inline approaches","user":{"login":"satispunk","id":16405686,"avatar_url":"https://avatars1.githubusercontent.com/u/16405686?v=4","gravatar_id":"","url":"https://api.github.com/users/satispunk","html_url":"https://github.com/satispunk","followers_url":"https://api.github.com/users/satispunk/followers","following_url":"https://api.github.com/users/satispunk/following{/other_user}","gists_url":"https://api.github.com/users/satispunk/gists{/gist_id}","starred_url":"https://api.github.com/users/satispunk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/satispunk/subscriptions","organizations_url":"https://api.github.com/users/satispunk/orgs","repos_url":"https://api.github.com/users/satispunk/repos","events_url":"https://api.github.com/users/satispunk/events{/privacy}","received_events_url":"https://api.github.com/users/satispunk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-15T11:46:50Z","updated_at":"2018-03-15T18:23:36Z","closed_at":"2018-03-15T15:40:13Z","author_association":"NONE","body":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nNot sure if this is bug of feature\r\n**What is the current behavior?**\r\n\r\nThere are 2 very similar cases, often chosen by matter of preferences, but work with DOM is different \r\n\r\nIn the first case icon is updated in DOM \r\n```\r\nconst Expandable = ({expanded}) => {\r\n  const expandedIcon = <DropdownIcon className=\"expanded\" />\r\n  const collapsedIcon = <DropdownIcon className=\"collapsed\" />\r\n  const icon = expanded ? expandedIcon : collapsedIcon\r\n  return <div>{icon}</div>\r\n}\r\n```\r\n\r\nIn the second case icon is mounted/unmouted\r\n```\r\nconst Expandable = ({expanded}) => {\r\n  const expandedIcon = <DropdownIcon className=\"expanded\" />\r\n  const collapsedIcon = <DropdownIcon className=\"collapsed\" />\r\n\r\n  return <div>\r\n    {expanded && expandedIcon}\r\n    {!expanded && collapsedIcon}\r\n  </div>\r\n}\r\n```\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nhttps://codesandbox.io/s/jn7mm2l735\r\n\r\n**What is the expected behavior?**\r\n\r\nI expected \"update\" in both cases but might be wrong\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nWindows 10, Chrome 64\r\n","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12376","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12376/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12376/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12376/events","html_url":"https://github.com/facebook/react/issues/12376","id":305391010,"number":12376,"title":"Why setState re-renders even if state stays the same?","user":{"login":"James2516","id":25133127,"avatar_url":"https://avatars2.githubusercontent.com/u/25133127?v=4","gravatar_id":"","url":"https://api.github.com/users/James2516","html_url":"https://github.com/James2516","followers_url":"https://api.github.com/users/James2516/followers","following_url":"https://api.github.com/users/James2516/following{/other_user}","gists_url":"https://api.github.com/users/James2516/gists{/gist_id}","starred_url":"https://api.github.com/users/James2516/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/James2516/subscriptions","organizations_url":"https://api.github.com/users/James2516/orgs","repos_url":"https://api.github.com/users/James2516/repos","events_url":"https://api.github.com/users/James2516/events{/privacy}","received_events_url":"https://api.github.com/users/James2516/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-03-15T02:10:34Z","updated_at":"2018-03-15T03:17:57Z","closed_at":"2018-03-15T03:17:57Z","author_association":"NONE","body":"```\r\nclass App extends React.Component {\r\n  state = {\r\n    index: 0,\r\n  }\r\n  render() {\r\n    alert('rendered');\r\n    return(\r\n      <div>\r\n        <h1>{this.state.index}</h1>\r\n        <button onClick={() => this.setState({index: 0})}>test</button>\r\n      </div>\r\n    );\r\n  } \r\n}\r\n```\r\n[![Edit zw28l3ynkm](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/zw28l3ynkm)\r\n\r\nI know we can define a `shouldComponentUpdate` to check if `this.state === nextState`, but why not check this by default? Same goes for props.\r\n","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12374","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12374/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12374/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12374/events","html_url":"https://github.com/facebook/react/issues/12374","id":305186238,"number":12374,"title":"when use webpack4.0.1 bundle a react App, ERROR like this","user":{"login":"yegao","id":9262560,"avatar_url":"https://avatars2.githubusercontent.com/u/9262560?v=4","gravatar_id":"","url":"https://api.github.com/users/yegao","html_url":"https://github.com/yegao","followers_url":"https://api.github.com/users/yegao/followers","following_url":"https://api.github.com/users/yegao/following{/other_user}","gists_url":"https://api.github.com/users/yegao/gists{/gist_id}","starred_url":"https://api.github.com/users/yegao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yegao/subscriptions","organizations_url":"https://api.github.com/users/yegao/orgs","repos_url":"https://api.github.com/users/yegao/repos","events_url":"https://api.github.com/users/yegao/events{/privacy}","received_events_url":"https://api.github.com/users/yegao/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-14T14:38:05Z","updated_at":"2018-03-17T01:37:45Z","closed_at":"2018-03-14T21:35:00Z","author_association":"NONE","body":"ERROR in ./node_modules/_react@16.2.0@react/cjs/react.production.min.js\r\nModule not found: Error: Can't resolve 'fbjs/lib/emptyFunction' in '/Users/zr/work/react.family.ink/node_modules/_react@16.2.0@react/cjs'\r\n @ ./node_modules/_react@16.2.0@react/cjs/react.production.min.js 10:80-113\r\n @ ./node_modules/_react@16.2.0@react/index.js\r\n @ ./src/app.js\r\n @ multi ./src/app.js\r\n\r\nERROR in ./node_modules/_react@16.2.0@react/cjs/react.production.min.js\r\nModule not found: Error: Can't resolve 'fbjs/lib/emptyObject' in '/Users/zr/work/react.family.ink/node_modules/_react@16.2.0@react/cjs'\r\n @ ./node_modules/_react@16.2.0@react/cjs/react.production.min.js 10:46-77\r\n @ ./node_modules/_react@16.2.0@react/index.js\r\n @ ./src/app.js\r\n @ multi ./src/app.js\r\n\r\nERROR in ./node_modules/_react@16.2.0@react/cjs/react.production.min.js\r\nModule not found: Error: Can't resolve 'object-assign' in '/Users/zr/work/react.family.ink/node_modules/_react@16.2.0@react/cjs'\r\n @ ./node_modules/_react@16.2.0@react/cjs/react.production.min.js 10:19-43\r\n @ ./node_modules/_react@16.2.0@react/index.js\r\n @ ./src/app.js\r\n @ multi ./src/app.js","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12373","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12373/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12373/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12373/events","html_url":"https://github.com/facebook/react/issues/12373","id":305126926,"number":12373,"title":"Formatting numbers with toLocalString() in a controlled input","user":{"login":"paulcredmond","id":2063873,"avatar_url":"https://avatars0.githubusercontent.com/u/2063873?v=4","gravatar_id":"","url":"https://api.github.com/users/paulcredmond","html_url":"https://github.com/paulcredmond","followers_url":"https://api.github.com/users/paulcredmond/followers","following_url":"https://api.github.com/users/paulcredmond/following{/other_user}","gists_url":"https://api.github.com/users/paulcredmond/gists{/gist_id}","starred_url":"https://api.github.com/users/paulcredmond/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulcredmond/subscriptions","organizations_url":"https://api.github.com/users/paulcredmond/orgs","repos_url":"https://api.github.com/users/paulcredmond/repos","events_url":"https://api.github.com/users/paulcredmond/events{/privacy}","received_events_url":"https://api.github.com/users/paulcredmond/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-14T11:50:44Z","updated_at":"2018-03-14T12:02:49Z","closed_at":"2018-03-14T12:02:26Z","author_association":"NONE","body":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nA bug (suspected).\r\n\r\n**What is the current behavior?**\r\n\r\nI'm trying to use `toLocaleString()` with a controlled input on a text or tel field.\r\n\r\nEither the numbers are removed after after 3 entered or I get a NaN.\r\n\r\nPossibly related: https://github.com/facebook/react/issues/11877\r\n\r\nhttps://codesandbox.io/s/91q75k22mo\r\n\r\n**What is the expected behavior?**\r\n\r\nNumber is formatted using `toLocaleString()`.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.2.0, Chrome 64, Mac OS 10\r\n","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12372","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12372/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12372/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12372/events","html_url":"https://github.com/facebook/react/issues/12372","id":305109240,"number":12372,"title":"react 16.3 new context API basic intent","user":{"login":"thifranc","id":17310666,"avatar_url":"https://avatars3.githubusercontent.com/u/17310666?v=4","gravatar_id":"","url":"https://api.github.com/users/thifranc","html_url":"https://github.com/thifranc","followers_url":"https://api.github.com/users/thifranc/followers","following_url":"https://api.github.com/users/thifranc/following{/other_user}","gists_url":"https://api.github.com/users/thifranc/gists{/gist_id}","starred_url":"https://api.github.com/users/thifranc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thifranc/subscriptions","organizations_url":"https://api.github.com/users/thifranc/orgs","repos_url":"https://api.github.com/users/thifranc/repos","events_url":"https://api.github.com/users/thifranc/events{/privacy}","received_events_url":"https://api.github.com/users/thifranc/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-14T10:53:16Z","updated_at":"2018-03-14T13:25:59Z","closed_at":"2018-03-14T11:22:59Z","author_association":"NONE","body":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nmisunderstanding\r\n\r\n**What is the current behavior?**\r\nImpossible to render a component which is a provider furnished by createContext function\r\ntrying to follow those articles :  \r\n[whats new in react](https://medium.com/@baphemot/whats-new-in-react-16-3-d2c9b7b6193b)\r\n[react new context API](https://medium.com/dailyjs/reacts-%EF%B8%8F-new-context-api-70c9fe01596b)\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n[code sandBox example](https://codesandbox.io/embed/k591mqw98o)\r\nsourceCode of codeSandBox :  \r\n```\r\nimport React, { Component, createContext } from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nconst CartState = createContext({\r\n  open: false\r\n});\r\n\r\nclass CartStateProvider extends Component {\r\n  state = { open: false };\r\n\r\n  render() {\r\n    return (\r\n      <CartState.Provider value={this.state.open}>\r\n        {this.props.children}\r\n      </CartState.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CartStateProvider>\r\n          <CartState.Consumer>\r\n            {({ open }) => {\r\n              return <div>{open ? \"open\" : \"closed\"}</div>;\r\n            }}\r\n          </CartState.Consumer>\r\n        </CartStateProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n```\r\n\r\n**What is the expected behavior?**\r\nIt should render \"closed\"\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\ni'm testing with react 16.3.0-alpha.1, as it is new feature, it cannot work in previous releases\r\n","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12369","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12369/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12369/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12369/events","html_url":"https://github.com/facebook/react/issues/12369","id":304960312,"number":12369,"title":"Add a Top-level API for detecting whether an element is a HTML element","user":{"login":"m93a","id":1671665,"avatar_url":"https://avatars0.githubusercontent.com/u/1671665?v=4","gravatar_id":"","url":"https://api.github.com/users/m93a","html_url":"https://github.com/m93a","followers_url":"https://api.github.com/users/m93a/followers","following_url":"https://api.github.com/users/m93a/following{/other_user}","gists_url":"https://api.github.com/users/m93a/gists{/gist_id}","starred_url":"https://api.github.com/users/m93a/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/m93a/subscriptions","organizations_url":"https://api.github.com/users/m93a/orgs","repos_url":"https://api.github.com/users/m93a/repos","events_url":"https://api.github.com/users/m93a/events{/privacy}","received_events_url":"https://api.github.com/users/m93a/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-03-13T22:36:03Z","updated_at":"2018-03-18T18:15:35Z","closed_at":"2018-03-18T18:15:35Z","author_association":"NONE","body":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nFeature\r\n\r\n**What is the current behavior?**\r\nIn the React's [Top-level API](https://reactjs.org/docs/react-api.html#isvalidelement) there is a function for detecting whether an object is a valid React element. But there's no official way to detect a HTML element specifically.\r\n\r\n**What is the expected behavior?**\r\nIt would make sense to have another function for checking whether an object is a ReactHTMLElement. \r\n\r\n**What would be the use cases?**\r\nIn TypeScript it would be a useful type guard. Apart from TypeScript, it would be cool eg. if you needed your component to add a class to all of its children – you'd have to decide whether you can add the class directly, or whether you have to wrap the child in `<span class=foo></span>`.\r\n\r\n**Implementation draft**\r\n```typescript\r\nconst listOfHTMLElements: Readonly<string[]> = [\r\n    'a', 'abbr', 'address', 'area', 'article', 'aside', 'audio',\r\n    'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br',\r\n    'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup',\r\n    'data',  'datalist',  'dd', 'del',  'details', 'dfn',  'dialog',\r\n    'div', 'dl',  'dt', 'em',  'embed',  'fieldset', 'figcaption',\r\n    'figure',  'footer', 'form', 'h1', 'h2',  'h3', 'h4',  'h5', 'h6',\r\n    'head', 'header', 'hgroup',  'hr', 'html', 'i', 'iframe', 'img',\r\n    'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link',\r\n    'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav',\r\n    'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p',\r\n    'param', 'picture',  'pre', 'progress',  'q', 'rp', 'rt', 'ruby',\r\n    's', 'samp', 'script', 'section', 'select', 'small', 'source',\r\n    'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table',\r\n    'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title',\r\n    'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', 'webview'\r\n];\r\n\r\nexport function isHTMLElement(elem: any): elem is React.ReactHTMLElement<any>\r\n{\r\n    return React.isValidElement(elem)\r\n        && typeof elem.type === 'string'\r\n        && listOfHTMLElements.indexOf(elem.type) >= 0;\r\n}\r\n```\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nAll.\r\n","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12366","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12366/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12366/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12366/events","html_url":"https://github.com/facebook/react/issues/12366","id":304910493,"number":12366,"title":"Impossible to change classname","user":{"login":"joeyhub","id":1512978,"avatar_url":"https://avatars3.githubusercontent.com/u/1512978?v=4","gravatar_id":"","url":"https://api.github.com/users/joeyhub","html_url":"https://github.com/joeyhub","followers_url":"https://api.github.com/users/joeyhub/followers","following_url":"https://api.github.com/users/joeyhub/following{/other_user}","gists_url":"https://api.github.com/users/joeyhub/gists{/gist_id}","starred_url":"https://api.github.com/users/joeyhub/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joeyhub/subscriptions","organizations_url":"https://api.github.com/users/joeyhub/orgs","repos_url":"https://api.github.com/users/joeyhub/repos","events_url":"https://api.github.com/users/joeyhub/events{/privacy}","received_events_url":"https://api.github.com/users/joeyhub/received_events","type":"User","site_admin":false},"labels":[{"id":40929154,"url":"https://api.github.com/repos/facebook/react/labels/Resolution:%20Invalid","name":"Resolution: Invalid","color":"e6e6e6","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-13T19:49:07Z","updated_at":"2018-03-18T18:16:21Z","closed_at":"2018-03-18T18:16:21Z","author_association":"NONE","body":"I would like to change a class name to invoke a simple animation effect.\r\n\r\nclassName as an attribute must be a string. When I run render it appears to do more than simply update the class as the animation doesn't run, even with keys set.\r\n\r\nI also can't render once and then change the class as props is readonly.","score":1.0},{"url":"https://api.github.com/repos/facebook/react/issues/12364","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12364/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12364/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12364/events","html_url":"https://github.com/facebook/react/issues/12364","id":304872522,"number":12364,"title":"Porting libraries from Preact [Question]","user":{"login":"k1r0s","id":6052309,"avatar_url":"https://avatars2.githubusercontent.com/u/6052309?v=4","gravatar_id":"","url":"https://api.github.com/users/k1r0s","html_url":"https://github.com/k1r0s","followers_url":"https://api.github.com/users/k1r0s/followers","following_url":"https://api.github.com/users/k1r0s/following{/other_user}","gists_url":"https://api.github.com/users/k1r0s/gists{/gist_id}","starred_url":"https://api.github.com/users/k1r0s/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k1r0s/subscriptions","organizations_url":"https://api.github.com/users/k1r0s/orgs","repos_url":"https://api.github.com/users/k1r0s/repos","events_url":"https://api.github.com/users/k1r0s/events{/privacy}","received_events_url":"https://api.github.com/users/k1r0s/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-03-13T17:55:20Z","updated_at":"2018-03-14T09:53:44Z","closed_at":"2018-03-13T18:51:27Z","author_association":"NONE","body":"Hi, I just want to ask a question\r\n\r\nIm a Preact user, never tryed React, I only did a course a couple of months ago. But now I have to use React for a project and I'm trying to port one of my libraries: https://github.com/k1r0s/preact-bind-group\r\n\r\nThis library aims for easy form setup\r\n```jsx\r\n\r\n<FormGroup watch={change => this.setState({ ...change })}>\r\n      <div className=\"field\">\r\n         <label className=\"label\">Email</label>\r\n         <div className=\"control\">\r\n            <input data-bind=\"mail\" className=\"input\"/>\r\n         </div>\r\n      </div>\r\n     <div className=\"field\">\r\n      <label className=\"label\">Contraseña</label>\r\n      <div className=\"control\">\r\n         <input data-bind=\"pass\" type=\"password\" className=\"input\"/>\r\n     </div>\r\n  </div>\r\n  <div>\r\n     <a onClick={_ => this.doLogin(this.state)} className=\"button is-primary\">Submit</a>\r\n  </div>\r\n</FormGroup>\r\n```\r\n\r\nMy code works perfecly on Preact but Im facing issues on React, for example input is loosing focus everytime I time on the form rather than update field value.\r\n\r\nThis is the React example: https://codesandbox.io/s/9jv6n8mnrp\r\n\r\nThis is the Preact which is working: https://codesandbox.io/s/wmpv1o4z8\r\n\r\nThis library keeps an internal state to manage field values and events.. what Im doing wrong? help appreciated\r\n\r\n","score":1.0}]}
0

