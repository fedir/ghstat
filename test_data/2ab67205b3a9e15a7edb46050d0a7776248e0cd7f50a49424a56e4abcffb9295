HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sun, 08 Apr 2018 22:37:03 GMT
Link: <https://api.github.com/search/issues?q=repo%3Aduct-framework%2Fduct+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Aduct-framework%2Fduct+type%3Aissue+state%3Aclosed&page=2>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CC93:54B6:58D74D:E38813:5ACA998F
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 6
X-Ratelimit-Reset: 1523227064
X-Runtime-Rack: 0.383504
X-Xss-Protection: 1; mode=block

8000
{"total_count":42,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/duct-framework/duct/issues/69","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/69/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/69/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/69/events","html_url":"https://github.com/duct-framework/duct/issues/69","id":295501314,"number":69,"title":"Duct template generates a wrong example handler when combining +api +site","user":{"login":"iperdomo","id":178474,"avatar_url":"https://avatars2.githubusercontent.com/u/178474?v=4","gravatar_id":"","url":"https://api.github.com/users/iperdomo","html_url":"https://github.com/iperdomo","followers_url":"https://api.github.com/users/iperdomo/followers","following_url":"https://api.github.com/users/iperdomo/following{/other_user}","gists_url":"https://api.github.com/users/iperdomo/gists{/gist_id}","starred_url":"https://api.github.com/users/iperdomo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iperdomo/subscriptions","organizations_url":"https://api.github.com/users/iperdomo/orgs","repos_url":"https://api.github.com/users/iperdomo/repos","events_url":"https://api.github.com/users/iperdomo/events{/privacy}","received_events_url":"https://api.github.com/users/iperdomo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-02-08T12:54:16Z","updated_at":"2018-02-08T16:19:50Z","closed_at":"2018-02-08T16:19:50Z","author_association":"NONE","body":"When using `+site +api +example` the Duct template generates a _wrong_ example handler\r\n\r\n````\r\n$ cd /tmp\r\n$ lein new duct myproject +api +site +example\r\nGenerating a new Duct project named myproject...\r\nRun 'lein duct setup' in the project directory to create local config files.\r\n$ $ cat myproject/src/myproject/handler/example.clj \r\n(ns myproject.handler.example\r\n  (:require [compojure.core :refer :all]\r\n            [clojure.java.io :as io]\r\n            [integrant.core :as ig]))\r\n\r\n(defmethod ig/init-key :myproject.handler/example [_ options]\r\n  (context \"/example\" []\r\n    (GET \"/\" []\r\n      {:body {:example \"data\"}}(io/resource \"myproject/handler/example/example.html\"))))\r\n````\r\nSee that the `GET` request has 2 return values `{:body {:example \"data\"}}` and `(io/resource)` call\r\n\r\nExample of `eastwood` complaining about the code\r\n````\r\n$ echo \"{:user {:plugins [[jonase/eastwood \"0.2.5\"]] }}\" > $HOME/.lein/profiles.clj\r\n$ cd /tmp/myproject\r\n$ lein eastwood '{:namespaces [myproject.handler.example]}'\r\n== Eastwood 0.2.5 Clojure 1.9.0 JVM 1.8.0_144\r\n== Linting myproject.handler.example ==\r\nEntering directory `/tmp/myproject'\r\nsrc/myproject/handler/example.clj:9:7: unused-ret-vals: Constant value is discarded: :body\r\nsrc/myproject/handler/example.clj:9:14: unused-ret-vals: Constant value is discarded: :example\r\nsrc/myproject/handler/example.clj:9:14: unused-ret-vals: Constant value is discarded: \"data\"\r\n== Warnings: 3 (not including reflection warnings)  Exceptions thrown: 0\r\nSubprocess failed\r\n\r\n````\r\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/67","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/67/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/67/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/67/events","html_url":"https://github.com/duct-framework/duct/issues/67","id":267376575,"number":67,"title":"+ataraxy fails kerodon tests","user":{"login":"zakak","id":11573,"avatar_url":"https://avatars0.githubusercontent.com/u/11573?v=4","gravatar_id":"","url":"https://api.github.com/users/zakak","html_url":"https://github.com/zakak","followers_url":"https://api.github.com/users/zakak/followers","following_url":"https://api.github.com/users/zakak/following{/other_user}","gists_url":"https://api.github.com/users/zakak/gists{/gist_id}","starred_url":"https://api.github.com/users/zakak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zakak/subscriptions","organizations_url":"https://api.github.com/users/zakak/orgs","repos_url":"https://api.github.com/users/zakak/repos","events_url":"https://api.github.com/users/zakak/events{/privacy}","received_events_url":"https://api.github.com/users/zakak/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-10-21T12:26:59Z","updated_at":"2017-11-06T17:41:26Z","closed_at":"2017-11-06T13:38:22Z","author_association":"NONE","body":"Hello and thanks for all your open source work, including duct.\r\n\r\nI noticed `lein new duct demo +ataraxy +example` creates tests that fail, though `http://localhost/example` loads fine in the browser.\r\n\r\nThe kerodon `(status? 200)` test is looking for `[:response :status]`:\r\n\r\n```clojure\r\n;; with +ataraxy +example\r\n(deftest smoke-test    \r\n  (testing \"example page exists\"               \r\n    (-> (session handler)                      \r\n        (visit \"/example\") ;; {:response [:ataraxy.response/ok \"This is an example handler\"] ...}\r\n        (has (status? 200) \"page exists\")))) ;; fails\r\n```\r\n\r\n```clojure\r\n;; with +example\r\n(deftest smoke-test    \r\n  (testing \"example page exists\"               \r\n    (-> (session handler)                      \r\n        (visit \"/example\")  ;; {:response {:status 200, :headers {\"Content-Type\" \"text/html; charset=utf-8\"}, :body \"This is an example handler\"}\r\n        (has (status? 200) \"page exists\")))) ;; passes\r\n```","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/66","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/66/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/66/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/66/events","html_url":"https://github.com/duct-framework/duct/issues/66","id":262718627,"number":66,"title":"The combination +api +ataraxy +cljs +example +site +heroku +postgres doesn't work","user":{"login":"dpom","id":28756,"avatar_url":"https://avatars0.githubusercontent.com/u/28756?v=4","gravatar_id":"","url":"https://api.github.com/users/dpom","html_url":"https://github.com/dpom","followers_url":"https://api.github.com/users/dpom/followers","following_url":"https://api.github.com/users/dpom/following{/other_user}","gists_url":"https://api.github.com/users/dpom/gists{/gist_id}","starred_url":"https://api.github.com/users/dpom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dpom/subscriptions","organizations_url":"https://api.github.com/users/dpom/orgs","repos_url":"https://api.github.com/users/dpom/repos","events_url":"https://api.github.com/users/dpom/events{/privacy}","received_events_url":"https://api.github.com/users/dpom/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-10-04T09:17:55Z","updated_at":"2017-10-13T03:00:43Z","closed_at":"2017-10-13T03:00:43Z","author_association":"NONE","body":"Hi,\r\n\r\nI try to create a project with:\r\nlein new duct-alpha testduct +api +ataraxy +cljs +example +site +heroku +postgres\r\ncd testduct\r\nlein duct setup\r\n\r\nIn the  repl the (dev) call returns with the error:\r\n\r\nCompilerException clojure.lang.ExceptionInfo: Call to clojure.core/refer-clojure did not conform to spec:\r\nIn: [2 1] val: :as fails at: [:args :exclude :op :quoted-spec :spec] predicate: #{:exclude}\r\nIn: [2 1] val: :as fails at: [:args :only :op :quoted-spec :spec] predicate: #{:only}\r\nIn: [2 1] val: :as fails at: [:args :rename :op :quoted-spec :spec] predicate: #{:rename}\r\nIn: [2] val: (quote :as) fails at: [:args :exclude :op :spec] predicate: #{:exclude}\r\nIn: [2] val: (quote :as) fails at: [:args :only :op :spec] predicate: #{:only}\r\nIn: [2] val: (quote :as) fails at: [:args :rename :op :spec] predicate: #{:rename}\r\n:clojure.spec.alpha/spec  #object[clojure.spec.alpha$regex_spec_impl$reify__1200 0xf301248 \"clojure.spec.alpha$regex_spec_impl$reify__1200@f301248\"]\r\n:clojure.spec.alpha/value  ((quote :exclude) (quote [reduce into merge map take partition partition-by bounded-count]) (quote :as) (quote core))\r\n:clojure.spec.alpha/args  ((quote :exclude) (quote [reduce into merge map take partition partition-by bounded-count]) (quote :as) (quote core))\r\n #:clojure.spec.alpha{:problems ({:path [:args :exclude :op :spec], :pred #{:exclude}, :val (quote :as), :via [], :in [2]} {:path [:args :exclude :op :quoted-spec :spec], :pred #{:exclude}, :val :as, :via [], :in [2 1]} {:path [:args :only :op :spec], :pred #{:only}, :val (quote :as), :via [], :in [2]} {:path [:args :only :op :quoted-spec :spec], :pred #{:only}, :val :as, :via [], :in [2 1]} {:path [:args :rename :op :spec], :pred #{:rename}, :val (quote :as), :via [], :in [2]} {:path [:args :rename :op :quoted-spec :spec], :pred #{:rename}, :val :as, :via [], :in [2 1]}), :spec #object[clojure.spec.alpha$regex_spec_impl$reify__1200 0xf301248 \"clojure.spec.alpha$regex_spec_impl$reify__1200@f301248\"], :value ((quote :exclude) (quote [reduce into merge map take partition partition-by bounded-count]) (quote :as) (quote core)), :args ((quote :exclude) (quote [reduce into merge map take partition partition-by bounded-count]) (quote :as) (quote core))}, compiling:(clojure/core/async.clj:9:1) \r\nuser=> \r\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/62","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/62/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/62/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/62/events","html_url":"https://github.com/duct-framework/duct/issues/62","id":242565960,"number":62,"title":"The Duct Repl start up time","user":{"login":"zerg000000","id":910506,"avatar_url":"https://avatars1.githubusercontent.com/u/910506?v=4","gravatar_id":"","url":"https://api.github.com/users/zerg000000","html_url":"https://github.com/zerg000000","followers_url":"https://api.github.com/users/zerg000000/followers","following_url":"https://api.github.com/users/zerg000000/following{/other_user}","gists_url":"https://api.github.com/users/zerg000000/gists{/gist_id}","starred_url":"https://api.github.com/users/zerg000000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zerg000000/subscriptions","organizations_url":"https://api.github.com/users/zerg000000/orgs","repos_url":"https://api.github.com/users/zerg000000/repos","events_url":"https://api.github.com/users/zerg000000/events{/privacy}","received_events_url":"https://api.github.com/users/zerg000000/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2017-07-13T02:11:48Z","updated_at":"2017-07-20T08:45:59Z","closed_at":"2017-07-19T01:29:33Z","author_association":"NONE","body":"The following time is measured from my small project, it is quite painful when I need to restart my repl. I am wondering why the (require 'dev) would take over 13s to load and the initial `go` needs 10s to load.... \r\n\r\n```\r\nnREPL server started on port 56605 on host 127.0.0.1 - nrepl://127.0.0.1:56605\r\n(dev)\r\n\"Elapsed time: 13511.294624 msecs\"\r\n\"Elapsed time: 0.005117 msecs\"\r\n=> :loaded\r\n(time (go))\r\n:duct.server.http.jetty/starting-server {:port 3000}\r\n.....\r\n\"Elapsed time: 10055.75841 msecs\"\r\n(time (reset))\r\n:reloading ()\r\n\"Elapsed time: 115.735037 msecs\"\r\n```","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/58","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/58/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/58/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/58/events","html_url":"https://github.com/duct-framework/duct/issues/58","id":237783711,"number":58,"title":"REPL test command does not reload namespaces","user":{"login":"zerg000000","id":910506,"avatar_url":"https://avatars1.githubusercontent.com/u/910506?v=4","gravatar_id":"","url":"https://api.github.com/users/zerg000000","html_url":"https://github.com/zerg000000","followers_url":"https://api.github.com/users/zerg000000/followers","following_url":"https://api.github.com/users/zerg000000/following{/other_user}","gists_url":"https://api.github.com/users/zerg000000/gists{/gist_id}","starred_url":"https://api.github.com/users/zerg000000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zerg000000/subscriptions","organizations_url":"https://api.github.com/users/zerg000000/orgs","repos_url":"https://api.github.com/users/zerg000000/repos","events_url":"https://api.github.com/users/zerg000000/events{/privacy}","received_events_url":"https://api.github.com/users/zerg000000/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-06-22T09:25:07Z","updated_at":"2017-06-22T13:00:46Z","closed_at":"2017-06-22T13:00:46Z","author_association":"NONE","body":"The Duct repl provides `(test)` command for running tests. The source code under `src/`, `test/` does not reload, I need to manually reload them in repl. Is it the expected behaviour? What would be the idiom of reload source code?","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/56","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/56/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/56/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/56/events","html_url":"https://github.com/duct-framework/duct/issues/56","id":231797750,"number":56,"title":"How can I use the alpha release of the duct leiningen template?","user":{"login":"branch14","id":20964,"avatar_url":"https://avatars2.githubusercontent.com/u/20964?v=4","gravatar_id":"","url":"https://api.github.com/users/branch14","html_url":"https://github.com/branch14","followers_url":"https://api.github.com/users/branch14/followers","following_url":"https://api.github.com/users/branch14/following{/other_user}","gists_url":"https://api.github.com/users/branch14/gists{/gist_id}","starred_url":"https://api.github.com/users/branch14/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/branch14/subscriptions","organizations_url":"https://api.github.com/users/branch14/orgs","repos_url":"https://api.github.com/users/branch14/repos","events_url":"https://api.github.com/users/branch14/events{/privacy}","received_events_url":"https://api.github.com/users/branch14/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-27T12:16:31Z","updated_at":"2017-05-27T13:59:18Z","closed_at":"2017-05-27T13:59:18Z","author_association":"NONE","body":"This might very well not be an issue with duct, but an issue with me using leiningen incorrectly. That said...\r\n\r\n```\r\n% lein new duct test0 --snapshot\r\nGenerating a new Duct project named test0...\r\nRun 'lein setup' in the project directory to create local config files.\r\n% grep duct test0/project.clj   \r\n                 [duct \"0.8.2\"]\r\n  :aliases {\"setup\"  [\"run\" \"-m\" \"duct.util.repl/setup\"]}\r\n   :project/dev   {:dependencies [[duct/generate \"0.8.2\"]\r\n```\r\n\r\nNeither did I have any luck with `--template-version 0.9.0-alpha6`.\r\n\r\nWhat am I doing wrong?","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/54","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/54/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/54/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/54/events","html_url":"https://github.com/duct-framework/duct/issues/54","id":227871790,"number":54,"title":"Config is not included correctly in (dev) when project name contain '-'","user":{"login":"tentamen","id":58513,"avatar_url":"https://avatars2.githubusercontent.com/u/58513?v=4","gravatar_id":"","url":"https://api.github.com/users/tentamen","html_url":"https://github.com/tentamen","followers_url":"https://api.github.com/users/tentamen/followers","following_url":"https://api.github.com/users/tentamen/following{/other_user}","gists_url":"https://api.github.com/users/tentamen/gists{/gist_id}","starred_url":"https://api.github.com/users/tentamen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tentamen/subscriptions","organizations_url":"https://api.github.com/users/tentamen/orgs","repos_url":"https://api.github.com/users/tentamen/repos","events_url":"https://api.github.com/users/tentamen/events{/privacy}","received_events_url":"https://api.github.com/users/tentamen/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-11T03:54:18Z","updated_at":"2017-05-11T18:08:18Z","closed_at":"2017-05-11T18:08:18Z","author_association":"NONE","body":"I create new `hello-duct` project using lein command: `lein new duct-alpha hello-duct`, then `lein duct setup`.  It generate `dev.edn` file like this:\r\n\r\n```clj\r\n{:duct.core/environment :development\r\n :duct.core/include [\"hello-duct/config\"]}\r\n```\r\nI think config path should be `hello_duct/config`,  _ instead of -, so it could include config from resources.","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/50","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/50/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/50/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/50/events","html_url":"https://github.com/duct-framework/duct/issues/50","id":195984650,"number":50,"title":"How to rename the handler?","user":{"login":"johanhaleby","id":187029,"avatar_url":"https://avatars2.githubusercontent.com/u/187029?v=4","gravatar_id":"","url":"https://api.github.com/users/johanhaleby","html_url":"https://github.com/johanhaleby","followers_url":"https://api.github.com/users/johanhaleby/followers","following_url":"https://api.github.com/users/johanhaleby/following{/other_user}","gists_url":"https://api.github.com/users/johanhaleby/gists{/gist_id}","starred_url":"https://api.github.com/users/johanhaleby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johanhaleby/subscriptions","organizations_url":"https://api.github.com/users/johanhaleby/orgs","repos_url":"https://api.github.com/users/johanhaleby/repos","events_url":"https://api.github.com/users/johanhaleby/events{/privacy}","received_events_url":"https://api.github.com/users/johanhaleby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-12-16T05:37:03Z","updated_at":"2016-12-18T06:20:26Z","closed_at":"2016-12-18T06:20:26Z","author_association":"NONE","body":"In previous versions of Duct you could rename the handler key from `:app` to something else when starting the jetty-server by doing:\r\n\r\n```clojure\r\n(jetty-server config {:app :handler-name})\r\n```\r\n\r\nWhat's the equivalent of doing this in `system.edn`?","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/48","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/48/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/48/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/48/events","html_url":"https://github.com/duct-framework/duct/issues/48","id":185001210,"number":48,"title":"ring middleware cannot access components","user":{"login":"zerg000000","id":910506,"avatar_url":"https://avatars1.githubusercontent.com/u/910506?v=4","gravatar_id":"","url":"https://api.github.com/users/zerg000000","html_url":"https://github.com/zerg000000","followers_url":"https://api.github.com/users/zerg000000/followers","following_url":"https://api.github.com/users/zerg000000/following{/other_user}","gists_url":"https://api.github.com/users/zerg000000/gists{/gist_id}","starred_url":"https://api.github.com/users/zerg000000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zerg000000/subscriptions","organizations_url":"https://api.github.com/users/zerg000000/orgs","repos_url":"https://api.github.com/users/zerg000000/repos","events_url":"https://api.github.com/users/zerg000000/events{/privacy}","received_events_url":"https://api.github.com/users/zerg000000/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-10-25T02:12:17Z","updated_at":"2017-06-15T15:12:45Z","closed_at":"2017-06-15T15:12:45Z","author_association":"NONE","body":"authentication/authorization are common use case of `middleware`, which always involve datastore (`component`). However, under current implementation, `middleware` must be a function called by `system`, and have no chance to declare the dependencies of components and inject the component required by the middleware. \n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/47","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/47/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/47/events","html_url":"https://github.com/duct-framework/duct/issues/47","id":184005688,"number":47,"title":"The generated boundary protocol cannot be compiled if component's symbol contain '-'","user":{"login":"zerg000000","id":910506,"avatar_url":"https://avatars1.githubusercontent.com/u/910506?v=4","gravatar_id":"","url":"https://api.github.com/users/zerg000000","html_url":"https://github.com/zerg000000","followers_url":"https://api.github.com/users/zerg000000/followers","following_url":"https://api.github.com/users/zerg000000/following{/other_user}","gists_url":"https://api.github.com/users/zerg000000/gists{/gist_id}","starred_url":"https://api.github.com/users/zerg000000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zerg000000/subscriptions","organizations_url":"https://api.github.com/users/zerg000000/orgs","repos_url":"https://api.github.com/users/zerg000000/repos","events_url":"https://api.github.com/users/zerg000000/events{/privacy}","received_events_url":"https://api.github.com/users/zerg000000/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-10-19T16:05:13Z","updated_at":"2017-06-15T15:13:08Z","closed_at":"2017-06-15T15:13:08Z","author_association":"NONE","body":"Using `gen/boundary`\n\n```\n (gen/boundary \"ha\" 'duct-framework.component.wow.Wow)\n```\n\nwill generate code below\n\n``` clojure\n(ns duct-framework.boundary.ha\n  (:require\n    [duct-framework.component.wow])) ; this is correct\n\n(defprotocol Ha)\n\n(extend-protocol Ha\n  duct-framework.component.wow.Wow) ; should be _ instead of -\n```\n\nThe correct one should be\n\n``` clojure\n(ns duct-framework.boundary.ha\n  (:require\n    [duct-framework.component.wow])) \n\n(defprotocol Ha)\n\n(extend-protocol Ha\n  duct_framework.component.wow.Wow)\n```\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/46","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/46/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/46/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/46/events","html_url":"https://github.com/duct-framework/duct/issues/46","id":183589010,"number":46,"title":"Any Documentation about the usage of Boundary/Component/Endpoint?","user":{"login":"zerg000000","id":910506,"avatar_url":"https://avatars1.githubusercontent.com/u/910506?v=4","gravatar_id":"","url":"https://api.github.com/users/zerg000000","html_url":"https://github.com/zerg000000","followers_url":"https://api.github.com/users/zerg000000/followers","following_url":"https://api.github.com/users/zerg000000/following{/other_user}","gists_url":"https://api.github.com/users/zerg000000/gists{/gist_id}","starred_url":"https://api.github.com/users/zerg000000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zerg000000/subscriptions","organizations_url":"https://api.github.com/users/zerg000000/orgs","repos_url":"https://api.github.com/users/zerg000000/repos","events_url":"https://api.github.com/users/zerg000000/events{/privacy}","received_events_url":"https://api.github.com/users/zerg000000/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2016-10-18T04:40:50Z","updated_at":"2016-10-20T04:05:22Z","closed_at":"2016-10-20T04:05:22Z","author_association":"NONE","body":"Although the code of this project is quite clean and easy-to-read, I think documentation of this project is quite minimum. I have a bit confuse of the Concept of the Boundary/Component/Endpoint in duct context and cannot find any example/documentation to get it clear. It would be nice to have some example/doc like http://www.luminusweb.net/docs does.\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/45","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/45/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/45/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/45/events","html_url":"https://github.com/duct-framework/duct/issues/45","id":179517412,"number":45,"title":"Shutdown hook should run component/stop on a running system","user":{"login":"kajism","id":11755900,"avatar_url":"https://avatars2.githubusercontent.com/u/11755900?v=4","gravatar_id":"","url":"https://api.github.com/users/kajism","html_url":"https://github.com/kajism","followers_url":"https://api.github.com/users/kajism/followers","following_url":"https://api.github.com/users/kajism/following{/other_user}","gists_url":"https://api.github.com/users/kajism/gists{/gist_id}","starred_url":"https://api.github.com/users/kajism/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kajism/subscriptions","organizations_url":"https://api.github.com/users/kajism/orgs","repos_url":"https://api.github.com/users/kajism/repos","events_url":"https://api.github.com/users/kajism/events{/privacy}","received_events_url":"https://api.github.com/users/kajism/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-27T14:56:06Z","updated_at":"2016-09-28T13:21:01Z","closed_at":"2016-09-28T13:21:01Z","author_association":"NONE","body":"I missed some shutdown log messages in production log and it seems we should call (component/stop system) on a system returned by (component/start system) not the loaded system.\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/43","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/43/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/43/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/43/events","html_url":"https://github.com/duct-framework/duct/issues/43","id":176832012,"number":43,"title":"Replacing applied middleware in dev.edn causes confusion and duplication","user":{"login":"adairdavid","id":594099,"avatar_url":"https://avatars3.githubusercontent.com/u/594099?v=4","gravatar_id":"","url":"https://api.github.com/users/adairdavid","html_url":"https://github.com/adairdavid","followers_url":"https://api.github.com/users/adairdavid/followers","following_url":"https://api.github.com/users/adairdavid/following{/other_user}","gists_url":"https://api.github.com/users/adairdavid/gists{/gist_id}","starred_url":"https://api.github.com/users/adairdavid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adairdavid/subscriptions","organizations_url":"https://api.github.com/users/adairdavid/orgs","repos_url":"https://api.github.com/users/adairdavid/repos","events_url":"https://api.github.com/users/adairdavid/events{/privacy}","received_events_url":"https://api.github.com/users/adairdavid/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-09-14T07:11:55Z","updated_at":"2017-06-15T15:13:41Z","closed_at":"2017-06-15T15:13:41Z","author_association":"CONTRIBUTOR","body":"Because `dev.edn` uses `^:replace` for applied middleware, there is a duplication of keys for middleware you want active in both production and development, as `^:replace` replaces the entire `:applied` vector.\n## Issues\n1. Developers may be confused as to why adding new middleware in `system.edn` does not have an effect when developing from the repl using `(reset)/etc`.\n2. Full-replace requires duplicating keys in both `dev.edn` and `system.edn`, which can lead to synchronization bugs/annoyances.\n## Solutions\n1. I attempted to alleviate this issue by contributing a note to the [configuration wiki](https://github.com/duct-framework/duct/wiki/Configuration)\n2. Perhaps `dev.edn` should black-list, rather than replace. Maybe `^:except`? Example:\n\n`system.edn`:\n\n``` clojure\n{:components\n {:app  duct.component.handler/handler-component\n  :http ring.component.jetty/jetty-server}\n :endpoints\n {:example foo.endpoint.example/example-endpoint}\n :dependencies\n {:http [:app]\n  :app  [:example]}\n :config\n {:http {:port http-port}}\n  :app  {:middleware\n         {:functions {:not-found   duct.middleware.not-found/wrap-not-found\n                      :hide-errors duct.middleware.errors/wrap-hide-errors}\n          :arguments {:not-found   \"Resource Not Found\"\n                      :hide-errors \"Internal Error\"}\n          :applied   [:not-found :hide-errors]}}}\n```\n\n`dev.edn:`\n\n``` clojure\n{:config {:http {:port 3000}\n          :app  {:applied ^:except [:hide-errors]}}}\n```\n\nHowever, this would not allow `dev.edn` to add development-only middleware, so maybe there should be both `^:except` and perhaps `^:concat` or `^:append`?\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/42","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/42/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/42/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/42/events","html_url":"https://github.com/duct-framework/duct/issues/42","id":158524199,"number":42,"title":"Data-driven configuration","user":{"login":"weavejester","id":8780,"a
8000
vatar_url":"https://avatars3.githubusercontent.com/u/8780?v=4","gravatar_id":"","url":"https://api.github.com/users/weavejester","html_url":"https://github.com/weavejester","followers_url":"https://api.github.com/users/weavejester/followers","following_url":"https://api.github.com/users/weavejester/following{/other_user}","gists_url":"https://api.github.com/users/weavejester/gists{/gist_id}","starred_url":"https://api.github.com/users/weavejester/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weavejester/subscriptions","organizations_url":"https://api.github.com/users/weavejester/orgs","repos_url":"https://api.github.com/users/weavejester/repos","events_url":"https://api.github.com/users/weavejester/events{/privacy}","received_events_url":"https://api.github.com/users/weavejester/received_events","type":"User","site_admin":false},"labels":[{"id":128085006,"url":"https://api.github.com/repos/duct-framework/duct/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-06-04T21:09:19Z","updated_at":"2016-10-01T16:10:28Z","closed_at":"2016-10-01T16:10:28Z","author_association":"COLLABORATOR","body":"The default way of building configurations is by assembling them in the `config.clj` namespace, but libraries like [Aero](https://github.com/juxt/aero) provide a way of declaratively defining configurations.\n\nCombined with #41, we might expect the system to be created something like:\n\n``` clojure\n(let [new-system (system-factory (read-edn \"foo/system.edn\"))\n  (new-system (read-config \"foo/config.edn\")))\n```\n\nAside from being more declarative, this also has the advantage of allowing the application to be customized more easily. For instance, we could change the thread count on the HTTP server without needing to change anything in the code.\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/41","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/41/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/41/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/41/events","html_url":"https://github.com/duct-framework/duct/issues/41","id":158487225,"number":41,"title":"Data-driven system definition","user":{"login":"weavejester","id":8780,"avatar_url":"https://avatars3.githubusercontent.com/u/8780?v=4","gravatar_id":"","url":"https://api.github.com/users/weavejester","html_url":"https://github.com/weavejester","followers_url":"https://api.github.com/users/weavejester/followers","following_url":"https://api.github.com/users/weavejester/following{/other_user}","gists_url":"https://api.github.com/users/weavejester/gists{/gist_id}","starred_url":"https://api.github.com/users/weavejester/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weavejester/subscriptions","organizations_url":"https://api.github.com/users/weavejester/orgs","repos_url":"https://api.github.com/users/weavejester/repos","events_url":"https://api.github.com/users/weavejester/events{/privacy}","received_events_url":"https://api.github.com/users/weavejester/received_events","type":"User","site_admin":false},"labels":[{"id":128085006,"url":"https://api.github.com/repos/duct-framework/duct/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-06-04T04:44:45Z","updated_at":"2016-10-01T16:10:49Z","closed_at":"2016-10-01T16:10:49Z","author_association":"COLLABORATOR","body":"Currently the system is created through the `component/system-map` function:\n\n``` clojure\n(defn new-system [config]\n  (let [config (meta-merge base-config config)]\n    (-> (component/system-map\n         :app     (handler-component (:app config))\n         :http    (jetty-server (:http config))\n         :example (endpoint-component example-endpoint))\n        (component/system-using\n         {:http [:app]\n          :app  [:example]}))))\n```\n\nBut instead we could define the system via a data structure:\n\n``` edn\n{:components\n {:app  duct.component.handler/handler-component\n  :http ring.component.jetty/jetty-server}\n :endpoints\n {:example bar.endpoint.example/example-endpoint}\n :dependencies\n {:http [:app]\n  :app  [:example]}}\n```\n\nAnd then have a `system-factory` function to construct the `new-system` function from the data structure.\n\n``` clojure\n(def new-system\n  (system-factory (read-edn \"foo/system.edn\")))\n```\n\nAs well as reducing the amount of code, it would also allow generators to more easily add components and endpoints to the system.\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/40","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/40/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/40/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/40/events","html_url":"https://github.com/duct-framework/duct/issues/40","id":144985725,"number":40,"title":"Allow configuration from a specific file?","user":{"login":"johanhaleby","id":187029,"avatar_url":"https://avatars2.githubusercontent.com/u/187029?v=4","gravatar_id":"","url":"https://api.github.com/users/johanhaleby","html_url":"https://github.com/johanhaleby","followers_url":"https://api.github.com/users/johanhaleby/followers","following_url":"https://api.github.com/users/johanhaleby/following{/other_user}","gists_url":"https://api.github.com/users/johanhaleby/gists{/gist_id}","starred_url":"https://api.github.com/users/johanhaleby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johanhaleby/subscriptions","organizations_url":"https://api.github.com/users/johanhaleby/orgs","repos_url":"https://api.github.com/users/johanhaleby/repos","events_url":"https://api.github.com/users/johanhaleby/events{/privacy}","received_events_url":"https://api.github.com/users/johanhaleby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-03-31T18:48:52Z","updated_at":"2016-04-01T03:37:39Z","closed_at":"2016-04-01T02:00:59Z","author_association":"NONE","body":"Would it make sense to be able to load configuration not only from the environment but also from a file in Duct? I.e. when my uberjar is created I'm looking for something like this:\n\n``` bash\n$ java -jar uberjar.jar --config ~/my-config\n```\n\nBackground:\n\nI'm trying to use [ConfigMaps](http://kubernetes.io/docs/user-guide/configmap/) in Kubernetes with an application developed in Clojure using Duct. Kubernetes doesn't support specifying environment variables from a config map that doesn't match regex `\\.?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*`, which means that you cannot expose environment variables containing \"special characters\" this way (for example a `\\`). Another way that is supported by Kubernetes is expose a config map as a file. Which means that if I somehow could instruct my uberjar to load properties from a file of my choice I would be able to get things to work without having to hack things.\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/38","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/38/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/38/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/38/events","html_url":"https://github.com/duct-framework/duct/issues/38","id":142432814,"number":38,"title":"Handler component for compojure-api","user":{"login":"j0ni","id":50635,"avatar_url":"https://avatars1.githubusercontent.com/u/50635?v=4","gravatar_id":"","url":"https://api.github.com/users/j0ni","html_url":"https://github.com/j0ni","followers_url":"https://api.github.com/users/j0ni/followers","following_url":"https://api.github.com/users/j0ni/following{/other_user}","gists_url":"https://api.github.com/users/j0ni/gists{/gist_id}","starred_url":"https://api.github.com/users/j0ni/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/j0ni/subscriptions","organizations_url":"https://api.github.com/users/j0ni/orgs","repos_url":"https://api.github.com/users/j0ni/repos","events_url":"https://api.github.com/users/j0ni/events{/privacy}","received_events_url":"https://api.github.com/users/j0ni/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-03-21T18:30:33Z","updated_at":"2017-01-18T16:45:01Z","closed_at":"2016-06-04T00:36:47Z","author_association":"NONE","body":"Thank you for duct.\n\nI'm playing with compojure-api, and it looks like I need to apply the `compojure.api.api/api` fn [here](https://github.com/weavejester/duct/blob/master/duct/src/duct/component/handler.clj#L30). Do you agree, or am I misunderstanding?\n\nWould you accept a PR to modify the `Handler` component to accept a handler creation fn at runtime via a component config key?\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/37","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/37/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/37/events","html_url":"https://github.com/duct-framework/duct/issues/37","id":140916315,"number":37,"title":"Duct doesn't work with ultra","user":{"login":"johanhaleby","id":187029,"avatar_url":"https://avatars2.githubusercontent.com/u/187029?v=4","gravatar_id":"","url":"https://api.github.com/users/johanhaleby","html_url":"https://github.com/johanhaleby","followers_url":"https://api.github.com/users/johanhaleby/followers","following_url":"https://api.github.com/users/johanhaleby/following{/other_user}","gists_url":"https://api.github.com/users/johanhaleby/gists{/gist_id}","starred_url":"https://api.github.com/users/johanhaleby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johanhaleby/subscriptions","organizations_url":"https://api.github.com/users/johanhaleby/orgs","repos_url":"https://api.github.com/users/johanhaleby/repos","events_url":"https://api.github.com/users/johanhaleby/events{/privacy}","received_events_url":"https://api.github.com/users/johanhaleby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-03-15T09:16:15Z","updated_at":"2016-03-17T18:00:27Z","closed_at":"2016-03-17T18:00:27Z","author_association":"NONE","body":"When I have [ultra](https://github.com/venantius/ultra) (version 0.4.1) in my `profiles.clj` I cannot start a repl with duct because of:\n\n``` java\nException in thread \"main\" java.io.FileNotFoundException: Could not locate puget/dispatch__init.class or puget/dispatch.clj on classpath., compiling:(whidbey/repl.clj:1:1)\n    at clojure.lang.Compiler.load(Compiler.java:7391)\n    at clojure.lang.RT.loadResourceScript(RT.java:372)\n    at clojure.lang.RT.loadResourceScript(RT.java:363)\n    at clojure.lang.RT.load(RT.java:453)\n    at clojure.lang.RT.load(RT.java:419)\n    at clojure.core$load$fn__5677.invoke(core.clj:5893)\n    at clojure.core$load.invokeStatic(core.clj:5892)\n    at clojure.core$load.doInvoke(core.clj:5876)\n    at clojure.lang.RestFn.invoke(RestFn.java:408)\n    at clojure.core$load_one.invokeStatic(core.clj:5697)\n    at clojure.core$load_one.invoke(core.clj:5692)\n    at clojure.core$load_lib$fn__5626.invoke(core.clj:5737)\n    at clojure.core$load_lib.invokeStatic(core.clj:5736)\n    at clojure.core$load_lib.doInvoke(core.clj:5717)\n    at clojure.lang.RestFn.applyTo(RestFn.java:142)\n    at clojure.core$apply.invokeStatic(core.clj:648)\n    at clojure.core$load_libs.invokeStatic(core.clj:5774)\n    at clojure.core$load_libs.doInvoke(core.clj:5758)\n    at clojure.lang.RestFn.applyTo(RestFn.java:137)\n    at clojure.core$apply.invokeStatic(core.clj:648)\n    at clojure.core$require.invokeStatic(core.clj:5796)\n    at clojure.core$require.doInvoke(core.clj:5796)\n    at clojure.lang.RestFn.invoke(RestFn.java:482)\n    at ultra.colorscheme$eval8925$loading__5569__auto____8926.invoke(colorscheme.clj:1)\n    at ultra.colorscheme$eval8925.invokeStatic(colorscheme.clj:1)\n    at ultra.colorscheme$eval8925.invoke(colorscheme.clj:1)\n    at clojure.lang.Compiler.eval(Compiler.java:6927)\n    at clojure.lang.Compiler.eval(Compiler.java:6916)\n    at clojure.lang.Compiler.load(Compiler.java:7379)\n    at clojure.lang.RT.loadResourceScript(RT.java:372)\n    at clojure.lang.RT.loadResourceScript(RT.java:363)\n    at clojure.lang.RT.load(RT.java:453)\n    at clojure.lang.RT.load(RT.java:419)\n    at clojure.core$load$fn__5677.invoke(core.clj:5893)\n    at clojure.core$load.invokeStatic(core.clj:5892)\n    at clojure.core$load.doInvoke(core.clj:5876)\n    at clojure.lang.RestFn.invoke(RestFn.java:408)\n    at clojure.core$load_one.invokeStatic(core.clj:5697)\n    at clojure.core$load_one.invoke(core.clj:5692)\n    at clojure.core$load_lib$fn__5626.invoke(core.clj:5737)\n    at clojure.core$load_lib.invokeStatic(core.clj:5736)\n    at clojure.core$load_lib.doInvoke(core.clj:5717)\n    at clojure.lang.RestFn.applyTo(RestFn.java:142)\n    at clojure.core$apply.invokeStatic(core.clj:648)\n    at clojure.core$load_libs.invokeStatic(core.clj:5774)\n    at clojure.core$load_libs.doInvoke(core.clj:5758)\n    at clojure.lang.RestFn.applyTo(RestFn.java:137)\n    at clojure.core$apply.invokeStatic(core.clj:648)\n    at clojure.core$require.invokeStatic(core.clj:5796)\n    at clojure.core$require.doInvoke(core.clj:5796)\n    at clojure.lang.RestFn.invoke(RestFn.java:436)\n    at ultra.hardcore$eval8919$loading__5569__auto____8920.invoke(hardcore.clj:1)\n    at ultra.hardcore$eval8919.invokeStatic(hardcore.clj:1)\n    at ultra.hardcore$eval8919.invoke(hardcore.clj:1)\n    at clojure.lang.Compiler.eval(Compiler.java:6927)\n    at clojure.lang.Compiler.eval(Compiler.java:6916)\n    at clojure.lang.Compiler.load(Compiler.java:7379)\n    at clojure.lang.RT.loadResourceScript(RT.java:372)\n    at clojure.lang.RT.loadResourceScript(RT.java:363)\n    at clojure.lang.RT.load(RT.java:453)\n    at clojure.lang.RT.load(RT.java:419)\n    at clojure.core$load$fn__5677.invoke(core.clj:5893)\n    at clojure.core$load.invokeStatic(core.clj:5892)\n    at clojure.core$load.doInvoke(core.clj:5876)\n    at clojure.lang.RestFn.invoke(RestFn.java:408)\n    at clojure.core$load_one.invokeStatic(core.clj:5697)\n    at clojure.core$load_one.invoke(core.clj:5692)\n    at clojure.core$load_lib$fn__5626.invoke(core.clj:5737)\n    at clojure.core$load_lib.invokeStatic(core.clj:5736)\n    at clojure.core$load_lib.doInvoke(core.clj:5717)\n    at clojure.lang.RestFn.applyTo(RestFn.java:142)\n    at clojure.core$apply.invokeStatic(core.clj:648)\n    at clojure.core$load_libs.invokeStatic(core.clj:5774)\n    at clojure.core$load_libs.doInvoke(core.clj:5758)\n    at clojure.lang.RestFn.applyTo(RestFn.java:137)\n    at clojure.core$apply.invokeStatic(core.clj:648)\n    at clojure.core$require.invokeStatic(core.clj:5796)\n    at clojure.core$require.doInvoke(core.clj:5796)\n    at clojure.lang.RestFn.invoke(RestFn.java:408)\n    at user$eval8913.invokeStatic(form-init8606924436313000018.clj:1)\n    at user$eval8913.invoke(form-init8606924436313000018.clj:1)\n    at clojure.lang.Compiler.eval(Compiler.java:6927)\n    at clojure.lang.Compiler.eval(Compiler.java:6916)\n    at clojure.lang.Compiler.eval(Compiler.java:6917)\n    at clojure.lang.Compiler.eval(Compiler.java:6917)\n    at clojure.lang.Compiler.eval(Compiler.java:6916)\n    at clojure.lang.Compiler.load(Compiler.java:7379)\n    at clojure.lang.Compiler.loadFile(Compiler.java:7317)\n    at clojure.main$load_script.invokeStatic(main.clj:275)\n    at clojure.main$init_opt.invokeStatic(main.clj:277)\n    at clojure.main$init_opt.invoke(main.clj:277)\n    at clojure.main$initialize.invokeStatic(main.clj:308)\n    at clojure.main$null_opt.invokeStatic(main.clj:342)\n    at clojure.main$null_opt.invoke(main.clj:339)\n    at clojure.main$main.invokeStatic(main.clj:421)\n    at clojure.main$main.doInvoke(main.clj:384)\n    at clojure.lang.RestFn.invoke(RestFn.java:421)\n    at clojure.lang.Var.invoke(Var.java:383)\n    at clojure.lang.AFn.applyToHelper(AFn.java:156)\n    at clojure.lang.Var.applyTo(Var.java:700)\n    at clojure.main.main(main.java:37)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)\nCaused by: java.io.FileNotFoundException: Could not locate puget/dispatch__init.class or puget/dispatch.clj on classpath.\n    at clojure.lang.RT.load(RT.java:456)\n    at clojure.lang.RT.load(RT.java:419)\n    at clojure.core$load$fn__5677.invoke(core.clj:5893)\n    at clojure.core$load.invokeStatic(core.clj:5892)\n    at clojure.core$load.doInvoke(core.clj:5876)\n    at clojure.lang.RestFn.invoke(RestFn.java:408)\n    at clojure.core$load_one.invokeStatic(core.clj:5697)\n    at clojure.core$load_one.invoke(core.clj:5692)\n    at clojure.core$load_lib$fn__5626.invoke(core.clj:5737)\n    at clojure.core$load_lib.invokeStatic(core.clj:5736)\n    at clojure.core$load_lib.doInvoke(core.clj:5717)\n    at clojure.lang.RestFn.applyTo(RestFn.java:142)\n    at clojure.core$apply.invokeStatic(core.clj:648)\n    at clojure.core$load_libs.invokeStatic(core.clj:5774)\n    at clojure.core$load_libs.doInvoke(core.clj:5758)\n    at clojure.lang.RestFn.applyTo(RestFn.java:137)\n    at clojure.core$apply.invokeStatic(core.clj:648)\n    at clojure.core$require.invokeStatic(core.clj:5796)\n    at clojure.core$require.doInvoke(core.clj:5796)\n    at clojure.lang.RestFn.invoke(RestFn.java:457)\n    at whidbey.repl$eval8931$loading__5569__auto____8932.invoke(repl.clj:1)\n    at whidbey.repl$eval8931.invokeStatic(repl.clj:1)\n    at whidbey.repl$eval8931.invoke(repl.clj:1)\n    at clojure.lang.Compiler.eval(Compiler.java:6927)\n    at clojure.lang.Compiler.eval(Compiler.java:6916)\n    at clojure.lang.Compiler.load(Compiler.java:7379)\n    ... 105 more\nNo nREPL ack received\n```\n\nThere seem to be some sort of version incompatibilities.\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/35","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/35/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/35/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/35/events","html_url":"https://github.com/duct-framework/duct/issues/35","id":134536927,"number":35,"title":"#windows (cljs-repl) in nRepl, throws java.net.UnknownHostException: E","user":{"login":"templateK","id":3207776,"avatar_url":"https://avatars0.githubusercontent.com/u/3207776?v=4","gravatar_id":"","url":"https://api.github.com/users/templateK","html_url":"https://github.com/templateK","followers_url":"https://api.github.com/users/templateK/followers","following_url":"https://api.github.com/users/templateK/following{/other_user}","gists_url":"https://api.github.com/users/templateK/gists{/gist_id}","starred_url":"https://api.github.com/users/templateK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/templateK/subscriptions","organizations_url":"https://api.github.com/users/templateK/orgs","repos_url":"https://api.github.com/users/templateK/repos","events_url":"https://api.github.com/users/templateK/events{/privacy}","received_events_url":"https://api.github.com/users/templateK/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-02-18T10:18:37Z","updated_at":"2017-07-03T06:51:31Z","closed_at":"2016-02-19T15:06:06Z","author_association":"NONE","body":"On windows, when lein repl on project created with command `lein new duct +example +cljs`\n\n```\nlein repl \n(go)\n(cljs-repl)\n```\n\nthrows `java.net.UnknownHostException: E`\n\nthe 'E' is drive letter of project path\n\nOn linux this project  works just fine.\n\nstack trace\n\n```\nuser=> (go)\nCompiling \"target/figwheel/myduct/public/js/main.js\" from [\"src\" \"dev\"]...\nnotifying browser that file changed:  target/figwheel/myduct/public/js/goog/deps.js\nnotifying browser that file changed:  target/figwheel/myduct/public/js/cljs_deps.js\nnotifying browser that file changed:  out\\cljs\\user.js\nSuccessfully compiled \"target/figwheel/myduct/public/js/main.js\" in 1.81 seconds.\n:started\nuser=> (cljs-repl)\n\njava.net.UnknownHostException: E\n        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)\n        at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\n        at java.net.Socket.connect(Socket.java:589)\n        at java.net.Socket.connect(Socket.java:538)\n        at sun.net.ftp.impl.FtpClient.doConnect(FtpClient.java:957)\n        at sun.net.ftp.impl.FtpClient.tryConnect(FtpClient.java:917)\n        at sun.net.ftp.impl.FtpClient.connect(FtpClient.java:1012)\n        at sun.net.ftp.impl.FtpClient.connect(FtpClient.java:998)\nuser=>  at sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:294)\n        at sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:393)\n        at cljs.util$last_modified.invokeStatic(util.cljc:150)\n        at cljs.util$last_modified.invoke(util.cljc:142)\n        at cljs.util$changed_QMARK_.invokeStatic(util.cljc:158)\n        at cljs.util$changed_QMARK_.invoke(util.cljc:157)\n        at cljs.analyzer$requires_analysis_QMARK_.invokeStatic(analyzer.cljc:2808)\n        at cljs.analyzer$requires_analysis_QMARK_.invoke(analyzer.cljc:2786)\n        at cljs.analyzer$requires_analysis_QMARK_.invokeStatic(analyzer.cljc:2793)\n        at cljs.analyzer$requires_analysis_QMARK_.invoke(analyzer.cljc:2786)\n        at cljs.analyzer$analyze_file.invokeStatic(analyzer.cljc:2855)\n        at cljs.analyzer$analyze_file.invoke(analyzer.cljc:2828)\n        at cljs.repl$analyze_source.invokeStatic(repl.cljc:728)\n        at cljs.repl$analyze_source.invoke(repl.cljc:720)\n        at cljs.repl$repl_STAR_$fn__10512$fn__10513$fn__10514.invoke(repl.cljc:871)\n        at clojure.core$run_BANG_$fn__7276.invoke(core.clj:7393)\n        at clojure.lang.PersistentVector.reduce(PersistentVector.java:341)\n        at clojure.core$reduce.invokeStatic(core.clj:6544)\n        at clojure.core$run_BANG_.invokeStatic(core.clj:7388)\n        at clojure.core$run_BANG_.invoke(core.clj:7388)\n        at cljs.repl$repl_STAR_$fn__10512$fn__10513.invoke(repl.cljc:871)\n        at cljs.repl$repl_STAR_$fn__10512.invoke(repl.cljc:868)\n        at cljs.compiler$with_core_cljs.invokeStatic(compiler.cljc:1152)\n        at cljs.compiler$with_core_cljs.invoke(compiler.cljc:1143)\n        at cljs.repl$repl_STAR_.invokeStatic(repl.cljc:865)\n        at cljs.repl$repl_STAR_.invoke(repl.cljc:752)\n        at cemerick.piggieback$run_cljs_repl.invokeStatic(piggieback.clj:169)\n        at cemerick.piggieback$run_cljs_repl.invoke(piggieback.clj:155)\n        at cemerick.piggieback$cljs_repl.invokeStatic(piggieback.clj:222)\n        at cemerick.piggieback$cljs_repl.doInvoke(piggieback.clj:212)\n        at clojure.lang.RestFn.invoke(RestFn.java:713)\n        at duct.component.figwheel$start_piggieback_repl.invokeStatic(figwheel.clj:141)\n        at duct.component.figwheel$start_piggieback_repl.invoke(figwheel.clj:138)\n        at duct.component.figwheel$cljs_repl.invokeStatic(figwheel.clj:151)\n        at duct.component.figwheel$cljs_repl.invoke(figwheel.clj:148)\n        at user$cljs_repl.invokeStatic(user.clj:44)\n        at user$cljs_repl.invoke(user.clj:43)\n        at user$eval25223.invokeStatic(form-init982232343948307507.clj:1)\n        at user$eval25223.invoke(form-init982232343948307507.clj:1)\n        at clojure.lang.Compiler.eval(Compiler.java:6927)\n        at clojure.lang.Compiler.eval(Compiler.java:6890)\n        at clojure.core$eval.invokeStatic(core.clj:3105)\n        at clojure.core$eval.invoke(core.clj:3101)\n        at clojure.main$repl$read_eval_print__7408$fn__7411.invoke(main.clj:240)\n        at clojure.main$repl$read_eval_print__7408.invoke(main.clj:240)\n        at clojure.main$repl$fn__7417.invoke(main.clj:258)\n        at clojure.main$repl.invokeStatic(main.clj:258)\n        at clojure.main$repl.doInvoke(main.clj:174)\n        at clojure.lang.RestFn.invoke(RestFn.java:1523)\n        at clojure.tools.nrepl.middleware.interruptible_eval$evaluate$fn__4367.invoke(interruptible_eval.clj:87)\n        at clojure.lang.AFn.applyToHelper(AFn.java:152)\n        at clojure.lang.AFn.applyTo(AFn.java:144)\n        at clojure.core$apply.invokeStatic(core.clj:646)\n        at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1881)\n        at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1881)\n        at clojure.lang.RestFn.invoke(RestFn.java:425)\n        at clojure.tools.nrepl.middleware.interruptible_eval$evaluate.invokeStatic(interruptible_eval.clj:85)\n        at clojure.tools.nrepl.middleware.interruptible_eval$evaluate.invoke(interruptible_eval.clj:55)\n        at clojure.tools.nrepl.middleware.interruptible_eval$interruptible_eval$fn__4412$fn__4415.invoke(interruptible_eval.clj:222)\n        at clojure.tools.nrepl.middleware.interruptible_eval$run_next$fn__4407.invoke(interruptible_eval.clj:190)\n        at clojure.lang.AFn.run(AFn.java:22)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\nTo quit, type: :cljs/quit\n```\n\nos: Windows10,\nruntime: JDK 8, clojure 1.8\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/34","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/34/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/34/events","html_url":"https://github.com/duct-framework/duct/issues/34","id":126323069,"number":34,"title":"Multiple POST endpoints bug","user":{"login":"lerouxrgd","id":6103291,"avatar_url":"https://avatars0.githubusercontent.com/u/6103291?v=4","gravatar_id":"","url":"https://api.github.com/users/lerouxrgd","html_url":"https://github.com/lerouxrgd","followers_url":"https://api.github.com/users/lerouxrgd/followers","following_url":"https://api.github.com/users/lerouxrgd/following{/other_user}","gists_url":"https://api.github.com/users/lerouxrgd/gists{/gist_id}","starred_url":"https://api.github.com/users/lerouxrgd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lerouxrgd/subscriptions","organizations_url":"https://api.github.com/users/lerouxrgd/orgs","repos_url":"https://api.github.com/users/lerouxrgd/repos","events_url":"https://api.github.com/users/lerouxrgd/events{/privacy}","received_events_url":"https://api.github.com/users/lerouxrgd/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-01-13T02:08:31Z","updated_at":"2016-01-25T07:22:06Z","closed_at":"2016-01-20T04:34:00Z","author_association":"NONE","body":"Hi,\n\nFirst of all thank you for `duct` it's a very simple and useful framework for structuring Clojure webapps !\nHowever I run into an issue when trying to assemble multiple endpoints containing at least one POST handler.\nI am also using `compojure-api` for defining handlers and I hope I am using it and `duct` correctly.\n\nI re-created my issue with a minimal repo:\nhttps://github.com/lerouxrgd/debug-duct\nBasically I created it like this:\n\n```\nlein new duct debug-duct\n```\n\nAdding compojure-api dependency to `project.clj`\n\n``` clj\n[metosin/compojure-api \"0.23.1\"]\n```\n\nFirst endpoint `plus.clj`\n\n``` clj\n(defn plus-endpoint [sys]\n  (api   \n   (context* \"\" []\n             (POST* \"/plus\" []\n                    :return {:total Long}\n                    :body-params [x :- Long, y :- Long]\n                    :summary \"x+y with body-parameters\"\n                    (ok {:total (+ x y)})))))\n```\n\nSecond endpoint `minus.clj`\n\n``` clj\n(defn minus-endpoint [sys]\n  (api\n   (context* \"\" []\n             (POST* \"/minus\" []\n                    :return {:total Long}\n                    :body-params [x :- Long, y :- Long]\n                    :summary \"x-y with body-parameters\"\n                    (ok {:total (- x y)})))))\n```\n\nCombining them in `system.clj`\n\n``` clj\n(defn new-system [config]\n  (let [config (meta-merge base-config config)]\n    (-> (component/system-map\n         :app  (handler-component (:app config))\n         :plus (endpoint-component plus-endpoint)\n         :minus (endpoint-component minus-endpoint)\n         :http (jetty-server (:http config)))\n        (component/system-using\n         {:http [:app]\n          :app  [:plus :minus]}))))\n```\n\nStarting it at the repl\n\n```\nlein repl\n(go)\n```\n\nAnd finally, the bug when trying to test it:\n\n```\ncurl -X POST --header \"Content-Type: application/json\" --header \"Accept: application/json\" -d \"{\n  \\\"y\\\": 1,\n  \\\"x\\\": 2\n}\" \"http://localhost:3000/plus\"\n```\n\nGives me\n\n```\n{\"errors\":\"(not (map? nil))\"}\n```\n\nI tried to remove one endpoint like this:\n\n``` clj\n(defn new-system [config]\n  (let [config (meta-merge base-config config)]\n    (-> (component/system-map\n         :app  (handler-component (:app config))\n         :plus (endpoint-component plus-endpoint)\n         #_:minus #_(endpoint-component minus-endpoint)\n         :http (jetty-server (:http config)))\n        (component/system-using\n         {:http [:app]\n          :app  [:plus #_:minus]}))))\n```\n\nRestarting it at the REPL\n\n```\n(reset)\n```\n\nNow when sending the same POST request with curl I get the expected response:\n\n```\n{\"total\":3}\n```\n\nAfter some debugging I realised that I get a `\"(not (map? nil))\"` because `:body` is actually empty; which I confirmed by trying to `slurp` its `#object[org.eclipse.jetty.server.HttpInputOverHTTP 0x5c8389 \"HttpInputOverHTTP@5c8389\"]`.\n\nHowever I am not sure to understand why the body input stream gets consummed somewhere before my handler.\n\nIs it a wrong manipulation from me, or is there something fishy with multiple endpoints/handlers and POST body input stream ?\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/33","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/33/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/33/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/33/events","html_url":"https://github.com/duct-framework/duct/issues/33","id":125456544,"number":33,"title":"Best practices for testing","user":{"login":"kendagriff","id":110935,"avatar_url":"https://avatars3.githubusercontent.com/u/110935?v=4","gravatar_id":"","url":"https://api.github.com/users/kendagriff","html_url":"https://github.com/kendagriff","followers_url":"https://api.github.com/users/kendagriff/followers","following_url":"https://api.github.com/users/kendagriff/following{/other_user}","gists_url":"https://api.github.com/users/kendagriff/gists{/gist_id}","starred_url":"https://api.github.com/users/kendagriff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kendagriff/s
8000
ubscriptions","organizations_url":"https://api.github.com/users/kendagriff/orgs","repos_url":"https://api.github.com/users/kendagriff/repos","events_url":"https://api.github.com/users/kendagriff/events{/privacy}","received_events_url":"https://api.github.com/users/kendagriff/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-01-07T18:26:42Z","updated_at":"2016-06-04T00:36:59Z","closed_at":"2016-06-04T00:36:59Z","author_association":"NONE","body":"I wanted to throw one of my common practices over the fence, and see if it's worth considering for addition to the library.\n\nIn each Duct project, I add a `test/system_test.clj` file. At its essence it has two pieces:\n\n``` clojure\n(def test-config\n  {:app ...})\n\n(def config\n  (meta-merge defaults environ test-config))\n```\n\nAnd, this for overloading the main system component...\n\n``` clojure\n(defn new-system []\n  (assoc (sys/new-system config)\n              :my-component {}))\n```\n\nIt's basically my standard way of implementing stubs for tests, which are often different from what I want from my live development environment.\n\nHave I missed an obvious solution that already exists in Duct?\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/32","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/32/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/32/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/32/events","html_url":"https://github.com/duct-framework/duct/issues/32","id":124884105,"number":32,"title":"Defaults key in HandlerComponent","user":{"login":"danielsz","id":859131,"avatar_url":"https://avatars1.githubusercontent.com/u/859131?v=4","gravatar_id":"","url":"https://api.github.com/users/danielsz","html_url":"https://github.com/danielsz","followers_url":"https://api.github.com/users/danielsz/followers","following_url":"https://api.github.com/users/danielsz/following{/other_user}","gists_url":"https://api.github.com/users/danielsz/gists{/gist_id}","starred_url":"https://api.github.com/users/danielsz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielsz/subscriptions","organizations_url":"https://api.github.com/users/danielsz/orgs","repos_url":"https://api.github.com/users/danielsz/repos","events_url":"https://api.github.com/users/danielsz/events{/privacy}","received_events_url":"https://api.github.com/users/danielsz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-01-05T02:48:21Z","updated_at":"2016-01-13T19:44:01Z","closed_at":"2016-01-13T19:44:01Z","author_association":"NONE","body":"Hi, \n\nI was wondering what the purpose is of the `defaults` field in the Handler component record?\n\nhttps://github.com/weavejester/duct/blob/4fa02a60abc82cff347470c2f1a5dfbbf70c8086/duct/src/duct/component/handler.clj#L24\n\nI thought it might have something to do with default middleware, but it doesn't seem to be referenced by the component itself, and I saw the following approach to include default middleware:\n\n``` clojure\n(def base-config\n  {:app {:middleware [[wrap-not-found :not-found]\n                      [wrap-webjars]\n                      [wrap-defaults :defaults]]\n         :not-found  (io/resource \"errors/404.html\")\n         ; Remove anti-forgery from defaults. Add it only for the routes that need it.\n         :defaults   (assoc-in site-defaults [:security :anti-forgery] false)}})\n```\n\nhttps://github.com/jstaffans/pay-me/blob/b7eb565959ec2548fed248a3509d592385f8a11c/src/clj/pay_me/system.clj#L17\n\nMy understanding is that this works because, as the wiki explains, \"The keys will be substituted for their values in the component.\"\n\nSo I can't figure out what the use of `defaults` seems to be here.\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/31","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/31/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/31/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/31/events","html_url":"https://github.com/duct-framework/duct/issues/31","id":124882652,"number":31,"title":"Clarification wished for middleware (best practices)","user":{"login":"danielsz","id":859131,"avatar_url":"https://avatars1.githubusercontent.com/u/859131?v=4","gravatar_id":"","url":"https://api.github.com/users/danielsz","html_url":"https://github.com/danielsz","followers_url":"https://api.github.com/users/danielsz/followers","following_url":"https://api.github.com/users/danielsz/following{/other_user}","gists_url":"https://api.github.com/users/danielsz/gists{/gist_id}","starred_url":"https://api.github.com/users/danielsz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielsz/subscriptions","organizations_url":"https://api.github.com/users/danielsz/orgs","repos_url":"https://api.github.com/users/danielsz/repos","events_url":"https://api.github.com/users/danielsz/events{/privacy}","received_events_url":"https://api.github.com/users/danielsz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2016-01-05T02:32:55Z","updated_at":"2016-06-04T00:33:54Z","closed_at":"2016-06-04T00:33:54Z","author_association":"NONE","body":"Hi James,\n\nI haven't played yet with duct, but after reading watching the talk and reading the source, I am utterly seduced. Well done, @weavejester \nI have a remaining question regarding best practices:\nIf a particular middleware makes only sense in a particular endpoint, should the user embed it in the endpoint, or should he pass it along with other middleware directly to the handler? What are the implications of both approaches?\n\nThanks!\n @danielsz\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/29","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/29/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/29/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/29/events","html_url":"https://github.com/duct-framework/duct/issues/29","id":124347237,"number":29,"title":"No method in multimethod 'jdbc-uri' for dispatch value: :jdbc","user":{"login":"stig","id":45407,"avatar_url":"https://avatars1.githubusercontent.com/u/45407?v=4","gravatar_id":"","url":"https://api.github.com/users/stig","html_url":"https://github.com/stig","followers_url":"https://api.github.com/users/stig/followers","following_url":"https://api.github.com/users/stig/following{/other_user}","gists_url":"https://api.github.com/users/stig/gists{/gist_id}","starred_url":"https://api.github.com/users/stig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stig/subscriptions","organizations_url":"https://api.github.com/users/stig/orgs","repos_url":"https://api.github.com/users/stig/repos","events_url":"https://api.github.com/users/stig/events{/privacy}","received_events_url":"https://api.github.com/users/stig/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-12-30T13:19:17Z","updated_at":"2015-12-30T13:54:19Z","closed_at":"2015-12-30T13:54:19Z","author_association":"CONTRIBUTOR","body":"I just got the above error from lein after creating a new duct project:\n\n```\nCompiling ClojureScript...\nException in thread \"main\" java.lang.ExceptionInInitializerError\n    at clojure.main.<clinit>(main.java:20)\nCaused by: java.lang.IllegalArgumentException: No method in multimethod 'jdbc-uri' for dispatch value: :jdbc, compiling:(config.clj:10:17)\n    at clojure.lang.Compiler$InvokeExpr.eval(Compiler.java:3628)\n    at clojure.lang.Compiler$MapExpr.eval(Compiler.java:3000)\n    at clojure.lang.Compiler$MapExpr.eval(Compiler.java:3000)\n    at clojure.lang.Compiler$DefExpr.eval(Compiler.java:439)\n    at clojure.lang.Compiler.eval(Compiler.java:6787)\n    at clojure.lang.Compiler.load(Compiler.java:7227)\n    at clojure.lang.RT.loadResourceScript(RT.java:371)\n    at clojure.lang.RT.loadResourceScript(RT.java:362)\n    at clojure.lang.RT.load(RT.java:446)\n    at clojure.lang.RT.load(RT.java:412)\n    at clojure.core$load$fn__5448.invoke(core.clj:5866)\n    at clojure.core$load.doInvoke(core.clj:5865)\n    at clojure.lang.RestFn.invoke(RestFn.java:408)\n    at clojure.core$load_one.invoke(core.clj:5671)\n    at clojure.core$load_lib$fn__5397.invoke(core.clj:5711)\n    at clojure.core$load_lib.doInvoke(core.clj:5710)\n    at clojure.lang.RestFn.applyTo(RestFn.java:142)\n    at clojure.core$apply.invoke(core.clj:632)\n    at clojure.core$load_libs.doInvoke(core.clj:5749)\n    at clojure.lang.RestFn.applyTo(RestFn.java:137)\n    at clojure.core$apply.invoke(core.clj:632)\n    at clojure.core$require.doInvoke(core.clj:5832)\n    at clojure.lang.RestFn.invoke(RestFn.java:1289)\n    at user$eval3$loading__5340__auto____4.invoke(user.clj:1)\n    at user$eval3.invoke(user.clj:1)\n    at clojure.lang.Compiler.eval(Compiler.java:6782)\n    at clojure.lang.Compiler.eval(Compiler.java:6771)\n    at clojure.lang.Compiler.load(Compiler.java:7227)\n    at clojure.lang.RT.loadResourceScript(RT.java:371)\n    at clojure.lang.RT.loadResourceScript(RT.java:358)\n    at clojure.lang.RT.maybeLoadResourceScript(RT.java:354)\n    at clojure.lang.RT.doInit(RT.java:468)\n    at clojure.lang.RT.<clinit>(RT.java:330)\n    ... 1 more\nCaused by: java.lang.IllegalArgumentException: No method in multimethod 'jdbc-uri' for dispatch value: :jdbc\n    at clojure.lang.MultiFn.getFn(MultiFn.java:156)\n    at clojure.lang.MultiFn.invoke(MultiFn.java:229)\n    at futfutfut.config$fn__20658.invoke(config.clj:10)\n    at clojure.lang.AFn.applyToHelper(AFn.java:152)\n    at clojure.lang.AFn.applyTo(AFn.java:144)\n    at clojure.lang.Compiler$InvokeExpr.eval(Compiler.java:3623)\n    ... 33 more\n```\n\nThe steps to reproduce are:\n\n```\nλ ~/play/ lein new duct futfutfut +site +example +ragtime +cljs +heroku +sqlite       \nGenerating a new Duct project named futfutfut...\nRun 'lein setup' in the project directory to create local config files.\nλ ~/play/ cd futfutfut \nλ ~/play/futfutfut/ lein setup\nCreating file dev/local.clj\nCreating file profiles.clj\nλ ~/play/futfutfut/ lein run\n```\n\nMy Versions:\n\n```\nλ ~/play/futfutfut/ lein --version\nLeiningen 2.5.3 on Java 1.8.0_45 Java HotSpot(TM) 64-Bit Server VM\n\nλ ~/play/futfutfut/ sw_vers \nProductName:    Mac OS X\nProductVersion: 10.11.2\nBuildVersion:   15C50\n```\n\nGenerated project.clj\n\n```\n(defproject futfutfut \"0.1.0-SNAPSHOT\"\n  :description \"FIXME: write description\"\n  :url \"http://example.com/FIXME\"\n  :min-lein-version \"2.0.0\"\n  :dependencies [[org.clojure/clojure \"1.7.0\"]\n                 [org.clojure/clojurescript \"1.7.170\"]\n                 [com.stuartsierra/component \"0.3.0\"]\n                 [compojure \"1.4.0\"]\n                 [duct \"0.5.6\"]\n                 [environ \"1.0.1\"]\n                 [hanami \"0.1.0\"]\n                 [meta-merge \"0.1.1\"]\n                 [ring \"1.4.0\"]\n                 [ring/ring-defaults \"0.1.5\"]\n                 [ring-jetty-component \"0.3.0\"]\n                 [ring-webjars \"0.1.1\"]\n                 [org.slf4j/slf4j-nop \"1.7.12\"]\n                 [org.webjars/normalize.css \"3.0.2\"]\n                 [duct/hikaricp-component \"0.1.0\"]\n                 [org.xerial/sqlite-jdbc \"3.8.11.2\"]\n                 [duct/ragtime-component \"0.1.2\"]]\n  :plugins [[lein-environ \"1.0.1\"]\n            [lein-gen \"0.2.2\"]\n            [lein-cljsbuild \"1.1.1\"]]\n  :generators [[duct/generators \"0.5.6\"]]\n  :duct {:ns-prefix futfutfut}\n  :main ^:skip-aot futfutfut.main\n  :uberjar-name \"futfutfut-standalone.jar\"\n  :target-path \"target/%s/\"\n  :resource-paths [\"resources\" \"target/cljsbuild\"]\n  :prep-tasks [[\"javac\"] [\"cljsbuild\" \"once\"] [\"compile\"]]\n  :cljsbuild\n  {:builds\n   {:main {:jar true\n           :source-paths [\"src\"]\n           :compiler {:output-to \"target/cljsbuild/futfutfut/public/js/main.js\"\n                      :optimizations :advanced}}}}\n  :aliases {\"gen\"   [\"generate\"]\n            \"setup\" [\"do\" [\"generate\" \"locals\"]]\n            \"deploy\" [\"do\"\n                      [\"vcs\" \"assert-committed\"]\n                      [\"vcs\" \"push\" \"heroku\" \"master\"]]}\n  :profiles\n  {:dev  [:project/dev  :profiles/dev]\n   :test [:project/test :profiles/test]\n   :repl {:resource-paths ^:replace [\"resources\" \"target/figwheel\"]\n          :prep-tasks     ^:replace [[\"javac\"] [\"compile\"]]}\n   :uberjar {:aot :all}\n   :profiles/dev  {}\n   :profiles/test {}\n   :project/dev   {:dependencies [[reloaded.repl \"0.2.1\"]\n                                  [org.clojure/tools.namespace \"0.2.11\"]\n                                  [org.clojure/tools.nrepl \"0.2.12\"]\n                                  [eftest \"0.1.0\"]\n                                  [kerodon \"0.7.0\"]\n                                  [com.cemerick/piggieback \"0.2.1\"]\n                                  [duct/figwheel-component \"0.3.1\"]\n                                  [figwheel \"0.5.0-1\"]]\n                   :source-paths [\"dev\"]\n                   :repl-options {:init-ns user\n                                  :nrepl-middleware [cemerick.piggieback/wrap-cljs-repl]}\n                   :env {:port 3000}}\n   :project/test  {}})\n```\n\nI hope this report is useful. Please let me know if I've missed out any useful\ninformation. I'll attempt to track down the issue myself, but my attempts so\nfar have been unsuccessful.\n\nPS: I get the same error when trying to start the project in CIDER. (Version:\nCIDER 0.10.0snapshot (package: 20151028.758))\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/28","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/28/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/28/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/28/events","html_url":"https://github.com/duct-framework/duct/issues/28","id":123897831,"number":28,"title":"Documentation for :duct { :ns-prefix <app> }","user":{"login":"drusellers","id":63355,"avatar_url":"https://avatars1.githubusercontent.com/u/63355?v=4","gravatar_id":"","url":"https://api.github.com/users/drusellers","html_url":"https://github.com/drusellers","followers_url":"https://api.github.com/users/drusellers/followers","following_url":"https://api.github.com/users/drusellers/following{/other_user}","gists_url":"https://api.github.com/users/drusellers/gists{/gist_id}","starred_url":"https://api.github.com/users/drusellers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drusellers/subscriptions","organizations_url":"https://api.github.com/users/drusellers/orgs","repos_url":"https://api.github.com/users/drusellers/repos","events_url":"https://api.github.com/users/drusellers/events{/privacy}","received_events_url":"https://api.github.com/users/drusellers/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-12-25T21:15:53Z","updated_at":"2016-05-17T21:00:34Z","closed_at":"2016-05-17T21:00:34Z","author_association":"NONE","body":"I was reviewing my `project.clj` and noticed that there is a key in there that looks like `:duct { :ns-prefix app }` - after [reviewing the source](https://github.com/weavejester/duct/search?utf8=%E2%9C%93&q=ns-prefix) it looks like that this is a key I could remove from my project as its only needed when generating the project. \n\nThis also makes me wonder, can duct work with an existing project? or is it really only for new projects?\n\nAlso, it might be worth documenting this key and what its used for.\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/27","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/27/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/27/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/27/events","html_url":"https://github.com/duct-framework/duct/issues/27","id":123161061,"number":27,"title":"Configuration Management","user":{"login":"drusellers","id":63355,"avatar_url":"https://avatars1.githubusercontent.com/u/63355?v=4","gravatar_id":"","url":"https://api.github.com/users/drusellers","html_url":"https://github.com/drusellers","followers_url":"https://api.github.com/users/drusellers/followers","following_url":"https://api.github.com/users/drusellers/following{/other_user}","gists_url":"https://api.github.com/users/drusellers/gists{/gist_id}","starred_url":"https://api.github.com/users/drusellers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drusellers/subscriptions","organizations_url":"https://api.github.com/users/drusellers/orgs","repos_url":"https://api.github.com/users/drusellers/repos","events_url":"https://api.github.com/users/drusellers/events{/privacy}","received_events_url":"https://api.github.com/users/drusellers/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-12-20T13:58:11Z","updated_at":"2016-06-04T00:34:23Z","closed_at":"2016-06-04T00:34:23Z","author_association":"NONE","body":"When i fire up just a basic duct template for an app named `bob` I get the following:\n\n```\n.\n├── README.md\n├── dev\n│   ├── local.clj\n│   └── user.clj\n├── profiles.clj\n├── project.clj\n├── src\n│   └── bob\n│       ├── component\n│       ├── config.clj\n│       ├── endpoint\n│       ├── main.clj\n│       └── system.clj\n└── test\n    └── bob\n```\n\nMy question centers around how to best manage the configuration state of the application. From the README we see that **\"Duct separates configuration and environment.\"** and we can indeed if we look at the files `config.clj`,\n#### config.clj\n\nContains `bob.config/defaults` (with `meta-merge` `displace` metadata) as well as containing `bob.config/environ` to pull in all keys that we are going to source from the environment. Sweet, i like this a lot.\n#### main.clj\n\nContains the `bob.main/prod-config` which is supposed to contain the production configuration. It also contains the `bob.main/config` definition which is passed into the `new-system` function. To this is not really \"production\" but a way to separate configuration values from those that we might want to use in the REPL.\n#### dev/local.clj\n\nI'll be honest, I'm not sure what goes in here.\n#### dev/user.clj\n\nContains the `user/dev-config` which is a mirror of the `bob.main/prod-config` and again provides a way of differentiating config values between `lein run` and `lein repl`. There is also the `user/config` which merges the config values in the same way that `bob.main/config` does. I like this symmetry. \n#### project.clj\n\nFinally we have the values in the project themselves. Specifically is the `:project/dev :env :port 3000` setting.\n\n---\n\nOk, now that we have this all out in the open we can finally get to my main issue which is, \"If duct is meant to be a template for web applications with a focus on simplicity, why are there so many places to watch, maintain and monitor for configuration values?\"\n\n> Simple: Easy to understand. Composed of one part.\n\nAnd I know that we aren't trying to just make things one part, we need to separate out the pieces that move. The video linked in the opening of the project README is one of my favorite. So, I think what I'd like to see is duct provide a little bit of guidance on how we should use the various config points that it provides. I say this because i see value in what is being laid out, and now having written this issue I have a much better understanding of what is going on (except for the `local.clj`).\n\nI'd like to suggest that we drop any configuration in the `project.clj` (specifically [this](https://github.com/weavejester/duct/blob/master/lein-template/resources/leiningen/new/duct/base/project.clj#L63)) in favor of putting values in the `bob.config.clj` namespace. To be this makes more sense, rather than trying to much with environment variables in the `project.clj`.\n\nI also think that some of my confusion comes from the way `meta-merge` works in that I want to set some keys in a hash from defaults and then override them in the environment variables but it seems that `meta-merge` ends up [throwing away some keys that I'm not expecting](https://github.com/weavejester/meta-merge/issues/5).\n\nSo, all of that said thank you for taking the time to read this very long issue and I look forward to any understanding that you can pass along. I will to the best that I can provide any feedback you give as a pull request to the documentation clarifying any part of this that i have screwed up. :)\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/26","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/26/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/26/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/26/events","html_url":"https://github.com/duct-framework/duct/issues/26","id":121099248,"number":26,"title":"How to structure routes having multiple endpoint components.","user":{"login":"rcanepa","id":3418513,"avatar_url":"https://avatars0.githubusercontent.com/u/3418513?v=4","gravatar_id":"","url":"https://api.github.com/users/rcanepa","html_url":"https://github.com/rcanepa","followers_url":"https://api.github.com/users/rcanepa/followers","following_url":"https://api.github.com/users/rcanepa/following{/other_user}","gists_url":"https://api.github.com/users/rcanepa/gists{/gist_id}","starred_url":"https://api.github.com/users/rcanepa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rcanepa/subscriptions","organizations_url":"https://api.github.com/users/rcanepa/orgs","repos_url":"https://api.github.com/users/rcanepa/repos","events_url":"https://api.github.com/users/rcanepa/events{/privacy}","received_events_url":"https://api.github.com/users/rcanepa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-12-08T21:07:08Z","updated_at":"2015-12-08T23:50:56Z","closed_at":"2015-12-08T23:50:56Z","author_association":"NONE","body":"Hi James, I am building a real application on top of duct and I got stuck when I tried to extend my application to a couple of endpoints. I couldn't find a clear solution of how should I structure my code using components and at the same time having all the benefits of compojure-api/swagger. \n\nTo continue working on my application, I had to create one main endpoint component, which imports routes tables from several endpoints (not real components), which of course it is not optimal. \n\nYou can read more about this issue in a little discussion I had with another Duct user here:\nhttp://yogthos.net/posts/2015-10-01-Compojure-API.html#comment-2400193168\n\nAnyway, do you have recommendations on how to deal with this?\n\nThanks for Duct, I have learnt a lot from it!. \n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/21","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/21/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/21/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/21/events","html_url":"https://github.com/duct-framework/duct/issues/21","id":119115878,"number":21,"title":"IllegalStateException when trying to run (cljs-repl)","user":{"login":"settinghead","id":794516,"avatar_url":"https://avatars1.githubusercontent.com/u/794516?v=4","gravatar_id":"","url":"https://api.github.com/users/settinghead","html_url":"https://github.com/settinghead","followers_url":"https://api.github.com/users/settinghead/followers","following_url":"https://api.github.com/users/settinghead/following{/other_user}","gists_url":"https://api.github.com/users/settinghead/gists{/gist_id}","starred_url":"https://api.github.com/users/settinghead/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/settinghead/subscriptions","organizations_url":"https://api.github.com/users/settinghead/orgs","repos_url":"https://api.github.com/users/settinghead/repos","events_url":"https://api.github.com/users/settinghead/events{/privacy}","received_events_url":"https://api.github.com/users/settinghead/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-11-27T01:17:27Z","updated_at":"2015-11-27T16:26:39Z","closed_at":"2015-11-27T16:26:39Z","author_association":"NONE","body":"I received the following error when trying to run `(cljs-repl)`:\n\n```\nIllegalStateException Can't change/establish root binding of: *cljs-repl-env* with set  clojure.lang.Var.set (Var.java:221)\n```\n\nSteps to reproduce:\n\n``` bash\nlein new duct foobar +cljs\ncd foobar\nlein setup\nlein repl\n```\n\n```\n> (go)\nCompiling \"target/figwheel/foobar/public/js/main.js\" from [\"src\" \"dev\"]...\nnotifying browser that file changed:  target/figwheel/foobar/public/js/goog/deps.js\nnotifying browser that file changed:  target/figwheel/foobar/public/js/cljs_deps.js\nnotifying browser that file changed:  out/cljs/user.js\nSuccessfully compiled \"target/figwheel/foobar/public/js/main.js\" in 4.684 seconds.\n> (cljs-repl)\nIllegalStateException Can't change/establish root binding of: *cljs-repl-env* with set  clojure.lang.Var.set (Var.java:221)\n```\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/20","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/20/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/20/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/20/events","html_url":"https://github.com/duct-framework/duct/issues/20","id":118594735,"number":20,"title":"How to use multiple handler components for the same jetty-server?","user":{"login":"johanhaleby","id":187029,"avatar_url":"https://avatars2.githubusercontent.com/u/187029?v=4","gravatar_id":"","url":"https://api.github.com/users/johanhaleby","html_url":"https://github.com/johanhaleby","followers_url":"https://api.github.com/users/johanhaleby/followers","following_url":"https://api.github.com/users/johanhaleby/following{/other_user}","gists_url":"https://api.github.com/users/johanhaleby/gists{/gist_id}","starred_url":"https://api.github.com/users/johanhaleby/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johanhaleby/subscriptions","organizations_url":"https://api.github.com/users/johanhaleby/orgs","repos_url":"https://api.github.com/users/johanhaleby/repos","events_url":"https://api.github.com/users/johanhaleby/events{/privacy}","received_events_url":"https://api.github.com/users/johanhaleby/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-11-24T12:04:56Z","updated_at":"2015-11-25T08:41:44Z","closed_at":"2015-11-25T08:41:44Z","author_association":"NONE","body":"I have two handler-components, a & b, and I like to expose both on the same jetty-server (something similar to how you combine two or more handlers in vanilla compojure using `(routes some-handler some-other-handler)`). Is this possible?\n","score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/19","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/19/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/19/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/19/events","html_url":"https://github.com/duct-framework/duct/issues/19","id":115792056,"number":19,"title":"can't start a repl in 0.4.5","user":{"login":"lerouxrgd","id":6103291,"avatar_url":"https://avatars0.githubusercontent.com/u/6103291?v=4","gravatar_id":"","url":"https://api.github.com/users/lerouxrgd","html_url":"https://github.com/lerouxrgd","followers_url":"https://api.github.com/users/lerouxrgd/followers","following_url":"https://api.github.com/users/lerouxrgd/following{/other_user}","gists_url":"https://api.github.com/users/lerouxrgd/gists{/gist_id}","starred_url":"https://api.github.com/users/lerouxrgd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lerouxrgd/subscriptions","organizations_url":"https://api.github.com/users/lerouxrgd/orgs","repos_url":"https://api.github.com/users/lerouxrgd/repos","events_url":"https://api.github.com/users/lerouxrgd/events{/privacy}","received_events_url":"https://api.github.com/users/lerouxrgd/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-11-09T04:52:03Z","updated_at":"2015-11-09T23:57:54Z","closed_at":"2015-11-09T23:57:54Z","author_association":"NONE","body":"Looks like [duct/figwheel-component \"0.3.0\"] is causing some issue.\nI simply tried:\n\n```\nlein new duct test-duct +cljs +example\ncd test-duct\nlein setup\nlein repl\n```\n\nAnd then I get this error:\n\n```\nException in thread \"main\" java.lang.ExceptionInInitializerError\n        at clojure.main.<clinit>(main.java:20)\nCaused by: java.lang.IllegalStateException: var: #'clojure.tools.nrepl.middleware.interruptible-eval/queue-eval is not public, compiling:(cemerick/piggieback.clj:240:3)\n        at clojure.lang.Compiler.analyzeSeq(Compiler.java:6730)\n        at clojure.lang.Compiler.analyze(Compiler.java:6524)\n        at clojure.lang.Compiler.analyze(Compiler.java:6485)\n        at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5861)\n        at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:6179)\n        at clojure.lang.Compiler.analyzeSeq(Compiler.java:6723)\n        at clojure.lang.Compiler.analyze(Compiler.java:6524)\n        at clojure.lang.Compiler.analyzeSeq(Compiler.java:6711)\n        at clojure.lang.Compiler.analyze(Compiler.java:6524)\n        at clojure.lang.Compiler.analyze(Compiler.java:6485)\n        at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5861)\n        at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5296)\n        at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3925)\n        at clojure.lang.Compiler.analyzeSeq(Compiler.java:6721)\n        at clojure.lang.Compiler.analyze(Compiler.java:6524)\n        at clojure.lang.Compiler.analyzeSeq(Compiler.java:6711)\n        at clojure.lang.Compiler.analyze(Compiler.java:6524)                                                                     \n        at clojure.lang.Compiler.access$300(Compiler.java:38)                                                                    \n        at clojure.lang.Compiler$DefExpr$Parser.parse(Compiler.java:577)                                                         \n        at clojure.lang.Compiler.analyzeSeq(Compiler.java:6723)                                                                  \n        at clojure.
178b
lang.Compiler.analyze(Compiler.java:6524)                                                                     \n        at clojure.lang.Compiler.analyze(Compiler.java:6485)                                                                     \n        at clojure.lang.Compiler.eval(Compiler.java:6786)                                                                        \n        at clojure.lang.Compiler.load(Compiler.java:7227)                                                                        \n        at clojure.lang.RT.loadResourceScript(RT.java:371)                                                                       \n        at clojure.lang.RT.loadResourceScript(RT.java:362)                                                                       \n        at clojure.lang.RT.load(RT.java:446)                                                                                     \n        at clojure.lang.RT.load(RT.java:412)                                                                                     \n        at clojure.core$load$fn__5448.invoke(core.clj:5866)                                                                      \n        at clojure.core$load.doInvoke(core.clj:5865)                                                                             \n        at clojure.lang.RestFn.invoke(RestFn.java:408)                                                                           \n        at clojure.core$load_one.invoke(core.clj:5671)                                                                           \n        at clojure.core$load_lib$fn__5397.invoke(core.clj:5711)                                                                  \n        at clojure.core$load_lib.doInvoke(core.clj:5710)                                                                         \n        at clojure.lang.RestFn.applyTo(RestFn.java:142)                                                                          \n        at clojure.core$apply.invoke(core.clj:632)                                                                               \n        at clojure.core$load_libs.doInvoke(core.clj:5749)                                                                        \n        at clojure.lang.RestFn.applyTo(RestFn.java:137)                                                                          \n        at clojure.core$apply.invoke(core.clj:632)                                                                               \n        at clojure.core$require.doInvoke(core.clj:5832)                                                                          \n        at clojure.lang.RestFn.invoke(RestFn.java:1289)                                                                          \n        at duct.component.figwheel$eval3668$loading__5340__auto____3669.invoke(figwheel.clj:1)                                   \n        at duct.component.figwheel$eval3668.invoke(figwheel.clj:1)\n        at clojure.lang.Compiler.eval(Compiler.java:6782)\n        at clojure.lang.Compiler.eval(Compiler.java:6771)\n        at clojure.lang.Compiler.load(Compiler.java:7227)\n        at clojure.lang.RT.loadResourceScript(RT.java:371)\n        at clojure.lang.RT.loadResourceScript(RT.java:362)\n        at clojure.lang.RT.load(RT.java:446)\n        at clojure.lang.RT.load(RT.java:412)\n        at clojure.core$load$fn__5448.invoke(core.clj:5866)\n        at clojure.core$load.doInvoke(core.clj:5865)\n        at clojure.lang.RestFn.invoke(RestFn.java:408)\n        at clojure.core$load_one.invoke(core.clj:5671)\n        at clojure.core$load_lib$fn__5397.invoke(core.clj:5711)\n        at clojure.core$load_lib.doInvoke(core.clj:5710)\n        at clojure.lang.RestFn.applyTo(RestFn.java:142)\n        at clojure.core$apply.invoke(core.clj:632)\n        at clojure.core$load_libs.doInvoke(core.clj:5749)\n        at clojure.lang.RestFn.applyTo(RestFn.java:137)\n        at clojure.core$apply.invoke(core.clj:632)\n        at clojure.core$require.doInvoke(core.clj:5832)\n        at clojure.lang.RestFn.invoke(RestFn.java:1096)\n        at user$eval3$loading__5340__auto____4.invoke(user.clj:1)\n        at user$eval3.invoke(user.clj:1)\n        at clojure.lang.Compiler.eval(Compiler.java:6782)\n        at clojure.lang.Compiler.eval(Compiler.java:6771)\n        at clojure.lang.Compiler.load(Compiler.java:7227)\n        at clojure.lang.RT.loadResourceScript(RT.java:371)\n        at clojure.lang.RT.loadResourceScript(RT.java:358)\n        at clojure.lang.RT.maybeLoadResourceScript(RT.java:354)\n        at clojure.lang.RT.doInit(RT.java:468)\n        at clojure.lang.RT.<clinit>(RT.java:330)\n        ... 1 more\nCaused by: java.lang.IllegalStateException: var: #'clojure.tools.nrepl.middleware.interruptible-eval/queue-eval is not public\n        at clojure.lang.Compiler.isInline(Compiler.java:6592)\n        at clojure.lang.Compiler.analyzeSeq(Compiler.java:6716)\n        ... 73 more\nException in thread \"Thread-4\" clojure.lang.ExceptionInfo: Subprocess failed {:exit-code 1}\n        at clojure.core$ex_info.invoke(core.clj:4593)\n        at leiningen.core.eval$fn__5830.invoke(eval.clj:255)\n        at clojure.lang.MultiFn.invoke(MultiFn.java:233)\n        at leiningen.core.eval$eval_in_project.invoke(eval.clj:356)\n        at leiningen.repl$server$fn__11848.invoke(repl.clj:243)\n        at clojure.lang.AFn.applyToHelper(AFn.java:152)\n        at clojure.lang.AFn.applyTo(AFn.java:144)\n        at clojure.core$apply.invoke(core.clj:630)\n        at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1868)\n        at clojure.lang.RestFn.invoke(RestFn.java:425)\n        at clojure.lang.AFn.applyToHelper(AFn.java:156)\n        at clojure.lang.RestFn.applyTo(RestFn.java:132)\n        at clojure.core$apply.invoke(core.clj:634)\n        at clojure.core$bound_fn_STAR_$fn__4439.doInvoke(core.clj:1890)\n        at clojure.lang.RestFn.invoke(RestFn.java:397)\n        at clojure.lang.AFn.run(AFn.java:22)\n        at java.lang.Thread.run(Thread.java:745)\n```\n","score":1.0}]}
0

