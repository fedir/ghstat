HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:01:22 GMT
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CE26:E4B6:1F0EC1C:23C0BFD:5FB01B71
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 29
X-Ratelimit-Reset: 1605376942
X-Ratelimit-Used: 1
X-Xss-Protection: 1; mode=block

26ed
{"total_count":4,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/jean79/yested/issues/129","repository_url":"https://api.github.com/repos/jean79/yested","labels_url":"https://api.github.com/repos/jean79/yested/issues/129/labels{/name}","comments_url":"https://api.github.com/repos/jean79/yested/issues/129/comments","events_url":"https://api.github.com/repos/jean79/yested/issues/129/events","html_url":"https://github.com/jean79/yested/issues/129","id":294224393,"node_id":"MDU6SXNzdWUyOTQyMjQzOTM=","number":129,"title":"www.yested.net is down","user":{"login":"tbsvttr","id":12001541,"node_id":"MDQ6VXNlcjEyMDAxNTQx","avatar_url":"https://avatars1.githubusercontent.com/u/12001541?v=4","gravatar_id":"","url":"https://api.github.com/users/tbsvttr","html_url":"https://github.com/tbsvttr","followers_url":"https://api.github.com/users/tbsvttr/followers","following_url":"https://api.github.com/users/tbsvttr/following{/other_user}","gists_url":"https://api.github.com/users/tbsvttr/gists{/gist_id}","starred_url":"https://api.github.com/users/tbsvttr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tbsvttr/subscriptions","organizations_url":"https://api.github.com/users/tbsvttr/orgs","repos_url":"https://api.github.com/users/tbsvttr/repos","events_url":"https://api.github.com/users/tbsvttr/events{/privacy}","received_events_url":"https://api.github.com/users/tbsvttr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-02-04T19:47:16Z","updated_at":"2018-02-06T22:21:17Z","closed_at":"2018-02-06T22:21:17Z","author_association":"NONE","active_lock_reason":null,"body":"www.yested.net is down, but demo.yested.net still works.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/jean79/yested/issues/43","repository_url":"https://api.github.com/repos/jean79/yested","labels_url":"https://api.github.com/repos/jean79/yested/issues/43/labels{/name}","comments_url":"https://api.github.com/repos/jean79/yested/issues/43/comments","events_url":"https://api.github.com/repos/jean79/yested/issues/43/events","html_url":"https://github.com/jean79/yested/issues/43","id":55073279,"node_id":"MDU6SXNzdWU1NTA3MzI3OQ==","number":43,"title":"Problem with button handler if there is some text after it","user":{"login":"jean79","id":1462927,"node_id":"MDQ6VXNlcjE0NjI5Mjc=","avatar_url":"https://avatars2.githubusercontent.com/u/1462927?v=4","gravatar_id":"","url":"https://api.github.com/users/jean79","html_url":"https://github.com/jean79","followers_url":"https://api.github.com/users/jean79/followers","following_url":"https://api.github.com/users/jean79/following{/other_user}","gists_url":"https://api.github.com/users/jean79/gists{/gist_id}","starred_url":"https://api.github.com/users/jean79/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jean79/subscriptions","organizations_url":"https://api.github.com/users/jean79/orgs","repos_url":"https://api.github.com/users/jean79/repos","events_url":"https://api.github.com/users/jean79/events{/privacy}","received_events_url":"https://api.github.com/users/jean79/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-01-21T20:35:07Z","updated_at":"2015-01-29T17:00:15Z","closed_at":"2015-01-29T17:00:15Z","author_association":"OWNER","active_lock_reason":null,"body":"Sample code:\n\n```\ndiv {\n  btsButton(label = {+\"click me\"}) { //this handler is not called if button is clicked}\n  +\"This line causes that handler doesn't work\"\n}\n```\n\nsomehow it is caused by element.innerHTML += this:\n\n```\npublic fun String.plus(): Unit {\n        element.innerHTML += this\n//but it works with  //element.addText(this) - but this prevents entering html code inside a string \n}\n```\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/jean79/yested/issues/21","repository_url":"https://api.github.com/repos/jean79/yested","labels_url":"https://api.github.com/repos/jean79/yested/issues/21/labels{/name}","comments_url":"https://api.github.com/repos/jean79/yested/issues/21/comments","events_url":"https://api.github.com/repos/jean79/yested/issues/21/events","html_url":"https://github.com/jean79/yested/issues/21","id":54028038,"node_id":"MDU6SXNzdWU1NDAyODAzOA==","number":21,"title":"Removing underscore prefixes from private fields","user":{"login":"bbodi","id":2362136,"node_id":"MDQ6VXNlcjIzNjIxMzY=","avatar_url":"https://avatars0.githubusercontent.com/u/2362136?v=4","gravatar_id":"","url":"https://api.github.com/users/bbodi","html_url":"https://github.com/bbodi","followers_url":"https://api.github.com/users/bbodi/followers","following_url":"https://api.github.com/users/bbodi/following{/other_user}","gists_url":"https://api.github.com/users/bbodi/gists{/gist_id}","starred_url":"https://api.github.com/users/bbodi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbodi/subscriptions","organizations_url":"https://api.github.com/users/bbodi/orgs","repos_url":"https://api.github.com/users/bbodi/repos","events_url":"https://api.github.com/users/bbodi/events{/privacy}","received_events_url":"https://api.github.com/users/bbodi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-01-12T07:54:33Z","updated_at":"2015-01-12T20:41:10Z","closed_at":"2015-01-12T20:41:10Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"Yested now follows a convention where private fields contains an underscore prefix.\n\nI think it is highly discouraged. Thanks to the modern IDEs (especially IntelliJ), private fields are syntax highlighted differently from parameters, so there is no need to distinguish them with \"_\".\n\nMoreover, the Kotlin documentation explicitly prohibit this:\n\n```\nnever create a private property and call it _foo\n```\n\nhttp://kotlinlang.org/docs/reference/coding-conventions.html\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/jean79/yested/issues/38","repository_url":"https://api.github.com/repos/jean79/yested","labels_url":"https://api.github.com/repos/jean79/yested/issues/38/labels{/name}","comments_url":"https://api.github.com/repos/jean79/yested/issues/38/comments","events_url":"https://api.github.com/repos/jean79/yested/issues/38/events","html_url":"https://github.com/jean79/yested/issues/38","id":54423561,"node_id":"MDU6SXNzdWU1NDQyMzU2MQ==","number":38,"title":"Enhancing HTML Component design","user":{"login":"bbodi","id":2362136,"node_id":"MDQ6VXNlcjIzNjIxMzY=","avatar_url":"https://avatars0.githubusercontent.com/u/2362136?v=4","gravatar_id":"","url":"https://api.github.com/users/bbodi","html_url":"https://github.com/bbodi","followers_url":"https://api.github.com/users/bbodi/followers","following_url":"https://api.github.com/users/bbodi/following{/other_user}","gists_url":"https://api.github.com/users/bbodi/gists{/gist_id}","starred_url":"https://api.github.com/users/bbodi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbodi/subscriptions","organizations_url":"https://api.github.com/users/bbodi/orgs","repos_url":"https://api.github.com/users/bbodi/repos","events_url":"https://api.github.com/users/bbodi/events{/privacy}","received_events_url":"https://api.github.com/users/bbodi/received_events","type":"User","site_admin":false},"labels":[{"id":157371847,"node_id":"MDU6TGFiZWwxNTczNzE4NDc=","url":"https://api.github.com/repos/jean79/yested/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-01-15T08:27:22Z","updated_at":"2015-01-20T18:33:24Z","closed_at":"2015-01-20T18:33:24Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"```\nThis is the idea behind class hierarchy - feel free to comment, we can change it:\nComponent trait just provide HTMLElement\nParentComponent provides some useful protected methods for manipulating element (add/remove child, attributes setting)\nContent of HTML element is created by the Component code, not by the user of the component (TextInput, Grid, ...)\nHTMLParentComponent\ninner content of the html element can be created by DSL\nexample: div, span, ...\n```\n\nSo If I undestand well, ParentComponents are the components which for we don't want to allow the user to add any kind of child elements explicitly. So for example the Grid: It is a table with many child elements, but these elements are added and controlled by the Grid itself, not the user of Grid, so she can't do like this:\n\n``` kotlin\nGrid {...\n   div {...} // It is prohibited for 'ParentComponents'\n}\n```\n\nI think then that the name 'ParentComponent' is misleading.\nIn my opinion, we need only two base classes: \n- abstract Component class with the protected helper methods of ParentComponent.\n  The classes that now are inherited from ParentComponent, would be the child of this Component.\n  These child classes can control which elements can a user add to themselves.\n- HTMLParentComponent, but with an another name, e.g. \"ComponentContainer\", which for the user can freely add any elements (div, ul, etc.)\n\n```\nCan you use 4 spaces as indent?\n```\n\nOf course.\n\n```\nWas thinking about adding id and class as optional parameters to all HTML DSL functions, namely HTMLParentComponent.div an .span.\nSo that instead of \ndiv {\nid = \"bla\"\nul { }\n}\nwe can write \ndiv(id=\"bla\") {\nul { }\n}\n```\n\nI think it is a good Idead, but the default value should be an empty string.\n","performed_via_github_app":null,"score":1.0}]}
0

