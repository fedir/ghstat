HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:10:31 GMT
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: D2A5:5C53:3F74968:4914D14:5FB01D96
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 18
X-Ratelimit-Reset: 1605377483
X-Ratelimit-Used: 12
X-Xss-Protection: 1; mode=block

eebe
{"total_count":20,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/lpereira/lwan/issues/293","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/293/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/293/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/293/events","html_url":"https://github.com/lpereira/lwan/issues/293","id":712291790,"node_id":"MDU6SXNzdWU3MTIyOTE3OTA=","number":293,"title":"Does not build on platforms where size_t is not 64-bit","user":{"login":"angelsl","id":235432,"node_id":"MDQ6VXNlcjIzNTQzMg==","avatar_url":"https://avatars2.githubusercontent.com/u/235432?v=4","gravatar_id":"","url":"https://api.github.com/users/angelsl","html_url":"https://github.com/angelsl","followers_url":"https://api.github.com/users/angelsl/followers","following_url":"https://api.github.com/users/angelsl/following{/other_user}","gists_url":"https://api.github.com/users/angelsl/gists{/gist_id}","starred_url":"https://api.github.com/users/angelsl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/angelsl/subscriptions","organizations_url":"https://api.github.com/users/angelsl/orgs","repos_url":"https://api.github.com/users/angelsl/repos","events_url":"https://api.github.com/users/angelsl/events{/privacy}","received_events_url":"https://api.github.com/users/angelsl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-09-30T21:25:50Z","updated_at":"2020-10-03T16:40:27Z","closed_at":"2020-10-03T16:37:49Z","author_association":"NONE","active_lock_reason":null,"body":"https://github.com/lpereira/lwan/commit/62a25b122c4af32a3d60287a0a65b3c25f55a24f#diff-94ee1f5fd74ecb92be0520d80665a5a8R124","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/HalosGhost/halosgho.st/issues/17","repository_url":"https://api.github.com/repos/HalosGhost/halosgho.st","labels_url":"https://api.github.com/repos/HalosGhost/halosgho.st/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/HalosGhost/halosgho.st/issues/17/comments","events_url":"https://api.github.com/repos/HalosGhost/halosgho.st/issues/17/events","html_url":"https://github.com/HalosGhost/halosgho.st/issues/17","id":401013313,"node_id":"MDU6SXNzdWU0MDEwMTMzMTM=","number":17,"title":"Switching to static index killed our header configs","user":{"login":"HalosGhost","id":49465,"node_id":"MDQ6VXNlcjQ5NDY1","avatar_url":"https://avatars3.githubusercontent.com/u/49465?v=4","gravatar_id":"","url":"https://api.github.com/users/HalosGhost","html_url":"https://github.com/HalosGhost","followers_url":"https://api.github.com/users/HalosGhost/followers","following_url":"https://api.github.com/users/HalosGhost/following{/other_user}","gists_url":"https://api.github.com/users/HalosGhost/gists{/gist_id}","starred_url":"https://api.github.com/users/HalosGhost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HalosGhost/subscriptions","organizations_url":"https://api.github.com/users/HalosGhost/orgs","repos_url":"https://api.github.com/users/HalosGhost/repos","events_url":"https://api.github.com/users/HalosGhost/events{/privacy}","received_events_url":"https://api.github.com/users/HalosGhost/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-01-19T16:55:36Z","updated_at":"2020-06-14T20:35:58Z","closed_at":"2020-06-14T20:35:58Z","author_association":"OWNER","active_lock_reason":null,"body":"As I no longer have a custom `index` route, the responses are not served with a crafted header configuration. As a result, the site's ranks are back to an ``F`` on securityheaders and an ``A`` on SSLLabs.\r\n\r\nI am looking into what I can do to apply the header configuration to all responses (which would be better anyway).","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/dotnet/runtime/issues/14304","repository_url":"https://api.github.com/repos/dotnet/runtime","labels_url":"https://api.github.com/repos/dotnet/runtime/issues/14304/labels{/name}","comments_url":"https://api.github.com/repos/dotnet/runtime/issues/14304/comments","events_url":"https://api.github.com/repos/dotnet/runtime/issues/14304/events","html_url":"https://github.com/dotnet/runtime/issues/14304","id":557998799,"node_id":"MDU6SXNzdWU1NTc5OTg3OTk=","number":14304,"title":"SocketAsyncEngine.Unix perf experiments","user":{"login":"tmds","id":1025424,"node_id":"MDQ6VXNlcjEwMjU0MjQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1025424?v=4","gravatar_id":"","url":"https://api.github.com/users/tmds","html_url":"https://github.com/tmds","followers_url":"https://api.github.com/users/tmds/followers","following_url":"https://api.github.com/users/tmds/following{/other_user}","gists_url":"https://api.github.com/users/tmds/gists{/gist_id}","starred_url":"https://api.github.com/users/tmds/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmds/subscriptions","organizations_url":"https://api.github.com/users/tmds/orgs","repos_url":"https://api.github.com/users/tmds/repos","events_url":"https://api.github.com/users/tmds/events{/privacy}","received_events_url":"https://api.github.com/users/tmds/received_events","type":"User","site_admin":false},"labels":[{"id":1675385788,"node_id":"MDU6TGFiZWwxNjc1Mzg1Nzg4","url":"https://api.github.com/repos/dotnet/runtime/labels/area-System.Net.Sockets","name":"area-System.Net.Sockets","color":"d4c5f9","default":false,"description":null},{"id":1576303484,"node_id":"MDU6TGFiZWwxNTc2MzAzNDg0","url":"https://api.github.com/repos/dotnet/runtime/labels/enhancement","name":"enhancement","color":"200dff","default":true,"description":"Product code improvement that does NOT require public API changes/additions"},{"id":1675386195,"node_id":"MDU6TGFiZWwxNjc1Mzg2MTk1","url":"https://api.github.com/repos/dotnet/runtime/labels/tenet-performance","name":"tenet-performance","color":"c2e0c6","default":false,"description":"Performance related issue"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/dotnet/runtime/milestones/1","html_url":"https://github.com/dotnet/runtime/milestone/1","labels_url":"https://api.github.com/repos/dotnet/runtime/milestones/1/labels","id":4844037,"node_id":"MDk6TWlsZXN0b25lNDg0NDAzNw==","number":1,"title":"Future","description":"Milestone tracking issues not triaged to a planned release. Work in this milestone may happen, or may not: it is not committed.","creator":{"login":"maryamariyan","id":5897654,"node_id":"MDQ6VXNlcjU4OTc2NTQ=","avatar_url":"https://avatars2.githubusercontent.com/u/5897654?v=4","gravatar_id":"","url":"https://api.github.com/users/maryamariyan","html_url":"https://github.com/maryamariyan","followers_url":"https://api.github.com/users/maryamariyan/followers","following_url":"https://api.github.com/users/maryamariyan/following{/other_user}","gists_url":"https://api.github.com/users/maryamariyan/gists{/gist_id}","starred_url":"https://api.github.com/users/maryamariyan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maryamariyan/subscriptions","organizations_url":"https://api.github.com/users/maryamariyan/orgs","repos_url":"https://api.github.com/users/maryamariyan/repos","events_url":"https://api.github.com/users/maryamariyan/events{/privacy}","received_events_url":"https://api.github.com/users/maryamariyan/received_events","type":"User","site_admin":false},"open_issues":4459,"closed_issues":2824,"state":"open","created_at":"2019-11-14T00:49:49Z","updated_at":"2020-11-14T06:54:58Z","due_on":null,"closed_at":null},"comments":34,"created_at":"2020-01-31T08:59:33Z","updated_at":"2020-10-06T07:21:06Z","closed_at":"2020-10-06T07:21:06Z","author_association":"MEMBER","active_lock_reason":null,"body":"I'm looking into ways that may improve `SocketAsyncEngine.Unix` performance.\r\n\r\nBased on [kestrel-linux-transport](https://github.com/redhat-developer/kestrel-linux-transport) implementation, this is what I'm thinking of:\r\n\r\n- Batch receives and sends on the epoll thread using [Linux AIO](https://github.com/littledan/linux-aio). Note that this isn't the POSIX AIO library. The functions called here map directly to syscalls.\r\n\r\nand\r\n\r\n```cs\r\nclass SocketAsyncEventArgs\r\n{\r\n  public bool RunContinuationsAsynchronously { get; set; } = true;\r\n  public bool PreferSynchronousCompletion { get; set; } = true;\r\n}\r\n```\r\n- Setting `RunContinuationsAsynchronously` to `false` allows `SocketAsyncEngine` to invoke callbacks directly from the epoll thread. This avoid context switching cost.\r\n\r\n- Setting `PreferSynchronousCompletion` to `false` allows `SocketAsyncEngine` to not try a synchronous attempt and go async immediately. An implementation could set this to `true` for sends, and `false` for receives. Or for receives it could be changed based on whether the last receive filled up the buffer completely. Going async immediately saves an attempt syscall and allows batching.\r\n\r\nThe defaults match the current behavior.\r\n\r\n[io_uring](https://github.com/dotnet/runtime/issues/753) is also an interesting option to explore. I'm not looking into that atm because the [features we need](https://github.com/dotnet/runtime/issues/12650#issuecomment-573463346) are in 5.5 kernel  which was released only a couple of days ago.\r\n\r\nI'm going to do a poc in [a separate repo](https://github.com/tmds/Tmds.LinuxAsync) for benchmarking. Anyone interested is free to review PRs, or fork and do some experimentation. When I have a working implementation, I'll need some help with benchmarking and see what is the change in perf.\r\n\r\ncc @stephentoub @geoffkizer @davidfowl @halter73 @adamsitnik @benaadams @VSadov @damageboy @lpereira @dotnet/ncl ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/nanovms/nanos/issues/796","repository_url":"https://api.github.com/repos/nanovms/nanos","labels_url":"https://api.github.com/repos/nanovms/nanos/issues/796/labels{/name}","comments_url":"https://api.github.com/repos/nanovms/nanos/issues/796/comments","events_url":"https://api.github.com/repos/nanovms/nanos/issues/796/events","html_url":"https://github.com/nanovms/nanos/issues/796","id":443671767,"node_id":"MDU6SXNzdWU0NDM2NzE3Njc=","number":796,"title":"lwan tracking tkt","user":{"login":"eyberg","id":22410,"node_id":"MDQ6VXNlcjIyNDEw","avatar_url":"https://avatars3.githubusercontent.com/u/22410?v=4","gravatar_id":"","url":"https://api.github.com/users/eyberg","html_url":"https://github.com/eyberg","followers_url":"https://api.github.com/users/eyberg/followers","following_url":"https://api.github.com/users/eyberg/following{/other_user}","gists_url":"https://api.github.com/users/eyberg/gists{/gist_id}","starred_url":"https://api.github.com/users/eyberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eyberg/subscriptions","organizations_url":"https://api.github.com/users/eyberg/orgs","repos_url":"https://api.github.com/users/eyberg/repos","events_url":"https://api.github.com/users/eyberg/events{/privacy}","received_events_url":"https://api.github.com/users/eyberg/received_events","type":"User","site_admin":false},"labels":[{"id":1113068036,"node_id":"MDU6TGFiZWwxMTEzMDY4MDM2","url":"https://api.github.com/repos/nanovms/nanos/labels/syscall","name":"syscall","color":"e579ce","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-05-14T01:42:59Z","updated_at":"2019-12-03T17:12:40Z","closed_at":"2019-12-03T17:12:40Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"i don't see a reason to do anything more w/these than provide stubs - lwan wants them\r\n\r\n```\r\neyberg@s1:~/lwan/lwan/build/src/bin/lwan$ cat config.json\r\n{\r\n  \"Args\": [\"./lwan\", \"-c\", \"/lwan.conf\"],\r\n  \"Files\": [\"lwan.conf\"]\r\n}\r\neyberg@s1:~/lwan/lwan/build/src/bin/lwan$ ops run -d -c config.json -p 8080 lwan\r\n```\r\n\r\n```\r\n1 capset\r\n1 nosyscall capset\r\n1 write\r\nLoading configuration file: /lwan.conf\r\nCould not drop capabilities: Function not implemented (error number 38)\r\n1 direct return: 111, rsp 0x769fc870\r\n1 exit_group\r\nexit status 3\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/nanovms/nanos/issues/679","repository_url":"https://api.github.com/repos/nanovms/nanos","labels_url":"https://api.github.com/repos/nanovms/nanos/issues/679/labels{/name}","comments_url":"https://api.github.com/repos/nanovms/nanos/issues/679/comments","events_url":"https://api.github.com/repos/nanovms/nanos/issues/679/events","html_url":"https://github.com/nanovms/nanos/issues/679","id":427919666,"node_id":"MDU6SXNzdWU0Mjc5MTk2NjY=","number":679,"title":"eventfd support","user":{"login":"eyberg","id":22410,"node_id":"MDQ6VXNlcjIyNDEw","avatar_url":"https://avatars3.githubusercontent.com/u/22410?v=4","gravatar_id":"","url":"https://api.github.com/users/eyberg","html_url":"https://github.com/eyberg","followers_url":"https://api.github.com/users/eyberg/followers","following_url":"https://api.github.com/users/eyberg/following{/other_user}","gists_url":"https://api.github.com/users/eyberg/gists{/gist_id}","starred_url":"https://api.github.com/users/eyberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eyberg/subscriptions","organizations_url":"https://api.github.com/users/eyberg/orgs","repos_url":"https://api.github.com/users/eyberg/repos","events_url":"https://api.github.com/users/eyberg/events{/privacy}","received_events_url":"https://api.github.com/users/eyberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"francescolavra","id":10710577,"node_id":"MDQ6VXNlcjEwNzEwNTc3","avatar_url":"https://avatars2.githubusercontent.com/u/10710577?v=4","gravatar_id":"","url":"https://api.github.com/users/francescolavra","html_url":"https://github.com/francescolavra","followers_url":"https://api.github.com/users/francescolavra/followers","following_url":"https://api.github.com/users/francescolavra/following{/other_user}","gists_url":"https://api.github.com/users/francescolavra/gists{/gist_id}","starred_url":"https://api.github.com/users/francescolavra/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/francescolavra/subscriptions","organizations_url":"https://api.github.com/users/francescolavra/orgs","repos_url":"https://api.github.com/users/francescolavra/repos","events_url":"https://api.github.com/users/francescolavra/events{/privacy}","received_events_url":"https://api.github.com/users/francescolavra/received_events","type":"User","site_admin":false},"assignees":[{"login":"francescolavra","id":10710577,"node_id":"MDQ6VXNlcjEwNzEwNTc3","avatar_url":"https://avatars2.githubusercontent.com/u/10710577?v=4","gravatar_id":"","url":"https://api.github.com/users/francescolavra","html_url":"https://github.com/francescolavra","followers_url":"https://api.github.com/users/francescolavra/followers","following_url":"https://api.github.com/users/francescolavra/following{/other_user}","gists_url":"https://api.github.com/users/francescolavra/gists{/gist_id}","starred_url":"https://api.github.com/users/francescolavra/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/francescolavra/subscriptions","organizations_url":"https://api.github.com/users/francescolavra/orgs","repos_url":"https://api.github.com/users/francescolavra/repos","events_url":"https://api.github.com/users/francescolavra/events{/privacy}","received_events_url":"https://api.github.com/users/francescolavra/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2019-04-01T21:26:34Z","updated_at":"2019-05-09T18:15:29Z","closed_at":"2019-05-09T18:15:29Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"this is a newer lighter-weight way of signaling instead of using pipes\r\n\r\nhttps://github.com/lpereira/lwan uses it\r\n\r\n```\r\n 1 sched_setscheduler\r\n 1 nosyscall sched_setscheduler\r\n 1 epoll_create1\r\n 1 direct return: 5, rsp 0x10163dc28\r\n 1 eventfd2\r\n 1 nosyscall eventfd2\r\n 1 write\r\nLoading configuration file: lwan.conf\r\nCould not open configuration file: lwan.conf: No such file or directory (error number 2)\r\nCould not obtain maximum number of file descriptors. Assuming 256: Function not implemented (error number 38)\r\nUsing 2 threads, maximum 128 sockets per thread\r\neventfd: Function not implemented (error number 38)\r\n 1 direct return: 337, rsp 0x10163d950\r\n 1 exit_group\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/neovim/neovim/issues/6580","repository_url":"https://api.github.com/repos/neovim/neovim","labels_url":"https://api.github.com/repos/neovim/neovim/issues/6580/labels{/name}","comments_url":"https://api.github.com/repos/neovim/neovim/issues/6580/comments","events_url":"https://api.github.com/repos/neovim/neovim/issues/6580/events","html_url":"https://github.com/neovim/neovim/issues/6580","id":223846853,"node_id":"MDU6SXNzdWUyMjM4NDY4NTM=","number":6580,"title":"Lua \"stdlib\" (standard library)","user":{"login":"justinmk","id":1359421,"node_id":"MDQ6VXNlcjEzNTk0MjE=","avatar_url":"https://avatars0.githubusercontent.com/u/1359421?v=4","gravatar_id":"","url":"https://api.github.com/users/justinmk","html_url":"https://github.com/justinmk","followers_url":"https://api.github.com/users/justinmk/followers","following_url":"https://api.github.com/users/justinmk/following{/other_user}","gists_url":"https://api.github.com/users/justinmk/gists{/gist_id}","starred_url":"https://api.github.com/users/justinmk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinmk/subscriptions","organizations_url":"https://api.github.com/users/justinmk/orgs","repos_url":"https://api.github.com/users/justinmk/repos","events_url":"https://api.github.com/users/justinmk/events{/privacy}","received_events_url":"https://api.github.com/users/justinmk/received_events","type":"User","site_admin":false},"labels":[{"id":77997476,"node_id":"MDU6TGFiZWw3Nzk5NzQ3Ng==","url":"https://api.github.com/repos/neovim/neovim/labels/enhancement","name":"enhancement","color":"c2e0c6","default":true,"description":""},{"id":573222693,"node_id":"MDU6TGFiZWw1NzMyMjI2OTM=","url":"https://api.github.com/repos/neovim/neovim/labels/lua","name":"lua","color":"c5def5","default":false,"description":null},{"id":120251370,"node_id":"MDU6TGFiZWwxMjAyNTEzNzA=","url":"https://api.github.com/repos/neovim/neovim/labels/runtime","name":"runtime","color":"c5def5","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/neovim/neovim/milestones/21","html_url":"https://github.com/neovim/neovim/milestone/21","labels_url":"https://api.github.com/repos/neovim/neovim/milestones/21/labels","id":3930226,"node_id":"MDk6TWlsZXN0b25lMzkzMDIyNg==","number":21,"title":"0.4","description":"","creator":{"login":"justinmk","id":1359421,"node_id":"MDQ6VXNlcjEzNTk0MjE=","avatar_url":"https://avatars0.githubusercontent.com/u/1359421?v=4","gravatar_id":"","url":"https://api.github.com/users/justinmk","html_url":"https://github.com/justinmk","followers_url":"https://api.github.com/users/justinmk/followers","following_url":"https://api.github.com/users/justinmk/following{/other_user}","gists_url":"https://api.github.com/users/justinmk/gists{/gist_id}","starred_url":"https://api.github.com/users/justinmk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinmk/subscriptions","organizations_url":"https://api.github.com/users/justinmk/orgs","repos_url":"https://api.github.com/users/justinmk/repos","events_url":"https://api.github.com/users/justinmk/events{/privacy}","received_events_url":"https://api.github.com/users/justinmk/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":218,"state":"closed","created_at":"2018-12-30T22:10:04Z","updated_at":"2020-01-31T07:08:01Z","due_on":"2019-09-15T07:00:00Z","closed_at":"2019-09-18T04:28:47Z"},"comments":33,"created_at":"2017-04-24T14:52:45Z","updated_at":"2019-05-18T19:57:27Z","closed_at":"2019-05-18T19:51:24Z","author_association":"MEMBER","active_lock_reason":null,"body":"We may want to include some small, robust, lua modules as part of the Nvim runtime. (Keeping in mind: where possible it is preferable to have Nvim be the \"standard library\", i.e. wrap internal vim/libuv/API functions.)\r\n\r\nPossible candidates:\r\n\r\n- http://leafo.net/lapis/reference/utilities.html\r\n- https://github.com/torch/paths\r\n- https://github.com/jaawerth/fennel-nvim\r\n- https://github.com/bakpakin/Fennel (pretty print, repl)\r\n- https://github.com/luafun/luafun util lib\r\n- https://github.com/rxi/lume util lib\r\n- howl editor: https://github.com/howl-editor/howl/tree/master/lib/howl/util\r\n- similar to penlight? https://github.com/luapower/luapower-all\r\n- webserver: https://github.com/lpereira/lwan\r\n\r\n\r\nRelated: https://github.com/neovim/neovim/pull/8677\r\nRelated: https://github.com/neovim/neovim/pull/7123\r\n\r\n### Nvim-Lua guidelines\r\n\r\n- https://github.com/neovim/neovim/pull/8677#issuecomment-402102325\r\n- https://github.com/neovim/neovim/pull/8677#issuecomment-403737119\r\n\r\n### Lua doctsrings\r\n\r\n- ~~Looks like [ldoc](https://github.com/stevedonovan/ldoc) is the least-terrible solution. (It's not actively maintained but it's still used by penlight, and we only need it for the [parsed info](https://stevedonovan.github.io/ldoc/manual/doc.md.html#Internal_Data_Representation), not the other fancy features).~~ Resolved by https://github.com/neovim/neovim/pull/9740\r\n\r\n### Lua \"module\" policy\r\n\r\n- Most functions should live directly on `vim.`, not in child modules. We own the `vim.*` module; the only \"forbidden\" names are those claimed by legacy `if_lua`:\r\n   ```\r\n   $ vim\r\n   :lua for k,v in pairs(vim) do print(k) end\r\n   buffer\r\n   open\r\n   window\r\n   lastline\r\n   firstline\r\n   type\r\n   line\r\n   eval\r\n   dict\r\n   beep\r\n   list\r\n   command\r\n   ```\r\n- Any child modules (`vim.*)` that we _do_ introduce should not be named `vim.helpers`, but something meaningful. And they should be rare.\r\n\r\nLua code can live in one of two places: \r\n\r\n1. The runtime (`runtime/lua/vim/`), thus not available with `nvim -u NONE`. \r\n    - This is for \"nice to have, but non-essential\" features. E.g. the `inspect` and `lpeg` modules live here.\r\n2. Compiled-into `nvim` itself (`src/nvim/lua/`).\r\n    - **Guideline:** \"If there's doubt, put it in the runtime\".","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/netdata/netdata/issues/532","repository_url":"https://api.github.com/repos/netdata/netdata","labels_url":"https://api.github.com/repos/netdata/netdata/issues/532/labels{/name}","comments_url":"https://api.github.com/repos/netdata/netdata/issues/532/comments","events_url":"https://api.github.com/repos/netdata/netdata/issues/532/events","html_url":"https://github.com/netdata/netdata/issues/532","id":159719479,"node_id":"MDU6SXNzdWUxNTk3MTk0Nzk=","number":532,"title":"web server optimization","user":{"login":"ktsaou","id":2662304,"node_id":"MDQ6VXNlcjI2NjIzMDQ=","avatar_url":"https://avatars3.githubusercontent.com/u/2662304?v=4","gravatar_id":"","url":"https://api.github.com/users/ktsaou","html_url":"https://github.com/ktsaou","followers_url":"https://api.github.com/users/ktsaou/followers","following_url":"https://api.github.com/users/ktsaou/following{/other_user}","gists_url":"https://api.github.com/users/ktsaou/gists{/gist_id}","starred_url":"https://api.github.com/users/ktsaou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ktsaou/subscriptions","organizations_url":"https://api.github.com/users/ktsaou/orgs","repos_url":"https://api.github.com/users/ktsaou/repos","events_url":"https://api.github.com/users/ktsaou/events{/privacy}","received_events_url":"https://api.github.com/users/ktsaou/received_events","type":"User","site_admin":false},"labels":[{"id":1131633776,"node_id":"MDU6TGFiZWwxMTMxNjMzNzc2","url":"https://api.github.com/repos/netdata/netdata/labels/area/daemon","name":"area/daemon","color":"0f34c6","default":false,"description":""},{"id":1065924531,"node_id":"MDU6TGFiZWwxMDY1OTI0NTMx","url":"https://api.github.com/repos/netdata/netdata/labels/area/web","name":"area/web","color":"0f34c6","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-06-10T20:44:52Z","updated_at":"2018-11-18T23:07:26Z","closed_at":"2018-11-18T23:07:26Z","author_association":"MEMBER","active_lock_reason":null,"body":"Today netdata supports 2 kinds of web servers:\n1. single threaded\n2. multi threaded\n## single threaded web server\n- [ ] it is implemented using non-blocking I/O but there are a few points that are not implemented well, like sending the HTTP header to the client. We should use `writev()` instead of `send()` to properly handle multiple buffers.\n## multi threaded server web server\n\nThe multi threaded web server spawns a thread for each client socket. Although this provides a good performance, it wastes resources.\n- [ ] the multi-threaded web server should spawn a predefined number of threads (e.g. = number of CPUs). This would greatly decrease context switching under heavy load and allow the web server to process more requests.\n- [ ] Since each thread should process multiple requests, it should use the optimal operating system solution for handling multiple sockets. In linux this is `epoll()`. In other systems we should emulate the `epoll()` interface (check this implementation: https://github.com/lpereira/lwan/blob/master/common/epoll-bsd.c)\n\n---\n\nother options we could consider:\n- https://github.com/lpereira/lwan - they claim their web server can serve up to 320.000 requests/s on a core i7 laptop.\n- https://github.com/nghttp2/nghttp2 - will provide an HTTP/2 interface\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/HalosGhost/halosgho.st/issues/8","repository_url":"https://api.github.com/repos/HalosGhost/halosgho.st","labels_url":"https://api.github.com/repos/HalosGhost/halosgho.st/issues/8/labels{/name}","comments_url":"https://api.github.com/repos/HalosGhost/halosgho.st/issues/8/comments","events_url":"https://api.github.com/repos/HalosGhost/halosgho.st/issues/8/events","html_url":"https://github.com/HalosGhost/halosgho.st/issues/8","id":354168826,"node_id":"MDU6SXNzdWUzNTQxNjg4MjY=","number":8,"title":"TLS","user":{"login":"HalosGhost","id":49465,"node_id":"MDQ6VXNlcjQ5NDY1","avatar_url":"https://avatars3.githubusercontent.com/u/49465?v=4","gravatar_id":"","url":"https://api.github.com/users/HalosGhost","html_url":"https://github.com/HalosGhost","followers_url":"https://api.github.com/users/HalosGhost/followers","following_url":"https://api.github.com/users/HalosGhost/following{/other_user}","gists_url":"https://api.github.com/users/HalosGhost/gists{/gist_id}","starred_url":"https://api.github.com/users/HalosGhost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HalosGhost/subscriptions","organizations_url":"https://api.github.com/users/HalosGhost/orgs","repos_url":"https://api.github.com/users/HalosGhost/repos","events_url":"https://api.github.com/users/HalosGhost/events{/privacy}","received_events_url":"https://api.github.com/users/HalosGhost/received_events","type":"User","site_admin":false},"labels":[{"id":271462311,"node_id":"MDU6TGFiZWwyNzE0NjIzMTE=","url":"https://api.github.com/repos/HalosGhost/halosgho.st/labels/Feature","name":"Feature","color":"207de5","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-08-27T03:37:35Z","updated_at":"2018-09-01T23:37:45Z","closed_at":"2018-09-01T23:37:45Z","author_association":"OWNER","active_lock_reason":null,"body":"At the moment (as mentioned in #6), we are serving exclusively over HTTP.\r\n\r\nSo, it looks like we now have a reasonable option:\r\n\r\n- [x] https://github.com/lpereira/lwan/issues/243\r\n- [x] implement a small lwan instance:\r\n   - [x] serve files (without indexing) on `/.well-known/acme-challenge`\r\n   - [x] redirect all other paths to `https://halosgho.st` \r\n   - [x] listen on `8080` and redirect traffic from `80` with `nftables`\r\n- [x] move current lwan instance to `8443` (traffic redirected via [varnish/hitch](https://github.com/varnish/hitch) from `443` using settings derived from [mozilla's TLS config generator](https://mozilla.github.io/server-side-tls/ssl-config-generator/))\r\n- [x] leverage [kristapsdz/acme-client-portable](https://github.com/kristapsdz/acme-client-portable) for the LE challenge\r\n   - [x] Setup auto-renew once it has been determined to be functional\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/231","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/231/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/231/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/231/events","html_url":"https://github.com/lpereira/lwan/issues/231","id":320907620,"node_id":"MDU6SXNzdWUzMjA5MDc2MjA=","number":231,"title":"Coroutines can be used standalonish?","user":{"login":"Globik","id":8457017,"node_id":"MDQ6VXNlcjg0NTcwMTc=","avatar_url":"https://avatars3.githubusercontent.com/u/8457017?v=4","gravatar_id":"","url":"https://api.github.com/users/Globik","html_url":"https://github.com/Globik","followers_url":"https://api.github.com/users/Globik/followers","following_url":"https://api.github.com/users/Globik/following{/other_user}","gists_url":"https://api.github.com/users/Globik/gists{/gist_id}","starred_url":"https://api.github.com/users/Globik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Globik/subscriptions","organizations_url":"https://api.github.com/users/Globik/orgs","repos_url":"https://api.github.com/users/Globik/repos","events_url":"https://api.github.com/users/Globik/events{/privacy}","received_events_url":"https://api.github.com/users/Globik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-05-07T18:30:31Z","updated_at":"2018-06-22T09:55:30Z","closed_at":"2018-06-09T20:42:47Z","author_association":"NONE","active_lock_reason":null,"body":"I'm wondering if lwan's coroutines can work standalone from lwan server? Let's say as a library? Can be compiled on his own or it's impossible without the lwan's whole stuff?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/143","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/143/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/143/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/143/events","html_url":"https://github.com/lpereira/lwan/issues/143","id":155012346,"node_id":"MDU6SXNzdWUxNTUwMTIzNDY=","number":143,"title":"Release tags for lwan","user":{"login":"eirnym","id":485399,"node_id":"MDQ6VXNlcjQ4NTM5OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/485399?v=4","gravatar_id":"","url":"https://api.github.com/users/eirnym","html_url":"https://github.com/eirnym","followers_url":"https://api.github.com/users/eirnym/followers","following_url":"https://api.github.com/users/eirnym/following{/other_user}","gists_url":"https://api.github.com/users/eirnym/gists{/gist_id}","starred_url":"https://api.github.com/users/eirnym/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eirnym/subscriptions","organizations_url":"https://api.github.com/users/eirnym/orgs","repos_url":"https://api.github.com/users/eirnym/repos","events_url":"https://api.github.com/users/eirnym/events{/privacy}","received_events_url":"https://api.github.com/users/eirnym/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":26,"created_at":"2016-05-16T11:36:39Z","updated_at":"2017-12-11T09:27:49Z","closed_at":"2017-12-10T21:24:32Z","author_association":"NONE","active_lock_reason":null,"body":"I want to maintain `lwan` port for `FreeBSD`, but is has to use `git` do download fixed commits to download source and apply patches to. \n\nCould you create tags/releases to make versioning much easer.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/200","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/200/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/200/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/200/events","html_url":"https://github.com/lpereira/lwan/issues/200","id":229772026,"node_id":"MDU6SXNzdWUyMjk3NzIwMjY=","number":200,"title":"Bad directory listing of / in lwan-mod-serve-files.c","user":{"login":"dubhater","id":1739488,"node_id":"MDQ6VXNlcjE3Mzk0ODg=","avatar_url":"https://avatars3.githubusercontent.com/u/1739488?v=4","gravatar_id":"","url":"https://api.github.com/users/dubhater","html_url":"https://github.com/dubhater","followers_url":"https://api.github.com/users/dubhater/followers","following_url":"https://api.github.com/users/dubhater/following{/other_user}","gists_url":"https://api.github.com/users/dubhater/gists{/gist_id}","starred_url":"https://api.github.com/users/dubhater/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dubhater/subscriptions","organizations_url":"https://api.github.com/users/dubhater/orgs","repos_url":"https://api.github.com/users/dubhater/repos","events_url":"https://api.github.com/users/dubhater/events{/privacy}","received_events_url":"https://api.github.com/users/dubhater/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-05-18T18:57:52Z","updated_at":"2017-07-15T19:03:07Z","closed_at":"2017-07-15T19:02:40Z","author_association":"NONE","active_lock_reason":null,"body":"I'm running lwan like this for the purpose of serving a few files:\r\n```sh\r\nlwan --root . --listen localhost:1234\r\n```\r\nThe directory listing of / contains unusable links. They look like this:\r\n```html\r\n    <tr>\r\n      <td><img src=\"/icons/file.png\" alt=\"FILE\"></td>\r\n      <td><a href=\"&#x2f;/PKGBUILD\">PKGBUILD</a></td>\r\n      <td>application/octet-stream</td>\r\n      <td>901B</td>\r\n    </tr>\r\n    <tr>\r\n      <td><img src=\"/icons/folder.png\" alt=\"DIR\"></td>\r\n      <td><a href=\"&#x2f;/src\">src</a></td>\r\n      <td>directory</td>\r\n      <td>17B</td>\r\n    </tr>\r\n```\r\nIf I click on PKGBUILD, both Firefox and Chromium try to open ``http://PKGBUILD`` instead of ``http://localhost:1234/PKGBUILD``.\r\n\r\nIf I type ``http://localhost:1234/src`` in the address bar, the directory listing for that folder contains proper links.\r\n\r\nI tried removing the slash at column 38 here: https://github.com/lpereira/lwan/blob/9c2a7456b3e527d1186cb70bae3c6d4c48d2124e/common/lwan-mod-serve-files.c#L211 That \"fixed\" the links in /, but broke the links in /src/.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/dixinren/A-Third-party-Static-Myi-Server/issues/1","repository_url":"https://api.github.com/repos/dixinren/A-Third-party-Static-Myi-Server","labels_url":"https://api.github.com/repos/dixinren/A-Third-party-Static-Myi-Server/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/dixinren/A-Third-party-Static-Myi-Server/issues/1/comments","events_url":"https://api.github.com/repos/dixinren/A-Third-party-Static-Myi-Server/issues/1/events","html_url":"https://github.com/dixinren/A-Third-party-Static-Myi-Server/issues/1","id":220386044,"node_id":"MDU6SXNzdWUyMjAzODYwNDQ=","number":1,"title":"干的漂亮","user":{"login":"cgoxopx","id":13763798,"node_id":"MDQ6VXNlcjEzNzYzNzk4","avatar_url":"https://avatars1.githubusercontent.com/u/13763798?v=4","gravatar_id":"","url":"https://api.github.com/users/cgoxopx","html_url":"https://github.com/cgoxopx","followers_url":"https://api.github.com/users/cgoxopx/followers","following_url":"https://api.github.com/users/cgoxopx/following{/other_user}","gists_url":"https://api.github.com/users/cgoxopx/gists{/gist_id}","starred_url":"https://api.github.com/users/cgoxopx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgoxopx/subscriptions","organizations_url":"https://api.github.com/users/cgoxopx/orgs","repos_url":"https://api.github.com/users/cgoxopx/repos","events_url":"https://api.github.com/users/cgoxopx/events{/privacy}","received_events_url":"https://api.github.com/users/cgoxopx/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-04-08T08:44:22Z","updated_at":"2017-05-28T02:25:29Z","closed_at":"2017-05-28T02:25:29Z","author_association":"NONE","active_lock_reason":null,"body":"干的漂亮\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/193","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/193/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/193/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/193/events","html_url":"https://github.com/lpereira/lwan/issues/193","id":221963164,"node_id":"MDU6SXNzdWUyMjE5NjMxNjQ=","number":193,"title":"UNLIKELY","user":{"login":"indieyourself","id":20253063,"node_id":"MDQ6VXNlcjIwMjUzMDYz","avatar_url":"https://avatars3.githubusercontent.com/u/20253063?v=4","gravatar_id":"","url":"https://api.github.com/users/indieyourself","html_url":"https://github.com/indieyourself","followers_url":"https://api.github.com/users/indieyourself/followers","following_url":"https://api.github.com/users/indieyourself/following{/other_user}","gists_url":"https://api.github.com/users/indieyourself/gists{/gist_id}","starred_url":"https://api.github.com/users/indieyourself/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/indieyourself/subscriptions","organizations_url":"https://api.github.com/users/indieyourself/orgs","repos_url":"https://api.github.com/users/indieyourself/repos","events_url":"https://api.github.com/users/indieyourself/events{/privacy}","received_events_url":"https://api.github.com/users/indieyourself/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-04-15T17:58:49Z","updated_at":"2017-04-16T04:18:29Z","closed_at":"2017-04-16T04:18:29Z","author_association":"NONE","active_lock_reason":null,"body":"https://github.com/lpereira/lwan/blob/master/common/lwan.h#L113\r\n\r\n#define UNLIKELY(x)\tLIKELY_IS( (x), 0)  => LIKELY_IS( !!(x), 0)\r\n\r\nShould we add \"!!\" before x ? ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/183","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/183/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/183/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/183/events","html_url":"https://github.com/lpereira/lwan/issues/183","id":210462913,"node_id":"MDU6SXNzdWUyMTA0NjI5MTM=","number":183,"title":"Custom Paths","user":{"login":"GuacheSuede","id":5565823,"node_id":"MDQ6VXNlcjU1NjU4MjM=","avatar_url":"https://avatars3.githubusercontent.com/u/5565823?v=4","gravatar_id":"","url":"https://api.github.com/users/GuacheSuede","html_url":"https://github.com/GuacheSuede","followers_url":"https://api.github.com/users/GuacheSuede/followers","following_url":"https://api.github.com/users/GuacheSuede/following{/other_user}","gists_url":"https://api.github.com/users/GuacheSuede/gists{/gist_id}","starred_url":"https://api.github.com/users/GuacheSuede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GuacheSuede/subscriptions","organizations_url":"https://api.github.com/users/GuacheSuede/orgs","repos_url":"https://api.github.com/users/GuacheSuede/repos","events_url":"https://api.github.com/users/GuacheSuede/events{/privacy}","received_events_url":"https://api.github.com/users/GuacheSuede/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2017-02-27T11:51:50Z","updated_at":"2017-02-27T16:44:30Z","closed_at":"2017-02-27T16:42:00Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi Ipereira,\r\nhow does one go about writing custom paths such as `/hello/John` and getting `John` as a param,\r\nand different  paths leading to different handlers ?\r\n\r\nThank You","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/daedric/httpp/issues/24","repository_url":"https://api.github.com/repos/daedric/httpp","labels_url":"https://api.github.com/repos/daedric/httpp/issues/24/labels{/name}","comments_url":"https://api.github.com/repos/daedric/httpp/issues/24/comments","events_url":"https://api.github.com/repos/daedric/httpp/issues/24/events","html_url":"https://github.com/daedric/httpp/issues/24","id":203012311,"node_id":"MDU6SXNzdWUyMDMwMTIzMTE=","number":24,"title":"Can I use it in C?","user":{"login":"winster","id":2383613,"node_id":"MDQ6VXNlcjIzODM2MTM=","avatar_url":"https://avatars1.githubusercontent.com/u/2383613?v=4","gravatar_id":"","url":"https://api.github.com/users/winster","html_url":"https://github.com/winster","followers_url":"https://api.github.com/users/winster/followers","following_url":"https://api.github.com/users/winster/following{/other_user}","gists_url":"https://api.github.com/users/winster/gists{/gist_id}","starred_url":"https://api.github.com/users/winster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/winster/subscriptions","organizations_url":"https://api.github.com/users/winster/orgs","repos_url":"https://api.github.com/users/winster/repos","events_url":"https://api.github.com/users/winster/events{/privacy}","received_events_url":"https://api.github.com/users/winster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-01-25T04:50:24Z","updated_at":"2017-01-25T07:10:34Z","closed_at":"2017-01-25T07:10:34Z","author_association":"NONE","active_lock_reason":null,"body":"","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/140","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/140/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/140/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/140/events","html_url":"https://github.com/lpereira/lwan/issues/140","id":149800969,"node_id":"MDU6SXNzdWUxNDk4MDA5Njk=","number":140,"title":"Typo in lwan_sendfile","user":{"login":"ewewukek","id":18519775,"node_id":"MDQ6VXNlcjE4NTE5Nzc1","avatar_url":"https://avatars0.githubusercontent.com/u/18519775?v=4","gravatar_id":"","url":"https://api.github.com/users/ewewukek","html_url":"https://github.com/ewewukek","followers_url":"https://api.github.com/users/ewewukek/followers","following_url":"https://api.github.com/users/ewewukek/following{/other_user}","gists_url":"https://api.github.com/users/ewewukek/gists{/gist_id}","starred_url":"https://api.github.com/users/ewewukek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ewewukek/subscriptions","organizations_url":"https://api.github.com/users/ewewukek/orgs","repos_url":"https://api.github.com/users/ewewukek/repos","events_url":"https://api.github.com/users/ewewukek/events{/privacy}","received_events_url":"https://api.github.com/users/ewewukek/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-20T15:19:11Z","updated_at":"2016-04-21T13:51:08Z","closed_at":"2016-04-21T13:51:08Z","author_association":"NONE","active_lock_reason":null,"body":"After some struggle with receiving incomplete files found this:\nhttps://github.com/lpereira/lwan/blob/master/common/lwan-io-wrappers.c#L202\nI beleive it was meant to be:\nto_be_written -= (size_t)written;\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/136","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/136/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/136/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/136/events","html_url":"https://github.com/lpereira/lwan/issues/136","id":146949079,"node_id":"MDU6SXNzdWUxNDY5NDkwNzk=","number":136,"title":"How to handle content types other than application/x-www-form-urlencoded?","user":{"login":"matt-42","id":846584,"node_id":"MDQ6VXNlcjg0NjU4NA==","avatar_url":"https://avatars2.githubusercontent.com/u/846584?v=4","gravatar_id":"","url":"https://api.github.com/users/matt-42","html_url":"https://github.com/matt-42","followers_url":"https://api.github.com/users/matt-42/followers","following_url":"https://api.github.com/users/matt-42/following{/other_user}","gists_url":"https://api.github.com/users/matt-42/gists{/gist_id}","starred_url":"https://api.github.com/users/matt-42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matt-42/subscriptions","organizations_url":"https://api.github.com/users/matt-42/orgs","repos_url":"https://api.github.com/users/matt-42/repos","events_url":"https://api.github.com/users/matt-42/events{/privacy}","received_events_url":"https://api.github.com/users/matt-42/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-08T14:48:04Z","updated_at":"2016-04-09T23:09:43Z","closed_at":"2016-04-09T23:09:43Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi,\n\nI'd like to send post params via the application/json content type. But it seems like lwan only handles urlencoded post data: https://github.com/lpereira/lwan/blob/master/common/lwan-request.c#L424\n\nIs it possible to get direct access to the request body to manually parse the POST json object?\nAlso, it would be nice to have access to the content type header.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/matt-42/silicon/issues/12","repository_url":"https://api.github.com/repos/matt-42/silicon","labels_url":"https://api.github.com/repos/matt-42/silicon/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/matt-42/silicon/issues/12/comments","events_url":"https://api.github.com/repos/matt-42/silicon/issues/12/events","html_url":"https://github.com/matt-42/silicon/issues/12","id":71195292,"node_id":"MDU6SXNzdWU3MTE5NTI5Mg==","number":12,"title":"add lwan as a backend?","user":{"login":"byzhang","id":872149,"node_id":"MDQ6VXNlcjg3MjE0OQ==","avatar_url":"https://avatars0.githubusercontent.com/u/872149?v=4","gravatar_id":"","url":"https://api.github.com/users/byzhang","html_url":"https://github.com/byzhang","followers_url":"https://api.github.com/users/byzhang/followers","following_url":"https://api.github.com/users/byzhang/following{/other_user}","gists_url":"https://api.github.com/users/byzhang/gists{/gist_id}","starred_url":"https://api.github.com/users/byzhang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/byzhang/subscriptions","organizations_url":"https://api.github.com/users/byzhang/orgs","repos_url":"https://api.github.com/users/byzhang/repos","events_url":"https://api.github.com/users/byzhang/events{/privacy}","received_events_url":"https://api.github.com/users/byzhang/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"matt-42","id":846584,"node_id":"MDQ6VXNlcjg0NjU4NA==","avatar_url":"https://avatars2.githubusercontent.com/u/846584?v=4","gravatar_id":"","url":"https://api.github.com/users/matt-42","html_url":"https://github.com/matt-42","followers_url":"https://api.github.com/users/matt-42/followers","following_url":"https://api.github.com/users/matt-42/following{/other_user}","gists_url":"https://api.github.com/users/matt-42/gists{/gist_id}","starred_url":"https://api.github.com/users/matt-42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matt-42/subscriptions","organizations_url":"https://api.github.com/users/matt-42/orgs","repos_url":"https://api.github.com/users/matt-42/repos","events_url":"https://api.github.com/users/matt-42/events{/privacy}","received_events_url":"https://api.github.com/users/matt-42/received_events","type":"User","site_admin":false},"assignees":[{"login":"matt-42","id":846584,"node_id":"MDQ6VXNlcjg0NjU4NA==","avatar_url":"https://avatars2.githubusercontent.com/u/846584?v=4","gravatar_id":"","url":"https://api.github.com/users/matt-42","html_url":"https://github.com/matt-42","followers_url":"https://api.github.com/users/matt-42/followers","following_url":"https://api.github.com/users/matt-42/following{/other_user}","gists_url":"https://api.github.com/users/matt-42/gists{/gist_id}","starred_url":"https://api.github.com/users/matt-42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matt-42/subscriptions","organizations_url":"https://api.github.com/users/matt-42/orgs","repos_url":"https://api.github.com/users/matt-42/repos","events_url":"https://api.github.com/users/matt-42/events{/privacy}","received_events_url":"https://api.github.com/users/matt-42/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2015-04-27T06:50:09Z","updated_at":"2016-02-16T17:08:19Z","closed_at":"2016-02-16T17:08:19Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Could you please consider adding lwan (https://github.com/lpereira/lwan) as a backend? lwan has some good performance optimization e.g. cpu branch prediction, json encoder/decoder, and hence faster than MHD in several benchmark tests.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/lpereira/lwan/issues/126","repository_url":"https://api.github.com/repos/lpereira/lwan","labels_url":"https://api.github.com/repos/lpereira/lwan/issues/126/labels{/name}","comments_url":"https://api.github.com/repos/lpereira/lwan/issues/126/comments","events_url":"https://api.github.com/repos/lpereira/lwan/issues/126/events","html_url":"https://github.com/lpereira/lwan/issues/126","id":137899630,"node_id":"MDU6SXNzdWUxMzc4OTk2MzA=","number":126,"title":"Bug: lwan_trie_node_destroy shoud not free user data with hash_free","user":{"login":"matt-42","id":846584,"node_id":"MDQ6VXNlcjg0NjU4NA==","avatar_url":"https://avatars2.githubusercontent.com/u/846584?v=4","gravatar_id":"","url":"https://api.github.com/users/matt-42","html_url":"https://github.com/matt-42","followers_url":"https://api.github.com/users/matt-42/followers","following_url":"https://api.github.com/users/matt-42/following{/other_user}","gists_url":"https://api.github.com/users/matt-42/gists{/gist_id}","starred_url":"https://api.github.com/users/matt-42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matt-42/subscriptions","organizations_url":"https://api.github.com/users/matt-42/orgs","repos_url":"https://api.github.com/users/matt-42/repos","events_url":"https://api.github.com/users/matt-42/events{/privacy}","received_events_url":"https://api.github.com/users/matt-42/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-03-02T15:08:00Z","updated_at":"2016-03-03T02:02:29Z","closed_at":"2016-03-03T02:02:29Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"You should let the user free the user provided data in lwan_url_map_t and not try to free it with hash_free here:\nhttps://github.com/lpereira/lwan/blob/af26c13b65d8e11c439d98f911dc7e22dc87d320/common/lwan.c#L135. \n\nIt seems like the freegoip.c is affected by this problem:\nhttps://github.com/lpereira/lwan/blob/07a19fc99826e0aafecbb0495e9cfe5f78179586/freegeoip/freegeoip.c#L429\n\nThe free is located here:\nhttps://github.com/lpereira/lwan/blob/dcd0431a1d2b8cb0128d964a68a3e7934d8641de/common/lwan-trie.c#L166\n\nA workaround that worked for me: Manually unsetting the data pointer before shuting down the server:\n\n`\n\n  inline void\n  lwan_unset_urlmap_data_rec(lwan_trie_t *trie, lwan_trie_node_t *node)\n  {\n    if (!node)\n      return;\n\n```\nint32_t nodes_unset = node->ref_count;\n\nfor (lwan_trie_leaf_t *leaf = node->leaf; leaf;) {\n  lwan_trie_leaf_t *tmp = leaf->next;\n\n  lwan_url_map_t* urlmap = (lwan_url_map_t*) leaf->data;\n  urlmap->data = NULL;\n\n  leaf = tmp;\n}\n\nfor (int32_t i = 0; nodes_unset > 0 && i < 8; i++) {\n  if (node->next[i]) {\n    lwan_unset_urlmap_data_rec(trie, node->next[i]);\n    --nodes_unset;\n  }\n}\n```\n\n  }\n\n  inline void lwan_unset_urlmap_data(lwan_trie_t *trie)\n  {\n    if (!trie || !trie->root)\n      return;  \n\n```\nlwan_unset_urlmap_data_rec(trie, trie->root);    \n```\n\n  }\n\n`\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/solettaproject/soletta/issues/1125","repository_url":"https://api.github.com/repos/solettaproject/soletta","labels_url":"https://api.github.com/repos/solettaproject/soletta/issues/1125/labels{/name}","comments_url":"https://api.github.com/repos/solettaproject/soletta/issues/1125/comments","events_url":"https://api.github.com/repos/solettaproject/soletta/issues/1125/events","html_url":"https://github.com/solettaproject/soletta/issues/1125","id":119213555,"node_id":"MDU6SXNzdWUxMTkyMTM1NTU=","number":1125,"title":"Public headers need to be buildable using g++","user":{"login":"gabrielschulhof","id":976081,"node_id":"MDQ6VXNlcjk3NjA4MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/976081?v=4","gravatar_id":"","url":"https://api.github.com/users/gabrielschulhof","html_url":"https://github.com/gabrielschulhof","followers_url":"https://api.github.com/users/gabrielschulhof/followers","following_url":"https://api.github.com/users/gabrielschulhof/following{/other_user}","gists_url":"https://api.github.com/users/gabrielschulhof/gists{/gist_id}","starred_url":"https://api.github.com/users/gabrielschulhof/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gabrielschulhof/subscriptions","organizations_url":"https://api.github.com/users/gabrielschulhof/orgs","repos_url":"https://api.github.com/users/gabrielschulhof/repos","events_url":"https://api.github.com/users/gabrielschulhof/events{/privacy}","received_events_url":"https://api.github.com/users/gabrielschulhof/received_events","type":"User","site_admin":false},"labels":[{"id":221985155,"node_id":"MDU6TGFiZWwyMjE5ODUxNTU=","url":"https://api.github.com/repos/solettaproject/soletta/labels/bug","name":"bug","color":"fc2929","default":true,"description":null}],"state":"closed","locked":true,"assignee":{"login":"ceolin","id":882919,"node_id":"MDQ6VXNlcjg4MjkxOQ==","avatar_url":"https://avatars1.githubusercontent.com/u/882919?v=4","gravatar_id":"","url":"https://api.github.com/users/ceolin","html_url":"https://github.com/ceolin","followers_url":"https://api.github.com/users/ceolin/followers","following_url":"https://api.github.com/users/ceolin/following{/other_user}","gists_url":"https://api.github.com/users/ceolin/gists{/gist_id}","starred_url":"https://api.github.com/users/ceolin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ceolin/subscriptions","organizations_url":"https://api.github.com/users/ceolin/orgs","repos_url":"https://api.github.com/users/ceolin/repos","events_url":"https://api.github.com/users/ceolin/events{/privacy}","received_events_url":"https://api.github.com/users/ceolin/received_events","type":"User","site_admin":false},"assignees":[{"login":"ceolin","id":882919,"node_id":"MDQ6VXNlcjg4MjkxOQ==","avatar_url":"https://avatars1.githubusercontent.com/u/882919?v=4","gravatar_id":"","url":"https://api.github.com/users/ceolin","html_url":"https://github.com/ceolin","followers_url":"https://api.github.com/users/ceolin/followers","following_url":"https://api.github.com/users/ceolin/following{/other_user}","gists_url":"https://api.github.com/users/ceolin/gists{/gist_id}","starred_url":"https://api.github.com/users/ceolin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ceolin/subscriptions","organizations_url":"https://api.github.com/users/ceolin/orgs","repos_url":"https://api.github.com/users/ceolin/repos","events_url":"https://api.github.com/users/ceolin/events{/privacy}","received_events_url":"https://api.github.com/users/ceolin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":10,"created_at":"2015-11-27T15:35:28Z","updated_at":"2015-12-28T17:35:05Z","closed_at":"2015-12-28T17:35:05Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"When using g++ to compile a file which includes soletta public headers, it dies on code like\n\n```\nIn file included from /home/nix/iot/soletta-js/depbuild/soletta/build/soletta_sysroot/usr/include/soletta/sol-flow-packet.h:40:0,\n                 from /home/nix/iot/soletta-js/depbuild/soletta/build/soletta_sysroot/usr/include/soletta/sol-flow.h:40,\n                 from /home/nix/iot/soletta-js/depbuild/soletta/build/soletta_sysroot/usr/include/soletta/sol-flow-static.h:35,\n                 from ../generated/main.h:8,\n                 from ../generated/main.cc:7:\n/home/nix/iot/soletta-js/depbuild/soletta/build/soletta_sysroot/usr/include/soletta/sol-str-slice.h: In function ‘sol_str_slice sol_str_slice_from_blob(const sol_blob*)’:\n/home/nix/iot/soletta-js/depbuild/soletta/build/soletta_sysroot/usr/include/soletta/sol-str-slice.h:68:88: warning: invalid conversion from ‘void*’ to ‘const char*’ [-fpermissive]\n #define SOL_STR_SLICE_STR(_s, _len) (struct sol_str_slice){.len = (_len), .data = (_s) }\n                                                                                        ^\n/home/nix/iot/soletta-js/depbuild/soletta/build/soletta_sysroot/usr/include/soletta/sol-str-slice.h:146:12: note: in expansion of macro ‘SOL_STR_SLICE_STR’\n     return SOL_STR_SLICE_STR(blob->mem, blob->size);\n            ^\n```\n\nThe above is only a warning and not an error because I passed `-fpermissive` to g++, but I'd rather pointers were cast than have to add this flag.\n\nMore importantly, it dies on\n\n```\nIn file included from /home/nix/iot/soletta-js/depbuild/soletta/build/soletta_sysroot/usr/include/soletta/sol-i2c.h:40:0,\n                 from ../generated/main.h:57,\n                 from ../generated/main.cc:7:\n/home/nix/iot/soletta-js/depbuild/soletta/build/soletta_sysroot/usr/include/soletta/sol-buffer.h: At global scope:\n/home/nix/iot/soletta-js/depbuild/soletta/build/soletta_sysroot/usr/include/soletta/sol-buffer.h:279:125: error: expected primary-expression before ‘static’\n int sol_buffer_insert_as_base64(struct sol_buffer *buf, size_t pos, const struct sol_str_slice slice, const char base64_map[static 65]);\n                                                                                                                             ^\n```\n\nfor which I cannot think of a flag to pass to g++ to get it to accept the code.\n","performed_via_github_app":null,"score":1.0}]}
0

