HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 09 Jun 2018 08:04:44 GMT
Link: <https://api.github.com/search/issues?q=repo%3Agin-gonic%2Fgin+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Agin-gonic%2Fgin+type%3Aissue+state%3Aclosed&page=24>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: C86F:57C6:2FE04DE:64E13BF:5B1B8A1B
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 27
X-Ratelimit-Reset: 1528531544
X-Runtime-Rack: 0.435217
X-Xss-Protection: 1; mode=block

8000
{"total_count":691,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1385","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1385/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1385/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1385/events","html_url":"https://github.com/gin-gonic/gin/issues/1385","id":330414595,"node_id":"MDU6SXNzdWUzMzA0MTQ1OTU=","number":1385,"title":"gin overrides status code and Content-Type","user":{"login":"zwhitchcox","id":4328800,"node_id":"MDQ6VXNlcjQzMjg4MDA=","avatar_url":"https://avatars2.githubusercontent.com/u/4328800?v=4","gravatar_id":"","url":"https://api.github.com/users/zwhitchcox","html_url":"https://github.com/zwhitchcox","followers_url":"https://api.github.com/users/zwhitchcox/followers","following_url":"https://api.github.com/users/zwhitchcox/following{/other_user}","gists_url":"https://api.github.com/users/zwhitchcox/gists{/gist_id}","starred_url":"https://api.github.com/users/zwhitchcox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zwhitchcox/subscriptions","organizations_url":"https://api.github.com/users/zwhitchcox/orgs","repos_url":"https://api.github.com/users/zwhitchcox/repos","events_url":"https://api.github.com/users/zwhitchcox/events{/privacy}","received_events_url":"https://api.github.com/users/zwhitchcox/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-06-07T19:59:18Z","updated_at":"2018-06-08T18:10:05Z","closed_at":"2018-06-08T18:10:05Z","author_association":"NONE","body":"So, if I use `c.BindJSON(&mystruct)`, and this fails, and then, I respond with my error message, `c.JSON(406, gin.H{\"message\", \"my message\"})`, gin overrides this and still responds with 400...So, I'd rather be able to set my own reponse code, but then, it also changes `Content-Type` to `text/plain`. Is this the undocumented intended behavior, or is this a bug?","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1380","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1380/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1380/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1380/events","html_url":"https://github.com/gin-gonic/gin/issues/1380","id":328789265,"node_id":"MDU6SXNzdWUzMjg3ODkyNjU=","number":1380,"title":"bind to string in post body","user":{"login":"zwhitchcox","id":4328800,"node_id":"MDQ6VXNlcjQzMjg4MDA=","avatar_url":"https://avatars2.githubusercontent.com/u/4328800?v=4","gravatar_id":"","url":"https://api.github.com/users/zwhitchcox","html_url":"https://github.com/zwhitchcox","followers_url":"https://api.github.com/users/zwhitchcox/followers","following_url":"https://api.github.com/users/zwhitchcox/following{/other_user}","gists_url":"https://api.github.com/users/zwhitchcox/gists{/gist_id}","starred_url":"https://api.github.com/users/zwhitchcox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zwhitchcox/subscriptions","organizations_url":"https://api.github.com/users/zwhitchcox/orgs","repos_url":"https://api.github.com/users/zwhitchcox/repos","events_url":"https://api.github.com/users/zwhitchcox/events{/privacy}","received_events_url":"https://api.github.com/users/zwhitchcox/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-06-03T00:53:00Z","updated_at":"2018-06-03T01:14:35Z","closed_at":"2018-06-03T01:14:34Z","author_association":"NONE","body":"So, my post request looks something like this:\r\n\r\n```js\r\nfetch('/endpoint', {method: \"POST\", body: \"my string\"})\r\n```\r\n\r\nAnd, I'm trying to bind the body to a string like this:\r\n\r\n```golang\r\nvar x string\r\nc.Bind(&x)\r\n```\r\n\r\nBut I'm getting the error `reflect: NumField of non-struct type`.\r\n\r\nWhat is the appropriate way to get the body as a string, or do I need to just use the http Request.Body as a reader?","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1379","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1379/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1379/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1379/events","html_url":"https://github.com/gin-gonic/gin/issues/1379","id":328732043,"node_id":"MDU6SXNzdWUzMjg3MzIwNDM=","number":1379,"title":"Can not deploy to GAE because of \"unsafe\" imported","user":{"login":"apolkingg8","id":4033753,"node_id":"MDQ6VXNlcjQwMzM3NTM=","avatar_url":"https://avatars2.githubusercontent.com/u/4033753?v=4","gravatar_id":"","url":"https://api.github.com/users/apolkingg8","html_url":"https://github.com/apolkingg8","followers_url":"https://api.github.com/users/apolkingg8/followers","following_url":"https://api.github.com/users/apolkingg8/following{/other_user}","gists_url":"https://api.github.com/users/apolkingg8/gists{/gist_id}","starred_url":"https://api.github.com/users/apolkingg8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apolkingg8/subscriptions","organizations_url":"https://api.github.com/users/apolkingg8/orgs","repos_url":"https://api.github.com/users/apolkingg8/repos","events_url":"https://api.github.com/users/apolkingg8/events{/privacy}","received_events_url":"https://api.github.com/users/apolkingg8/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-06-02T10:12:22Z","updated_at":"2018-06-02T11:19:32Z","closed_at":"2018-06-02T11:19:32Z","author_association":"NONE","body":"Looks like `golang.org/x/sys/unix` imported in `github.com/mattn/go-isatty` which imported  in `logger.go`. Can we replace it with other solution?","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1378","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1378/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1378/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1378/events","html_url":"https://github.com/gin-gonic/gin/issues/1378","id":328701063,"node_id":"MDU6SXNzdWUzMjg3MDEwNjM=","number":1378,"title":"How is concurrency in gin","user":{"login":"WhoisZihan","id":36412994,"node_id":"MDQ6VXNlcjM2NDEyOTk0","avatar_url":"https://avatars0.githubusercontent.com/u/36412994?v=4","gravatar_id":"","url":"https://api.github.com/users/WhoisZihan","html_url":"https://github.com/WhoisZihan","followers_url":"https://api.github.com/users/WhoisZihan/followers","following_url":"https://api.github.com/users/WhoisZihan/following{/other_user}","gists_url":"https://api.github.com/users/WhoisZihan/gists{/gist_id}","starred_url":"https://api.github.com/users/WhoisZihan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WhoisZihan/subscriptions","organizations_url":"https://api.github.com/users/WhoisZihan/orgs","repos_url":"https://api.github.com/users/WhoisZihan/repos","events_url":"https://api.github.com/users/WhoisZihan/events{/privacy}","received_events_url":"https://api.github.com/users/WhoisZihan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-06-02T01:31:22Z","updated_at":"2018-06-03T03:35:20Z","closed_at":"2018-06-03T03:35:20Z","author_association":"NONE","body":"Hi,\r\n\r\nI'm wondering if gin support concurrent process of requests. If I have much more clients than server, does gin have a goroutine for each request or it process every request in sequence? If it does support, is there an example to get high concurency?\r\n\r\nThanks","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1377","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1377/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1377/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1377/events","html_url":"https://github.com/gin-gonic/gin/issues/1377","id":327875589,"node_id":"MDU6SXNzdWUzMjc4NzU1ODk=","number":1377,"title":"How to access the Request.Body after ShouldBind*() returns an error ?","user":{"login":"Ramzec","id":1533822,"node_id":"MDQ6VXNlcjE1MzM4MjI=","avatar_url":"https://avatars1.githubusercontent.com/u/1533822?v=4","gravatar_id":"","url":"https://api.github.com/users/Ramzec","html_url":"https://github.com/Ramzec","followers_url":"https://api.github.com/users/Ramzec/followers","following_url":"https://api.github.com/users/Ramzec/following{/other_user}","gists_url":"https://api.github.com/users/Ramzec/gists{/gist_id}","starred_url":"https://api.github.com/users/Ramzec/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ramzec/subscriptions","organizations_url":"https://api.github.com/users/Ramzec/orgs","repos_url":"https://api.github.com/users/Ramzec/repos","events_url":"https://api.github.com/users/Ramzec/events{/privacy}","received_events_url":"https://api.github.com/users/Ramzec/received_events","type":"User","site_admin":false},"labels":[{"id":107421010,"node_id":"MDU6TGFiZWwxMDc0MjEwMTA=","url":"https://api.github.com/repos/gin-gonic/gin/labels/question","name":"question","color":"cc317c","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-30T19:54:04Z","updated_at":"2018-05-31T02:40:33Z","closed_at":"2018-05-31T02:40:24Z","author_association":"NONE","body":"To increase log-details I want to put into the log the data, that ShouldBind*() read from Request.Body before fail.","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1374","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1374/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1374/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1374/events","html_url":"https://github.com/gin-gonic/gin/issues/1374","id":327067588,"node_id":"MDU6SXNzdWUzMjcwNjc1ODg=","number":1374,"title":"How to get row binary data","user":{"login":"DineshGuptaa","id":23373711,"node_id":"MDQ6VXNlcjIzMzczNzEx","avatar_url":"https://avatars0.githubusercontent.com/u/23373711?v=4","gravatar_id":"","url":"https://api.github.com/users/DineshGuptaa","html_url":"https://github.com/DineshGuptaa","followers_url":"https://api.github.com/users/DineshGuptaa/followers","following_url":"https://api.github.com/users/DineshGuptaa/following{/other_user}","gists_url":"https://api.github.com/users/DineshGuptaa/gists{/gist_id}","starred_url":"https://api.github.com/users/DineshGuptaa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DineshGuptaa/subscriptions","organizations_url":"https://api.github.com/users/DineshGuptaa/orgs","repos_url":"https://api.github.com/users/DineshGuptaa/repos","events_url":"https://api.github.com/users/DineshGuptaa/events{/privacy}","received_events_url":"https://api.github.com/users/DineshGuptaa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-28T15:54:28Z","updated_at":"2018-06-03T05:19:13Z","closed_at":"2018-06-03T05:19:13Z","author_association":"NONE","body":"Hi All,\r\nI am newbie for Golang. I have to create the application that capture the audio raw data & post to the service. But I am unable to find the way to get the data server side. \r\n\r\nPlease help me to get the data at server end\r\n\r\n    `function sendAudio (dataView) {\r\n\t    return new Promise((resolve, reject) => {\r\n\t      var xhr = new XMLHttpRequest();\r\n\t      var url = 'https://localhost/soerest/api/v1/echo';\r\n\t      xhr.open('POST', url, true);\r\n\t      xhr.responseType = 'arraybuffer';\r\n\t      xhr.onload = (event) => {\r\n\t        console.log(xhr.response);\r\n\t      };\r\n\r\n\t      xhr.onerror = (error) => {\r\n\t          console.error(error);\r\n\t      };\r\n\r\n\t      xhr.onerror = (error) => {\r\n\t        this._log(error);\r\n\t        reject(error);\r\n\t      };\r\n\t      var BOUNDARY = 'BOUNDARY1234';\r\n\t      var BOUNDARY_DASHES = '--';\r\n\t      var NEWLINE = '\\r\\n';\r\n\t      var AUDIO_CONTENT_TYPE = 'Content-Type: audio/L16; rate=16000; channels=1';\r\n\t      var AUDIO_CONTENT_DISPOSITION = 'Content-Disposition: form-data; name=\"audio\"';\r\n\r\n\t      var postDataStart = [\r\n\t        NEWLINE, BOUNDARY_DASHES, BOUNDARY, NEWLINE,\r\n\t        AUDIO_CONTENT_DISPOSITION, NEWLINE, AUDIO_CONTENT_TYPE, NEWLINE, NEWLINE\r\n\t      ].join('');\r\n\r\n\t      var postDataEnd = [NEWLINE, BOUNDARY_DASHES, BOUNDARY, BOUNDARY_DASHES, NEWLINE].join('');\r\n\r\n\t      var size = postDataStart.length + dataView.byteLength + postDataEnd.length;\r\n\t      var uint8Array = new Uint8Array(size);\r\n\t      let i = 0;\r\n\r\n\t      for (; i < postDataStart.length; i++) {\r\n\t        uint8Array[i] = postDataStart.charCodeAt(i) & 0xFF;\r\n\t      }\r\n\r\n\t      for (var j = 0; j < dataView.byteLength; i++, j++) {\r\n\t        uint8Array[i] = dataView.getUint8(j);\r\n\t      }\r\n\r\n\t      for (var j = 0; j < postDataEnd.length; i++, j++) {\r\n\t        uint8Array[i] = postDataEnd.charCodeAt(j) & 0xFF;\r\n\t      }\r\n\t      var payload = uint8Array.buffer;\r\n\t      \r\n\t      xhr.setRequestHeader('Content-Type', 'multipart/form-data; boundary=--' + BOUNDARY);\r\n\t      xhr.send(payload);\r\n\t    });\r\n\t  }\r\n`\r\n\r\nMy server side code is as\r\n\r\n    `func (spr *SpeechHandler) Speeche(c *gin.Context) {\r\n\r\n\t// curl -i http://localhost:8080/api/v1/echo\r\n\tfmt.Println(\"echo method has been called: \")\r\n\t// Multipart form\r\n\tmultipart, err := c.Request.MultipartReader()//c.MultipartForm()\r\n\tif err != nil {\r\n\t\tc.String(http.StatusBadRequest, fmt.Sprintf(\"get form err: %s\", err.Error()))\r\n\t\treturn\r\n\t}\r\n\tfor {\r\n\t\tmimePart, err := multipart.NextPart()\r\n\t\tif err == io.EOF {\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tif err != nil {\r\n\t\t\tlog.Printf(\"Error reading multipart section: %v\", err)\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tdisposition, params, err := mime.ParseMediaType(mimePart.Header.Get(\"Content-Disposition\"))\r\n\t\tif err != nil {\r\n\t\t\tbreak\r\n\t\t}\r\n\t}\r\n    }`\r\n\r\nI am getting error\r\n    `multipart: NextPart: EOF`\r\n\r\nPlease help me where I am doing wrong. I am stuck here :-(\r\n\r\nThanks you to all in advance.\r\n\r\nRegards,\r\nDinesh Gupta","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1372","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1372/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1372/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1372/events","html_url":"https://github.com/gin-gonic/gin/issues/1372","id":326764247,"node_id":"MDU6SXNzdWUzMjY3NjQyNDc=","number":1372,"title":"How to return custom error with Gin","user":{"login":"latipovsharif","id":2291384,"node_id":"MDQ6VXNlcjIyOTEzODQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2291384?v=4","gravatar_id":"","url":"https://api.github.com/users/latipovsharif","html_url":"https://github.com/latipovsharif","followers_url":"https://api.github.com/users/latipovsharif/followers","following_url":"https://api.github.com/users/latipovsharif/following{/other_user}","gists_url":"https://api.github.com/users/latipovsharif/gists{/gist_id}","starred_url":"https://api.github.com/users/latipovsharif/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/latipovsharif/subscriptions","organizations_url":"https://api.github.com/users/latipovsharif/orgs","repos_url":"https://api.github.com/users/latipovsharif/repos","events_url":"https://api.github.com/users/latipovsharif/events{/privacy}","received_events_url":"https://api.github.com/users/latipovsharif/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2018-05-26T20:11:25Z","updated_at":"2018-05-31T06:28:15Z","closed_at":"2018-05-30T12:16:58Z","author_association":"NONE","body":"I've asked a question in [stackoverflow](https://stackoverflow.com/questions/50523102/how-to-return-custom-error-with-gin) but cannot give answer for my question please can anybody look at it.","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1368","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1368/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1368/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1368/events","html_url":"https://github.com/gin-gonic/gin/issues/1368","id":325987978,"node_id":"MDU6SXNzdWUzMjU5ODc5Nzg=","number":1368,"title":"go1.10.2 can't build with gin.","user":{"login":"nevata","id":34930450,"node_id":"MDQ6VXNlcjM0OTMwNDUw","avatar_url":"https://avatars1.githubusercontent.com/u/34930450?v=4","gravatar_id":"","url":"https://api.github.com/users/nevata","html_url":"https://github.com/nevata","followers_url":"https://api.github.com/users/nevata/followers","following_url":"https://api.github.com/users/nevata/following{/other_user}","gists_url":"https://api.github.com/users/nevata/gists{/gist_id}","starred_url":"https://api.github.com/users/nevata/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nevata/subscriptions","organizations_url":"https://api.github.com/users/nevata/orgs","repos_url":"https://api.github.com/users/nevata/repos","events_url":"https://api.github.com/users/nevata/events{/privacy}","received_events_url":"https://api.github.com/users/nevata/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-24T06:58:42Z","updated_at":"2018-05-24T08:08:57Z","closed_at":"2018-05-24T08:08:57Z","author_association":"NONE","body":"# crypto/x509\r\nIn file included from /System/Library/Frameworks/Security.framework/Headers/AuthSession.h:32,\r\n                 from /System/Library/Frameworks/Security.framework/Headers/Security.h:43,\r\n                 from /usr/local/Cellar/go/1.10.2/libexec/src/crypto/x509/root_cgo_darwin.go:17:\r\n/System/Library/Frameworks/Security.framework/Headers/Authorization.h:192:7: error: variably modified 'bytes' at file scope\r\n  char bytes[kAuthorizationExternalFormLength];\r\n       ^~~~~","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1365","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1365/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1365/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1365/events","html_url":"https://github.com/gin-gonic/gin/issues/1365","id":325759695,"node_id":"MDU6SXNzdWUzMjU3NTk2OTU=","number":1365,"title":"Question: How to bind unknown object fields inside an array?","user":{"login":"ndabAP","id":8510570,"node_id":"MDQ6VXNlcjg1MTA1NzA=","avatar_url":"https://avatars2.githubusercontent.com/u/8510570?v=4","gravatar_id":"","url":"https://api.github.com/users/ndabAP","html_url":"https://github.com/ndabAP","followers_url":"https://api.github.com/users/ndabAP/followers","following_url":"https://api.github.com/users/ndabAP/following{/other_user}","gists_url":"https://api.github.com/users/ndabAP/gists{/gist_id}","starred_url":"https://api.github.com/users/ndabAP/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ndabAP/subscriptions","organizations_url":"https://api.github.com/users/ndabAP/orgs","repos_url":"https://api.github.com/users/ndabAP/repos","events_url":"https://api.github.com/users/ndabAP/events{/privacy}","received_events_url":"https://api.github.com/users/ndabAP/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-23T15:29:25Z","updated_at":"2018-05-25T17:18:31Z","closed_at":"2018-05-25T05:05:25Z","author_association":"NONE","body":"Let's say I get this JSON as POST:\r\n\r\n```\r\n{\r\n  fields: [\r\n  { id: 1, value: 10 },\r\n  { id: 2, value: true }\r\n  { id: 3, value: 5.5 }\r\n  ]\r\n}\r\n```\r\n\r\n`value` is an unknown data type. How can I bind such a schema to use/persist it in Go? Thanks!","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1364","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1364/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1364/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1364/events","html_url":"https://github.com/gin-gonic/gin/issues/1364","id":325417987,"node_id":"MDU6SXNzdWUzMjU0MTc5ODc=","number":1364,"title":"ShouldBind sets a default value to *time.Time, cant use with gorm package","user":{"login":"bsbak","id":11431176,"node_id":"MDQ6VXNlcjExNDMxMTc2","avatar_url":"https://avatars2.githubusercontent.com/u/11431176?v=4","gravatar_id":"","url":"https://api.github.com/users/bsbak","html_url":"https://github.com/bsbak","followers_url":"https://api.github.com/users/bsbak/followers","following_url":"https://api.github.com/users/bsbak/following{/other_user}","gists_url":"https://api.github.com/users/bsbak/gists{/gist_id}","starred_url":"https://api.github.com/users/bsbak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bsbak/subscriptions","organizations_url":"https://api.github.com/users/bsbak/orgs","repos_url":"https://api.github.com/users/bsbak/repos","events_url":"https://api.github.com/users/bsbak/events{/privacy}","received_events_url":"https://api.github.com/users/bsbak/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-05-22T18:45:12Z","updated_at":"2018-05-23T13:57:17Z","closed_at":"2018-05-23T13:57:17Z","author_association":"NONE","body":"I have struct field ``` DeletedAt *time.Time `sql:\"index\"` ```\r\nAfter ctx.ShouldBind(&mystruct) the value of DeletedAt field is not `nil`, but must be, becouse gorm(sql) package cant auto generate NULL for that field.\r\n\r\nThe problem is there:\r\ngithub.com\\gin-gonic\\gin\\binding\\form_mapping.go\r\n\r\n```\r\nif inputFieldName == \"\" {\r\n\tinputFieldName = typeField.Name\r\n\r\n\t// if \"form\" tag is nil, we inspect if the field is a struct or struct pointer.\r\n\t// this would not make sense for JSON parsing but it does for a form\r\n\t// since data is flatten\r\n\tif structFieldKind == reflect.Ptr {\r\n\r\n                //!!!!!!!!!!!!!! here first we need to check if field is not time.Time (pointer to time)\r\n                // if it is - continue\r\n                //something like\r\n                if structField.Type().Elem() == reflect.TypeOf(time.Time{}) {\r\n                          continue\r\n                 }\r\n                //-------------------------------\r\n\t\tif !structField.Elem().IsValid() {\r\n\r\n                        //!!!!!!!!!!!! here is the problem, why set default value?????????? I need nil!!!\r\n\t\t\tstructField.Set(reflect.New(structField.Type().Elem()))\r\n\t\t}\r\n\t\tstructField = structField.Elem()\r\n\t\tstructFieldKind = structField.Kind()\r\n\t}\r\n\tif structFieldKind == reflect.Struct {\r\n\t\terr := mapForm(structField.Addr().Interface(), form)\r\n\t\tif err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t\tcontinue\r\n\t}\r\n}\r\n```","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1361","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1361/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1361/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1361/events","html_url":"https://github.com/gin-gonic/gin/issues/1361","id":324672381,"node_id":"MDU6SXNzdWUzMjQ2NzIzODE=","number":1361,"title":"Runtime Error BindJson","user":{"login":"zwhitchcox","id":4328800,"node_id":"MDQ6VXNlcjQzMjg4MDA=","avatar_url":"https://avatars2.githubusercontent.com/u/4328800?v=4","gravatar_id":"","url":"https://api.github.com/users/zwhitchcox","html_url":"https://github.com/zwhitchcox","followers_url":"https://api.github.com/users/zwhitchcox/followers","following_url":"https://api.github.com/users/zwhitchcox/following{/other_user}","gists_url":"https://api.github.com/users/zwhitchcox/gists{/gist_id}","starred_url":"https://api.github.com/users/zwhitchcox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zwhitchcox/subscriptions","organizations_url":"https://api.github.com/users/zwhitchcox/orgs","repos_url":"https://api.github.com/users/zwhitchcox/repos","events_url":"https://api.github.com/users/zwhitchcox/events{/privacy}","received_events_url":"https://api.github.com/users/zwhitchcox/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-20T00:38:23Z","updated_at":"2018-05-21T14:37:04Z","closed_at":"2018-05-21T14:37:04Z","author_association":"NONE","body":"I'm using Golang 1.10 with Gin (I'm not sure the version, but I'm using just `go get github.com/gin-gonic/gin`, and I'm getting a runtime error that there is `Undefined validation function on field Username`.\r\n\r\nThis is my code \r\n\r\n```go\r\ntype User struct {\r\n\tUsername string `json:\"username\" binding:\"required,min=4,max=30,alphanumunicode\"`\r\n\tEmail    string `json:\"email\" binding:\"required,email\"`\r\n\tPassword string `json:\"password\" binding:\"required\"`\r\n}\r\n```\r\n\r\nAnd it is failing on `alphanumunicode`, as defined in the [validation documentation](https://godoc.org/gopkg.in/go-playground/validator.v9#hdr-Alphanumeric_Unicode).\r\n\r\nIt has failed on several other documented validation functions as well. Does gin limit to a subset of these validation functions?\r\n","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1357","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1357/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1357/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1357/events","html_url":"https://github.com/gin-gonic/gin/issues/1357","id":322982326,"node_id":"MDU6SXNzdWUzMjI5ODIzMjY=","number":1357,"title":"Sending a multipart.File to another micro-service","user":{"login":"adriendomoison","id":9092210,"node_id":"MDQ6VXNlcjkwOTIyMTA=","avatar_url":"https://avatars0.githubusercontent.com/u/9092210?v=4","gravatar_id":"","url":"https://api.github.com/users/adriendomoison","html_url":"https://github.com/adriendomoison","followers_url":"https://api.github.com/users/adriendomoison/followers","following_url":"https://api.github.com/users/adriendomoison/following{/other_user}","gists_url":"https://api.github.com/users/adriendomoison/gists{/gist_id}","starred_url":"https://api.github.com/users/adriendomoison/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adriendomoison/subscriptions","organizations_url":"https://api.github.com/users/adriendomoison/orgs","repos_url":"https://api.github.com/users/adriendomoison/repos","events_url":"https://api.github.com/users/adriendomoison/events{/privacy}","received_events_url":"https://api.github.com/users/adriendomoison/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-05-14T21:08:56Z","updated_at":"2018-05-25T19:42:00Z","closed_at":"2018-05-25T19:42:00Z","author_association":"NONE","body":"I am retrieving a file from a multipart/form-data upload with `file, header, err := c.Request.FormFile(\"file\")` and after some processing I need to send the file to another micro-service.\r\nI was trying to use a classic POST and BIND with a structure like that\r\n```\r\n\r\ntype RequestDTOWithFile struct {\r\n\tFile        *multipart.File `json:\"file\"`\r\n\tPublicId    string         `json:\"order_id\"`\r\n\tName        string         `json:\"name\"`\r\n\tUserId      uint           `json:\"user_id\"`\r\n}\r\n\r\n// send a RequestDTOWithFile from first micro service\r\nhttp.NewRequest(\"POST\", url, data) \r\n\r\n...\r\n// recieve a RequestDTOWithFile from an other micro service\r\nc.Bind(&data)\r\n\r\n```\r\n\r\nBut I got stuck with `json: cannot unmarshal object into Go struct field RequestDTOWithFile.file of type multipart.File`\r\n\r\nIs there a way to achieve that with gin?\r\n\r\nFor now, the only solution I found that could work is to recreate a multipart form like this https://stackoverflow.com/questions/20205796/golang-post-data-using-the-content-type-multipart-form-data/20397167 which is not elegant.","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1356","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1356/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1356/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1356/events","html_url":"https://github.com/gin-gonic/gin/issues/1356","id":322752562,"node_id":"MDU6SXNzdWUzMjI3NTI1NjI=","number":1356,"title":"Mixed using gin route and http package http not work","user":{"login":"jinfagang","id":21303438,"node_id":"MDQ6VXNlcjIxMzAzNDM4","avatar_url":"https://avatars3.githubusercontent.com/u/21303438?v=4","gravatar_id":"","url":"https://api.github.com/users/jinfagang","html_url":"https://github.com/jinfagang","followers_url":"https://api.github.com/users/jinfagang/followers","following_url":"https://api.github.com/users/jinfagang/following{/other_user}","gists_url":"https://api.github.com/users/jinfagang/gists{/gist_id}","starred_url":"https://api.github.com/users/jinfagang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jinfagang/subscriptions","organizations_url":"https://api.github.com/users/jinfagang/orgs","repos_url":"https://api.github.com/users/jinfagang/repos","events_url":"https://api.github.com/users/jinfagang/events{/privacy}","received_events_url":"https://api.github.com/users/jinfagang/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-05-14T10:10:42Z","updated_at":"2018-05-14T12:50:02Z","closed_at":"2018-05-14T12:50:02Z","author_association":"NONE","body":"Here is the whole program:\r\n```\r\npackage main\r\n\r\n\r\n\r\nimport (\r\n\t\"log\"\r\n\t\"fmt\"\r\n\t_ \"github.com/jinzhu/gorm/dialects/postgres\"\r\n\t\"github.com/gin-gonic/gin\"\r\n\t\"net/http\"\r\n)\r\n\r\n\r\n// build all routes here\r\nfunc BuildRoutes() *gin.Engine{\r\n\tr := gin.Default()\r\n\r\n\t// set the v1 version group\r\n\tv1 := r.Group(\"/api/v1\")\r\n\t{\r\n\t\t// user register and get\r\n\t\tv1.POST(\"/users\", nil)\r\n\t\tv1.GET(\"/users\", nil)\r\n\r\n\t\t// user status and get\r\n\t\tv1.POST(\"/status\", nil)\r\n\t\tv1.GET(\"/status\", nil)\r\n\t}\r\n\r\n\treturn r\r\n}\r\n\r\n// serve the websocket\r\nfunc wsServe(){\r\n\t// serve the js client\r\n\r\n\thttp.HandleFunc(\"/a\", func(w http.ResponseWriter, r *http.Request) {\r\n\t\tfmt.Println(\"FUCK!! called a???\")\r\n\t})\r\n\r\n\terr := http.ListenAndServe(\":9877\", nil)\r\n\tif err != nil {\r\n\t\tlog.Fatal(\"ListenAndServe: \", err)\r\n\t}\r\n}\r\n\r\nfunc main() {\r\n\tgin.
8000
SetMode(gin.DebugMode)\r\n\r\n\r\n\t// APIs routes part\r\n\troute := BuildRoutes()\r\n\troute.Run(\":8080\")\r\n\r\n\t// websocket services part\r\n\t// open websocket...\r\n\tgo wsServe()\r\n}\r\n\r\n\r\n```\r\nThe http function not work at all... I don't know why, is there any mistake I made?","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1355","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1355/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1355/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1355/events","html_url":"https://github.com/gin-gonic/gin/issues/1355","id":322695318,"node_id":"MDU6SXNzdWUzMjI2OTUzMTg=","number":1355,"title":"WriteHeaderNow on Abort","user":{"login":"1995parham","id":8181240,"node_id":"MDQ6VXNlcjgxODEyNDA=","avatar_url":"https://avatars1.githubusercontent.com/u/8181240?v=4","gravatar_id":"","url":"https://api.github.com/users/1995parham","html_url":"https://github.com/1995parham","followers_url":"https://api.github.com/users/1995parham/followers","following_url":"https://api.github.com/users/1995parham/following{/other_user}","gists_url":"https://api.github.com/users/1995parham/gists{/gist_id}","starred_url":"https://api.github.com/users/1995parham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/1995parham/subscriptions","organizations_url":"https://api.github.com/users/1995parham/orgs","repos_url":"https://api.github.com/users/1995parham/repos","events_url":"https://api.github.com/users/1995parham/events{/privacy}","received_events_url":"https://api.github.com/users/1995parham/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-05-14T07:06:02Z","updated_at":"2018-05-17T04:32:31Z","closed_at":"2018-05-17T04:32:31Z","author_association":"NONE","body":"https://github.com/gin-gonic/gin/blob/bf7803815b0baa22ff7a10457932882dfbf09925/context.go#L129\r\n\r\nWhy we need writing header on abort? by doing this c.JSON() for writing errors in `ErrorLogger` failed to set Content-Type to `application/json`.","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1351","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1351/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1351/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1351/events","html_url":"https://github.com/gin-gonic/gin/issues/1351","id":321800898,"node_id":"MDU6SXNzdWUzMjE4MDA4OTg=","number":1351,"title":"Some confusion under high concurrency.","user":{"login":"fcce","id":3869932,"node_id":"MDQ6VXNlcjM4Njk5MzI=","avatar_url":"https://avatars2.githubusercontent.com/u/3869932?v=4","gravatar_id":"","url":"https://api.github.com/users/fcce","html_url":"https://github.com/fcce","followers_url":"https://api.github.com/users/fcce/followers","following_url":"https://api.github.com/users/fcce/following{/other_user}","gists_url":"https://api.github.com/users/fcce/gists{/gist_id}","starred_url":"https://api.github.com/users/fcce/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fcce/subscriptions","organizations_url":"https://api.github.com/users/fcce/orgs","repos_url":"https://api.github.com/users/fcce/repos","events_url":"https://api.github.com/users/fcce/events{/privacy}","received_events_url":"https://api.github.com/users/fcce/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-05-10T03:52:43Z","updated_at":"2018-05-10T07:38:13Z","closed_at":"2018-05-10T07:38:13Z","author_association":"NONE","body":"Some confusion under high concurrency.\r\n\r\nI use [wrk](https://github.com/wg/wrk) to test Gin, there's someting uncertainty. Gin seems doesn't concurrency safe.\r\n\r\n```go\r\n\r\npackage main\r\n\r\nimport (\r\n  \"fmt\"\r\n  \"sync/atomic\"\r\n\r\n  \"github.com/gin-gonic/gin\"\r\n)\r\n\r\nvar count int64 = 0\r\n\r\nfunc Test(c *gin.Context) {\r\n  atomic.AddInt64(&count, 1)\r\n  fmt.Println(count)\r\n  c.String(200, \"success\")\r\n}\r\n\r\nfunc main() {\r\n  gin.SetMode(gin.DebugMode)\r\n  router := gin.New()\r\n  router.GET(\"test\", Test)\r\n  router.Run(\":8080\")\r\n}\r\n\r\n```\r\n\r\nTest shell code\r\n\r\n```shell\r\nwrk -t50 -c50 -d 1s http://localhost:8080/test\r\n```\r\n\r\nGin output duplicate data,\r\n![duplicate data](https://ws1.sinaimg.cn/small/6478deb5ly1fr63jtuav7j20h40i0760.jpg)\r\n\r\neven if the print code like this.\r\n\r\n```go\r\n  countCopy := count\r\n  go func() {\r\n    fmt.Println(countCopy)\r\n  }()\r\n```\r\nI also use [ab](https://httpd.apache.org/docs/2.4/programs/ab.html) test it, the same problem.","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1347","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1347/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1347/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1347/events","html_url":"https://github.com/gin-gonic/gin/issues/1347","id":321148764,"node_id":"MDU6SXNzdWUzMjExNDg3NjQ=","number":1347,"title":"Hello,Ginner,I wanne know if gin router can handle a http.Handler ,official middleware","user":{"login":"fwhezfwhez","id":36189053,"node_id":"MDQ6VXNlcjM2MTg5MDUz","avatar_url":"https://avatars1.githubusercontent.com/u/36189053?v=4","gravatar_id":"","url":"https://api.github.com/users/fwhezfwhez","html_url":"https://github.com/fwhezfwhez","followers_url":"https://api.github.com/users/fwhezfwhez/followers","following_url":"https://api.github.com/users/fwhezfwhez/following{/other_user}","gists_url":"https://api.github.com/users/fwhezfwhez/gists{/gist_id}","starred_url":"https://api.github.com/users/fwhezfwhez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fwhezfwhez/subscriptions","organizations_url":"https://api.github.com/users/fwhezfwhez/orgs","repos_url":"https://api.github.com/users/fwhezfwhez/repos","events_url":"https://api.github.com/users/fwhezfwhez/events{/privacy}","received_events_url":"https://api.github.com/users/fwhezfwhez/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-08T11:32:16Z","updated_at":"2018-05-09T03:20:54Z","closed_at":"2018-05-09T03:20:54Z","author_association":"NONE","body":"for instance,\r\n```go\r\n...\r\nrouter.GET(\"/\",fun)\r\n...\r\nfunc fun(c *gin.Context){\r\n //do sth\r\n}\r\nfunc ginMiddleware(c *gin.Context) gin.HandlerFunc{\r\n  return func(c *gin.Context){\r\n    c.Next()\r\n }\r\n}\r\nfunc officialMiddleware(next http.Handler) http.Handler{\r\nreturn func(w http.ResponseWriter, r *http.Request){\r\nnext.ServeHTTP(w, r)\r\n})\r\n}\r\n```\r\nI know how to use a gin middleware like\r\n```go\r\n router.GET(\"/\",ginMiddleware,fun),\r\n//or\r\n router.Use(ginMiddleware)\r\n router.GET(\"/\",fun)\r\n```\r\nbut how to use officialMiddleware in a gin framework\r\nI tried below \r\n```go\r\n router.Use(officialMiddleware)   //incorrect\r\n//or\r\nrouter.GET(\"/\",officailMiddleware,fun)  //incorrect\r\n//finally ok\r\nhttp.ListenAndServer(\":addr\",officialMidleware(router))  //but this make officialMidleware global\r\n```\r\nI want the officialMiddleware only serves fun rather than serving globally\r\nwhat can I do?\r\n","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1346","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1346/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1346/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1346/events","html_url":"https://github.com/gin-gonic/gin/issues/1346","id":320390008,"node_id":"MDU6SXNzdWUzMjAzOTAwMDg=","number":1346,"title":"Disable warning for debug mode","user":{"login":"zwhitchcox","id":4328800,"node_id":"MDQ6VXNlcjQzMjg4MDA=","avatar_url":"https://avatars2.githubusercontent.com/u/4328800?v=4","gravatar_id":"","url":"https://api.github.com/users/zwhitchcox","html_url":"https://github.com/zwhitchcox","followers_url":"https://api.github.com/users/zwhitchcox/followers","following_url":"https://api.github.com/users/zwhitchcox/following{/other_user}","gists_url":"https://api.github.com/users/zwhitchcox/gists{/gist_id}","starred_url":"https://api.github.com/users/zwhitchcox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zwhitchcox/subscriptions","organizations_url":"https://api.github.com/users/zwhitchcox/orgs","repos_url":"https://api.github.com/users/zwhitchcox/repos","events_url":"https://api.github.com/users/zwhitchcox/events{/privacy}","received_events_url":"https://api.github.com/users/zwhitchcox/received_events","type":"User","site_admin":false},"labels":[{"id":107421010,"node_id":"MDU6TGFiZWwxMDc0MjEwMTA=","url":"https://api.github.com/repos/gin-gonic/gin/labels/question","name":"question","color":"cc317c","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-05-04T18:56:46Z","updated_at":"2018-05-08T12:42:28Z","closed_at":"2018-05-08T12:42:28Z","author_association":"NONE","body":"I'm trying to develop using Gin, and I keep getting this warning\r\n\r\n```\r\n[GIN-debug] [WARNING] Running in \"debug\" mode. Switch to \"release\" mode in production\r\n```\r\n\r\nI don't care, and it is cluttering up my log, so I can't see the real errors. Is there a way to disable this \"feature\"?","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1345","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1345/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1345/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1345/events","html_url":"https://github.com/gin-gonic/gin/issues/1345","id":319711358,"node_id":"MDU6SXNzdWUzMTk3MTEzNTg=","number":1345,"title":"Lets encrypt and https support?","user":{"login":"ChadTaljaardt","id":13891249,"node_id":"MDQ6VXNlcjEzODkxMjQ5","avatar_url":"https://avatars1.githubusercontent.com/u/13891249?v=4","gravatar_id":"","url":"https://api.github.com/users/ChadTaljaardt","html_url":"https://github.com/ChadTaljaardt","followers_url":"https://api.github.com/users/ChadTaljaardt/followers","following_url":"https://api.github.com/users/ChadTaljaardt/following{/other_user}","gists_url":"https://api.github.com/users/ChadTaljaardt/gists{/gist_id}","starred_url":"https://api.github.com/users/ChadTaljaardt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChadTaljaardt/subscriptions","organizations_url":"https://api.github.com/users/ChadTaljaardt/orgs","repos_url":"https://api.github.com/users/ChadTaljaardt/repos","events_url":"https://api.github.com/users/ChadTaljaardt/events{/privacy}","received_events_url":"https://api.github.com/users/ChadTaljaardt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-02T21:03:12Z","updated_at":"2018-05-03T02:22:13Z","closed_at":"2018-05-03T02:22:13Z","author_association":"NONE","body":"Hello, \r\n\r\nI have been trying to get my application to work with HTTP and HTTPS and for it to have let's encrypt support. I have no idea about how to go around doing this. \r\n\r\nHas anyone here got an example they could provide which incorporates both of this functionality?\r\n\r\nI have seen an example over at https://github.com/gin-gonic/gin/issues/643 but I'm not sure how to get this working with let's encrypt. \r\n\r\nThanks!","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1343","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1343/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1343/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1343/events","html_url":"https://github.com/gin-gonic/gin/issues/1343","id":318800020,"node_id":"MDU6SXNzdWUzMTg4MDAwMjA=","number":1343,"title":"Do you have a plan to change \"golang.org/x\" to \"github.com/golang\"","user":{"login":"c5ms","id":1713904,"node_id":"MDQ6VXNlcjE3MTM5MDQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1713904?v=4","gravatar_id":"","url":"https://api.github.com/users/c5ms","html_url":"https://github.com/c5ms","followers_url":"https://api.github.com/users/c5ms/followers","following_url":"https://api.github.com/users/c5ms/following{/other_user}","gists_url":"https://api.github.com/users/c5ms/gists{/gist_id}","starred_url":"https://api.github.com/users/c5ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/c5ms/subscriptions","organizations_url":"https://api.github.com/users/c5ms/orgs","repos_url":"https://api.github.com/users/c5ms/repos","events_url":"https://api.github.com/users/c5ms/events{/privacy}","received_events_url":"https://api.github.com/users/c5ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-30T06:53:48Z","updated_at":"2018-04-30T08:47:56Z","closed_at":"2018-04-30T08:47:56Z","author_association":"NONE","body":"In china  ,we can not vist golang.org.\r\nwe have GFW..\r\nso please .","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1340","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1340/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1340/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1340/events","html_url":"https://github.com/gin-gonic/gin/issues/1340","id":318650188,"node_id":"MDU6SXNzdWUzMTg2NTAxODg=","number":1340,"title":"In r.NoRoute, using c.Redirect() would panic.","user":{"login":"3Horse","id":27920214,"node_id":"MDQ6VXNlcjI3OTIwMjE0","avatar_url":"https://avatars0.githubusercontent.com/u/27920214?v=4","gravatar_id":"","url":"https://api.github.com/users/3Horse","html_url":"https://github.com/3Horse","followers_url":"https://api.github.com/users/3Horse/followers","following_url":"https://api.github.com/users/3Horse/following{/other_user}","gists_url":"https://api.github.com/users/3Horse/gists{/gist_id}","starred_url":"https://api.github.com/users/3Horse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/3Horse/subscriptions","organizations_url":"https://api.github.com/users/3Horse/orgs","repos_url":"https://api.github.com/users/3Horse/repos","events_url":"https://api.github.com/users/3Horse/events{/privacy}","received_events_url":"https://api.github.com/users/3Horse/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-28T16:31:35Z","updated_at":"2018-05-04T11:15:27Z","closed_at":"2018-05-04T11:15:27Z","author_association":"NONE","body":"**When** Static() exists, Noroute dose not work.\r\nSo I use the following way to realize custom 404 route.\r\n\r\n\trouter.NoRoute(func(context *gin.Context) {\r\n\t\tstaticFileThatIsBeingRequested := filepath.Join(\"/static/\", context.Request.URL.Path)\r\n\r\n\t\t_, err := os.Stat(staticFileThatIsBeingRequested)\r\n\t\tif err != nil { //\r\n\t\t\tLog.Printf(\"404 : %s \\n\", context.Request.URL.Path)\r\n\t\t\tcontext.Redirect(404, \"/404/404.html\")\r\n\r\n\t\t} else { //\r\n\t\t\tLog.Printf(\"200 : %s \\n\", context.Request.URL.Path)\r\n\t\t\tcontext.File(staticFileThatIsBeingRequested)\r\n\r\n\t\t}\r\n\t})\r\n\r\nWhen the requested file exists, it works properly.\r\nWhen the requested file doesn't exist,  panic.\r\n\r\n\r\n2018/04/29 00:30:17 [Recovery] 2018/04/29 - 00:30:17 panic recovered:\r\nGET /login.html0 HTTP/1.1\r\nHost: 192.168.0.4:9001\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate\r\nAccept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6\r\nCache-Control: max-age=0\r\nConnection: keep-alive\r\nCookie: session_id=36e51344e46279a70853ffc25589054d\r\nIf-Modified-Since: Thu, 20 Aug 2015 05:44:37 GMT\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36\r\n\r\n\r\nCannot redirect with status code 404\r\n/usr/local/go/src/runtime/panic.go:502 (0x4335b8)\r\n\tgopanic: reflectcall(nil, unsafe.Pointer(d.fn), deferArgs(d), uint32(d.siz), uint32(d.siz))\r\n/home/ktv/go/src/github.com/gin-gonic/gin/render/redirect.go:20 (0x985c79)\r\n\tRedirect.Render: panic(fmt.Sprintf(\"Cannot redirect with status code %d\", r.Code))\r\n/home/ktv/go/src/github.com/gin-gonic/gin/context.go:645 (0x98b922)\r\n\t(*Context).Render: if err := r.Render(c.Writer); err != nil {\r\n/home/ktv/go/src/github.com/gin-gonic/gin/context.go:704 (0x98bedf)\r\n\t(*Context).Redirect: c.Render(-1, render.Redirect{\r\n/home/ktv/go/src/github.com/gin-gonic/gin/context.go:704 (0x98bedf)\r\n\t(*Context).Redirect: c.Render(-1, render.Redirect{\r\n/home/ktv/workspace/chen_web/src/lib/service.go:130 (0x9a1844)\r\n\tsetRouters.func1: context.Redirect(404, \"/404/404.html\")\r\n/home/ktv/go/src/github.com/gin-gonic/gin/context.go:107 (0x988ef2)\r\n\t(*Context).Next: c.handlers[c.index](c)\r\n/home/ktv/go/src/github.com/gin-gonic/gin/recovery.go:47 (0x9993a9)\r\n\tRecoveryWithWriter.func1: c.Next()\r\n/home/ktv/go/src/github.com/gin-gonic/gin/context.go:107 (0x988ef2)\r\n\t(*Context).Next: c.handlers[c.index](c)\r\n/home/ktv/go/src/github.com/gin-gonic/gin/logger.go:83 (0x99865b)\r\n\tLoggerWithWriter.func1: c.Next()\r\n/home/ktv/go/src/github.com/gin-gonic/gin/context.go:107 (0x988ef2)\r\n\t(*Context).Next: c.handlers[c.index](c)\r\n/home/ktv/go/src/github.com/gin-gonic/gin/gin.go:395 (0x9907f7)\r\n\tserveError: c.Next()\r\n/home/ktv/go/src/github.com/gin-gonic/gin/gin.go:388 (0x99060e)\r\n\t(*Engine).handleHTTPRequest: serveError(c, 404, default404Body)\r\n/home/ktv/go/src/github.com/gin-gonic/gin/gin.go:326 (0x98ff92)\r\n\t(*Engine).ServeHTTP: engine.handleHTTPRequest(c)\r\n/usr/local/go/src/net/http/server.go:2694 (0x67b15b)\r\n\tserverHandler.ServeHTTP: handler.ServeHTTP(rw, req)\r\n/usr/local/go/src/net/http/server.go:1830 (0x6772b0)\r\n\t(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)\r\n/usr/local/go/src/runtime/asm_amd64.s:2361 (0x463090)\r\n\tgoexit: BYTE\t$0x90\t// NOP\r\n\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1334","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1334/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1334/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1334/events","html_url":"https://github.com/gin-gonic/gin/issues/1334","id":317565675,"node_id":"MDU6SXNzdWUzMTc1NjU2NzU=","number":1334,"title":"how about add pointer support in binding Form Params?","user":{"login":"qazqwe1596357","id":10689799,"node_id":"MDQ6VXNlcjEwNjg5Nzk5","avatar_url":"https://avatars0.githubusercontent.com/u/10689799?v=4","gravatar_id":"","url":"https://api.github.com/users/qazqwe1596357","html_url":"https://github.com/qazqwe1596357","followers_url":"https://api.github.com/users/qazqwe1596357/followers","following_url":"https://api.github.com/users/qazqwe1596357/following{/other_user}","gists_url":"https://api.github.com/users/qazqwe1596357/gists{/gist_id}","starred_url":"https://api.github.com/users/qazqwe1596357/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qazqwe1596357/subscriptions","organizations_url":"https://api.github.com/users/qazqwe1596357/orgs","repos_url":"https://api.github.com/users/qazqwe1596357/repos","events_url":"https://api.github.com/users/qazqwe1596357/events{/privacy}","received_events_url":"https://api.github.com/users/qazqwe1596357/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-04-25T10:19:29Z","updated_at":"2018-04-27T05:46:18Z","closed_at":"2018-04-27T05:46:17Z","author_association":"NONE","body":"I see code in https://github.com/gin-gonic/gin/blob/master/binding/form_mapping.go, we can only support value field bind, do not support pointer type.\r\n\r\n\r\n```\r\n// example\r\ntype Params struct {\r\n  Pa string `form:\"pa\"`  // which can success bind via form_mapping\r\n  Pb *string `form:\"pb\"`  // which cannot bind via form_mapping\r\n}\r\n```\r\n\r\nThe reason is fieldKind in \"func setWithProperType()\" have not pointer type. \r\n\r\nSupporting pointer fields bind is useful we can easy know whether we pass the param. if we not passing it, it will keep nil value.\r\nIn Json Unmarshal can process pointer field also.\r\n\r\nSo do you think supporting pointer field parse in binding/form_mapping.go is a good idea?","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1330","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1330/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1330/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1330/events","html_url":"https://github.com/gin-gonic/gin/issues/1330","id":316925248,"node_id":"MDU6SXNzdWUzMTY5MjUyNDg=","number":1330,"title":"Creating an Engine instance with the Logger and Recovery middleware already attached","user":{"login":"cxk280","id":19479857,"node_id":"MDQ6VXNlcjE5NDc5ODU3","avatar_url":"https://avatars2.githubusercontent.com/u/19479857?v=4","gravatar_id":"","url":"https://api.github.com/users/cxk280","html_url":"https://github.com/cxk280","followers_url":"https://api.github.com/users/cxk280/followers","following_url":"https://api.github.com/users/cxk280/following{/other_user}","gists_url":"https://api.github.com/users/cxk280/gists{/gist_id}","starred_url":"https://api.github.com/users/cxk280/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cxk280/subscriptions","organizations_url":"https://api.github.com/users/cxk280/orgs","repos_url":"https://api.github.com/users/cxk280/repos","events_url":"https://api.github.com/users/cxk280/events{/privacy}","received_events_url":"https://api.github.com/users/cxk280/received_events","type":"User","site_admin":false},"labels":[{"id":107421010,"node_id":"MDU6TGFiZWwxMDc0MjEwMTA=","url":"https://api.github.com/repos/gin-gonic/gin/labels/question","name":"question","color":"cc317c","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-04-23T18:17:41Z","updated_at":"2018-04-24T17:04:43Z","closed_at":"2018-04-24T01:00:58Z","author_association":"NONE","body":"I'm trying to start a Golang/Gin project I wrote a while back on the computer I just bought, and I'm getting the following error:\r\n\r\n```\r\n[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.\r\n\r\n[GIN-debug] [WARNING] Running in \"debug\" mode. Switch to \"release\" mode in production.\r\n - using env:\texport GIN_MODE=release\r\n - using code:\tgin.SetMode(gin.ReleaseMode)\r\n\r\ndial tcp [::1]:5432: connect: connection refused\r\nexit status 1\r\n```\r\n\r\nI've never seen this before. My project was built using [this](https://github.com/Massad/gin-boilerplate) as boilerplate and worked until now.\r\n\r\nWhat does this error even mean? How do I fix it?","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1329","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1329/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1329/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1329/events","html_url":"https://github.com/gin-gonic/gin/issues/1329","id":316551461,"node_id":"MDU6SXNzdWUzMTY1NTE0NjE=","number":1329,"title":"how to get a graceful shutdown of an server.","user":{"login":"ByLuxury","id":25615578,"node_id":"MDQ6VXNlcjI1NjE1NTc4","avatar_url":"https://avatars3.githubusercontent.com/u/25615578?v=4","gravatar_id":"","url":"https://api.github.com/users/ByLuxury","html_url":"https://github.com/ByLuxury","followers_url":"https://api.github.com/users/ByLuxury/followers","following_url":"https://api.github.com/users/ByLuxury/following{/other_user}","gists_url":"https://api.github.com/users/ByLuxury/gists{/gist_id}","starred_url":"https://api.github.com/users/ByLuxury/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ByLuxury/subscriptions","organizations_url":"https://api.github.com/users/ByLuxury/orgs","repos_url":"https://api.github.com/users/ByLuxury/repos","events_url":"https://api.github.com/users/ByLuxury/events{/privacy}","received_events_url":"https://api.github.com/users/ByLuxury/received_events","type":"User","site_admin":false},"labels":[{"id":107421010,"node_id":"MDU6TGFiZWwxMDc0MjEwMTA=","url":"https://api.github.com/repos/gin-gonic/gin/labels/question","name":"question","color":"cc317c","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-22T05:48:14Z","updated_at":"2018-05-04T01:20:37Z","closed_at":"2018-05-04T01:20:37Z","author_association":"NONE","body":"how to get a graceful shutdown of an HTTP server by gin web framework","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1322","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1322/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1322/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1322/events","html_url":"https://github.com/gin-gonic/gin/issues/1322","id":315227497,"node_id":"MDU6SXNzdWUzMTUyMjc0OTc=","number":1322,"title":"Install gin on a mac is failling with ./logger.go:61:67: undefined: isatty.IsCygwinTerminal","user":{"login":"pydonny","id":1366346,"node_id":"MDQ6VXNlcjEzNjYzNDY=","avatar_url":"https://avatars2.githubusercontent.com/u/1366346?v=4","gravatar_id":"","url":"https://api.github.com/users/pydonny","html_url":"https://github.com/pydonny","followers_url":"https://api.github.com/users/pydonny/followers","following_url":"https://api.github.com/users/pydonny/following{/other_user}","gists_url":"https://api.github.com/users/pydonny/gists{/gist_id}","starred_url":"https://api.github.com/users/pydonny/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pydonny/subscriptions","organizations_url":"https://api.github.com/users/pydonny/orgs","repos_url":"https://api.github.com/users/pydonny/repos","events_url":"https://api.github.com/users/pydonny/events{/privacy}","received_events_url":"https://api.github.com/users/pydonny/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-17T20:42:02Z","updated_at":"2018-04-17T20:45:11Z","closed_at":"2018-04-17T20:45:02Z","author_association":"NONE","body":"Hi, I am recieving this error when attempting to install or build on a mac. \r\n\r\n```bash\r\nDonalds-MacBook-Pro:gin dcasson$ go build\r\n# github.com/gin-gonic/gin\r\n./logger.go:60:67: undefined: isatty.IsCygwinTerminal\r\n```\r\n\r\nI have looked through the isatty package which and i can see that the isatty_other.go is missing from my system which is where \"IsCygwinTerminal\" is defined.\r\n\r\n```bash\r\nDonalds-MacBook-Pro:gin dcasson$ ls -la ../../mattn/go-isatty/\r\ntotal 64\r\ndrwxr-xr-x  12 dcasson  staff   384 23 Oct  2016 .\r\ndrwxr-xr-x   5 dcasson  staff   160 23 Oct  2016 ..\r\ndrwxr-xr-x  13 dcasson  staff   416 23 Oct  2016 .git\r\n-rw-r--r--   1 dcasson  staff  1099 23 Oct  2016 LICENSE\r\n-rw-r--r--   1 dcasson  staff   374 23 Oct  2016 README.md\r\ndrwxr-xr-x   3 dcasson  staff    96 23 Oct  2016 _example\r\n-rw-r--r--   1 dcasson  staff    64 23 Oct  2016 doc.go\r\n-rw-r--r--   1 dcasson  staff   226 23 Oct  2016 isatty_appengine.go\r\n-rw-r--r--   1 dcasson  staff   425 23 Oct  2016 isatty_bsd.go\r\n-rw-r--r--   1 dcasson  staff   389 23 Oct  2016 isatty_linux.go\r\n-rw-r--r--   1 dcasson  staff   402 23 Oct  2016 isatty_solaris.go\r\n-rw-r--r--   1 dcasson  staff   434 23 Oct  2016 isatty_windows.go\r\nDonalds-MacBook-Pro:gin dcasson$ \r\n```\r\n\r\nhttps://github.com/mattn/go-isatty/blob/master/isatty_others.go\r\n```go\r\n// +build !windows\r\n// +build !appengine\r\n\r\npackage isatty\r\n\r\n// IsCygwinTerminal return true if the file descriptor is a cygwin or msys2\r\n// terminal. This is also always false on this environment.\r\nfunc IsCygwinTerminal(fd uintptr) bool {\r\n\treturn false\r\n}\r\n```\r\n\r\nAm not sure why isatty_others.go isnt being pulled down ?\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1320","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1320/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1320/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1320/events","html_url":"https://github.com/gin-gonic/gin/issues/1320","id":314408192,"node_id":"MDU6SXNzdWUzMTQ0MDgxOTI=","number":1320,"title":"关于上传文件的一个小问题请教下","user":{"login":"xhochipe","id":9391575,"node_id":"MDQ6VXNlcjkzOTE1NzU=","avatar_url":"https://avatars3.githubusercontent.com/u/9391575?v=4","gravatar_id":"","url":"https://api.github.com/users/xhochipe","html_url":"https://github.com/xhochipe","followers_url":"https://api.github.com/users/xhochipe/followers","following_url":"https://api.github.com/users/xhochipe/following{/other_user}","gists_url":"https://api.github.com/users/xhochipe/gists{/gist_id}","starred_url":"https://api.github.com/users/xhochipe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xhochipe/subscriptions","organizations_url":"https://api.github.com/users/xhochipe/orgs","repos_url":"https://api.github.com/users/xhochipe/repos","events_url":"https://api.github.com/users/xhochipe/events{/privacy}","received_events_url":"https://api.github.com/users/xhochipe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-15T11:41:41Z","updated_at":"2018-04-16T08:50:48Z","closed_at":"2018-04-16T08:50:48Z","author_association":"NONE","body":"您好：\r\ngin怎么解决文件上传第一次请求是option的问题，我写了middleware\r\n\r\nfunc Cors() gin.HandlerFunc {\r\n\treturn func(c *gin.Context) {\r\n\t\t//method := c.Request.Method\r\n\r\n\t\tvar headerKeys []string\r\n\t\tfor k, _ := range c.Request.Header {\r\n\t\t\theaderKeys = append(headerKeys, k)\r\n\t\t}\r\n\t\theaderStr := strings.Join(headerKeys, \", \")\r\n\t\tif headerStr != \"\" {\r\n\t\t\theaderStr = fmt.Sprintf(\"access-control-allow-origin, access-control-allow-headers, %s\", headerStr)\r\n\t\t} else {\r\n\t\t\theaderStr = \"access-control-allow-origin, access-control-allow-headers\"\r\n\t\t}\r\n\r\n\t\tc.Header(\"Access-Control-Allow-Origin\", \"*\");\r\n\t\tc.Header(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, DELETE\");\r\n\t\tc.Header(\"Access-Control-Max-Age\", \"3600\");\r\n\t\tc.Header(\"Access-Control-Allow-Headers\", \"x-requested-with,Authorization\");\r\n\t\tc.Header(\"Access-Control-Allow-Credentials\",\"true\");\r\n\r\n\t\t//c.JSON(http.StatusOK, \"Options Request!\")\r\n\r\n\t\tc.Next()\r\n\t}\r\n}\r\n\r\n\r\nrouter：\r\n    \tr.Use(cors.Cors())\r\n\tr.POST(\"file\", v1.Upload)\r\n\r\n\r\n请求file接口，每次都是option请求，导致上传文件失败\r\n
2c9b
","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1318","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1318/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1318/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1318/events","html_url":"https://github.com/gin-gonic/gin/issues/1318","id":314396501,"node_id":"MDU6SXNzdWUzMTQzOTY1MDE=","number":1318,"title":"gin.H return json => my bigint guid loss of Accuracy","user":{"login":"biexiang","id":24689318,"node_id":"MDQ6VXNlcjI0Njg5MzE4","avatar_url":"https://avatars0.githubusercontent.com/u/24689318?v=4","gravatar_id":"","url":"https://api.github.com/users/biexiang","html_url":"https://github.com/biexiang","followers_url":"https://api.github.com/users/biexiang/followers","following_url":"https://api.github.com/users/biexiang/following{/other_user}","gists_url":"https://api.github.com/users/biexiang/gists{/gist_id}","starred_url":"https://api.github.com/users/biexiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/biexiang/subscriptions","organizations_url":"https://api.github.com/users/biexiang/orgs","repos_url":"https://api.github.com/users/biexiang/repos","events_url":"https://api.github.com/users/biexiang/events{/privacy}","received_events_url":"https://api.github.com/users/biexiang/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-04-15T08:26:49Z","updated_at":"2018-04-15T08:33:07Z","closed_at":"2018-04-15T08:33:07Z","author_association":"NONE","body":"DATA store in mysql which has a bigint column\r\nparse to struct int64 and print them is the same value with mysql data\r\nbut after gin.H ， vistit API ,the data became not Accuracy\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1316","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1316/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1316/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1316/events","html_url":"https://github.com/gin-gonic/gin/issues/1316","id":314328336,"node_id":"MDU6SXNzdWUzMTQzMjgzMzY=","number":1316,"title":"How go-bindata supports the template ?","user":{"login":"jicg","id":6479672,"node_id":"MDQ6VXNlcjY0Nzk2NzI=","avatar_url":"https://avatars2.githubusercontent.com/u/6479672?v=4","gravatar_id":"","url":"https://api.github.com/users/jicg","html_url":"https://github.com/jicg","followers_url":"https://api.github.com/users/jicg/followers","following_url":"https://api.github.com/users/jicg/following{/other_user}","gists_url":"https://api.github.com/users/jicg/gists{/gist_id}","starred_url":"https://api.github.com/users/jicg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jicg/subscriptions","organizations_url":"https://api.github.com/users/jicg/orgs","repos_url":"https://api.github.com/users/jicg/repos","events_url":"https://api.github.com/users/jicg/events{/privacy}","received_events_url":"https://api.github.com/users/jicg/received_events","type":"User","site_admin":false},"labels":[{"id":107421010,"node_id":"MDU6TGFiZWwxMDc0MjEwMTA=","url":"https://api.github.com/repos/gin-gonic/gin/labels/question","name":"question","color":"cc317c","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-04-14T13:17:07Z","updated_at":"2018-04-22T07:05:52Z","closed_at":"2018-04-22T07:05:39Z","author_association":"NONE","body":"How go-bindata supports the template","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1314","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1314/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1314/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1314/events","html_url":"https://github.com/gin-gonic/gin/issues/1314","id":314242693,"node_id":"MDU6SXNzdWUzMTQyNDI2OTM=","number":1314,"title":"Cannot unmarshal into struct with c.BindJson()","user":{"login":"fabulousduck","id":9714566,"node_id":"MDQ6VXNlcjk3MTQ1NjY=","avatar_url":"https://avatars0.githubusercontent.com/u/9714566?v=4","gravatar_id":"","url":"https://api.github.com/users/fabulousduck","html_url":"https://github.com/fabulousduck","followers_url":"https://api.github.com/users/fabulousduck/followers","following_url":"https://api.github.com/users/fabulousduck/following{/other_user}","gists_url":"https://api.github.com/users/fabulousduck/gists{/gist_id}","starred_url":"https://api.github.com/users/fabulousduck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fabulousduck/subscriptions","organizations_url":"https://api.github.com/users/fabulousduck/orgs","repos_url":"https://api.github.com/users/fabulousduck/repos","events_url":"https://api.github.com/users/fabulousduck/events{/privacy}","received_events_url":"https://api.github.com/users/fabulousduck/received_events","type":"User","site_admin":false},"labels":[{"id":107421010,"node_id":"MDU6TGFiZWwxMDc0MjEwMTA=","url":"https://api.github.com/repos/gin-gonic/gin/labels/question","name":"question","color":"cc317c","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-13T20:36:07Z","updated_at":"2018-05-05T14:51:22Z","closed_at":"2018-05-05T14:51:22Z","author_association":"NONE","body":"I currently have a request body like this:\r\n```json\r\n{\r\n\t\"guests\": [\r\n\t\t{\r\n\t\t\t\"firstname\": \"ryan\",\r\n\t\t\t\"lastname\": \"vlaming\"\r\n\t\t}\r\n\t],\r\n\t\"roomType\": \"suite\",\r\n\t\"checkinDate\": \"2018-04-13T19:24:00+00:00\",\r\n\t\"checkoutDate\": \"2018-07-13T19:24:00+00:00\"\r\n}\r\n```\r\n\r\nand am trying to read it into this struct\r\n\r\n```go\r\ntype CreateParams struct {\r\n\tUsername     string `json:\"username\"`\r\n\tGuests       Guests `json:\"guests\"`\r\n\tRoomType     string `json:\"roomType\"`\r\n\tCheckinDate  string `json:\"checkinDate\"`\r\n\tCheckoutDate string `json:\"checkoutDate\"`\r\n}\r\n\r\ntype Guests struct {\r\n\tPerson []struct {\r\n\t\tfirstname string\r\n\t\tlastname  string\r\n\t}\r\n}\r\n```\r\n\r\nusing the following code\r\n\r\n```go\r\n\tr := new(params.CreateParams)\r\n\terr := context.BindJSON(r)\r\n\tif err != nil {\r\n\t\tcontext.AbortWithStatusJSON(500, apierrors.JsonBindingError)\r\n\t\treturn\r\n\t}\r\n```\r\n\r\nBut i am getting the following error: `json: cannot unmarshal array into Go struct field CreateParams.guests of type params.Guests`\r\n\r\nIs there any way i could read this in using the `c.BindJson` function, or do i need some other function for this ? or some sort of custom solution ? ","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1313","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1313/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1313/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1313/events","html_url":"https://github.com/gin-gonic/gin/issues/1313","id":313647650,"node_id":"MDU6SXNzdWUzMTM2NDc2NTA=","number":1313,"title":"why cannot get value  from Header? , c.GetHeader may be  has a BUG ","user":{"login":"tx991020","id":12123206,"node_id":"MDQ6VXNlcjEyMTIzMjA2","avatar_url":"https://avatars0.githubusercontent.com/u/12123206?v=4","gravatar_id":"","url":"https://api.github.com/users/tx991020","html_url":"https://github.com/tx991020","followers_url":"https://api.github.com/users/tx991020/followers","following_url":"https://api.github.com/users/tx991020/following{/other_user}","gists_url":"https://api.github.com/users/tx991020/gists{/gist_id}","starred_url":"https://api.github.com/users/tx991020/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tx991020/subscriptions","organizations_url":"https://api.github.com/users/tx991020/orgs","repos_url":"https://api.github.com/users/tx991020/repos","events_url":"https://api.github.com/users/tx991020/events{/privacy}","received_events_url":"https://api.github.com/users/tx991020/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-04-12T09:32:26Z","updated_at":"2018-06-01T15:13:18Z","closed_at":"2018-04-12T16:23:29Z","author_association":"NONE","body":"![](http://oq1xuulg6.bkt.clouddn.com/d8af0580010e089989254781a0c9b8ec.jpg)","score":1.0},{"url":"https://api.github.com/repos/gin-gonic/gin/issues/1312","repository_url":"https://api.github.com/repos/gin-gonic/gin","labels_url":"https://api.github.com/repos/gin-gonic/gin/issues/1312/labels{/name}","comments_url":"https://api.github.com/repos/gin-gonic/gin/issues/1312/comments","events_url":"https://api.github.com/repos/gin-gonic/gin/issues/1312/events","html_url":"https://github.com/gin-gonic/gin/issues/1312","id":313209400,"node_id":"MDU6SXNzdWUzMTMyMDk0MDA=","number":1312,"title":"write json and parse json ","user":{"login":"kingeasternsun","id":5291739,"node_id":"MDQ6VXNlcjUyOTE3Mzk=","avatar_url":"https://avatars0.githubusercontent.com/u/5291739?v=4","gravatar_id":"","url":"https://api.github.com/users/kingeasternsun","html_url":"https://github.com/kingeasternsun","followers_url":"https://api.github.com/users/kingeasternsun/followers","following_url":"https://api.github.com/users/kingeasternsun/following{/other_user}","gists_url":"https://api.github.com/users/kingeasternsun/gists{/gist_id}","starred_url":"https://api.github.com/users/kingeasternsun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kingeasternsun/subscriptions","organizations_url":"https://api.github.com/users/kingeasternsun/orgs","repos_url":"https://api.github.com/users/kingeasternsun/repos","events_url":"https://api.github.com/users/kingeasternsun/events{/privacy}","received_events_url":"https://api.github.com/users/kingeasternsun/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-04-11T07:47:00Z","updated_at":"2018-04-11T08:25:35Z","closed_at":"2018-04-11T08:22:18Z","author_association":"NONE","body":"when write json data to response ,the code in gin is \r\n```go\r\n\r\n\twriteContentType(w, jsonContentType)\r\n\tjsonBytes, err := json.Marshal(obj)\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\tw.Write(jsonBytes)\r\n\r\n```\r\n\r\nif the obj is big ,why not code like this\r\n```go\r\n\r\n\twriteContentType(w, jsonContentType)\r\n\tjson.NewEncoder(w).Encode(obj)\r\n\r\n```\r\n\r\nI Have seen in binding.json, parse the reqdata to json is very beautiful \r\n\r\n```go\r\nfunc (jsonBinding) Bind(req *http.Request, obj interface{}) error {\r\n\tdecoder := json.NewDecoder(req.Body)\r\n\tif EnableDecoderUseNumber {\r\n\t\tdecoder.UseNumber()\r\n\t}\r\n\tif err := decoder.Decode(obj); err != nil {\r\n\t\treturn err\r\n\t}\r\n\treturn validate(obj)\r\n}\r\n```","score":1.0}]}
0

