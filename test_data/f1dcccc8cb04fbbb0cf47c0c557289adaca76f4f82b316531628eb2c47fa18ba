HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Apr 2018 20:19:39 GMT
Link: <https://api.github.com/search/issues?q=repo%3Apallets%2Fflask+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Apallets%2Fflask+type%3Aissue+state%3Aclosed&page=34>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: C96E:148C:22B86CD:46A2989:5AD2625A
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 6
X-Ratelimit-Reset: 1523737215
X-Runtime-Rack: 0.319617
X-Xss-Protection: 1; mode=block

8000
{"total_count":1404,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/pallets/flask/issues/2701","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2701/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2701/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2701/events","html_url":"https://github.com/pallets/flask/issues/2701","id":314138678,"number":2701,"title":"Flask Python Login w/LDAP Auth","user":{"login":"PythonNubie","id":34889670,"avatar_url":"https://avatars3.githubusercontent.com/u/34889670?v=4","gravatar_id":"","url":"https://api.github.com/users/PythonNubie","html_url":"https://github.com/PythonNubie","followers_url":"https://api.github.com/users/PythonNubie/followers","following_url":"https://api.github.com/users/PythonNubie/following{/other_user}","gists_url":"https://api.github.com/users/PythonNubie/gists{/gist_id}","starred_url":"https://api.github.com/users/PythonNubie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PythonNubie/subscriptions","organizations_url":"https://api.github.com/users/PythonNubie/orgs","repos_url":"https://api.github.com/users/PythonNubie/repos","events_url":"https://api.github.com/users/PythonNubie/events{/privacy}","received_events_url":"https://api.github.com/users/PythonNubie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-13T14:52:37Z","updated_at":"2018-04-13T14:54:44Z","closed_at":"2018-04-13T14:53:37Z","author_association":"NONE","body":"Hello world, I have Python/Flask application with a login screen. My goal is to utilize LDAP authentication in unison with my Python/Flask app. The issue that i am running into is this:\r\n\r\n> RuntimeError: The session is unavailable because no secret key was set.  Set the secret_key on the application to something unique and secret.\"\r\n\r\nI have a secret key and i still get the error same error when i comment it out. \r\nHere is my code:\r\n\r\n```python\r\nimport token\r\nfrom flask import Flask, session\r\nfrom flask.ext.sqlalchemy import SQLAlchemy\r\nfrom flask.ext.login import LoginManager\r\n\r\napp = Flask(__name__)\r\n#app.secret_key = 'welfhwdlhwdlfhwelfhwlehfwlehfelwehflwefwlehflwefhlwefhlewjfhwelfjhweflhweflhwel'\r\napp.config['SESSION_TYPE'] = 'filesystem'\r\napp.config['LDAP_AUTH_SERVER'] = 'LDAPLocation.com'\r\napp.config['LDAP_PORT'] = '636'\r\napp.config['LDAP_TOP_DN'] = 'CN=something here,OU=somethingHere,OU=SomeService Accounts,dc=magic,dc=pumpum,DC=com Xe'\r\napp.config['LDAP_BIND_USER_PASSWORD'] = 'pssword'\r\napp.register_blueprint(token, url_prefix='/auth')\r\n\r\n\r\ndb = SQLAlchemy(app)\r\n\r\nlogin_manager = LoginManager()\r\nlogin_manager.init_app(app)\r\nlogin_manager.login_view = 'login'\r\n\r\nfrom app.auth.views import auth\r\n\r\napp.register_blueprint(auth)\r\n```\r\n\r\nThank you in advance....","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2700","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2700/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2700/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2700/events","html_url":"https://github.com/pallets/flask/issues/2700","id":314007974,"number":2700,"title":"TypeError: is not JSON serializable","user":{"login":"santhoshdc1590","id":30614728,"avatar_url":"https://avatars2.githubusercontent.com/u/30614728?v=4","gravatar_id":"","url":"https://api.github.com/users/santhoshdc1590","html_url":"https://github.com/santhoshdc1590","followers_url":"https://api.github.com/users/santhoshdc1590/followers","following_url":"https://api.github.com/users/santhoshdc1590/following{/other_user}","gists_url":"https://api.github.com/users/santhoshdc1590/gists{/gist_id}","starred_url":"https://api.github.com/users/santhoshdc1590/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/santhoshdc1590/subscriptions","organizations_url":"https://api.github.com/users/santhoshdc1590/orgs","repos_url":"https://api.github.com/users/santhoshdc1590/repos","events_url":"https://api.github.com/users/santhoshdc1590/events{/privacy}","received_events_url":"https://api.github.com/users/santhoshdc1590/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-04-13T08:07:04Z","updated_at":"2018-04-13T12:31:11Z","closed_at":"2018-04-13T11:37:26Z","author_association":"NONE","body":"\r\nCan anyone help fix this issue?\r\n\r\n---\r\n\r\n### Expected Behavior\r\n\r\nI'm running [cloud-function-python](https://github.com/MartinSahlen/cloud-f…) using flask.\r\n\r\nError is being pointed to a file called `flask-handler.py`\r\n\r\nCode of `flask-handler.py` [link](https://github.com/MartinSahlen/cloud-functions-python/blob/master/cloudfn/flask_handler.py)\r\n```python\r\nimport json\r\nimport sys\r\nfrom io import StringIO\r\n\r\nimport six\r\nfrom six.moves.urllib_parse import urlparse\r\nfrom werkzeug.datastructures import Headers\r\n\r\n# from .wsgi_util import wsgi\r\n\r\n\r\ndef handle_http_event(app):\r\n    req_json = json.loads(sys.stdin.read())\r\n    c = urlparse(req_json['url'])\r\n    path = c.path\r\n    if path == '':\r\n        path = '/'\r\n\r\n    body = StringIO(req_json.get('body', u''))\r\n\r\n    req_headers = req_json.get('headers', None)\r\n    h = Headers()\r\n    if req_headers is not None:\r\n        for key, value in six.iteritems(req_headers):\r\n            h.add(key, value)\r\n\r\n    with app.test_request_context(\r\n            path=path,\r\n            input_stream=body,\r\n            method=req_json.get('method', 'GET'),\r\n            headers=h,\r\n            query_string=c.query):\r\n        resp = app.full_dispatch_request()\r\n        body = resp.get_data()\r\n        try:\r\n            body = json.loads(body)\r\n        except:\r\n            pass\r\n\r\n        headers = {}\r\n        for header in resp.headers:\r\n            if header[0] in headers:\r\n                headers[header[0]] += ', ' + header[1]\r\n            else:\r\n                headers[header[0]] = header[1]\r\n\r\n        sys.stdout.write(json.dumps({\r\n            'body': body,\r\n            'status_code': resp.status_code,\r\n            'headers': headers,\r\n        }))\r\n```\r\n\r\n### Actual Behavior\r\n\r\nI'm getting back this error\r\n\r\nline 50 this code resides\r\n\r\n```\r\n        sys.stdout.write(json.dumps({\r\n            'body': body,\r\n            'status_code': resp.status_code,\r\n            'headers': headers,\r\n        }))\r\n```\r\n\r\nI tried `json.dump` instead of `json.dumps` but still I'm getting the same error\r\n\r\n```pytb\r\nFailed to execute script function Traceback (most recent call last): \r\nFile \"function.py\", line 33, in <module> File \"site-packages/cloudfn/flask_handler.py\", \r\nline 50, in handle_http_event File \"json/__init__.py\", \r\nline 230, in dumps File \"json/encoder.py\", \r\nline 198, in encode File \"json/encoder.py\", \r\nline 256, in iterencode File \"json/encoder.py\", \r\nline 179, in default TypeError: b'{\\n \"json\": {\\n \"empID\": \"I123\", \\n \"image\": \"http://image\", \\n \"refID\": \"69\", \\n \"refTable\": \"123456\"\\n }, \\n \"message\": \"Hello world!\"\\n}\\n' is not JSON serializable\r\n```\r\nI even raised an [issue](https://github.com/MartinSahlen/cloud-functions-python/issues/49) in `cloud-function-python` but still haven't received any response.\r\n\r\n### Environment\r\n\r\n* Python version: 3.5\r\n* Flask version: 0.12.2\r\n* flack-Cors: 3.0.3\r\n* Werkzeug version: 0.12\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2698","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2698/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2698/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2698/events","html_url":"https://github.com/pallets/flask/issues/2698","id":313599037,"number":2698,"title":"Flask logging issue with gunicorn ","user":{"login":"amirgohar-AG","id":11002686,"avatar_url":"https://avatars1.githubusercontent.com/u/11002686?v=4","gravatar_id":"","url":"https://api.github.com/users/amirgohar-AG","html_url":"https://github.com/amirgohar-AG","followers_url":"https://api.github.com/users/amirgohar-AG/followers","following_url":"https://api.github.com/users/amirgohar-AG/following{/other_user}","gists_url":"https://api.github.com/users/amirgohar-AG/gists{/gist_id}","starred_url":"https://api.github.com/users/amirgohar-AG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amirgohar-AG/subscriptions","organizations_url":"https://api.github.com/users/amirgohar-AG/orgs","repos_url":"https://api.github.com/users/amirgohar-AG/repos","events_url":"https://api.github.com/users/amirgohar-AG/events{/privacy}","received_events_url":"https://api.github.com/users/amirgohar-AG/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-04-12T06:56:44Z","updated_at":"2018-04-12T07:17:37Z","closed_at":"2018-04-12T07:17:37Z","author_association":"NONE","body":"### Expected Behavior\r\n\r\nExpecting to get Log messages other than ERROR level into gunicorn error.log file in order to persist my logs.\r\n\r\n```\r\nLogging Configuration:\r\ngunicorn_logger = logging.getLogger('gunicorn.error')\r\napp.logger.handlers = gunicorn_logger.handlers\r\napp.logger.setLevel(gunicorn_logger.level)\r\n\r\nCommand to run Gunicorn:\r\ngunicorn --access-logfile \"access.log\" --error-logfile \"error.log\" --log-level info --worker-class gevent --workers=3 --timeout 60 --bind 0.0.0.0:8081 manage:app\r\n```\r\n\r\n### Actual Behavior\r\n\r\nSometimes when an error message is logged it keeps on logging the same message for some time and then throws this error mentioned below. It doesn't happen all the time or on a certain log message but will occur randomly. App keeps working fine doesn't stop responding to the requests but adds too much noise in logs. If i use simple StreamHandler then it doesn't through any errors but the INFO or DEBUG messages or not written to Gunicorn error.log file as it doesn't capture stdout may be\r\n\r\n```pytb\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\nweb_1           | [2018-04-10 04:48:34,793] ERROR in api: AUTH_ERROR: cannot get Auth-Token for user 'amir@wanclouds.net'\r\n\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/gunicorn/http/wsgi.py\", line 70, in write\r\nweb_1           |     stream.write(data)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/werkzeug/local.py\", line 347, in __getattr__\r\nweb_1           |     return getattr(self._get_current_object(), name)\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/werkzeug/local.py\", line 306, in _get_current_object\r\nweb_1           |     return self.__local()\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/flask/logging.py\", line 37, in _proxy_stream\r\nweb_1           |     ctx = _request_ctx_stack.top\r\nweb_1           |   File \"/usr/local/lib/python2.7/site-packages/werkzeug/local.py\", line 166, in top\r\nweb_1           |     return self._local.stack[-1]\r\nweb_1           | RuntimeError: maximum recursion depth exceeded\r\n\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 2.7\r\n* Flask version: 0.12.2\r\n* Werkzeug version: 0.12.2\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2696","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2696/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2696/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2696/events","html_url":"https://github.com/pallets/flask/issues/2696","id":313156081,"number":2696,"title":"Tutorial: Use different names for top-level directory, subdirectory, and .py file rather than using \"flaskr\" for all three","user":{"login":"SamiSousa","id":6036785,"avatar_url":"https://avatars1.githubusercontent.com/u/6036785?v=4","gravatar_id":"","url":"https://api.github.com/users/SamiSousa","html_url":"https://github.com/SamiSousa","followers_url":"https://api.github.com/users/SamiSousa/followers","following_url":"https://api.github.com/users/SamiSousa/following{/other_user}","gists_url":"https://api.github.com/users/SamiSousa/gists{/gist_id}","starred_url":"https://api.github.com/users/SamiSousa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SamiSousa/subscriptions","organizations_url":"https://api.github.com/users/SamiSousa/orgs","repos_url":"https://api.github.com/users/SamiSousa/repos","events_url":"https://api.github.com/users/SamiSousa/events{/privacy}","received_events_url":"https://api.github.com/users/SamiSousa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-11T02:56:03Z","updated_at":"2018-04-11T03:19:35Z","closed_at":"2018-04-11T03:19:35Z","author_association":"NONE","body":"I found the tutorial rather confusing in how it gives the same name to three different things: the top-level directory of the project, the subdirectory containing all project-specific code (the package directory?), and the main .py script. In many spots in the tutorial, we set variables to the value \"flaskr\" (in setup.py and in environment variables) and we import from .flaskr as well. Maybe this is common practice in making flask applications or python apps in general, but I think for beginners it might help to rename some of these to make it clearer which \"flaskr\" is being referenced in setup.py, __init__.py, environment variables, etc. Thank you.","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2692","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2692/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2692/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2692/events","html_url":"https://github.com/pallets/flask/issues/2692","id":313005838,"number":2692,"title":"Backport #2691 detect JSON encoding","user":{"login":"davidism","id":1242887,"avatar_url":"https://avatars1.githubusercontent.com/u/1242887?v=4","gravatar_id":"","url":"https://api.github.com/users/davidism","html_url":"https://github.com/davidism","followers_url":"https://api.github.com/users/davidism/followers","following_url":"https://api.github.com/users/davidism/following{/other_user}","gists_url":"https://api.github.com/users/davidism/gists{/gist_id}","starred_url":"https://api.github.com/users/davidism/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidism/subscriptions","organizations_url":"https://api.github.com/users/davidism/orgs","repos_url":"https://api.github.com/users/davidism/repos","events_url":"https://api.github.com/users/davidism/events{/privacy}","received_events_url":"https://api.github.com/users/davidism/received_events","type":"User","site_admin":false},"labels":[{"id":398831866,"url":"https://api.github.com/repos/pallets/flask/labels/json","name":"json","color":"1d76db","default":false}],"state":"closed","locked":false,"assignee":{"login":"davidism","id":1242887,"avatar_url":"https://avatars1.githubusercontent.com/u/1242887?v=4","gravatar_id":"","url":"https://api.github.com/users/davidism","html_url":"https://github.com/davidism","followers_url":"https://api.github.com/users/davidism/followers","following_url":"https://api.github.com/users/davidism/following{/other_user}","gists_url":"https://api.github.com/users/davidism/gists{/gist_id}","starred_url":"https://api.github.com/users/davidism/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidism/subscriptions","organizations_url":"https://api.github.com/users/davidism/orgs","repos_url":"https://api.github.com/users/davidism/repos","events_url":"https://api.github.com/users/davidism/events{/privacy}","received_events_url":"https://api.github.com/users/davidism/received_events","type":"User","site_admin":false},"assignees":[{"login":"davidism","id":1242887,"avatar_url":"https://avatars1.githubusercontent.com/u/1242887?v=4","gravatar_id":"","url":"https://api.github.com/users/davidism","html_url":"https://github.com/davidism","followers_url":"https://api.github.com/users/davidism/followers","following_url":"https://api.github.com/users/davidism/following{/other_user}","gists_url":"https://api.github.com/users/davidism/gists{/gist_id}","starred_url":"https://api.github.com/users/davidism/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidism/subscriptions","organizations_url":"https://api.github.com/users/davidism/orgs","repos_url":"https://api.github.com/users/davidism/repos","events_url":"https://api.github.com/users/davidism/events{/privacy}","received_events_url":"https://api.github.com/users/davidism/received_events","type":"User","site_admin":false}],"m
8000
ilestone":{"url":"https://api.github.com/repos/pallets/flask/milestones/4","html_url":"https://github.com/pallets/flask/milestone/4","labels_url":"https://api.github.com/repos/pallets/flask/milestones/4/labels","id":3256547,"number":4,"title":"0.12.3","description":"","creator":{"login":"davidism","id":1242887,"avatar_url":"https://avatars1.githubusercontent.com/u/1242887?v=4","gravatar_id":"","url":"https://api.github.com/users/davidism","html_url":"https://github.com/davidism","followers_url":"https://api.github.com/users/davidism/followers","following_url":"https://api.github.com/users/davidism/following{/other_user}","gists_url":"https://api.github.com/users/davidism/gists{/gist_id}","starred_url":"https://api.github.com/users/davidism/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidism/subscriptions","organizations_url":"https://api.github.com/users/davidism/orgs","repos_url":"https://api.github.com/users/davidism/repos","events_url":"https://api.github.com/users/davidism/events{/privacy}","received_events_url":"https://api.github.com/users/davidism/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":4,"state":"open","created_at":"2018-04-10T16:48:41Z","updated_at":"2018-04-10T19:58:55Z","due_on":"2018-04-11T07:00:00Z","closed_at":null},"comments":0,"created_at":"2018-04-10T16:48:19Z","updated_at":"2018-04-10T19:58:55Z","closed_at":"2018-04-10T19:58:54Z","author_association":"OWNER","body":"Backport #2691 to 0.12.","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2690","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2690/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2690/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2690/events","html_url":"https://github.com/pallets/flask/issues/2690","id":312984657,"number":2690,"title":"MAX_CONTENT_LENGTH is not respected","user":{"login":"yanglu0106","id":24239667,"avatar_url":"https://avatars1.githubusercontent.com/u/24239667?v=4","gravatar_id":"","url":"https://api.github.com/users/yanglu0106","html_url":"https://github.com/yanglu0106","followers_url":"https://api.github.com/users/yanglu0106/followers","following_url":"https://api.github.com/users/yanglu0106/following{/other_user}","gists_url":"https://api.github.com/users/yanglu0106/gists{/gist_id}","starred_url":"https://api.github.com/users/yanglu0106/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanglu0106/subscriptions","organizations_url":"https://api.github.com/users/yanglu0106/orgs","repos_url":"https://api.github.com/users/yanglu0106/repos","events_url":"https://api.github.com/users/yanglu0106/events{/privacy}","received_events_url":"https://api.github.com/users/yanglu0106/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-10T15:51:28Z","updated_at":"2018-04-10T16:05:41Z","closed_at":"2018-04-10T16:05:41Z","author_association":"NONE","body":"When I send a large payload to the service, the flask config is not respecting the config and let the program continue to run.\r\n\r\nThis line is not hit ever: https://github.com/pallets/werkzeug/blob/6df9e5bdb9d216fcf2989ce051cd11b763cef4a0/werkzeug/formparser.py#L194\r\n\r\n---\r\n\r\n### Expected Behavior\r\n\r\nI am expecting to get 413 error in response.\r\n\r\n```python\r\nfrom flask import Flask, request, jsonify, abort\r\n\r\napp = Flask(__name__)\r\napp.config['MAX_CONTENT_LENGTH'] = 100\r\n\r\n...\r\n\r\n@app.route('/myendpoint', methods=['POST'])\r\n\r\n...\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(host=\"0.0.0.0\", port=12345, debug=True)\r\n```\r\n\r\n### Actual Behavior\r\n\r\nTell us what happens instead.\r\n\r\n```pytb\r\nPaste the full traceback if there was an exception.\r\n```\r\n\r\n### Environment\r\n\r\n* Python version:  Both python 2.7 and 3.6\r\n* Flask version: 0.12.2\r\n* Werkzeug version: 0.14.1\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2689","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2689/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2689/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2689/events","html_url":"https://github.com/pallets/flask/issues/2689","id":312836131,"number":2689,"title":"How to install this module in ironpython?","user":{"login":"Hemitr","id":30254206,"avatar_url":"https://avatars1.githubusercontent.com/u/30254206?v=4","gravatar_id":"","url":"https://api.github.com/users/Hemitr","html_url":"https://github.com/Hemitr","followers_url":"https://api.github.com/users/Hemitr/followers","following_url":"https://api.github.com/users/Hemitr/following{/other_user}","gists_url":"https://api.github.com/users/Hemitr/gists{/gist_id}","starred_url":"https://api.github.com/users/Hemitr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hemitr/subscriptions","organizations_url":"https://api.github.com/users/Hemitr/orgs","repos_url":"https://api.github.com/users/Hemitr/repos","events_url":"https://api.github.com/users/Hemitr/events{/privacy}","received_events_url":"https://api.github.com/users/Hemitr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-10T09:11:16Z","updated_at":"2018-04-10T13:25:47Z","closed_at":"2018-04-10T13:24:10Z","author_association":"NONE","body":"### Expected Behavior\r\nI want to use this module in ironpython which provided by Ansys Electronics Desktop as a script languange. So what should I do?\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2688","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2688/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2688/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2688/events","html_url":"https://github.com/pallets/flask/issues/2688","id":312631392,"number":2688,"title":"PEP484 static typing support","user":{"login":"jdemilledt","id":29146969,"avatar_url":"https://avatars0.githubusercontent.com/u/29146969?v=4","gravatar_id":"","url":"https://api.github.com/users/jdemilledt","html_url":"https://github.com/jdemilledt","followers_url":"https://api.github.com/users/jdemilledt/followers","following_url":"https://api.github.com/users/jdemilledt/following{/other_user}","gists_url":"https://api.github.com/users/jdemilledt/gists{/gist_id}","starred_url":"https://api.github.com/users/jdemilledt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdemilledt/subscriptions","organizations_url":"https://api.github.com/users/jdemilledt/orgs","repos_url":"https://api.github.com/users/jdemilledt/repos","events_url":"https://api.github.com/users/jdemilledt/events{/privacy}","received_events_url":"https://api.github.com/users/jdemilledt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":28,"created_at":"2018-04-09T18:09:07Z","updated_at":"2018-04-14T19:32:49Z","closed_at":"2018-04-09T18:55:53Z","author_association":"NONE","body":"Are there any plans to add type stubs for PEP484-compliant static typing?","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2687","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2687/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2687/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2687/events","html_url":"https://github.com/pallets/flask/issues/2687","id":312517720,"number":2687,"title":"Suggest: support post json.dumps with unicode.","user":{"login":"ahui132","id":1781999,"avatar_url":"https://avatars2.githubusercontent.com/u/1781999?v=4","gravatar_id":"","url":"https://api.github.com/users/ahui132","html_url":"https://github.com/ahui132","followers_url":"https://api.github.com/users/ahui132/followers","following_url":"https://api.github.com/users/ahui132/following{/other_user}","gists_url":"https://api.github.com/users/ahui132/gists{/gist_id}","starred_url":"https://api.github.com/users/ahui132/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahui132/subscriptions","organizations_url":"https://api.github.com/users/ahui132/orgs","repos_url":"https://api.github.com/users/ahui132/repos","events_url":"https://api.github.com/users/ahui132/events{/privacy}","received_events_url":"https://api.github.com/users/ahui132/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-09T12:50:51Z","updated_at":"2018-04-09T12:53:12Z","closed_at":"2018-04-09T12:53:12Z","author_association":"NONE","body":"I found that flask post not supports json.dumps with unicode. \r\n\r\n```\r\nimport request as \r\nr.post('http://localhost/test', json={'bar':'程序员'})\r\n```\r\nSo I suggest that support unicode in `vim modles.py +458`:\r\n\r\n`body = complexjson.dumps(json, ensure_ascii=True)`","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2683","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2683/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2683/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2683/events","html_url":"https://github.com/pallets/flask/issues/2683","id":312220325,"number":2683,"title":"[New Feature] Flask init utility","user":{"login":"DefCon-007","id":16754547,"avatar_url":"https://avatars1.githubusercontent.com/u/16754547?v=4","gravatar_id":"","url":"https://api.github.com/users/DefCon-007","html_url":"https://github.com/DefCon-007","followers_url":"https://api.github.com/users/DefCon-007/followers","following_url":"https://api.github.com/users/DefCon-007/following{/other_user}","gists_url":"https://api.github.com/users/DefCon-007/gists{/gist_id}","starred_url":"https://api.github.com/users/DefCon-007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DefCon-007/subscriptions","organizations_url":"https://api.github.com/users/DefCon-007/orgs","repos_url":"https://api.github.com/users/DefCon-007/repos","events_url":"https://api.github.com/users/DefCon-007/events{/privacy}","received_events_url":"https://api.github.com/users/DefCon-007/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-07T16:13:30Z","updated_at":"2018-04-07T18:41:06Z","closed_at":"2018-04-07T18:40:44Z","author_association":"NONE","body":"Every time we use flask there is some basic code we need to write and some directories we need to create. We can automate that particular cumbersome task by something like `flask init` which will let's say create an app.py file containing the basic imports statements, a basic hello world route, code to start the server on the default port, basic directories like a template, static etc. \r\nBasically something like Django's `django-admin startproject `. ","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2681","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2681/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2681/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2681/events","html_url":"https://github.com/pallets/flask/issues/2681","id":311574091,"number":2681,"title":"I want to send a json from the front end and update it to the postgresql DB with that data.","user":{"login":"passion044","id":18065698,"avatar_url":"https://avatars3.githubusercontent.com/u/18065698?v=4","gravatar_id":"","url":"https://api.github.com/users/passion044","html_url":"https://github.com/passion044","followers_url":"https://api.github.com/users/passion044/followers","following_url":"https://api.github.com/users/passion044/following{/other_user}","gists_url":"https://api.github.com/users/passion044/gists{/gist_id}","starred_url":"https://api.github.com/users/passion044/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/passion044/subscriptions","organizations_url":"https://api.github.com/users/passion044/orgs","repos_url":"https://api.github.com/users/passion044/repos","events_url":"https://api.github.com/users/passion044/events{/privacy}","received_events_url":"https://api.github.com/users/passion044/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-05T11:33:07Z","updated_at":"2018-04-05T12:21:23Z","closed_at":"2018-04-05T12:21:07Z","author_association":"NONE","body":"\r\n//run.py\r\nfrom flask import Flask, render_template, jsonify, request\r\nfrom flask_cors import CORS\r\nfrom src.models.models import Memeber0\r\nfrom src.models.dbconn3 import db\r\n\r\napp = Flask(name)\r\nCORS(app)\r\n\r\n@app.route('/json_test', methods=['GET', 'POST'])\r\ndef json_test():\r\n  if request.method == \"POST\":\r\n    index = jsonify(request.json.get('index'))\r\n    agency = jsonify(request.json.get('agency'))\r\n    name = jsonify(request.json.get('name'))\r\n    feature = jsonify(request.json.get('feature'))\r\n    depiction = jsonify(request.json.get('depiction'))\r\n    Memeber0.query.filter(Memeber0.index == index).update(dict(\r\n            agency=agency, name=name, feature=feature, depiction=depiction\r\n        ))\r\n    db.session.commit()\r\n    return index\r\n--------------------------------\r\n\r\nI want to send a json from the front end and update it to the postgresql DB with that data. \r\nBut I did this, but I can not do it. What should I do? \r\nI would like you to give us a simple example.\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2680","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2680/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2680/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2680/events","html_url":"https://github.com/pallets/flask/issues/2680","id":310839998,"number":2680,"title":"How to return also json and render_template in Flask?","user":{"login":"Villuck","id":37083168,"avatar_url":"https://avatars0.githubusercontent.com/u/37083168?v=4","gravatar_id":"","url":"https://api.github.com/users/Villuck","html_url":"https://github.com/Villuck","followers_url":"https://api.github.com/users/Villuck/followers","following_url":"https://api.github.com/users/Villuck/following{/other_user}","gists_url":"https://api.github.com/users/Villuck/gists{/gist_id}","starred_url":"https://api.github.com/users/Villuck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Villuck/subscriptions","organizations_url":"https://api.github.com/users/Villuck/orgs","repos_url":"https://api.github.com/users/Villuck/repos","events_url":"https://api.github.com/users/Villuck/events{/privacy}","received_events_url":"https://api.github.com/users/Villuck/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-03T13:36:56Z","updated_at":"2018-04-03T13:38:38Z","closed_at":"2018-04-03T13:38:38Z","author_association":"NONE","body":"I've implemented a service in Python3 with Flask, to create the server. My service (MyService) take a query from the user and return a response, like a chatbot. So, i want to return both a text respons modifying the Html template, and a json containing response for using service as command line. At the moment my service only return a render template,how I can do?\r\n\r\nMy app:\r\n\r\n```\r\napp = Flask(__name__)\r\n\r\n@app.route(\"/\")\r\ndef main():\r\n    return render_template('index.html')\r\n\r\n@app.route(\"/result\", methods=['POST', 'GET'])\r\ndef result():\r\n   if request.method == 'POST':\r\n       query = request.form['query']\r\n       response = MyService.retrieve_response(query)\r\n       return render_template(\"index.html\", value=response)\r\n\r\nif __name__ == \"__main__\":\r\n    app.run()\r\n```\r\nAnd my simple index.html:\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<body>\r\n\r\n<h2>Wellcome!/h2>\r\n\r\n<form action=\"http://localhost:5000/result\" method=\"POST\">\r\n  Make a question:<br>\r\n  <br>\r\n  <input type=\"text\" name=\"query\" id=\"query\">\r\n  <br><br>\r\n  <input type=\"submit\" value=\"submit\"/>\r\n</form>\r\n\r\n\r\n<br>\r\n<h3>Response is: </h3>\r\n<br>\r\n{{value}}\r\n</body>\r\n</html>\r\n```","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2679","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2679/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2679/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2679/events","html_url":"https://github.com/pallets/flask/issues/2679","id":310685233,"number":2679,"title":"Hooks in session_interface","user":{"login":"ak04nv","id":73960,"avatar_url":"https://avatars2.githubusercontent.com/u/73960?v=4","gravatar_id":"","url":"https://api.github.com/users/ak04nv","html_url":"https://github.com/ak04nv","followers_url":"https://api.github.com/users/ak04nv/followers","following_url":"https://api.github.com/users/ak04nv/following{/other_user}","gists_url":"https://api.github.com/users/ak04nv/gists{/gist_id}","starred_url":"https://api.github.com/users/ak04nv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ak04nv/subscriptions","organizations_url":"https://api.github.com/users/ak04nv/orgs","repos_url":"https://api.github.com/users/ak04nv/repos","events_url":"https://api.github.com/users/ak04nv/events{/privacy}","received_events_url":"https://api.github.com/users/ak04nv/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-04-03T03:52:38Z","updated_at":"2018-04-04T02:04:39Z","closed_at":"2018-04-03T14:40:19Z","author_association":"NONE","body":"HI there!\r\n\r\nI'm trying to get session data from table in my custom session interface in Flask and I'm getting the error Connection already open. This exception appears because connection opens automatically when I get a session data from `open_session` method in session interface. And after that Flask runs hooks `before_request` where the method to connect to database [was registered](https://github.com/coleifer/peewee/blob/master/playhouse/flask_utils.py#L148).\r\n\r\n\r\n```python\r\nimport peewee as pw\r\n\r\nfrom flask import Flask, jsonify\r\nfrom flask.sessions import SessionInterface, SessionMixin\r\nfrom werkzeug.datastructures import CallbackDict\r\n\r\nfrom playhouse.flask_utils import FlaskDB\r\nfrom playhouse.sqlite_ext import JSONField\r\n\r\nfrom datetime import datetime\r\n\r\n\r\napp = Flask(__name__)\r\ndb = FlaskDB(app, 'sqlite:///test_db.sqlite')\r\n\r\n\r\nclass Session(CallbackDict, SessionMixin):\r\n\r\n    def __init__(self, store={}):\r\n        def on_update(self):\r\n            self.modified = True\r\n\r\n        self._store = store\r\n        self.modified = False\r\n\r\n        CallbackDict.__init__(self, store.get('data', {}), on_update)\r\n\r\n    @classmethod\r\n    def find(cls, sid):\r\n        try:\r\n            store = SessionStore.get(sid=sid)\r\n        except SessionStore.DoesNotExist:\r\n            store = {}\r\n        return cls(store)\r\n\r\n    def save(self):\r\n        if hasattr(self._store, 'data') and self.modified:\r\n            self._store.data = self\r\n        self._store.save()\r\n\r\n\r\nclass MySI(SessionInterface):\r\n    null_session_class = Session\r\n\r\n    def open_session(self, app, request):\r\n        sid = request.cookies.get('sid')\r\n        # This is a point where request object already exists\r\n        # but hooks before_request are not called\r\n        return Session.find(sid) if sid else None\r\n\r\n    def save_session(self, app, session, response):\r\n        if session.modified:\r\n            session.save()\r\n\r\n\r\nclass SessionStore(db.Model):\r\n    sid = pw.CharField(primary_key=True)\r\n    data = JSONField()\r\n    expired = pw.DateTimeField(default=datetime.now)\r\n\r\n    class Meta:\r\n        table_name = 'sessions'\r\n\r\n\r\napp.session_interface = MySI()\r\n\r\n@app.route('/')\r\ndef main():\r\n    return jsonify(ok=1)\r\n\r\nif __name__ == '__main__':\r\n    if not SessionStore.table_exists():\r\n        SessionStore.create_table()\r\n    app.run(debug=True)\r\n```\r\n\r\nTraceback:\r\n\r\n```bash\r\n127.0.0.1 - - [03/Apr/2018 11:42:35] \"GET / HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/home/ak04nv/.virtualenvs/web-app-boilerplate/lib/python3.6/site-packages/flask/app.py\", line 1997, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/home/ak04nv/.virtualenvs/web-app-boilerplate/lib/python3.6/site-packages/flask/app.py\", line 1985, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/home/ak04nv/.virtualenvs/web-app-boilerplate/lib/python3.6/site-packages/flask/app.py\", line 1540, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/ak04nv/.virtualenvs/web-app-boilerplate/lib/python3.6/site-packages/flask/_compat.py\", line 33, in reraise\r\n    raise value\r\n  File \"/home/ak04nv/.virtualenvs/web-app-boilerplate/lib/python3.6/site-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/home/ak04nv/.virtualenvs/web-app-boilerplate/lib/python3.6/site-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/home/ak04nv/.virtualenvs/web-app-boilerplate/lib/python3.6/site-packages/flask/app.py\", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/ak04nv/.virtualenvs/web-app-boilerplate/lib/python3.6/site-packages/flask/_compat.py\", line 33, in reraise\r\n    raise value\r\n  File \"/home/ak04nv/.virtualenvs/web-app-boilerplate/lib/python3.6/site-packages/flask/app.py\", line 1610, in full_dispatch_request\r\n    rv = self.preprocess_request()\r\n  File \"/home/ak04nv/.virtualenvs/web-app-boilerplate/lib/python3.6/site-packages/flask/app.py\", line 1831, in preprocess_request\r\n    rv = func()\r\n  File \"/home/ak04nv/.virtualenvs/web-app-boilerplate/lib/python3.6/site-packages/playhouse/flask_utils.py\", line 174, in connect_db\r\n    self.database.connect()\r\n  File \"/home/ak04nv/.virtualenvs/web-app-boilerplate/lib/python3.6/site-packages/peewee.py\", line 2463, in connect\r\n    raise OperationalError('Connection already opened.')\r\npeewee.OperationalError: Connection already opened.\r\n```\r\n\r\n```bash\r\n$ pip install flask peewee\r\n$ python test.py &\r\n$ curl -b sid=123 localhost:5000\r\n```\r\n\r\nPython: 3.6.4\r\nFlask: 0.12.2\r\nWerkzeug: 0.14.1","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2678","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2678/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2678/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2678/events","html_url":"https://github.com/pallets/flask/issues/2678","id":310636022,"number":2678,"title":"Incorrect endpoint name in fileuploads doc","user":{"login":"MayankVachher","id":6067803,"avatar_url":"https://avatars0.githubusercontent.com/u/6067803?v=4","gravatar_id":"","url":"https://api.github.com/users/MayankVachher","html_url":"https://github.com/MayankVachher","followers_url":"https://api.github.com/users/MayankVachher/followers","following_url":"https://api.github.com/users/MayankVachher/following{/other_user}","gists_url":"https://api.github.com/users/MayankVachher/gists{/gist_id}","starred_url":"https://api.github.com/users/MayankVachher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MayankVachher/subscriptions","organizations_url":"https://api.github.com/users/MayankVachher/orgs","repos_url":"https://api.github.com/users/MayankVachher/repos","events_url":"https://api.github.com/users/MayankVachher/events{/privacy}","received_events_url":"https://api.github.com/users/MayankVachher/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-04-02T22:46:56Z","updated_at":"2018-04-03T17:43:24Z","closed_at":"2018-04-02T22:49:43Z","author_association":"NONE","body":"### Expected Behavior\r\n\r\nhttp://flask.pocoo.org/docs/0.12/patterns/fileuploads/ should have the following code snippet:\r\n\r\n``` file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))\r\n            return redirect(url_for('upload_file',\r\n                                    filename=filename))\r\n```\r\n\r\n### Actual Behavior\r\n\r\nThe doc instead has:\r\n\r\n``` file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))\r\n            return redirect(url_for('uploaded_file',\r\n                                    filename=filename))\r\n```\r\n\r\nIt's a quick fix. Just need to rename `url_for('uploaded_file', ` to `url_for('upload_file', `\r\n\r\n### Environment\r\n\r\n* Python version: Any\r\n* Flask version: 0.12\r\n* Werkzeug version: Any\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2677","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2677/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2677/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2677/events","html_url":"https://github.com/pallets/flask/issues/2677","id":310321275,"number":2677,"title":"AssertionError on app.test_client().session_transaction()","user":{"login":"surrealbytes","id":19918053,"avatar_url":"https://avatars1.githubusercontent.com/u/19918053?v=4","gravatar_id":"","url":"https://api.github.com/users/surrealbytes","html_url":"https://github.com/surrealbytes","followers_url":"https://api.github.com/users/surrealbytes/followers","following_url":"https://api.github.com/users/surrealbytes/following{/other_user}","gists_url":"https://api.github.com/users/surrealbytes/gists{/gist_id}","starred_url":"https://api.github.com/users/surrealbytes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/surrealbytes/subscriptions","organizations_url":"https://api.github.com/users/surrealbytes/orgs","repos_url":"https://api.github.com/users/surrealbytes/repos","events_url":"https://api.github.com/users/surrealbytes/events{/privacy}","received_events_url":"https://api.github.com/users/surrealbytes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-01T12:49:56Z","updated_at":"2018-04-02T11:32:48Z","closed_at":"2018-04-02T11:32:48Z","author_association":"NONE","body":"### Expected Behavior\r\n\r\nTesting with pytest and using  the context manager `app.test_client().session_transaction()`\r\nto set the session configuration.\r\n\r\n```python\r\n\r\n@pytest.fixture()\r\ndef client():\r\n    app.config['TESTING'] = True\r\n\r\n    app.secret_key = 'test_views'\r\n    with app.test_client() as client:\r\n        yield client\r\n\r\ndef test_phase1(client, mocker):\r\n    with client.session_transaction() as session:\r\n        session['logged_in'] = True\r\n        response = client.get('/phase1')\r\n        print(response)\r\n```\r\n### Actual Behavior\r\n\r\n```pytb\r\n    def do_teardown_request(self, exc=_sentinel):\r\n        \"\"\"Called after the actual request dispatching and will\r\n            call every as :meth:`teardown_request` decorated function.  This is\r\n            not actually called by the :class:`Flask` object itself but is always\r\n            triggered when the request context is popped.  That way we have a\r\n            tighter control over certain resources under testing environments.\r\n    \r\n            .. versionchanged:: 0.9\r\n               Added the `exc` argument.  Previously this was always using the\r\n               current exception information.\r\n            \"\"\"\r\n        if exc is _sentinel:\r\n            exc = sys.exc_info()[1]\r\n        funcs = reversed(self.teardown_request_funcs.get(None, ()))\r\n>       bp = _request_ctx_stack.top.request.blueprint\r\nE           AssertionError: Popped wrong request context.  (None instead of <RequestContext 'http://localhost/' [GET])\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n    def pop(self, exc=_sentinel):\r\n        \"\"\"Pops the request context and unbinds it by doing that.  This will\r\n            also trigger the execution of functions registered by the\r\n            :meth:`~flask.Flask.teardown_request` decorator.\r\n    \r\n            .. versionchanged:: 0.9\r\n               Added the `exc` argument.\r\n            \"\"\"\r\n        app_ctx = self._implicit_app_ctx_stack.pop()\r\n    \r\n        try:\r\n            clear_request = False\r\n            if not self._implicit_app_ctx_stack:\r\n                self.preserved = False\r\n                self._preserved_exc = None\r\n                if exc is _sentinel:\r\n                    exc = sys.exc_info()[1]\r\n                self.app.do_teardown_request(exc)\r\n    \r\n                # If this interpreter supports clearing the exception information\r\n                # we do that now.  This will only go into effect on Python 2.x,\r\n                # on 3.x it disappears automatically at the end of the exception\r\n                # stack.\r\n                if hasattr(sys, 'exc_clear'):\r\n                    sys.exc_clear()\r\n    \r\n                request_close = getattr(self.request, 'close', None)\r\n                if request_close is not None:\r\n                    request_close()\r\n                clear_request = True\r\n        finally:\r\n            rv = _request_ctx_stack.pop()\r\n    \r\n            # get rid of circular dependencies at the end of the request\r\n            # so that we don't require the GC to be active.\r\n            if clear_request:\r\n                rv.request.environ['werkzeug.request'] = None\r\n    \r\n            # Get rid of the app as well if necessary.\r\n            if app_ctx is not None:\r\n                app_ctx.pop(exc)\r\n    \r\n            assert rv is self, 'Popped wrong request context.  ' \\\r\n>               '(%r instead of %r)' % (rv, self)\r\nE          AssertionError: Popped wrong request context.  (None instead of <RequestContext 'http://localhost/' [GET])\r\n\r\n```\r\ntried with with app.config['PRESERVE_CONTEXT_ON_EXCEPTION'] = False but it doesn't work\r\n\r\n### Environment\r\n\r\n* Python version: 3.5.3\r\n* Flask version: 0.12.2\r\n* Werkzeug version: 0.14.1\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2675","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2675/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2675/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2675/events","html_url":"https://github.com/pallets/flask/issues/2675","id":309518096,"number":2675,"title":"Allow wsgi files to specify the application instance in FLASK_APP","user":{"login":"wgwz","id":10120306,"avatar_url":"https://avatars2.githubusercontent.com/u/10120306?v=4","gravatar_id":"","url":"https://api.github.com/users/
8000
wgwz","html_url":"https://github.com/wgwz","followers_url":"https://api.github.com/users/wgwz/followers","following_url":"https://api.github.com/users/wgwz/following{/other_user}","gists_url":"https://api.github.com/users/wgwz/gists{/gist_id}","starred_url":"https://api.github.com/users/wgwz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wgwz/subscriptions","organizations_url":"https://api.github.com/users/wgwz/orgs","repos_url":"https://api.github.com/users/wgwz/repos","events_url":"https://api.github.com/users/wgwz/events{/privacy}","received_events_url":"https://api.github.com/users/wgwz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-03-28T20:24:17Z","updated_at":"2018-03-28T22:30:44Z","closed_at":"2018-03-28T21:51:50Z","author_association":"CONTRIBUTOR","body":"I'm wondering if we can be slightly more permissive in the type of file we can use to specify the application instance. `.wsgi` seems to be a paradigm that it might sense to include. Look forward to hearing back on this!\r\n\r\n### Expected Behavior\r\n```\r\nexport FLASK_APP=/path/to/app.wsgi\r\nflask shell\r\n>>> working terminal yay! (i can import the sqla db object and do stuff)\r\n```\r\n### Actual Behavior\r\n\r\n```\r\nexport FLASK_APP=/path/to/app.wsgi\r\nflask shell\r\n```\r\n```\r\nTraceback (most recent call last):\r\n ...\r\n ...\r\nflask.cli.NoAppException: The file provided (/path/to/python.wsgi) does exist but is not a valid Python file.  This means that it cannot be used as application.  Please change the extension to .py\r\n```\r\n### Environment\r\n\r\n* Python version: Python 3.5.2\r\n* Flask version: Flask==0.12.2\r\n* Werkzeug version: Werkzeug==0.14.1\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2674","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2674/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2674/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2674/events","html_url":"https://github.com/pallets/flask/issues/2674","id":309482727,"number":2674,"title":"Multiple Blueprints mounted at same url_prefix (keyword argument to app#register_blueprint)","user":{"login":"alexanderankin","id":8921892,"avatar_url":"https://avatars3.githubusercontent.com/u/8921892?v=4","gravatar_id":"","url":"https://api.github.com/users/alexanderankin","html_url":"https://github.com/alexanderankin","followers_url":"https://api.github.com/users/alexanderankin/followers","following_url":"https://api.github.com/users/alexanderankin/following{/other_user}","gists_url":"https://api.github.com/users/alexanderankin/gists{/gist_id}","starred_url":"https://api.github.com/users/alexanderankin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexanderankin/subscriptions","organizations_url":"https://api.github.com/users/alexanderankin/orgs","repos_url":"https://api.github.com/users/alexanderankin/repos","events_url":"https://api.github.com/users/alexanderankin/events{/privacy}","received_events_url":"https://api.github.com/users/alexanderankin/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-28T18:37:01Z","updated_at":"2018-03-28T18:52:24Z","closed_at":"2018-03-28T18:50:09Z","author_association":"NONE","body":"### Expected Behavior\r\n\r\nI have mounted multiple blueprints for serving static files at the same base url, as I use this pattern when developing with other web frameworks (though I am unfamiliar with the limitations of python web programming). Perhaps this is the incorrect suggested mechanism for accomplishing this with Flask?\r\n\r\n```python\r\napp.register_blueprint(Blueprint('mybp', __name__, static_folder='static', static_url_path=''), url_prefix='/a')\r\napp.register_blueprint(Blueprint('mybp1', __name__, static_folder='static_', static_url_path=''), url_prefix='/a')\r\n```\r\n\r\n### Actual Behavior\r\n\r\nThe files in `static` where accessible and the ones in `static_` were not. The behavior was silent, there was no traceback. \r\n\r\n### Environment\r\n\r\n* Python version: 2.7.12\r\n* Flask version: 0.12.2\r\n* Werkzeug version: 0.14.1\r\n\r\nthanks so much, y'all! I'm just trying to figure out how to make an abstraction for my many folders to be accessible from a single route that serves static files.\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2673","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2673/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2673/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2673/events","html_url":"https://github.com/pallets/flask/issues/2673","id":308909086,"number":2673,"title":"teardown_request can't remove session's attribute","user":{"login":"MrLiupython","id":26358836,"avatar_url":"https://avatars0.githubusercontent.com/u/26358836?v=4","gravatar_id":"","url":"https://api.github.com/users/MrLiupython","html_url":"https://github.com/MrLiupython","followers_url":"https://api.github.com/users/MrLiupython/followers","following_url":"https://api.github.com/users/MrLiupython/following{/other_user}","gists_url":"https://api.github.com/users/MrLiupython/gists{/gist_id}","starred_url":"https://api.github.com/users/MrLiupython/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MrLiupython/subscriptions","organizations_url":"https://api.github.com/users/MrLiupython/orgs","repos_url":"https://api.github.com/users/MrLiupython/repos","events_url":"https://api.github.com/users/MrLiupython/events{/privacy}","received_events_url":"https://api.github.com/users/MrLiupython/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-27T10:22:38Z","updated_at":"2018-03-27T12:35:39Z","closed_at":"2018-03-27T12:35:39Z","author_association":"NONE","body":"I use **before_request** to set session's attribute,and use **teardown_request** to remove it.But only first request don't have session's attribute in **before_request**,other requests all decide request have session's attribute in **before_request**.Why?\r\n\r\nSample code:\r\n`from flask import Flask,session\r\napp = Flask(__name__)\r\napp.secret_key='sdf'\r\n@app.route('/')\r\ndef index():\r\n    return \"\"\"sessoin: {}\"\"\".format(session['hello'])\r\n@app.before_request\r\ndef before():\r\n    if not session.get('hello'):\r\n        session['hello'] = 'Hello!'\r\n        print('before: add hello')\r\n    else:\r\n        print('beforeL: have',session['hello'])\r\n@app.teardown_request\r\ndef teardown(exception):\r\n    if session.get('hello'):\r\n        session.pop('hello')\r\n        print('teardown: delete hello')\r\n        try:\r\n            print(session['hello'])\r\n        except:\r\n            print('teardown: no have')`\r\n\r\nOutput:\r\n`* Serving Flask app \"app\"\r\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\r\nbefore: add hello\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:35] \"GET / HTTP/1.1\" 200 -\r\nbeforeL: have Hello!\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:35] \"GET /favicon.ico HTTP/1.1\" 404 -\r\nbeforeL: have Hello!\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:35] \"GET /favicon.ico HTTP/1.1\" 404 -\r\nbeforeL: have Hello!\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:43] \"GET / HTTP/1.1\" 200 -\r\nbeforeL: have Hello!\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:46] \"GET / HTTP/1.1\" 200 -\r\nbeforeL: have Hello!\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:47] \"GET / HTTP/1.1\" 200 -\r\nbeforeL: have Hello!\r\nteardown: delete hello\r\nteardown: no have\r\n127.0.0.1 - - [27/Mar/2018 18:17:50] \"GET / HTTP/1.1\" 200 -`\r\n\r\n\r\n* Python version: 3.6.3\r\n* Flask version: 0.12.2\r\n* Werkzeug version: 0.12.2\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2671","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2671/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2671/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2671/events","html_url":"https://github.com/pallets/flask/issues/2671","id":308128897,"number":2671,"title":"HTML output is missing the last few lines.","user":{"login":"wilphan","id":37709362,"avatar_url":"https://avatars1.githubusercontent.com/u/37709362?v=4","gravatar_id":"","url":"https://api.github.com/users/wilphan","html_url":"https://github.com/wilphan","followers_url":"https://api.github.com/users/wilphan/followers","following_url":"https://api.github.com/users/wilphan/following{/other_user}","gists_url":"https://api.github.com/users/wilphan/gists{/gist_id}","starred_url":"https://api.github.com/users/wilphan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wilphan/subscriptions","organizations_url":"https://api.github.com/users/wilphan/orgs","repos_url":"https://api.github.com/users/wilphan/repos","events_url":"https://api.github.com/users/wilphan/events{/privacy}","received_events_url":"https://api.github.com/users/wilphan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-23T18:04:16Z","updated_at":"2018-03-23T23:03:51Z","closed_at":"2018-03-23T18:10:29Z","author_association":"NONE","body":"**This issue tracker is a tool to address bugs in Flask itself.\r\nPlease use the #pocoo IRC channel on freenode or Stack Overflow for general\r\nquestions about using Flask or issues not related to Flask.**\r\n\r\nIf you'd like to report a bug in Flask, fill out the template below. Provide\r\nany any extra information that may be useful / related to your problem.\r\nIdeally, create an [MCVE](http://stackoverflow.com/help/mcve), which helps us\r\nunderstand the problem and helps check that it is not caused by something in\r\nyour code.\r\n\r\n---\r\n\r\n### Expected Behavior\r\n\r\nThe client browser should see all the HTML code, but it's missing the last few lines.\r\n\r\nI'm running CGI on Apache 2.4.29 on Windows 10.  The problem occurs in other browers on Windows and Macs.  The problem does not happen on RHEL 7, or when using the webserver built into Flask.  The output is small, about one screenful.  I tried stripping almost all the HTML and code out of the template to a bare minimum but the results were the same.  Sending HTML directly from the Python script (without using the template) has the same results.  There are also no problems when I remove Flask and just have a simple Python script over CGI.\r\n\r\ntest.py:\r\n```python\r\n#!c:/usr/lib/python2.7/python.exe\r\nfrom cgi import escape\r\nfrom flask import Flask, render_template\r\nimport os, sys\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route('/')\r\ndef index():\r\n    return render_template('layout.html', title='Test ', user='username',\r\n\t    hostnames=['host1','host2','host3','host4'])\r\n```\r\n\r\ntemplates/layout.html\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>{{title}}</title>\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"{{url_for('static', filename='styles.css')}}\">\r\n</head>\r\n\r\n<body>\r\n<div id=\"main\">\r\n\r\n    <p> Hello <b>{{user}}</b>, welcome.\r\n    </p>\r\n\r\n\r\n    <form action=\"/rss/\" method=\"post\">\r\n    <table id=\"main\">\r\n\t<tr>\r\n\t    <th id=\"main\">Host(s)</th>\r\n\t</tr>\r\n\t<tr>\r\n\t    <td id=\"main\">\r\n\t\t{% for hostname in hostnames %}\r\n\t\t    <label><input type=\"checkbox\" name=\"hostnames\" value=\"{{hostname}}\">{{hostname}}</label>\r\n\t\t    {% endfor %}\r\n\t    </td>\r\n\t</tr>\r\n    </table>\r\n    <br>\r\n    <br>\r\n    <input type=\"submit\" value=\"submit\" name=\"submit\">\r\n    </form>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\ntest.cgi\r\n```\r\n#!c:/usr/lib/python2.7/python.exe\r\nfrom wsgiref.handlers import CGIHandler\r\nfrom test import app\r\n\r\nCGIHandler().run(app)\r\n```\r\n\r\n\r\n### Environment\r\n\r\n* Python version:  2.7.13\r\n* Flask version:  0.12.2\r\n* Werkzeug version:  0.12.2\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2670","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2670/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2670/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2670/events","html_url":"https://github.com/pallets/flask/issues/2670","id":307874302,"number":2670,"title":"TypeError: 'ScriptInfo' object is not iterable","user":{"login":"anselal","id":8732668,"avatar_url":"https://avatars1.githubusercontent.com/u/8732668?v=4","gravatar_id":"","url":"https://api.github.com/users/anselal","html_url":"https://github.com/anselal","followers_url":"https://api.github.com/users/anselal/followers","following_url":"https://api.github.com/users/anselal/following{/other_user}","gists_url":"https://api.github.com/users/anselal/gists{/gist_id}","starred_url":"https://api.github.com/users/anselal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anselal/subscriptions","organizations_url":"https://api.github.com/users/anselal/orgs","repos_url":"https://api.github.com/users/anselal/repos","events_url":"https://api.github.com/users/anselal/events{/privacy}","received_events_url":"https://api.github.com/users/anselal/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-23T01:57:37Z","updated_at":"2018-03-23T02:51:58Z","closed_at":"2018-03-23T02:50:37Z","author_association":"NONE","body":"### Expected Behavior\r\n\r\nThe template should render without any error.\r\nWhen I run the app using `python manage.py run` I get an error when I open the app in the browser.\r\nBut when I start the app using gunicorn like `gunicorn -b 0.0.0.0:5000 --access-logfile -  \"project.app:create_app()\"` the error does not occur.\r\n\r\napp.py\r\n```python\r\ndef create_app(settings_override=None):\r\n    \"\"\"\r\n    Create a Flask application using the app factory pattern.\r\n\r\n    :return: Flask app\r\n    \"\"\"\r\n    app = Flask(__name__, instance_relative_config=True)\r\n    app.config.from_object('config.settings')\r\n    app.config.from_pyfile('settings.py', silent=True)\r\n    \r\n    app.register_blueprint(antminer)\r\n    app.register_blueprint(antminer_json)\r\n    extensions(app)\r\n\r\n    if settings_override:\r\n       app.config.update(settings_override)\r\n\r\n    @app.shell_context_processor\r\n    def make_shell_context():\r\n        return dict(app=app, db=db)\r\n\r\n    \r\n    return app\r\n```\r\n\r\nmanage.py\r\n```python\r\nfrom flask.cli import FlaskGroup\r\nfrom project.app import create_app\r\n\r\ncli = FlaskGroup(create_app=create_app)\r\n\r\n@cli.command()\r\ndef create_db():\r\n    pass\r\n\r\n@cli.command()\r\ndef update_db():\r\n    pass\r\n\r\nif __name__ == \"__main__\":\r\n    cli()\r\n```\r\n\r\n### Actual Behavior\r\n\r\n```pytb\r\nTraceback (most recent call last):\r\n  File \"/home/pi/Projects/project/project/app.py\", line 60, in create_app\r\n    app.config.update(settings_override)\r\nTypeError: 'ScriptInfo' object is not iterable\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 2.7.9\r\n* Flask version: 0.12.2\r\n* Werkzeug version: 0.12.2\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2669","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2669/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2669/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2669/events","html_url":"https://github.com/pallets/flask/issues/2669","id":307724797,"number":2669,"title":"import error when running flask via apache","user":{"login":"gborrageiro","id":19519472,"avatar_url":"https://avatars1.githubusercontent.com/u/19519472?v=4","gravatar_id":"","url":"https://api.github.com/users/gborrageiro","html_url":"https://github.com/gborrageiro","followers_url":"https://api.github.com/users/gborrageiro/followers","following_url":"https://api.github.com/users/gborrageiro/following{/other_user}","gists_url":"https://api.github.com/users/gborrageiro/gists{/gist_id}","starred_url":"https://api.github.com/users/gborrageiro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gborrageiro/subscriptions","organizations_url":"https://api.github.com/users/gborrageiro/orgs","repos_url":"https://api.github.com/users/gborrageiro/repos","events_url":"https://api.github.com/users/gborrageiro/events{/privacy}","received_events_url":"https://api.github.com/users/gborrageiro/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-22T16:42:02Z","updated_at":"2018-03-22T19:00:21Z","closed_at":"2018-03-22T18:59:31Z","author_association":"NONE","body":"hello,\r\n\r\nI've spent the best part of a week trying to get flask working with Apache, without success.\r\n\r\nI am running\r\nRedhat Linux lonrs12363 3.10.0-327.10.1.el7.x86_64\r\nconda version : 4.5.0\r\nconda-build version : 3.7.1\r\npython version : 3.6.4.final.0\r\nmod_wsgi-py36.cpython-36m-x86_64-linux-gnu.so\r\nApache/2.4.6 (Red Hat Enterprise Linux) mod_fcgid/2.3.9 PHP/5.4.16 mod_wsgi/3.4 Python/2.7.5\r\n\r\nNow my Anaconda uses Python 3.6.4, and Red Hat's Apache appears to use Python 2.7.5.\r\nNot sure how big a problem this is, but there are no Python 3 packages available via yum in the standard repo.\r\n\r\nhttpd.conf is configured as follows (with some details obfuscated):\r\n\r\n```\r\nLoadModule wsgi_module /pathto/anaconda3/lib/myProject3.6/site-packages/mod_wsgi/server/mod_wsgi-py36.cmyProject-36m-x86_64-linux-gnu.so\r\nWSGISocketPrefix /var/run/wsgi\r\nWSGImyProjectPath /pathto/anaconda3/lib/myProject3.6/site-packages:/pathto/myProject/code\r\n\r\n<VirtualHost *>\r\n    ServerName www.namechanged.com\r\n\r\n    WSGIDaemonProcess foo myProject-path=/pathto/anaconda3/lib/myProject3.6/site-packages:/pathto/myProject/code user=user group=user threads=5\r\n    WSGIProcessGroup %{GLOBAL}\r\n    WSGIApplicationGroup %{GLOBAL}\r\n    WSGIScriptAlias /foo /home/user/www/wsgi-scripts/foo.wsgi process-group=foo application-group=%{GLOBAL}\r\n\r\n    <Directory /home/user/www/wsgi-scripts>\r\n        WSGIProcessGroup foo\r\n        WSGIApplicationGroup %{GLOBAL}\r\n        Require all granted\r\n    </Directory>\r\n</VirtualHost>\r\n```\r\n\r\nmy .wsgi file looks like:\r\n\r\n```\r\n#!pathto/anaconda3/bin/python\r\nimport sys\r\nimport site\r\n\r\nif sys.platform == 'win32':\r\n    ALLDIRS = ['python-path=C:\\\\dev\\\\apps\\\\Anaconda3\\\\Lib\\\\site-packages']\r\nelse:\r\n    ALLDIRS = []\r\n    ALLDIRS.append('pathto/myProject/code')\r\n    ALLDIRS.append('pathto/anaconda3/lib/python36.zip')\r\n    ALLDIRS.append('pathto/anaconda3/lib/python3.6')\r\n    ALLDIRS.append('pathto/anaconda3/lib/python3.6/lib-dynload')\r\n    ALLDIRS.append('pathto/anaconda3/lib/python3.6/site-packages')\r\n\r\n# Remember original sys.path.\r\nprev_sys_path = list(sys.path)\r\n\r\n# Add each new site-packages directory.\r\nfor directory in ALLDIRS:\r\n    site.addsitedir(directory)\r\n\r\n# Reorder sys.path so new directories at the front.\r\nnew_sys_path = []\r\nfor item in list(sys.path):\r\n    if item not in prev_sys_path:\r\n        new_sys_path.append(item)\r\n    sys.path.remove(item)\r\n\r\nsys.path[:0] = new_sys_path\r\nprint(sys.path)\r\n\r\nfrom analytics.signal import app as application\r\n```\r\n\r\nWhen I try access the web page made available by Apache, I get import errors of the form:\r\n\r\n```\r\nimport numpy as np\r\nImportError: No module named numpy\r\n```\r\n\r\nWhen I run a standard Flask server, everything works perfectly fine.\r\n\r\nhelp!\r\n\r\nthank you.","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2667","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2667/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2667/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2667/events","html_url":"https://github.com/pallets/flask/issues/2667","id":307176154,"number":2667,"title":"keep-alive by default","user":{"login":"toStronger","id":24999376,"avatar_url":"https://avatars2.githubusercontent.com/u/24999376?v=4","gravatar_id":"","url":"https://api.github.com/users/toStronger","html_url":"https://github.com/toStronger","followers_url":"https://api.github.com/users/toStronger/followers","following_url":"https://api.github.com/users/toStronger/following{/other_user}","gists_url":"https://api.github.com/users/toStronger/gists{/gist_id}","starred_url":"https://api.github.com/users/toStronger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/toStronger/subscriptions","organizations_url":"https://api.github.com/users/toStronger/orgs","repos_url":"https://api.github.com/users/toStronger/repos","events_url":"https://api.github.com/users/toStronger/events{/privacy}","received_events_url":"https://api.github.com/users/toStronger/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-21T09:48:19Z","updated_at":"2018-03-21T09:49:22Z","closed_at":"2018-03-21T09:49:22Z","author_association":"NONE","body":"i want to keep-alive requests with flask apps, but actually, i send some requests in a tcp stream, it closed http connection,not tcp connection soon. so i want to know flask keep-alive time ,(like nginx keep-alive time can config by myself, only in conf writes like : keep-alive: 300s). is by default? ","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2666","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2666/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2666/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2666/events","html_url":"https://github.com/pallets/flask/issues/2666","id":306571078,"number":2666,"title":"Backport #2359 fix for import warning when using reloader","user":{"login":"davidism","id":1242887,"avatar_url":"https://avatars1.githubusercontent.com/u/1242887?v=4","gravatar_id":"","url":"https://api.github.com/users/davidism","html_url":"https://github.com/davidism","followers_url":"https://api.github.com/users/davidism/followers","following_url":"https://api.github.com/users/davidism/following{/other_user}","gists_url":"https://api.github.com/users/davidism/gists{/gist_id}","starred_url":"https://api.github.com/users/davidism/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidism/subscriptions","organizations_url":"https://api.github.com/users/davidism/orgs","repos_url":"https://api.github.com/users/davidism/repos","events_url":"https://api.github.com/users/davidism/events{/privacy}","received_events_url":"https://api.github.com/users/davidism/received_events","type":"User","site_admin":false},"labels":[{"id":380608249,"url":"https://api.github.com/repos/pallets/flask/labels/cli","name":"cli","color":"1d76db","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/pallets/flask/milestones/4","html_url":"https://github.com/pallets/flask/milestone/4","labels_url":"https://api.github.com/repos/pallets/flask/milestones/4/labels","id":3256547,"number":4,"title":"0.12.3","description":"","creator":{"login":"davidism","id":1242887,"avatar_url":"https://avatars1.githubusercontent.com/u/1242887?v=4","gravatar_id":"","url":"https://api.github.com/users/davidism","html_url":"https://github.com/davidism","followers_url":"https://api.github.com/users/davidism/followers","following_url":"https://api.github.com/users/davidism/following{/other_user}","gists_url":"https://api.github.com/users/davidism/gists{/gist_id}","starred_url":"https://api.github.com/users/davidism/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidism/subscriptions","organizations_url":"https://api.github.com/users/davidism/orgs","repos_url":"https://api.github.com/users/davidism/repos","events_url":"https://api.github.com/users/davidism/events{/privacy}","received_events_url":"https://api.github.com/users/davidism/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":4,"state":"open","created_at":"2018-04-10T16:48:41Z","updated_at":"2018-04-10T19:58:55Z","due_on":"2018-04-11T07:00:00Z","closed_at":null},"comments":0,"created_at":"2018-03-19T18:01:01Z","updated_at":"2018-04-10T19:32:54Z","closed_at":"2018-04-10T19:32:54Z","author_association":"OWNER","body":"PyCharm has added support for running using `python -m` as an alternative to script paths. Backport #2359 so users who remain on 0.12 don't see this confusing warning.","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2664","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2664/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2664/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2664/events","html_url":"https://github.com/pallets/flask/issues/2664","id":306375590,"number":2664,"title":"Option to change blueprints' templates precedence","user":{"login":"wonkydonky","id":34605079,"avatar_url":"https://avatars0.githubusercontent.com/u/34605079?v=4","gravatar_id":"","url":"https://api.github.com/users/wonkydonky","html_url":"https://github.com/wonkydonky","followers_url":"https://api.github.com/users/wonkydonky/followers","following_url":"https://api.github.com/users/wonkydonky/following{/other_user}","gists_url":"https://api.github.com/users/wonkydonky/gists{/gist_id}","starred_url":"https://api.github.com/users/wonkydonky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wonkydonky/subscriptions","organizations_url":"https://api.github.com/users/wonkydonky/orgs","repos_url":"https://api.github.com/users/wonkydonky/repos","events_url":"https://api.github.com/users/wonkydonky/events{/privacy}","received_events_url":"https://api.github.com/users/wonkydonky/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-19T08:49:41Z","updated_at":"2018-03-19T13:53:46Z","closed_at":"2018-03-19T13:15:30Z","author_association":"NONE","body":"When I create a new blueprint, the template_folder is added to a Flask defined path, and the precedence to locate a template is\r\n\r\n1. `app/templates/` first\r\n2. `app/my-blueprint/templates/` second\r\n\r\nI understand this makes sense from the point of view of a developer who's trying to reuse the same blueprints on many different projects. He can plug in an existing blueprint and replace the templates from the main app if needed.\r\nThere is a different  use case however, where this behavior is unwanted and problematic. That is, when I'm structuring my applications into independent \"modules\" such that different teams can work independently on their own model/blueprint. The biggest problems is, that blueprints hits templates outside their domain, that is templates defied somewhere else in another blueprint folder. With large projects, this becomes a pretty difficult model to reason on and debug, and the blueprints are too much coupled to one another. Secondly, in this development context I would prefer a blueprint to have precedence over the base templates.\r\nIdeally, I think Flask should have an option to change the precedence of templates. For example use the current behavior by default, but introduce a new config option \"blueprints_templates_first=True/False\" to be defined somewhere (either at the app level, or for every single blueprint). The expected behavior would be the opposite of the default behavior:\r\n\r\n1. look in `app/my-blueprint/templates/` first\r\n2. look in `app/templates/` second\r\n3. **do  not** look into other blueprints folders\r\n\r\nI've seen other people come up with the same issue over the years, and I don't understand why there is so much resistance against supporting this feature. There is a real use case for this. I've always appreciated Flask because it's minimalist, concise, powerful, and doesn't get in the way I choose to structure my project. Opposing this option just seems to me as going against the nature of Flask itself, because the framework is dictating to me how I have to structure my files on disk, something that only bigger frameworks do and that Flask has proudly never done. Every workaround to this, such as adding a new inner folder `my-blueprint/templates/my-blueprint/`, just feels like a hack that goes against the ideas of simplicity and clarity.\r\n\r\nI, and I believe a lot of other Flask users as well, would really appreciate if you guys could add this configuration option to Flask. Thanks.","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2661","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2661/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2661/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2661/events","html_url":"https://github.com/pallets/flask/issues/2661","id":306173800,"number":2661,"title":"`flask run` provides no way to have a port configured by default","user":{"login":"antialiasis","id":1326447,"avatar_url":"https://avatars0.githubusercontent.com/u/1326447?v=4","gravatar_id":"","url":"https://api.github.com/users/antialiasis","html_url":"https://github.com/antialiasis","followers_url":"https://api.github.com/users/antialiasis/followers","following_url":"https://api.github.com/users/antialiasis/following{/other_user}","gists_url":"https://api.github.com/users/antialiasis/gists{/gist_id}","starred_url":"https://api.github.com/users/antialiasis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/antialiasis/subscriptions","organizations_url":"https://api.github.com/users/antialiasis/orgs","repos_url":"https://api.github.com/users/antialiasis/repos","events_url":"https://api.github.com/users/antialiasis/events{/privacy}","received_events_url":"https://api.github.com/users/antialiasis/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-17T17:19:50Z","updated_at":"2018-03-17T17:24:01Z","closed_at":"2018-03-17T17:24:01Z","author_association":"NONE","body":"I have a number of sites that I may be working on simultaneously, and to facilitate this I've arbitrarily designated a particular port that I run each site on in development, rather than running on the default port. I used to do this by having each project specify a hardcoded port when it called `app.run`:\r\n\r\n    app.run(debug=True, port=8050)\r\n\r\nWith Flask 0.12, the recommended way to run Flask is using the `flask run` command, which seems like a good change overall. In each application's virtualenv setup, I can set the FLASK_APP and FLASK_DEBUG environment variables so that I don't have to set them manually every time I start up the development server. However, there is no environment variable or anything of the sort to set the port, so every time I run an application, I still need to manually specify th
3a83
e appropriate port each time - `flask run --port 8050` instead of just `flask run`.\r\n\r\nIn #2113 joelhed wanted to use the port in the SERVER_NAME config variable, and the issue was closed on the basis that it's technically infeasible to load app config before starting up the server, which makes sense. However, a FLASK_PORT environment variable would presumably not have this problem, and it would reduce friction significantly both for people like me and joelhed (and anyone else who for any reason can't run all their Flask applications on port 5000). Is there any chance for this to be added? I can make a pull request for this if necessary.","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2660","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2660/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2660/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2660/events","html_url":"https://github.com/pallets/flask/issues/2660","id":305848029,"number":2660,"title":"blueprint_register with two different controller with subdomain but url_for use first problem","user":{"login":"broject","id":8440885,"avatar_url":"https://avatars2.githubusercontent.com/u/8440885?v=4","gravatar_id":"","url":"https://api.github.com/users/broject","html_url":"https://github.com/broject","followers_url":"https://api.github.com/users/broject/followers","following_url":"https://api.github.com/users/broject/following{/other_user}","gists_url":"https://api.github.com/users/broject/gists{/gist_id}","starred_url":"https://api.github.com/users/broject/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/broject/subscriptions","organizations_url":"https://api.github.com/users/broject/orgs","repos_url":"https://api.github.com/users/broject/repos","events_url":"https://api.github.com/users/broject/events{/privacy}","received_events_url":"https://api.github.com/users/broject/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-16T08:59:52Z","updated_at":"2018-03-16T12:11:35Z","closed_at":"2018-03-16T12:11:35Z","author_association":"NONE","body":"from app.controllers.dashboard.admin import dashboard1\r\nfrom app.controllers.dashboard.supply import dashboard2\r\n\r\napp.register_blueprint(dashboard1, subdomain='admin')\r\napp.register_blueprint(dashboard2, subdomain='supply')\r\n\r\nbut \r\n\r\n@dashboard2.route('/')\r\ndef index():\r\n       return url_for('company.index') \r\nis always appear that \"http://admin.domain.com:5000/company\"","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2659","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2659/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2659/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2659/events","html_url":"https://github.com/pallets/flask/issues/2659","id":305508095,"number":2659,"title":"Flask test_client retaining lock on files, preventing os.remove() on Windows","user":{"login":"andymantell","id":134642,"avatar_url":"https://avatars2.githubusercontent.com/u/134642?v=4","gravatar_id":"","url":"https://api.github.com/users/andymantell","html_url":"https://github.com/andymantell","followers_url":"https://api.github.com/users/andymantell/followers","following_url":"https://api.github.com/users/andymantell/following{/other_user}","gists_url":"https://api.github.com/users/andymantell/gists{/gist_id}","starred_url":"https://api.github.com/users/andymantell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andymantell/subscriptions","organizations_url":"https://api.github.com/users/andymantell/orgs","repos_url":"https://api.github.com/users/andymantell/repos","events_url":"https://api.github.com/users/andymantell/events{/privacy}","received_events_url":"https://api.github.com/users/andymantell/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-15T11:12:32Z","updated_at":"2018-03-18T13:17:02Z","closed_at":"2018-03-18T13:17:02Z","author_association":"NONE","body":"### Expected Behavior\r\n\r\nGiven the barest possible flask app (_See this repo for full example: https://github.com/andymantell/flask-test-client-sendfile-lock_)\r\n\r\n```python\r\nfrom flask import Flask\r\n\r\n\r\napp = Flask(__name__)\r\n\r\nif __name__ == \"__main__\":\r\n    app.run()\r\n```\r\n\r\nAnd the following test script:\r\n\r\n```python\r\nimport os\r\nfrom app import app\r\n\r\n\r\ntest_client = app.test_client()\r\n\r\nfilename = 'static/test.txt'\r\nwith open(filename, 'w+') as file:\r\n    file.write('Hello')\r\n\r\nresponse = test_client.get('/static/test.txt')\r\n\r\nresponse_data = response.data.decode('utf-8')\r\nassert response_data == 'Hello'\r\n\r\nos.remove(filename)  # This throws an exception on windows, claiming that the file is busy\r\n```\r\n\r\nI would expect that the file /static/test.txt will be created, requested from the test_client, and then removed again. And indeed this is what happens on Linux.\r\n\r\n### Actual Behavior\r\n\r\nOn Windows, the `os.remove` line throws an exception saying that the file is busy. It appears as if something inside the test client is locking the file.\r\n\r\nIf I switch to `requests.get` and fetch /static/test.txt over http instead of through the test client, the error does not occur, the file is not locked, and Windows successfully deletes the file.\r\n\r\n```pytb\r\n(env) C:\\projects\\flask-test-client-sendfile-lock-master>python test.py\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 15, in <module>\r\n    os.remove(filename)  # This throws an exception on windows, claiming\r\n that the file is busy\r\nPermissionError: [WinError 32] The process cannot access the file because it is\r\nbeing used by another process: 'static/test.txt'\r\n```\r\n\r\n### Environment\r\n* Windows 7\r\n* Python version: 3.4\r\n* Flask version: 0.12\r\n* Werkzeug version: 0.7\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2658","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2658/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2658/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2658/events","html_url":"https://github.com/pallets/flask/issues/2658","id":305178769,"number":2658,"title":"Why flask do not have a cookie object as request object?","user":{"login":"Andru1999","id":15606693,"avatar_url":"https://avatars3.githubusercontent.com/u/15606693?v=4","gravatar_id":"","url":"https://api.github.com/users/Andru1999","html_url":"https://github.com/Andru1999","followers_url":"https://api.github.com/users/Andru1999/followers","following_url":"https://api.github.com/users/Andru1999/following{/other_user}","gists_url":"https://api.github.com/users/Andru1999/gists{/gist_id}","starred_url":"https://api.github.com/users/Andru1999/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Andru1999/subscriptions","organizations_url":"https://api.github.com/users/Andru1999/orgs","repos_url":"https://api.github.com/users/Andru1999/repos","events_url":"https://api.github.com/users/Andru1999/events{/privacy}","received_events_url":"https://api.github.com/users/Andru1999/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2018-03-14T14:21:06Z","updated_at":"2018-03-14T15:07:45Z","closed_at":"2018-03-14T14:26:39Z","author_association":"NONE","body":"Now, work with cookies, we need to create a response object and then run it through all functions, but I suggest adding a global cookie object that allows you reading and setting cookies as request object.","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2657","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2657/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2657/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2657/events","html_url":"https://github.com/pallets/flask/issues/2657","id":304155561,"number":2657,"title":"Reloader different behavior Windows vs Linux ","user":{"login":"jgyates","id":4513286,"avatar_url":"https://avatars1.githubusercontent.com/u/4513286?v=4","gravatar_id":"","url":"https://api.github.com/users/jgyates","html_url":"https://github.com/jgyates","followers_url":"https://api.github.com/users/jgyates/followers","following_url":"https://api.github.com/users/jgyates/following{/other_user}","gists_url":"https://api.github.com/users/jgyates/gists{/gist_id}","starred_url":"https://api.github.com/users/jgyates/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgyates/subscriptions","organizations_url":"https://api.github.com/users/jgyates/orgs","repos_url":"https://api.github.com/users/jgyates/repos","events_url":"https://api.github.com/users/jgyates/events{/privacy}","received_events_url":"https://api.github.com/users/jgyates/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-11T12:49:46Z","updated_at":"2018-03-13T15:37:17Z","closed_at":"2018-03-13T15:37:00Z","author_association":"NONE","body":"I have a simple flask app that I want to restart if the server port is changed in a config file. I have the following code:\r\n\r\n    #!/usr/bin/env python\r\n\r\n    from flask import Flask, redirect\r\n    import os\r\n    import configparser\r\n\r\n    config = configparser.ConfigParser()\r\n    config.read('portnumber.ini')\r\n\r\n    app = Flask(__name__,static_url_path='')\r\n\r\n    HTTPPort = config['MAIN'].getint('portnumber')\r\n\r\n\r\n    def touchMe():\r\n        with open(__file__, 'a'):\r\n            print(\" - setting timestamp of \" + __file__ )\r\n            os.utime(__file__, None)\r\n\r\n    @app.route(\"/newport/<newport>\")\r\n    def changeRoute(newport):\r\n        HTTPPort = newport\r\n        name = newport\r\n        config['MAIN']['portnumber'] = newport\r\n        with open('portnumber.ini', 'w') as configfile:\r\n            config.write(configfile)\r\n        touchMe()\r\n        newurl = \"http://192.168.11.15:\" + HTTPPort + \"/\"\r\n        print(\"Redirecting to \" + newurl)\r\n\r\n        return redirect(newurl, code=302)\r\n\r\n\r\n    #------------------------------------------------------------\r\n    if __name__ == \"__main__\":\r\n\r\n        # load options from file, which change HTTPPort value\r\n        # LoadConfig()\r\n        while True:\r\n            app.run(host=\"0.0.0.0\", port=HTTPPort, debug=True, use_reloader=True)\r\n\r\nThe this code works as expected on Windows 10, however the port fails to change on Linux (or ssl_context also does not change if used). I am running Raspbian Jessie. I have also tried disabling the reloader and replacing the python process with the following call:\r\n\r\n    os.execl(sys.executable, 'python', __file__, *sys.argv[1:])\r\n    \r\nThis works on Windows, however on Linux, app.run() fails on reload with \"\"Address already in use\"\" error. I have reviewed the documentation and past issues however I have not found anything specific to these symptoms. \r\n\r\nI have found that, on Linux, if I use and external script to kill the python script (pkill) and reload the script it works about half of the time. When it fails it is due the \"Address already in use\" error.\r\n\r\nI have also tried this with Watchdog and I get the same results on Linux. I have duplicated this with python 2.7.9 and 3.6.4. I am using Flask 0.12.2 \r\n\r\nIs this a known issue and if so are there any workarounds? Is there another way to pragmatically change the port and ssl_context of a running Flask app on Linux?\r\n\r\n\r\n### Environment\r\n* Windows 10 and Raspbian Jessie\r\n* Python version: 2.7.9 and 3.6.4\r\n* Flask version: 0.12.2\r\n* Werkzeug version: 0.12.2\r\n","score":1.0},{"url":"https://api.github.com/repos/pallets/flask/issues/2656","repository_url":"https://api.github.com/repos/pallets/flask","labels_url":"https://api.github.com/repos/pallets/flask/issues/2656/labels{/name}","comments_url":"https://api.github.com/repos/pallets/flask/issues/2656/comments","events_url":"https://api.github.com/repos/pallets/flask/issues/2656/events","html_url":"https://github.com/pallets/flask/issues/2656","id":304134370,"number":2656,"title":"Documentation is wrong at https://www.palletsprojects.com/p/flask/","user":{"login":"jonassteinberg1","id":7853938,"avatar_url":"https://avatars0.githubusercontent.com/u/7853938?v=4","gravatar_id":"","url":"https://api.github.com/users/jonassteinberg1","html_url":"https://github.com/jonassteinberg1","followers_url":"https://api.github.com/users/jonassteinberg1/followers","following_url":"https://api.github.com/users/jonassteinberg1/following{/other_user}","gists_url":"https://api.github.com/users/jonassteinberg1/gists{/gist_id}","starred_url":"https://api.github.com/users/jonassteinberg1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonassteinberg1/subscriptions","organizations_url":"https://api.github.com/users/jonassteinberg1/orgs","repos_url":"https://api.github.com/users/jonassteinberg1/repos","events_url":"https://api.github.com/users/jonassteinberg1/events{/privacy}","received_events_url":"https://api.github.com/users/jonassteinberg1/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-11T06:26:01Z","updated_at":"2018-03-11T19:56:14Z","closed_at":"2018-03-11T13:47:37Z","author_association":"NONE","body":"---\r\n\r\n### Expected Behavior\r\n\r\nTaken directly from https://www.palletsprojects.com/p/flask/\r\n\r\n```\r\nfrom flask import Flask\r\napp = Flask(__name__)\r\n\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello World!\"\r\n\r\nif __name__ == \"__main__\":\r\n    app.run()  # claim is that argument port=some_port is not needed\r\n```\r\n\r\n### Actual Behavior\r\n\r\nNothing happens.  Script executes, but flask web server never starts.\r\n\r\n### Seems like\r\n\r\n...this is required\r\n\r\n```python\r\napp.run(port=5000)\r\n```\r\n\r\n### Environment\r\n\r\n* Python version: 3.6.4\r\n* Flask version: 0.12.2\r\n* Werkzeug version: 0.14.1\r\n","score":1.0}]}
0

