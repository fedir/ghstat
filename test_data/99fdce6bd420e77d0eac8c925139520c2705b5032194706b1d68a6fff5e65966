HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:05:47 GMT
Link: <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fphoenixframework%2Fphoenix+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fphoenixframework%2Fphoenix+type%3Aissue+state%3Aclosed&page=34>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CF8F:13F2:E1A627:1043547:5FB01C7B
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 19
X-Ratelimit-Reset: 1605377196
X-Ratelimit-Used: 11
X-Xss-Protection: 1; mode=block

1cdd4
{"total_count":1138,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/msaraiva/surface/issues/187","repository_url":"https://api.github.com/repos/msaraiva/surface","labels_url":"https://api.github.com/repos/msaraiva/surface/issues/187/labels{/name}","comments_url":"https://api.github.com/repos/msaraiva/surface/issues/187/comments","events_url":"https://api.github.com/repos/msaraiva/surface/issues/187/events","html_url":"https://github.com/msaraiva/surface/issues/187","id":734778679,"node_id":"MDU6SXNzdWU3MzQ3Nzg2Nzk=","number":187,"title":"Compile Errror: undefined function render_block/2","user":{"login":"mcgingras","id":12549482,"node_id":"MDQ6VXNlcjEyNTQ5NDgy","avatar_url":"https://avatars3.githubusercontent.com/u/12549482?v=4","gravatar_id":"","url":"https://api.github.com/users/mcgingras","html_url":"https://github.com/mcgingras","followers_url":"https://api.github.com/users/mcgingras/followers","following_url":"https://api.github.com/users/mcgingras/following{/other_user}","gists_url":"https://api.github.com/users/mcgingras/gists{/gist_id}","starred_url":"https://api.github.com/users/mcgingras/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcgingras/subscriptions","organizations_url":"https://api.github.com/users/mcgingras/orgs","repos_url":"https://api.github.com/users/mcgingras/repos","events_url":"https://api.github.com/users/mcgingras/events{/privacy}","received_events_url":"https://api.github.com/users/mcgingras/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-11-02T19:56:55Z","updated_at":"2020-11-04T16:20:17Z","closed_at":"2020-11-04T16:20:17Z","author_association":"NONE","active_lock_reason":null,"body":"Just trying to get this library off the ground and running.\r\n\r\nCompilation error in file lib/surface/components/form/submit.ex ==\r\n** (CompileError) lib/surface/components/form/submit.ex:40: undefined function render_block/2\r\n    (elixir 1.10.1) src/elixir_locals.erl:114: anonymous fn/3 in :elixir_locals.ensure_no_undefined_local/3\r\n    (stdlib 3.11.2) erl_eval.erl:680: :erl_eval.do_apply/6\r\n    (elixir 1.10.1) lib/kernel/parallel_compiler.ex:233: anonymous fn/4 in Kernel.ParallelCompiler.spawn_workers/7\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1210","repository_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view","labels_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1210/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1210/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1210/events","html_url":"https://github.com/phoenixframework/phoenix_live_view/issues/1210","id":737983667,"node_id":"MDU6SXNzdWU3Mzc5ODM2Njc=","number":1210,"title":"Testing file uploads on master; consumed_uploaded_entries returns empty list.","user":{"login":"richardkmichael","id":364390,"node_id":"MDQ6VXNlcjM2NDM5MA==","avatar_url":"https://avatars1.githubusercontent.com/u/364390?v=4","gravatar_id":"","url":"https://api.github.com/users/richardkmichael","html_url":"https://github.com/richardkmichael","followers_url":"https://api.github.com/users/richardkmichael/followers","following_url":"https://api.github.com/users/richardkmichael/following{/other_user}","gists_url":"https://api.github.com/users/richardkmichael/gists{/gist_id}","starred_url":"https://api.github.com/users/richardkmichael/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/richardkmichael/subscriptions","organizations_url":"https://api.github.com/users/richardkmichael/orgs","repos_url":"https://api.github.com/users/richardkmichael/repos","events_url":"https://api.github.com/users/richardkmichael/events{/privacy}","received_events_url":"https://api.github.com/users/richardkmichael/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-11-06T19:13:15Z","updated_at":"2020-11-11T15:18:25Z","closed_at":"2020-11-07T03:04:59Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I wanted to build a LiveView page with uploads this week and noticed the uploads merge to master -- thank you!  I thought I'd give it a try before it goes out the door in 0.15 (maybe?).\r\n\r\nTo begin with a very basic setup, uploading only one file, I've tried to follow the instructions in the new [uploads guide](https://github.com/phoenixframework/phoenix_live_view/blob/master/guides/server/uploads.md).\r\n\r\nThe `consume_uploaded_entries` call returns an empty list.  I am unsure where to look next to sort it out.  Apologies if I've missed something, I guess it's in the naming somewhere.  I've tried changing the name of the assign and allowed field name.\r\n\r\nHere is the setup and LiveView code.\r\n\r\n`phoenix_live_view` from `master@b9ce330`:\r\n\r\n```elixir\r\n# mix.exs\r\ndefp deps do\r\n  [\r\n    # ...deps\r\n    {:phoenix_live_view, override: true, github: \"phoenixframework/phoenix_live_view\", branch: \"master\"}\r\n  ]\r\nend\r\n```\r\n\r\nVerify with `mix deps` (excerpted):\r\n\r\n```\r\n* phoenix 1.5.6 (Hex package) (mix)\r\n  locked at 1.5.6 (phoenix) 0dc4d39a\r\n  ok\r\n...\r\n* phoenix_live_view 0.15.0-dev (https://github.com/phoenixframework/phoenix_live_view.git - origin/master) (mix)\r\n  locked at b9ce330 (branch: master)\r\n  ok\r\n```\r\n\r\nElixir:\r\n\r\n```\r\nErlang/OTP 23 [erts-11.1.1] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [hipe] [dtrace]\r\nElixir 1.11.1 (compiled with Erlang/OTP 23)\r\n```\r\n\r\nThe form renders and I can add a file.  When the form is submitted, `uploaded_files |> IO.inspect`\r\nis an empty list, and the callback is never run.\r\n\r\nThe live view and HTML:\r\n\r\n```elixir\r\ndefmodule GuideSearchUiWeb.PageLive do\r\n  use GuideSearchUiWeb, :live_view\r\n\r\n  @impl true\r\n  def mount(_params, _session, socket) do\r\n    {:ok, socket\r\n          |> assign(min_length: nil, intervals: nil, uploaded_files: [])\r\n          |> allow_upload(:haystack, accept: ~w(.fa), max_entries: 1)}  # I added a MIME type for `.fa`.\r\n  end\r\n\r\n  @impl true\r\n  def handle_event(\"search\", _params socket) do\r\n    uploaded_files =\r\n      consume_uploaded_entries(socket, :haystack, fn %{path: path}, _entry ->\r\n        path |> IO.inspect\r\n        dest = Path.join(\"priv/static/uploads\", Path.basename(path))\r\n        File.cp!(path, dest)\r\n        Routes.static_path(socket, \"/uploads/#{Path.basename(dest)}\")\r\n      end)\r\n\r\n    uploaded_files |> IO.inspect\r\n\r\n    {:noreply, socket |> update(:uploaded_files, &(&1 ++ uploaded_files))}\r\n  end\r\n```\r\n\r\n```html\r\n  <form phx-submit=\"search\">\r\n    <div>\r\n      <%= live_file_input @uploads.haystack %>\r\n    </div>\r\n\r\n    <input type=\"number\" name=\"min_length\" value=\"<%= @min_length %>\" step=1000 />\r\n\r\n    <button type=\"submit\" phx-disable-with=\"Searching...\">Find intervals</button>\r\n  </form>\r\n\r\n  <!-- More snipped.. -->\r\n```\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4058","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4058/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4058/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4058/events","html_url":"https://github.com/phoenixframework/phoenix/issues/4058","id":735647332,"node_id":"MDU6SXNzdWU3MzU2NDczMzI=","number":4058,"title":"the command `mix phx.server` hangs on webpack compilation","user":{"login":"herbertmuraro","id":22769511,"node_id":"MDQ6VXNlcjIyNzY5NTEx","avatar_url":"https://avatars0.githubusercontent.com/u/22769511?v=4","gravatar_id":"","url":"https://api.github.com/users/herbertmuraro","html_url":"https://github.com/herbertmuraro","followers_url":"https://api.github.com/users/herbertmuraro/followers","following_url":"https://api.github.com/users/herbertmuraro/following{/other_user}","gists_url":"https://api.github.com/users/herbertmuraro/gists{/gist_id}","starred_url":"https://api.github.com/users/herbertmuraro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/herbertmuraro/subscriptions","organizations_url":"https://api.github.com/users/herbertmuraro/orgs","repos_url":"https://api.github.com/users/herbertmuraro/repos","events_url":"https://api.github.com/users/herbertmuraro/events{/privacy}","received_events_url":"https://api.github.com/users/herbertmuraro/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-11-03T21:29:31Z","updated_at":"2020-11-03T22:15:25Z","closed_at":"2020-11-03T22:15:25Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n### Precheck\r\n\r\n* For general discussions and support, use Stack Overflow or the Elixir Forum\r\n* For proposing and discussing new features, start a thread on the Phoenix Core mailing list\r\n* For bugs, do a quick search and make sure the bug has not yet been reported\r\n* Ensure that this issue is related to the Phoenix library and not one of the dependencies listed in mix.exs (Ecto, Plug, etc.)\r\n* All checked? Be nice and have fun!\r\n-->\r\n\r\n### Environment\r\n* Elixir version (elixir -v): 1.10.4\r\n* Phoenix version (mix deps): 1.5.6\r\n* NodeJS version (node -v): 14.15.0\r\n* NPM version (npm -v): 6.14.8\r\n* Operating system: Ubuntu 20.04.1 LTS\r\n\r\n### Expected behavior\r\nThe assets are compiled succesfully and cowboy starts\r\n\r\n### Actual behavior\r\nGetting stuck on asset build after run `mix phx.server`\r\n\r\nI didn't look further on how to workaround this yet. I was able to run the application normally few days back. Since that, I have been working with some other application that depend on NodeJS, but didn't touch any of my Elixir/Phoenix apps. So, the only thing that makes sense in my opinion is some node package dependency. \r\n\r\nI've seen this old closed issue https://github.com/phoenixframework/phoenix/issues/2264 but the steps there do not help. Apparently, I am using the version that contains a fix for this similar issue. \r\n\r\nAny thoughts?\r\n ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/pawurb/ecto_psql_extras/issues/6","repository_url":"https://api.github.com/repos/pawurb/ecto_psql_extras","labels_url":"https://api.github.com/repos/pawurb/ecto_psql_extras/issues/6/labels{/name}","comments_url":"https://api.github.com/repos/pawurb/ecto_psql_extras/issues/6/comments","events_url":"https://api.github.com/repos/pawurb/ecto_psql_extras/issues/6/events","html_url":"https://github.com/pawurb/ecto_psql_extras/issues/6","id":723706582,"node_id":"MDU6SXNzdWU3MjM3MDY1ODI=","number":6,"title":"How about returning integer for sizes?","user":{"login":"happysalada","id":5317234,"node_id":"MDQ6VXNlcjUzMTcyMzQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5317234?v=4","gravatar_id":"","url":"https://api.github.com/users/happysalada","html_url":"https://github.com/happysalada","followers_url":"https://api.github.com/users/happysalada/followers","following_url":"https://api.github.com/users/happysalada/following{/other_user}","gists_url":"https://api.github.com/users/happysalada/gists{/gist_id}","starred_url":"https://api.github.com/users/happysalada/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/happysalada/subscriptions","organizations_url":"https://api.github.com/users/happysalada/orgs","repos_url":"https://api.github.com/users/happysalada/repos","events_url":"https://api.github.com/users/happysalada/events{/privacy}","received_events_url":"https://api.github.com/users/happysalada/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-10-17T08:37:05Z","updated_at":"2020-10-17T13:15:02Z","closed_at":"2020-10-17T13:15:02Z","author_association":"NONE","active_lock_reason":null,"body":"this package has been integrated by phoenix_live_dashboard and the result is great!\r\n\r\nOne problem is that returning string data for size makes it harder to sort by size.\r\nhere is an example in the code base https://github.com/pawurb/ecto_psql_extras/blob/master/lib/queries/index_size.ex#L10\r\nSee https://github.com/phoenixframework/phoenix_live_dashboard/issues/204 for more details.\r\n\r\nWould it make sense to return integer data for sizes and let the consumer of this library format those?\r\nOr if you want to be more flexible enable passing a parameter to be able to chose the format? (string or integer?)\r\n\r\nLet me know if I'm being too vague.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4020","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4020/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4020/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4020/events","html_url":"https://github.com/phoenixframework/phoenix/issues/4020","id":718739484,"node_id":"MDU6SXNzdWU3MTg3Mzk0ODQ=","number":4020,"title":"Upgrading webpack from 4 to 5","user":{"login":"joshchernoff","id":961877,"node_id":"MDQ6VXNlcjk2MTg3Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/961877?v=4","gravatar_id":"","url":"https://api.github.com/users/joshchernoff","html_url":"https://github.com/joshchernoff","followers_url":"https://api.github.com/users/joshchernoff/followers","following_url":"https://api.github.com/users/joshchernoff/following{/other_user}","gists_url":"https://api.github.com/users/joshchernoff/gists{/gist_id}","starred_url":"https://api.github.com/users/joshchernoff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshchernoff/subscriptions","organizations_url":"https://api.github.com/users/joshchernoff/orgs","repos_url":"https://api.github.com/users/joshchernoff/repos","events_url":"https://api.github.com/users/joshchernoff/events{/privacy}","received_events_url":"https://api.github.com/users/joshchernoff/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-10-11T02:05:26Z","updated_at":"2020-11-02T09:15:55Z","closed_at":"2020-10-11T04:05:33Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Environment\r\n\r\nphoenix 1.5.5\r\nelixir      1.10.3-otp-23 \r\nerlang   23.0.1 \r\nnodejs  12.18.4  \r\nnpm      6.14.6\r\nOSX 10.15.6 (19G2021)\r\nWebpack 5\r\n```\r\n% mix phx.server\r\nCompiling 59 files (.ex)\r\nGenerated morphic_pro app\r\n[info] [alarm_handler: {:set, {:system_memory_high_watermark, []}}]\r\n[info] Running MorphicProWeb.Endpoint with cowboy 2.8.0 at 0.0.0.0:4001 (https)\r\n[info] Access MorphicProWeb.Endpoint at https://localhost:4001\r\n[webpack-cli]\r\nTypeError: Cannot read property 'tap' of undefined\r\n[error] Task MorphicProWeb.Endpoint started from #PID<0.1043.0> terminating\r\n** (stop) :watcher_command_error\r\n    (phoenix 1.5.5) lib/phoenix/endpoint/watcher.ex:37: Phoenix.Endpoint.Watcher.watch/3\r\n    (elixir 1.10.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2\r\n    (stdlib 3.13) proc_lib.erl:226: :proc_lib.init_p_do_apply/3\r\nFunction: &Phoenix.Endpoint.Watcher.watch/3\r\n    Args: [\"node\", [\"node_modules/webpack/bin/webpack.js\", \"--config\", \"webpack.dev.config.js\", \"--color\", \"--bail\"], [cd: \"/Users/joshchernoff/Dev/morphic.pro/assets\"]]\r\n```\r\nLooks like watch is broken with the webpack 5 upgrade. \r\n\r\nAlso, note `--watch-stdin` is no longer an option\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1201","repository_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view","labels_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1201/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1201/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1201/events","html_url":"https://github.com/phoenixframework/phoenix_live_view/issues/1201","id":732653280,"node_id":"MDU6SXNzdWU3MzI2NTMyODA=","number":1201,"title":"no function clause matching in Phoenix.LiveView.Channel.gather_keys/2","user":{"login":"molenick","id":2080125,"node_id":"MDQ6VXNlcjIwODAxMjU=","avatar_url":"https://avatars1.githubusercontent.com/u/2080125?v=4","gravatar_id":"","url":"https://api.github.com/users/molenick","html_url":"https://github.com/molenick","followers_url":"https://api.github.com/users/molenick/followers","following_url":"https://api.github.com/users/molenick/following{/other_user}","gists_url":"https://api.github.com/users/molenick/gists{/gist_id}","starred_url":"https://api.github.com/users/molenick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/molenick/subscriptions","organizations_url":"https://api.github.com/users/molenick/orgs","repos_url":"https://api.github.com/users/molenick/repos","events_url":"https://api.github.com/users/molenick/events{/privacy}","received_events_url":"https://api.github.com/users/molenick/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-10-29T20:54:25Z","updated_at":"2020-10-30T18:32:48Z","closed_at":"2020-10-30T18:32:48Z","author_association":"NONE","active_lock_reason":null,"body":"### Overview\r\ngather_keys/2 can't handle an empty string as the first parameter.\r\n\r\n### Example Repo\r\nhttps://github.com/molenick/gather_keys_issue\r\n\r\n### Environment\r\n\r\n* Elixir version (elixir -v): 1.10.4 (compiled with Erlang/OTP 22)\r\n* Phoenix version (mix deps): 1.5.6 (and 1.5.4)\r\n* Phoenix LiveView version (mix deps): 0.14.7 (and 0.13.0)\r\n* NodeJS version (node -v): v12.16.1\r\n* NPM version (npm -v): 6.13.4\r\n* Operating system: OSX 10.15.7 (Catalina)\r\n* Browsers you attempted to reproduce this bug on (the more the merrier): Chrome\r\n* Does the problem persist after removing \"assets/node_modules\" and trying again? Yes/no: Yes\r\n\r\n### Actual behavior\r\n\r\nSimilar to https://github.com/phoenixframework/phoenix_live_view/pull/336, I'm getting an error `(FunctionClauseError) no function clause matching in Phoenix.LiveView.Channel.gather_keys/2` when trying to add a new resources using the live view.\r\n\r\nI created a new project with:\r\n`mix phx.new my_app --live --database=postgres`\r\nI generated a resource like this:\r\n`mix phx.gen.live Resources Resource resource description:string`\r\n\r\nWhen I go to localhost:4000/resources and click \"New Resource\" the modal shows as is expect.\r\nWhen I begin typing in the description text field, the app seems to hang and in my phx.server console is the following:\r\n\r\n```\r\n13:26:49.100 [error] GenServer #PID<0.575.0> terminating\r\n** (FunctionClauseError) no function clause matching in Phoenix.LiveView.Channel.gather_keys/2\r\n    (phoenix_live_view 0.14.7) lib/phoenix_live_view/channel.ex:425: Phoenix.LiveView.Channel.gather_keys(\"\", [\"description\", \"resource\"])\r\n    (phoenix_live_view 0.14.7) lib/phoenix_live_view/channel.ex:419: Phoenix.LiveView.Channel.decode_merge_target/1\r\n    (phoenix_live_view 0.14.7) lib/phoenix_live_view/channel.ex:102: Phoenix.LiveView.Channel.handle_info/2\r\n    (stdlib 3.12.1) gen_server.erl:637: :gen_server.try_dispatch/4\r\n    (stdlib 3.12.1) gen_server.erl:711: :gen_server.handle_msg/6\r\n    (stdlib 3.12.1) proc_lib.erl:249: :proc_lib.init_p_do_apply/3\r\nLast message: %Phoenix.Socket.Message{event: \"event\", join_ref: \"4\", payload: %{\"cid\" => 2, \"event\" => \"validate\", \"type\" => \"form\", \"value\" => \"_csrf_token=ABCDEF&resource%5Bdescription%5D=w&_target=resource%5Bdescription%5D\"}, ref: \"6\", topic: \"lv:phx-FEDCBA\"}\r\n```\r\n\r\nSeeing that the function was trying to match on empty string and acc, I went and added a new gather_keys/2 like so:\r\n```\r\n  defp gather_keys(\"\", acc), do: acc\r\n```\r\n\r\n...and things were good again!  I was a bit baffled because I had recently built another project very similarly and didn't encounter this.\r\n\r\n### Expected behavior\r\nI should be able to add a new resource successfully.\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/hopsoft/stimulus_reflex/issues/329","repository_url":"https://api.github.com/repos/hopsoft/stimulus_reflex","labels_url":"https://api.github.com/repos/hopsoft/stimulus_reflex/issues/329/labels{/name}","comments_url":"https://api.github.com/repos/hopsoft/stimulus_reflex/issues/329/comments","events_url":"https://api.github.com/repos/hopsoft/stimulus_reflex/issues/329/events","html_url":"https://github.com/hopsoft/stimulus_reflex/issues/329","id":721237889,"node_id":"MDU6SXNzdWU3MjEyMzc4ODk=","number":329,"title":"AlpineJS components not reinitalised after reflex","user":{"login":"acetinick","id":571649,"node_id":"MDQ6VXNlcjU3MTY0OQ==","avatar_url":"https://avatars1.githubusercontent.com/u/571649?v=4","gravatar_id":"","url":"https://api.github.com/users/acetinick","html_url":"https://github.com/acetinick","followers_url":"https://api.github.com/users/acetinick/followers","following_url":"https://api.github.com/users/acetinick/following{/other_user}","gists_url":"https://api.github.com/users/acetinick/gists{/gist_id}","starred_url":"https://api.github.com/users/acetinick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acetinick/subscriptions","organizations_url":"https://api.github.com/users/acetinick/orgs","repos_url":"https://api.github.com/users/acetinick/repos","events_url":"https://api.github.com/users/acetinick/events{/privacy}","received_events_url":"https://api.github.com/users/acetinick/received_events","type":"User","site_admin":false},"labels":[{"id":1090592388,"node_id":"MDU6TGFiZWwxMDkwNTkyMzg4","url":"https://api.github.com/repos/hopsoft/stimulus_reflex/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":{"login":"marcoroth","id":6411752,"node_id":"MDQ6VXNlcjY0MTE3NTI=","avatar_url":"https://avatars2.githubusercontent.com/u/6411752?v=4","gravatar_id":"","url":"https://api.github.com/users/marcoroth","html_url":"https://github.com/marcoroth","followers_url":"https://api.github.com/users/marcoroth/followers","following_url":"https://api.github.com/users/marcoroth/following{/other_user}","gists_url":"https://api.github.com/users/marcoroth/gists{/gist_id}","starred_url":"https://api.github.com/users/marcoroth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marcoroth/subscriptions","organizations_url":"https://api.github.com/users/marcoroth/orgs","repos_url":"https://api.github.com/users/marcoroth/repos","events_url":"https://api.github.com/users/marcoroth/events{/privacy}","received_events_url":"https://api.github.com/users/marcoroth/received_events","type":"User","site_admin":false},"assignees":[{"login":"marcoroth","id":6411752,"node_id":"MDQ6VXNlcjY0MTE3NTI=","avatar_url":"https://avatars2.githubusercontent.com/u/6411752?v=4","gravatar_id":"","url":"https://api.github.com/users/marcoroth","html_url":"https://github.com/marcoroth","followers_url":"https://api.github.com/users/marcoroth/followers","following_url":"https://api.github.com/users/marcoroth/following{/other_user}","gists_url":"https://api.github.com/users/marcoroth/gists{/gist_id}","starred_url":"https://api.github.com/users/marcoroth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marcoroth/subscriptions","organizations_url":"https://api.github.com/users/marcoroth/orgs","repos_url":"https://api.github.com/users/marcoroth/repos","events_url":"https://api.github.com/users/marcoroth/events{/privacy}","received_events_url":"https://api.github.com/users/marcoroth/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2020-10-14T08:04:25Z","updated_at":"2020-10-31T17:32:16Z","closed_at":"2020-10-31T17:32:16Z","author_association":"NONE","active_lock_reason":null,"body":"# Bug Report\r\n\r\n## Describe the bug\r\n\r\nHTML inserted from Reflexes are not initialised by AlpineJS (https://github.com/alpinejs/alpine)\r\n\r\nThere is a solution already worked out with LiveView and discussed here: \r\n https://github.com/phoenixframework/phoenix_live_view/issues/809#issuecomment-632366710\r\n\r\nIt appears that there was a fix implemented inside LiveView to help with this usecase.\r\n\r\nOwner of AlpineJS might be able to help us out with this. Discussion with AlpineJS team opened up here:  https://github.com/alpinejs/alpine/discussions/823\r\n\r\nSimilar issues have been discussed with AlpineJS here https://github.com/alpinejs/alpine/issues/282\r\n\r\n## To Reproduce\r\n\r\nUpdate any AlpineJS component within the Reflex, and it will not reinitalise after morph is completed.\r\n\r\n## Expected behavior\r\n\r\nAlpineJS components should be re-initialized.\r\n\r\n## Versions\r\n\r\n### StimulusReflex\r\n\r\n- Gem: 3.3\r\n- Node package: 3.3\r\n\r\n### External tools\r\n\r\n- AlpineJS: 2.7\r\n- Ruby: 2.6.6\r\n- Rails: 6.0.3\r\n\r\n### Browser\r\n\r\n- Browser Chrome\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/elixir-ecto/ecto/issues/3464","repository_url":"https://api.github.com/repos/elixir-ecto/ecto","labels_url":"https://api.github.com/repos/elixir-ecto/ecto/issues/3464/labels{/name}","comments_url":"https://api.github.com/repos/elixir-ecto/ecto/issues/3464/comments","events_url":"https://api.github.com/repos/elixir-ecto/ecto/issues/3464/events","html_url":"https://github.com/elixir-ecto/ecto/issues/3464","id":732484660,"node_id":"MDU6SXNzdWU3MzI0ODQ2NjA=","number":3464,"title":"Warning when consolidating Inspect protocol with redacted fields","user":{"login":"crbelaus","id":2965623,"node_id":"MDQ6VXNlcjI5NjU2MjM=","avatar_url":"https://avatars3.githubusercontent.com/u/2965623?v=4","gravatar_id":"","url":"https://api.github.com/users/crbelaus","html_url":"https://github.com/crbelaus","followers_url":"https://api.github.com/users/crbelaus/followers","following_url":"https://api.github.com/users/crbelaus/following{/other_user}","gists_url":"https://api.github.com/users/crbelaus/gists{/gist_id}","starred_url":"https://api.github.com/users/crbelaus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crbelaus/subscriptions","organizations_url":"https://api.github.com/users/crbelaus/orgs","repos_url":"https://api.github.com/users/crbelaus/repos","events_url":"https://api.github.com/users/crbelaus/events{/privacy}","received_events_url":"https://api.github.com/users/crbelaus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2020-10-29T16:50:11Z","updated_at":"2020-11-05T07:24:39Z","closed_at":"2020-11-04T19:01:28Z","author_association":"NONE","active_lock_reason":null,"body":"### Environment\r\n\r\n* Elixir version (elixir -v):\r\n\r\n```\r\nErlang/OTP 23 [erts-11.1.1] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [hipe]\r\nElixir 1.11.1 (compiled with Erlang/OTP 21)\r\n```\r\n\r\n* Database and version (PostgreSQL 9.4, MongoDB 3.2, etc.):\r\n\r\n```\r\nPostgreSQL 12.4\r\n```\r\n\r\n* Ecto version (mix deps):\r\n\r\n```\r\n* ecto 3.5.4 (Hex package) (mix)\r\n  locked at 3.5.4 (ecto) 7f13f9c9\r\n  ok\r\n* ecto_sql 3.5.3 (Hex package) (mix)\r\n  locked at 3.5.3 (ecto_sql) d2f53592\r\n  ok\r\n```\r\n\r\n* Database adapter and version (mix deps):\r\n\r\n```\r\n* postgrex 0.15.7 (Hex package) (mix)\r\n  locked at 0.15.7 (postgrex) 88310c01\r\n  ok\r\n```\r\n\r\n* Operating system: \r\n\r\n```\r\nUbuntu 20.04\r\n```\r\n\r\n### Current behavior\r\n\r\nCreating a schema with a redacted field causes a warning when the project is compiled by ElixirLS. I've first encountered this problem in a personal project and was able to track it down to the `redacted: true` property on the field.\r\n\r\nI've created [an example repository][1] to reproduce this behaviour. After loading the project, any change done in the `EctoWarningExample.User` module that triggers a recompilation will cause this warning to appear in ElixirLS. This can be tested simply by adding a new blank line into the module.\r\n\r\nI've taken a look into the Ecto code and found [this][2]. It looks like Ecto is deriving the Inspect protocol for this schema to avoid showing the redacted field. What I don't really know is where is the other implementation for the same protocol which is triggering the warning.\r\n\r\n<details>\r\n<summary>Screenshot of the warning in VSCode with ElixirLS</summary>\r\n\r\n![image](https://user-images.githubusercontent.com/2965623/97605997-96b1d300-1a0f-11eb-804c-2767e8dfd50d.png)\r\n</details>\r\n\r\n<details>\r\n<summary>The warning message itself</summary>\r\n\r\n> the Inspect protocol has already been consolidated, an implementation for EctoWarningExample.User has no effect. If you want to implement protocols after compilation or during tests, check the \"Consolidation\" section in the Protocol module documentation\r\n</details>\r\n\r\n### Expected behavior\r\n\r\nThe code should compile cleanly without warnings.\r\n\r\n[1]: https://github.com/crbelaus/ecto_warning_example\r\n[2]: https://github.com/elixir-ecto/ecto/blob/010fe64c7ec8122e90dafe39b895796935ef57d6/lib/ecto/schema.ex#L569-L572","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4006","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4006/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4006/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4006/events","html_url":"https://github.com/phoenixframework/phoenix/issues/4006","id":710617905,"node_id":"MDU6SXNzdWU3MTA2MTc5MDU=","number":4006,"title":"redirect to doesn't handle valid paths","user":{"login":"axelson","id":9973,"node_id":"MDQ6VXNlcjk5NzM=","avatar_url":"https://avatars1.githubusercontent.com/u/9973?v=4","gravatar_id":"","url":"https://api.github.com/users/axelson","html_url":"https://github.com/axelson","followers_url":"https://api.github.com/users/axelson/followers","following_url":"https://api.github.com/users/axelson/following{/other_user}","gists_url":"https://api.github.com/users/axelson/gists{/gist_id}","starred_url":"https://api.github.com/users/axelson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axelson/subscriptions","organizations_url":"https://api.github.com/users/axelson/orgs","repos_url":"https://api.github.com/users/axelson/repos","events_url":"https://api.github.com/users/axelson/events{/privacy}","received_events_url":"https://api.github.com/users/axelson/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-09-28T22:22:54Z","updated_at":"2020-10-12T15:26:07Z","closed_at":"2020-09-29T00:03:42Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Environment\r\n\r\n* Elixir version (elixir -v): Elixir 1.11.0-rc.0 (48cee5a) (compiled with Erlang/OTP 23)\r\n* Phoenix version (mix deps): phoenix 1.5.3\r\n* NodeJS version (node -v): v13.12.0\r\n* NPM version (npm -v): 6.14.4\r\n* Operating system: macOS Catalina\r\n\r\n### Expected behavior\r\n\r\nI expect `Phoenix.Controller.redirect/2` to handle all paths that `Phoenix.Router` will route.\r\n\r\nThe specific case that I'm encountering is that I expect\r\n`Phoenix.Controller.redirect(conn, to: \"//profile\")` not to raise an error\r\n\r\n### Actual behavior\r\n\r\nAn error is returned:\r\n`the :to option in redirect expects a path but was \"//profile\"`\r\n\r\nThis check was originally introduced in:\r\nhttps://github.com/phoenixframework/phoenix/commit/6eb2753aee2ff01d133e4f7ea7161d88e1058748#diff-7da6b70483c3cf2edf06a3f2a6316fceR283\r\n\r\n### Background\r\n\r\nThis error comes up when users mistypes a path on the website and the `phx.gen.auth` stores the `conn.request_path` in the session: \r\n```\r\n  defp maybe_store_return_to(%{method: \"GET\"} = conn) do\r\n    %{request_path: request_path, query_string: query_string} = conn\r\n    return_to = if query_string == \"\", do: request_path, else: request_path <> \"?\" <> query_string\r\n    put_session(conn, :user_return_to, return_to)\r\n  end\r\n```\r\nBut since the request path could be `//profile`, I then get the above-mentioned error when the user tries to actually log in.\r\n\r\nI'm not sure what the correct behavior here is, but perhaps there's a way to satisfy https://github.com/phoenixframework/phoenix/issues/1133 without breaking this use case.\r\n\r\nAlternatively maybe phoenix could treat `//profile` as a 404 instead of rendering the same content as `/profile`, that would fix this for me as well.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4051","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4051/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4051/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4051/events","html_url":"https://github.com/phoenixframework/phoenix/issues/4051","id":733391427,"node_id":"MDU6SXNzdWU3MzMzOTE0Mjc=","number":4051,"title":"LiveView is broken with Plug 1.11.0","user":{"login":"oliverandrich","id":758,"node_id":"MDQ6VXNlcjc1OA==","avatar_url":"https://avatars0.githubusercontent.com/u/758?v=4","gravatar_id":"","url":"https://api.github.com/users/oliverandrich","html_url":"https://github.com/oliverandrich","followers_url":"https://api.github.com/users/oliverandrich/followers","following_url":"https://api.github.com/users/oliverandrich/following{/other_user}","gists_url":"https://api.github.com/users/oliverandrich/gists{/gist_id}","starred_url":"https://api.github.com/users/oliverandrich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oliverandrich/subscriptions","organizations_url":"https://api.github.com/users/oliverandrich/orgs","repos_url":"https://api.github.com/users/oliverandrich/repos","events_url":"https://api.github.com/users/oliverandrich/events{/privacy}","received_events_url":"https://api.github.com/users/oliverandrich/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-10-30T17:45:25Z","updated_at":"2020-10-30T18:33:10Z","closed_at":"2020-10-30T18:31:47Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n### Precheck\r\n\r\n* For general discussions and support, use Stack Overflow or the Elixir Forum\r\n* For proposing and discussing new features, start a thread on the Phoenix Core mailing list\r\n* For bugs, do a quick search and make sure the bug has not yet been reported\r\n* Ensure that this issue is related to the Phoenix library and not one of the dependencies listed in mix.exs (Ecto, Plug, etc.)\r\n* All checked? Be nice and have fun!\r\n-->\r\n\r\n### Environment\r\n\r\n* Elixir version (elixir -v): 1.11.1\r\n* Phoenix version (mix deps): 1.5.6\r\n* NodeJS version (node -v): 12.19.0\r\n* NPM version (npm -v):\r\n* Operating system: macOS\r\n\r\n### Actual behaviour\r\n\r\nI am working through a (tutorial)[https://www.leanpanda.com/blog/authentication-and-authorisation-in-phoenix-liveview/?s=09#step-3-update-the-live-views-generated-with-phxgenlive-to-perform-the-checks-ensuring-a-user-can-really-access-a-given-route] to set up a LiveView app with authentication.\r\n\r\nSomehow my project gots updated to plug 1.11.0 and if I clean up the deps folder and remove the mix.lock file, I also get this version. Sadly plug 1.11.0 breaks LiveView if you want to implement a form. Every time you type something in the form, you get this error message on the console.\r\n\r\n```\r\n** (FunctionClauseError) no function clause matching in Phoenix.LiveView.Channel.gather_keys/2\r\n    (phoenix_live_view 0.14.7) lib/phoenix_live_view/channel.ex:419: Phoenix.LiveView.Channel.gather_keys(\"\", [\"_csrf_token\"])\r\n    (phoenix_live_view 0.14.7) lib/phoenix_live_view/channel.ex:413: Phoenix.LiveView.Channel.decode_merge_target/1\r\n    (phoenix_live_view 0.14.7) lib/phoenix_live_view/channel.ex:96: Phoenix.LiveView.Channel.handle_info/2\r\n    (stdlib 3.13.2) gen_server.erl:680: :gen_server.try_dispatch/4\r\n    (stdlib 3.13.2) gen_server.erl:756: :gen_server.handle_msg/6\r\n    (stdlib 3.13.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3\r\n```\r\n\r\nThe only solution I have found with some help from the elixir forum was to manually patch my mix.lock file, which is a rather tempting task for a learner.\r\n\r\n```\r\n\"plug\": {:hex, :plug, \"1.10.4\", \"41eba7d1a2d671faaf531fa867645bd5a3dce0957d8e2a3f398ccff7d2ef017f\", [:mix], [{:mime, \"~> 1.0\", [hex: :mime, repo: \"hexpm\", optional: false]}, {:plug_crypto, \"~> 1.1.1 or ~> 1.2\", [hex: :plug_crypto, repo: \"hexpm\", optional: false]}, {:telemetry, \"~> 0.4\", [hex: :telemetry, repo: \"hexpm\", optional: false]}], \"hexpm\", \"ad1e233fe73d2eec56616568d260777b67f53148a999dc2d048f4eb9778fe4a0\"},\r\n```\r\n\r\nI also tried to pin the release in mix.exs to 1.10.4.\r\n\r\n```\r\n  defp deps do\r\n    [\r\n      {:bcrypt_elixir, \"~> 2.0\"},\r\n      {:phoenix, \"~> 1.5.6\"},\r\n      {:phoenix_ecto, \"~> 4.1\"},\r\n      {:ecto_sql, \"~> 3.4\"},\r\n      {:postgrex, \">= 0.0.0\"},\r\n      {:phoenix_live_view, \"~> 0.14.6\"},\r\n      {:floki, \">= 0.27.0\", only: :test},\r\n      {:phoenix_html, \"~> 2.11\"},\r\n      {:phoenix_live_reload, \"~> 1.2\", only: :dev},\r\n      {:phoenix_live_dashboard, \"~> 0.3 or ~> 0.2.9\"},\r\n      {:telemetry_metrics, \"~> 0.4\"},\r\n      {:telemetry_poller, \"~> 0.4\"},\r\n      {:gettext, \"~> 0.11\"},\r\n      {:jason, \"~> 1.0\"},\r\n      {:plug, \"== 1.10.4\"},\r\n      {:plug_cowboy, \"~> 2.0\"},\r\n      {:ecto_psql_extras, \"~> 0.2\"},\r\n      {:phx_gen_auth, \"~> 0.5\", only: [:dev], runtime: false},\r\n      {:ecto_enum, \"~> 1.4\"}\r\n    ]\r\n  end\r\n```\r\n\r\nThen VScode marks the whole mix.exs file as an error and tells me, that some dependency problem exists. I guess cause some other module requires 1.11.0.\r\n\r\nOr is this a bug I should report to https://github.com/phoenixframework/phoenix_live_view? \r\n\r\n### Expected behaviour\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4024","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4024/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4024/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4024/events","html_url":"https://github.com/phoenixframework/phoenix/issues/4024","id":719276844,"node_id":"MDU6SXNzdWU3MTkyNzY4NDQ=","number":4024,"title":"New app from phx.new without `--live` flag crushes on /dashboard","user":{"login":"agalitsyn","id":1642205,"node_id":"MDQ6VXNlcjE2NDIyMDU=","avatar_url":"https://avatars0.githubusercontent.com/u/1642205?v=4","gravatar_id":"","url":"https://api.github.com/users/agalitsyn","html_url":"https://github.com/agalitsyn","followers_url":"https://api.github.com/users/agalitsyn/followers","following_url":"https://api.github.com/users/agalitsyn/following{/other_user}","gists_url":"https://api.github.com/users/agalitsyn/gists{/gist_id}","starred_url":"https://api.github.com/users/agalitsyn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/agalitsyn/subscriptions","organizations_url":"https://api.github.com/users/agalitsyn/orgs","repos_url":"https://api.github.com/users/agalitsyn/repos","events_url":"https://api.github.com/users/agalitsyn/events{/privacy}","received_events_url":"https://api.github.com/users/agalitsyn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-10-12T10:46:10Z","updated_at":"2020-10-12T18:51:27Z","closed_at":"2020-10-12T18:51:27Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n### Precheck\r\n\r\n* For general discussions and support, use Stack Overflow or the Elixir Forum\r\n* For proposing and discussing new features, start a thread on the Phoenix Core mailing list\r\n* For bugs, do a quick search and make sure the bug has not yet been reported\r\n* Ensure that this issue is related to the Phoenix library and not one of the dependencies listed in mix.exs (Ecto, Plug, etc.)\r\n* All checked? Be nice and have fun!\r\n-->\r\n\r\n### Environment\r\n\r\n* Elixir version (elixir -v):\r\n```\r\nErlang/OTP 23 [erts-11.1.1] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [hipe] [dtrace]\r\n\r\nElixir 1.11.0 (compiled with Erlang/OTP 23)\r\n```\r\n* Phoenix version (mix deps):\r\n```\r\n* connection 1.0.4 (Hex package) (mix)\r\n  locked at 1.0.4 (connection) 4a0850c9\r\n  ok\r\n* cowboy 2.8.0 (Hex package) (rebar3)\r\n  locked at 2.8.0 (cowboy) 4643e4fb\r\n  ok\r\n* cowboy_telemetry 0.3.0 (Hex package) (rebar3)\r\n  locked at 0.3.0 (cowboy_telemetry) 42868c22\r\n  ok\r\n* cowlib 2.9.1 (Hex package) (rebar3)\r\n  locked at 2.9.1 (cowlib) e4175dc2\r\n  ok\r\n* db_connection 2.2.2 (Hex package) (mix)\r\n  locked at 2.2.2 (db_connection) 642af240\r\n  ok\r\n* decimal 2.0.0 (Hex package) (mix)\r\n  locked at 2.0.0 (decimal) 34666e9c\r\n  ok\r\n* ecto 3.5.2 (Hex package) (mix)\r\n  locked at 3.5.2 (ecto) fd92cfb1\r\n  ok\r\n* ecto_sql 3.5.1 (Hex package) (mix)\r\n  locked at 3.5.1 (ecto_sql) 338150ec\r\n  ok\r\n* file_system 0.2.9 (Hex package) (mix)\r\n  locked at 0.2.9 (file_system) 3cf87a37\r\n  ok\r\n* gettext 0.18.2 (Hex package) (mix)\r\n  locked at 0.18.2 (gettext) f9f537b1\r\n  ok\r\n* jason 1.2.2 (Hex package) (mix)\r\n  locked at 1.2.2 (jason) 18a228f5\r\n  ok\r\n* mime 1.4.0 (Hex package) (mix)\r\n  locked at 1.4.0 (mime) 75fa42c4\r\n  ok\r\n* phoenix 1.5.5 (Hex package) (mix)\r\n  locked at 1.5.5 (phoenix) b10eaf86\r\n  ok\r\n* phoenix_ecto 4.2.1 (Hex package) (mix)\r\n  locked at 4.2.1 (phoenix_ecto) 478a1bae\r\n  ok\r\n* phoenix_html 2.14.2 (Hex package) (mix)\r\n  locked at 2.14.2 (phoenix_html) 58061c8d\r\n  ok\r\n* phoenix_live_dashboard 0.2.0 (Hex package) (mix)\r\n  locked at 0.2.0 (phoenix_live_dashboard) 439628ca\r\n  ok\r\n* phoenix_live_reload 1.2.4 (Hex package) (mix)\r\n  locked at 1.2.4 (phoenix_live_reload) 38f93083\r\n  ok\r\n* phoenix_live_view 0.12.1 (Hex package) (mix)\r\n  locked at 0.12.1 (phoenix_live_view) 585321e9\r\n  ok\r\n* phoenix_pubsub 2.0.0 (Hex package) (mix)\r\n  locked at 2.0.0 (phoenix_pubsub) c52d948c\r\n  ok\r\n* plug 1.10.4 (Hex package) (mix)\r\n  locked at 1.10.4 (plug) ad1e233f\r\n  ok\r\n* plug_cowboy 2.4.0 (Hex package) (mix)\r\n  locked at 2.4.0 (plug_cowboy) e25ddcfc\r\n  ok\r\n* plug_crypto 1.2.0 (Hex package) (mix)\r\n  locked at 1.2.0 (plug_crypto) a48b538a\r\n  ok\r\n* postgrex 0.15.6 (Hex package) (mix)\r\n  locked at 0.15.6 (postgrex) f9926832\r\n  ok\r\n* ranch 1.7.1 (Hex package) (rebar3)\r\n  locked at 1.7.1 (ranch) 451d8527\r\n  ok\r\n* telemetry 0.4.2 (Hex package) (rebar3)\r\n  locked at 0.4.2 (telemetry) 2d1419bd\r\n  ok\r\n* telemetry_metrics 0.4.2 (Hex package) (mix)\r\n  locked at 0.4.2 (telemetry_metrics) e56ffed2\r\n  ok\r\n* telemetry_poller 0.5.1 (Hex package) (rebar3)\r\n  locked at 0.5.1 (telemetry_poller) 4cab7206\r\n  ok\r\n```\r\n* NodeJS version (node -v):\r\n```\r\nv14.12.0\r\n```\r\n* NPM version (npm -v):\r\n```\r\n6.14.8\r\n```\r\n* Operating system:\r\nOSX 10.15.7\r\n\r\n### Expected behavior\r\nFollowing the quickstart guide from [docs](https://hexdocs.pm/phoenix/up_and_running.html) should work.\r\nRunning `$ mix phx.new hello` installs all needed deps for `/dashboard` to work properly.\r\n\r\n### Actual behavior\r\nI tried phoenix 7-8 month ago on the same machine, today I tried again. Running `mix phx.new hello` didn't fetch latest deps, result: when I click on `/dashboard` link, server fails\r\n```\r\n[info] GET /dashboard/nonode%40nohost\r\n[debug] Processing with Phoenix.LiveView.Plug.home/2\r\n  Parameters: %{\"node\" => \"nonode@nohost\"}\r\n  Pipelines: [:browser]\r\n[info] Sent 200 in 2ms\r\n[info] CONNECTED TO Phoenix.LiveView.Socket in 80µs\r\n  Transport: :websocket\r\n  Serializer: Phoenix.Socket.V2.JSONSerializer\r\n  Parameters: %{\"_csrf_token\" => \"BgdVBlwNNigTLzlJFG4nNR1SKg4LOSgu6_a7ebwxZekymVSGZjpkn_mG\", \"vsn\" => \"2.0.0\"}\r\n[error] an exception was raised:\r\n    ** (FunctionClauseError) no function clause matching in Phoenix.LiveView.Channel.start_link/1\r\n        (phoenix_live_view 0.12.1) lib/phoenix_live_view/channel.ex:12: Phoenix.LiveView.Channel.start_link({HelloWeb.Endpoint, {#PID<0.573.0>, #Reference<0.7709625.2124414981.194318>}})\r\n        (elixir 1.11.0) lib/dynamic_supervisor.ex:693: DynamicSupervisor.start_child/3\r\n        (elixir 1.11.0) lib/dynamic_supervisor.ex:679: DynamicSupervisor.handle_start_child/2\r\n        (stdlib 3.13.2) gen_server.erl:706: :gen_server.try_handle_call/4\r\n        (stdlib 3.13.2) gen_server.erl:735: :gen_server.handle_msg/6\r\n        (stdlib 3.13.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3\r\n^C\r\n```\r\n\r\nThe reason is in `phoenix_live_view` version. When I run `mix phx.new hello --live` it generates `mix.esx` with string `      {:phoenix_live_view, \"~> 0.14.6\"},`, so it latest, and dashboard works well. But without `--live` flag `mix.esx` don't require specific version of `phoenix_live_view`. In my case `mix.lock` contains \r\n```\r\n  \"phoenix_live_view\": {:hex, :phoenix_live_view, \"0.12.1\", \"42f591c781edbf9fab921319076b7ac635d43aa23e6748d2644563326236d7e4\", [:mix], [{:jason, \"~> 1.0\", [hex: :jason, repo: \"hexpm\", optional: true]}, {:phoenix, \"~> 1.4.16 or ~> 1.5.0\", [hex: :phoenix, repo: \"hexpm\", optional: false]}, {:phoenix_html, \"~> 2.14\", [hex: :phoenix_html, repo: \"hexpm\", optional: false]}], \"hexpm\", \"585321e98df1cd5943e370b9784e950a37ca073744eb534660c9048967c52ab6\"},\r\n```\r\nwhich leads to server fail described above.\r\n\r\nSo, if I didn't used `--live` flag, new app will have wrong version of `phoenix_live_view. \r\n\r\nPossible solutions:\r\n* Require correct version of `phoenix_live_view`, or fix transitive dependency version in... (where?).\r\n* Maybe remove `--live` flag, because new app generator will fetch `live_view` anyway through transitive dependencies.\r\n* Or do not add `/dashboard` link on main page, and other live view features if `--live` didn't set\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4028","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4028/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4028/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4028/events","html_url":"https://github.com/phoenixframework/phoenix/issues/4028","id":721770304,"node_id":"MDU6SXNzdWU3MjE3NzAzMDQ=","number":4028,"title":"Subscribing a socket to a Phoenix Channel server side","user":{"login":"chrism2671","id":456541,"node_id":"MDQ6VXNlcjQ1NjU0MQ==","avatar_url":"https://avatars0.githubusercontent.com/u/456541?v=4","gravatar_id":"","url":"https://api.github.com/users/chrism2671","html_url":"https://github.com/chrism2671","followers_url":"https://api.github.com/users/chrism2671/followers","following_url":"https://api.github.com/users/chrism2671/following{/other_user}","gists_url":"https://api.github.com/users/chrism2671/gists{/gist_id}","starred_url":"https://api.github.com/users/chrism2671/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chrism2671/subscriptions","organizations_url":"https://api.github.com/users/chrism2671/orgs","repos_url":"https://api.github.com/users/chrism2671/repos","events_url":"https://api.github.com/users/chrism2671/events{/privacy}","received_events_url":"https://api.github.com/users/chrism2671/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-10-14T20:48:24Z","updated_at":"2020-10-14T21:30:24Z","closed_at":"2020-10-14T21:17:28Z","author_association":"NONE","active_lock_reason":null,"body":"I appreciate this is the wrong place to ask for support, so please close this issue if it's inappropriate\r\n\r\nI'm trying to programatically auto-subscribe a `socket` connection to various channels, on connect. I know this can be done from the client side by sending `phx_join` messages, but I cannot figure out how to do this from the server side.\r\n\r\nI think I want to trigger:\r\nhttps://github.com/phoenixframework/phoenix/blob/e82161eb8f724a69cb17b8e2a22ea54e595b29ca/lib/phoenix/socket.ex#L614\r\n\r\nSo I've set up a command of the form:\r\n\r\n    Endpoint.PubSub.broadcast(\"user_socket:chris\", \"phx_join\", %{event: \"phx_join\", topic: \"room:time\"})\r\n\r\nBut variations of this don't seem to trigger it. What am I doing wrong?\r\n\r\nIncidentally, `MyAppWeb.Endpoint.broadcast(\"users_socket:\" <> user.id, \"disconnect\", %{})` works just fine.\r\n\r\nOne again, apologies I shouldn't ask here, and feel to just close the issue. Thanks so much.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1179","repository_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view","labels_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1179/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1179/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1179/events","html_url":"https://github.com/phoenixframework/phoenix_live_view/issues/1179","id":716973242,"node_id":"MDU6SXNzdWU3MTY5NzMyNDI=","number":1179,"title":"no function clause matching in Phoenix.LiveView.Diff.many_to_iodata/5","user":{"login":"superhawk610","id":18172185,"node_id":"MDQ6VXNlcjE4MTcyMTg1","avatar_url":"https://avatars1.githubusercontent.com/u/18172185?v=4","gravatar_id":"","url":"https://api.github.com/users/superhawk610","html_url":"https://github.com/superhawk610","followers_url":"https://api.github.com/users/superhawk610/followers","following_url":"https://api.github.com/users/superhawk610/following{/other_user}","gists_url":"https://api.github.com/users/superhawk610/gists{/gist_id}","starred_url":"https://api.github.com/users/superhawk610/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/superhawk610/subscriptions","organizations_url":"https://api.github.com/users/superhawk610/orgs","repos_url":"https://api.github.com/users/superhawk610/repos","events_url":"https://api.github.com/users/superhawk610/events{/privacy}","received_events_url":"https://api.github.com/users/superhawk610/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-10-08T02:34:10Z","updated_at":"2020-10-09T09:45:25Z","closed_at":"2020-10-09T09:45:25Z","author_association":"NONE","active_lock_reason":null,"body":"### Environment\r\n\r\n* Elixir version (elixir -v):\r\n```\r\nErlang/OTP 23 [erts-11.1.1] [source] [64-bit] [smp:12:12] [ds:12:12:10] [async-threads:1] [hipe]\r\n\r\nElixir 1.11.0 (compiled with Erlang/OTP 21)\r\n```\r\n* Phoenix version (mix deps):\r\n```\r\nphoenix 1.5.5 (Hex package) (mix)\r\nlocked at 1.5.5 (phoenix) b10eaf86\r\n```\r\n* Phoenix LiveView version (mix deps):\r\n```\r\nphoenix_live_view 0.14.7 (Hex package) (mix)\r\nlocked at 0.14.7 (phoenix_live_view) 899224a7\r\n```\r\n* NodeJS version (node -v): `v14.7.0`\r\n* NPM version (npm -v): `6.14.8`\r\n* Operating system: `macOS 10.15.6`\r\n* Browsers you attempted to reproduce this bug on (the more the merrier): Chrome\r\n* Does the problem persist after removing \"assets/node_modules\" and trying again? Yes/no: yes\r\n\r\n### Actual behavior\r\n\r\nThe live view never renders since the diff fails with `FunctionClauseError at GET /: no function clause matching in Phoenix.LiveView.Diff.many_to_iodata/5`.\r\n\r\nHere's a screenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/18172185/95407973-53ae8500-08d3-11eb-887c-0d0be5d40101.png)\r\n\r\nI've created a minimal reproducible repo here: https://github.com/superhawk610/live_view_diff_issue/tree/master/lib/diff_issue_web/live\r\n\r\nI discovered this within a much larger app, but the key pieces seem to be:\r\n\r\n- a wrapper component that simply renders `@inner_content` within a `div`\r\n- rendering two wrapper components, one after the other, at the root of a live view\r\n- rendering a list of items using a `for` comprehension within the first wrapper\r\n- rendering some content that includes a `<%= %>` within a `<%= if %>` statement within the second wrapper\r\n\r\n```elixir\r\n<%= live_component @socket, DiffIssueWeb.Components.CollapsibleSection, id: \"one\" do %>\r\n  <%= for _ <- @rows do %>\r\n    ROW\r\n  <% end %>\r\n<% end %>\r\n\r\n<%= live_component @socket, DiffIssueWeb.Components.CollapsibleSection, id: \"two\" do %>\r\n  <%= if true do %>\r\n    <a href=\"<%= @user_id %>\"></a>\r\n  <% end %>\r\n<% end %>\r\n```\r\n\r\n### Expected behavior\r\n\r\nLiveView renders properly (should display `ROW ROW ROW`).\r\n\r\n### Resolution\r\n\r\nMaking the following change to https://github.com/phoenixframework/phoenix_live_view/blob/master/lib/phoenix_live_view/diff.ex#L69 fixes this issue, but I don't know enough about live view's internals to know if this is the correct fix or not:\r\n\r\n```diff\r\n-   defp many_to_iodata([shead], [], acc, components, _mapper) do\r\n+   defp many_to_iodata([shead | _stail], [], acc, components, _mapper) do\r\n    {Enum.reverse([shead | acc]), components}\r\n  end\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1155","repository_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view","labels_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1155/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1155/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1155/events","html_url":"https://github.com/phoenixframework/phoenix_live_view/issues/1155","id":706095323,"node_id":"MDU6SXNzdWU3MDYwOTUzMjM=","number":1155,"title":"Tests failing when phx-update is used","user":{"login":"StanBright","id":41246,"node_id":"MDQ6VXNlcjQxMjQ2","avatar_url":"https://avatars3.githubusercontent.com/u/41246?v=4","gravatar_id":"","url":"https://api.github.com/users/StanBright","html_url":"https://github.com/StanBright","followers_url":"https://api.github.com/users/StanBright/followers","following_url":"https://api.github.com/users/StanBright/following{/other_user}","gists_url":"https://api.github.com/users/StanBright/gists{/gist_id}","starred_url":"https://api.github.com/users/StanBright/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/StanBright/subscriptions","organizations_url":"https://api.github.com/users/StanBright/orgs","repos_url":"https://api.github.com/users/StanBright/repos","events_url":"https://api.github.com/users/StanBright/events{/privacy}","received_events_url":"https://api.github.com/users/StanBright/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-22T05:48:56Z","updated_at":"2020-09-22T21:35:15Z","closed_at":"2020-09-22T08:35:25Z","author_association":"NONE","active_lock_reason":null,"body":"Hey mates,\r\n\r\nI've been struggling with this one for a few days now and cannot find a working solution. I read everything in this closed issue - https://github.com/phoenixframework/phoenix_live_view/issues/566; however, I still couldn't make it work. Please note that the same code works perfectly in dev/production without any JS or elixir/phoenix errors.\r\n\r\nI'm using the latest Elixir (1.10.4), Phoenix (1.5.5) & LiveView (0.14.6). \r\n\r\nLive Template\r\n```\r\n<ul id=\"matches\" class=\"post-matches\" phx-hook=\"LiveMatchesUpdated\" phx-update=\"prepend\">\r\n    <%= for match <- @matches do %>\r\n      <% post = match.post %>\r\n      <li id=\"post-<%= match.id %>\" class=\"post content\">…</li>\r\n    <% end %>\r\n</ul>\r\n```\r\n\r\nMessage handling function\r\n```Elixir\r\ndef handle_info({:match, %Match{} = match}, socket) do\r\n  {:noreply, assign(socket, :matches, [match])}\r\nend\r\n```\r\n\r\nThis is the test setup:\r\n```Elixir\r\ntest \"initial mount and receiving a match\", %{conn: conn} do\r\n      {:ok, view, html} = live(conn, \"/matches\")\r\n      assert html =~ \"Waiting for keyword matches\"\r\n\r\n      # https://github.com/phoenixframework/phoenix_live_view/issues/566\r\n      match = %Match{\r\n        id: :os.system_time(),\r\n        keyword: \"test\",\r\n        post: build(:post, title: \"Some title\"),\r\n      }\r\n      send(view.pid, {:match, match})\r\n      assert render(view) =~ \"Some title\"\r\nend\r\n```\r\n\r\nAnd this is the exception when running tests:\r\n```Elixir\r\n         ** (ArgumentError) setting phx-update to \"prepend\" requires setting an ID on each child. No ID was found on:\r\n  \r\n           \r\n             (phoenix_live_view 0.14.6) lib/phoenix_live_view/test/dom.ex:336: anonymous fn/3 in Phoenix.LiveViewTest.DOM.apply_phx_update_children_id/2\r\n             (elixir 1.10.4) lib/enum.ex:2111: Enum.\"-reduce/3-lists^foldl/2-0-\"/3\r\n             (phoenix_live_view 0.14.6) lib/phoenix_live_view/test/dom.ex:334: Phoenix.LiveViewTest.DOM.apply_phx_update_children_id/2\r\n             (phoenix_live_view 0.14.6) lib/phoenix_live_view/test/dom.ex:262: Phoenix.LiveViewTest.DOM.apply_phx_update/3\r\n             (floki 0.28.0) lib/floki/traversal.ex:6: anonymous fn/3 in Floki.Traversal.traverse_and_update/2\r\n```\r\nNotice that \"**No ID was found on**:\" is followed by blank lines only.\r\n\r\n\r\nAny idea what is wrong or how I could dig deeper to resolve it?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/jankrepl/mltype/issues/92","repository_url":"https://api.github.com/repos/jankrepl/mltype","labels_url":"https://api.github.com/repos/jankrepl/mltype/issues/92/labels{/name}","comments_url":"https://api.github.com/repos/jankrepl/mltype/issues/92/comments","events_url":"https://api.github.com/repos/jankrepl/mltype/issues/92/events","html_url":"https://github.com/jankrepl/mltype/issues/92","id":738496946,"node_id":"MDU6SXNzdWU3Mzg0OTY5NDY=","number":92,"title":"New Model Request","user":{"login":"amacgregor","id":212169,"node_id":"MDQ6VXNlcjIxMjE2OQ==","avatar_url":"https://avatars0.githubusercontent.com/u/212169?v=4","gravatar_id":"","url":"https://api.github.com/users/amacgregor","html_url":"https://github.com/amacgregor","followers_url":"https://api.github.com/users/amacgregor/followers","following_url":"https://api.github.com/users/amacgregor/following{/other_user}","gists_url":"https://api.github.com/users/amacgregor/gists{/gist_id}","starred_url":"https://api.github.com/users/amacgregor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amacgregor/subscriptions","organizations_url":"https://api.github.com/users/amacgregor/orgs","repos_url":"https://api.github.com/users/amacgregor/repos","events_url":"https://api.github.com/users/amacgregor/events{/privacy}","received_events_url":"https://api.github.com/users/amacgregor/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-11-08T16:02:04Z","updated_at":"2020-11-08T19:52:02Z","closed_at":"2020-11-08T19:49:49Z","author_association":"NONE","active_lock_reason":null,"body":"Great project! Can you please train a model for Elixir ?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4025","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4025/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4025/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4025/events","html_url":"https://github.com/phoenixframework/phoenix/issues/4025","id":719446555,"node_id":"MDU6SXNzdWU3MTk0NDY1NTU=","number":4025,"title":"Can't use Socket with NodeJS and TypeScript (type for Socket option: transport is too narrow)","user":{"login":"marcinkoziej","id":156725,"node_id":"MDQ6VXNlcjE1NjcyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/156725?v=4","gravatar_id":"","url":"https://api.github.com/users/marcinkoziej","html_url":"https://github.com/marcinkoziej","followers_url":"https://api.github.com/users/marcinkoziej/followers","following_url":"https://api.github.com/users/marcinkoziej/following{/other_user}","gists_url":"https://api.github.com/users/marcinkoziej/gists{/gist_id}","starred_url":"https://api.github.com/users/marcinkoziej/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marcinkoziej/subscriptions","organizations_url":"https://api.github.com/users/marcinkoziej/orgs","repos_url":"https://api.github.com/users/marcinkoziej/repos","events_url":"https://api.github.com/users/marcinkoziej/events{/privacy}","received_events_url":"https://api.github.com/users/marcinkoziej/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-12T14:57:33Z","updated_at":"2020-10-12T15:20:30Z","closed_at":"2020-10-12T15:20:29Z","author_association":"NONE","active_lock_reason":null,"body":"Problem:\r\nThe `phoenix.js` file contains `Socket` class, implementing Phoenix WebSocket channel transport peculiarities.\r\nIt uses the WebSocket implementation from the browser, (`global.WebSocket`), or a privided value (`transport` option).\r\nIf I use phoenix.js in nodeJS environment, I need to use WebSocket provided by 'ws' npm package, passing it as follows:\r\n\r\n```js\r\nimport Socket from 'phoenix'\r\nimport WebSocket from 'ws'\r\nconst socket = new Socket(wsUrl, {transport: WebSocket})\r\n```\r\n\r\nHowever, when using Typescript, the `@types/phoenix` package defines `transport` option as `string` (https://github.com/DefinitelyTyped/DefinitelyTyped/blob/003bce81eeb20c42ad7708e47586799a5461a2da/types/phoenix/index.d.ts#L40)\r\n\r\nIn fact, the transport option can also be other things https://github.com/phoenixframework/phoenix/blob/master/assets/js/phoenix.js#L756\r\n\r\n```\r\n    this.transport            = opts.transport || global.WebSocket || LongPoll\r\n```\r\n\r\nThis leads to a problem where it is not possible to use Phoenix Socket with Typescript in NodeJS environment.\r\nAn ugly hack is to assign the transport after creating the object:\r\n```js\r\nimport Socket from 'phoenix'\r\nimport WebSocket from 'ws'\r\nconst socket = new Socket(wsUrl, {transport: \"hack\"})\r\nconst x = phoenixSocket as any\r\nx['transport'] = WebSocket\r\n```\r\n\r\nThe type declaration should be fixed, but I am not really sure how (hence no PR, sorry). It seems there are many implementations of WebSocket and they do not share a type (Even the 'ws' WebSocket is not type-compatible with browser WebSocket (see https://github.com/websockets/ws/issues/1583)\r\n\r\n### Environment\r\n\r\n* Elixir version (elixir -v): 1.10.3\r\n* Phoenix version (mix deps): 1.5.5\r\n* NodeJS version (node -v): v12.19.0\r\n* NPM version (npm -v): 6.14.8\r\n* TypeScript  (tsc -v): 4.0.3\r\n* Operating system:\r\n\r\n### Expected behavior\r\n\r\nThe `@types/phoenix` package allows `new Socket(url, {transport: WebSocket})` with WebSocket from  'ws'.\r\n\r\n### Actual behavior\r\ntsc produces error:\r\n```\r\nsrc/client.ts:3:1 - error TS2322: Type 'typeof WebSocket' is not assignable to type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\r\n  Types of property 'prototype' are incompatible.\r\n    Property 'dispatchEvent' is missing in type 'import(\"/home/marcin/Projects/proca-api/node_modules/@types/ws/index\")' but required in type 'WebSocket'.\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1194","repository_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view","labels_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1194/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1194/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1194/events","html_url":"https://github.com/phoenixframework/phoenix_live_view/issues/1194","id":728853774,"node_id":"MDU6SXNzdWU3Mjg4NTM3NzQ=","number":1194,"title":"Feature request: More control over the head of the document. Think live_title_tag for meta tags and such. ","user":{"login":"joshchernoff","id":961877,"node_id":"MDQ6VXNlcjk2MTg3Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/961877?v=4","gravatar_id":"","url":"https://api.github.com/users/joshchernoff","html_url":"https://github.com/joshchernoff","followers_url":"https://api.github.com/users/joshchernoff/followers","following_url":"https://api.github.com/users/joshchernoff/following{/other_user}","gists_url":"https://api.github.com/users/joshchernoff/gists{/gist_id}","starred_url":"https://api.github.com/users/joshchernoff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshchernoff/subscriptions","organizations_url":"https://api.github.com/users/joshchernoff/orgs","repos_url":"https://api.github.com/users/joshchernoff/repos","events_url":"https://api.github.com/users/joshchernoff/events{/privacy}","received_events_url":"https://api.github.com/users/joshchernoff/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-10-24T19:00:17Z","updated_at":"2020-10-24T23:30:35Z","closed_at":"2020-10-24T19:30:53Z","author_association":"NONE","active_lock_reason":null,"body":"I'm working in the context of the head of a given document trying to figure out the best way to update my Open Graph meta tag as I navigate via live_patch and live_redirect. \r\n\r\nAs denoted in https://github.com/phoenixframework/phoenix_live_view/blob/fe01854e12e010e8c6bdb01225fc0ce6dcf07d37/guides/server/live-layouts.md#updating-the-html-document-title \r\n\r\n>Because the root layout from the Plug pipeline is rendered outside of LiveView, the contents cannot be dynamically changed.\r\n\r\nThis produces a challenge when trying to update things like \r\n```\r\n  <meta name=\"description\" content=\"Portland's Digital Curator\">\r\n  <meta name=\"author\" content=\"Josh Chernoff <jchernoff@morphic.pro>\">\r\n\r\n  <meta property=\"og:title\" content=\"<%= assigns[:page_title] || \"Morphic.Pro, LLC\" %>\">\r\n  <meta property=\"og:description\" content=\"<%= assigns[:page_description] || \"Morphic.Pro, LLC\" %>\">\r\n```\r\nvia \r\n```\r\n  def handle_params(\r\n     ...\r\n    {:noreply,\r\n     socket\r\n     |> assign(:post, post)\r\n     |> assign(:page_title, page_title(socket.assigns.live_action, post.title))\r\n     |> assign(:page_description, page_description(socket.assigns.live_action, post.excerpt))\r\n    }\r\n  end\r\n```\r\n\r\nThe idea in short would provide a mechanism like live_title_tag but for other like fields in the head that would also need to dynamically update as we navigate.  \r\n\r\nelixir form post: https://elixirforum.com/t/thoughts-about-how-to-update-open-graph-meta-tags-in-the-head-of-a-document-via-in-liveview/35112\r\n\r\nmy current flawed efforts:\r\nhttps://github.com/MorphicPro/morphic.pro/pull/288/files","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1145","repository_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view","labels_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1145/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1145/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1145/events","html_url":"https://github.com/phoenixframework/phoenix_live_view/issues/1145","id":703104346,"node_id":"MDU6SXNzdWU3MDMxMDQzNDY=","number":1145,"title":"render_submit test helper not working for hidden field","user":{"login":"dvic","id":1214337,"node_id":"MDQ6VXNlcjEyMTQzMzc=","avatar_url":"https://avatars0.githubusercontent.com/u/1214337?v=4","gravatar_id":"","url":"https://api.github.com/users/dvic","html_url":"https://github.com/dvic","followers_url":"https://api.github.com/users/dvic/followers","following_url":"https://api.github.com/users/dvic/following{/other_user}","gists_url":"https://api.github.com/users/dvic/gists{/gist_id}","starred_url":"https://api.github.com/users/dvic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dvic/subscriptions","organizations_url":"https://api.github.com/users/dvic/orgs","repos_url":"https://api.github.com/users/dvic/repos","events_url":"https://api.github.com/users/dvic/events{/privacy}","received_events_url":"https://api.github.com/users/dvic/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-16T22:02:36Z","updated_at":"2020-09-16T22:20:37Z","closed_at":"2020-09-16T22:20:37Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Environment\r\n\r\n* Elixir version (elixir -v): Elixir 1.10.4 (compiled with Erlang/OTP 23)\r\n* Phoenix version (mix deps): 1.5.4\r\n* Phoenix LiveView version (mix deps): 0.14.4\r\n* NodeJS version (node -v):v12.18.3\r\n* NPM version (npm -v): 6.14.6\r\n* Operating system: MacOS\r\n* Browsers you attempted to reproduce this bug on (the more the merrier): n/a\r\n* Does the problem persist after removing \"assets/node_modules\" and trying again? Yes/no: yes\r\n\r\n### Actual behavior\r\n\r\nI'm trying to use `render_submit` with a hidden field, as explained in #988 and it's posting an empty value for the hidden field. \r\n\r\n**Example repo**: https://github.com/dvic/lv-forms-helper-bug\r\n\r\nResult (I added the logger warn message):\r\n![image](https://user-images.githubusercontent.com/1214337/93396879-b71b3900-f878-11ea-9ef6-35d30e80c931.png)\r\n\r\n### Expected behavior\r\nThe parameter `name` should have been set to *some name* in the above example.\r\n\r\nAm I missing something here or is this a bug?\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1161","repository_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view","labels_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1161/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1161/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1161/events","html_url":"https://github.com/phoenixframework/phoenix_live_view/issues/1161","id":710228412,"node_id":"MDU6SXNzdWU3MTAyMjg0MTI=","number":1161,"title":"Test helper doesn't inherit custom host of passed conn","user":{"login":"LostKobrakai","id":2489835,"node_id":"MDQ6VXNlcjI0ODk4MzU=","avatar_url":"https://avatars2.githubusercontent.com/u/2489835?v=4","gravatar_id":"","url":"https://api.github.com/users/LostKobrakai","html_url":"https://github.com/LostKobrakai","followers_url":"https://api.github.com/users/LostKobrakai/followers","following_url":"https://api.github.com/users/LostKobrakai/following{/other_user}","gists_url":"https://api.github.com/users/LostKobrakai/gists{/gist_id}","starred_url":"https://api.github.com/users/LostKobrakai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LostKobrakai/subscriptions","organizations_url":"https://api.github.com/users/LostKobrakai/orgs","repos_url":"https://api.github.com/users/LostKobrakai/repos","events_url":"https://api.github.com/users/LostKobrakai/events{/privacy}","received_events_url":"https://api.github.com/users/LostKobrakai/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-09-28T12:37:49Z","updated_at":"2020-09-28T15:18:24Z","closed_at":"2020-09-28T15:18:24Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Environment\r\n\r\n* Elixir version (elixir -v): 1.11.0-rc.0\r\n* Phoenix version (mix deps): 1.5.4\r\n* Phoenix LiveView version (mix deps): 0.14.4\r\n* NodeJS version (node -v): v12.16.0\r\n* NPM version (npm -v):\r\n* Operating system: Mac OS X\r\n* Browsers you attempted to reproduce this bug on (the more the merrier): \r\n* Does the problem persist after removing \"assets/node_modules\" and trying again? Yes/no:\r\n\r\n### Actual behavior\r\n\r\n```elixir\r\nhost = \"#{subdomain}.\" <> Endpoint.config(:url)[:host]\r\nconn = Phoenix.ConnTest.build_conn(:get, \"http://#{host}/\", nil)\r\nconn = get(conn, Routes.app_manage_contacts_index_path(conn, :index, tenant))\r\n{:ok, _view, _html} = live(conn)\r\n```\r\n\r\nThis fails with `cannot invoke handle_params nor live_redirect/live_patch to \"http://connect.localtest.me:4001/testtenant1601296112.0/manage/contacts_live\" because it isn't defined in ConnectWeb.Router`. This is actually correct. The url should be `http://app.connect.localtest.me:4001`, but the liveview test helper doesn't use the host of the `conn`, but uses `endpoint.url()`.\r\n\r\n### Expected behavior\r\n\r\nThis should work in tests like it does in dev/prod.\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix_live_dashboard/issues/165","repository_url":"https://api.github.com/repos/phoenixframework/phoenix_live_dashboard","labels_url":"https://api.github.com/repos/phoenixframework/phoenix_live_dashboard/issues/165/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix_live_dashboard/issues/165/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix_live_dashboard/issues/165/events","html_url":"https://github.com/phoenixframework/phoenix_live_dashboard/issues/165","id":646159261,"node_id":"MDU6SXNzdWU2NDYxNTkyNjE=","number":165,"title":"Crash: Cannot read property form of undefined","user":{"login":"lukaszsamson","id":1078186,"node_id":"MDQ6VXNlcjEwNzgxODY=","avatar_url":"https://avatars2.githubusercontent.com/u/1078186?v=4","gravatar_id":"","url":"https://api.github.com/users/lukaszsamson","html_url":"https://github.com/lukaszsamson","followers_url":"https://api.github.com/users/lukaszsamson/followers","following_url":"https://api.github.com/users/lukaszsamson/following{/other_user}","gists_url":"https://api.github.com/users/lukaszsamson/gists{/gist_id}","starred_url":"https://api.github.com/users/lukaszsamson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lukaszsamson/subscriptions","organizations_url":"https://api.github.com/users/lukaszsamson/orgs","repos_url":"https://api.github.com/users/lukaszsamson/repos","events_url":"https://api.github.com/users/lukaszsamson/events{/privacy}","received_events_url":"https://api.github.com/users/lukaszsamson/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-06-26T10:13:24Z","updated_at":"2020-10-22T23:24:56Z","closed_at":"2020-10-22T23:24:56Z","author_association":"NONE","active_lock_reason":null,"body":"### Environment\r\n\r\nMake sure you are using the latest LiveView and Dashboard versions before continuing.\r\n\r\n* Elixir version (elixir -v): 1.10.3\r\n* Phoenix version (mix deps): 1.5.3\r\n* Phoenix LiveView version (mix deps): 0.13.3\r\n* Phoenix Dashboard version (mix deps): master@21d61a464434606e19c39464ffcc71c690f5f358\r\n* Operating system: macos 10.15\r\n* Browsers you attempted to reproduce this bug on (the more the merrier): Chrome\r\n\r\n### Actual behavior\r\n\r\nI'm not sure if this is phoenix_live_dashboard error or phoenix_live_view. Live view does not export source maps so debugging is suboptimal. I managed to get screenshots of the stacktrace as well as some locals so it may help tracking it down.\r\n\r\nTo reproduce Open metrics tab, Ctrl+c kill app, and start again\r\n\r\n<img width=\"1294\" alt=\"Screenshot 2020-06-26 at 11 57 43\" src=\"https://user-images.githubusercontent.com/1078186/85846597-5c58d080-b7a6-11ea-8f90-6f925ee1842f.png\">\r\n<img width=\"1267\" alt=\"Screenshot 2020-06-26 at 11 57 55\" src=\"https://user-images.githubusercontent.com/1078186/85846599-5d89fd80-b7a6-11ea-8b9e-c9870e405dd6.png\">\r\n<img width=\"1271\" alt=\"Screenshot 2020-06-26 at 11 58 10\" src=\"https://user-images.githubusercontent.com/1078186/85846600-5e229400-b7a6-11ea-8ec6-0edfb0436248.png\">\r\n<img width=\"1246\" alt=\"Screenshot 2020-06-26 at 11 58 25\" src=\"https://user-images.githubusercontent.com/1078186/85846603-5ebb2a80-b7a6-11ea-80aa-2a3ada272f3b.png\">\r\n<img width=\"1269\" alt=\"Screenshot 2020-06-26 at 11 58 38\" src=\"https://user-images.githubusercontent.com/1078186/85846604-5f53c100-b7a6-11ea-9ec8-b38210cf7f7e.png\">\r\n<img width=\"1278\" alt=\"Screenshot 2020-06-26 at 11 58 49\" src=\"https://user-images.githubusercontent.com/1078186/85846605-5f53c100-b7a6-11ea-9693-647e4b379edd.png\">\r\n<img width=\"1276\" alt=\"Screenshot 2020-06-26 at 11 58 59\" src=\"https://user-images.githubusercontent.com/1078186/85846607-5fec5780-b7a6-11ea-91ae-90efe671b13a.png\">\r\n<img width=\"1276\" alt=\"Screenshot 2020-06-26 at 11 59 14\" src=\"https://user-images.githubusercontent.com/1078186/85846609-5fec5780-b7a6-11ea-8b7f-8e2a172ca087.png\">\r\n<img width=\"1280\" alt=\"Screenshot 2020-06-26 at 11 59 23\" src=\"https://user-images.githubusercontent.com/1078186/85846611-6084ee00-b7a6-11ea-9d86-23bf279b8bd6.png\">\r\n<img width=\"1266\" alt=\"Screenshot 2020-06-26 at 11 59 34\" src=\"https://user-images.githubusercontent.com/1078186/85846612-611d8480-b7a6-11ea-910e-344491bd0dd0.png\">\r\n<img width=\"1257\" alt=\"Screenshot 2020-06-26 at 11 59 43\" src=\"https://user-images.githubusercontent.com/1078186/85846613-611d8480-b7a6-11ea-82ce-de8119d98c28.png\">\r\n<img width=\"1266\" alt=\"Screenshot 2020-06-26 at 11 59 52\" src=\"https://user-images.githubusercontent.com/1078186/85846614-61b61b00-b7a6-11ea-94a1-7498fad34700.png\">\r\n<img width=\"1276\" alt=\"Screenshot 2020-06-26 at 12 00 12\" src=\"https://user-images.githubusercontent.com/1078186/85846616-61b61b00-b7a6-11ea-990b-d7e8008d8a52.png\">\r\n<img width=\"1276\" alt=\"Screenshot 2020-06-26 at 12 00 26\" src=\"https://user-images.githubusercontent.com/1078186/85846617-624eb180-b7a6-11ea-962a-f2a3f1d74415.png\">\r\n<img width=\"1277\" alt=\"Screenshot 2020-06-26 at 12 00 42\" src=\"https://user-images.githubusercontent.com/1078186/85846618-624eb180-b7a6-11ea-92c7-d16b4d087f90.png\">\r\n<img width=\"1261\" alt=\"Screenshot 2020-06-26 at 12 00 58\" src=\"https://user-images.githubusercontent.com/1078186/85846620-62e74800-b7a6-11ea-86c9-810bd8167971.png\">\r\n<img width=\"1287\" alt=\"Screenshot 2020-06-26 at 12 01 49\" src=\"https://user-images.githubusercontent.com/1078186/85846623-637fde80-b7a6-11ea-94f3-132e7ca6d5f6.png\">\r\n<img width=\"1246\" alt=\"Screenshot 2020-06-26 at 12 02 22\" src=\"https://user-images.githubusercontent.com/1078186/85846624-637fde80-b7a6-11ea-8086-b3362065b775.png\">\r\n<img width=\"1273\" alt=\"Screenshot 2020-06-26 at 12 02 39\" src=\"https://user-images.githubusercontent.com/1078186/85846627-64187500-b7a6-11ea-81d0-08b1a1a167a8.png\">\r\n<img width=\"1617\" alt=\"Screenshot 2020-06-26 at 12 02 48\" src=\"https://user-images.githubusercontent.com/1078186/85846629-64187500-b7a6-11ea-985f-5968fc362c29.png\">\r\n\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4000","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4000/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4000/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4000/events","html_url":"https://github.com/phoenixframework/phoenix/issues/4000","id":707370482,"node_id":"MDU6SXNzdWU3MDczNzA0ODI=","number":4000,"title":"Phoenix.Ecto.CheckRepoStatus throws error in CLI if database \"postgres\" is not used","user":{"login":"svrcekmichal","id":9148702,"node_id":"MDQ6VXNlcjkxNDg3MDI=","avatar_url":"https://avatars3.githubusercontent.com/u/9148702?v=4","gravatar_id":"","url":"https://api.github.com/users/svrcekmichal","html_url":"https://github.com/svrcekmichal","followers_url":"https://api.github.com/users/svrcekmichal/followers","following_url":"https://api.github.com/users/svrcekmichal/following{/other_user}","gists_url":"https://api.github.com/users/svrcekmichal/gists{/gist_id}","starred_url":"https://api.github.com/users/svrcekmichal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/svrcekmichal/subscriptions","organizations_url":"https://api.github.com/users/svrcekmichal/orgs","repos_url":"https://api.github.com/users/svrcekmichal/repos","events_url":"https://api.github.com/users/svrcekmichal/events{/privacy}","received_events_url":"https://api.github.com/users/svrcekmichal/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-23T13:32:17Z","updated_at":"2020-09-23T13:40:41Z","closed_at":"2020-09-23T13:40:41Z","author_association":"NONE","active_lock_reason":null,"body":"### Environment\r\n\r\n* Elixir version (elixir -v): Elixir 1.10.4 (compiled with Erlang/OTP 23)\r\n* Phoenix version (mix deps): 1.5.5\r\n* Operating system: macos catalina\r\n* Browsers you attempted to reproduce this bug on (the more the merrier): chrome\r\n\r\n### Actual behavior\r\n\r\n1. setup fresh project `mix phx.new test`\r\n2. since I'm using heroku postgres, I'm not able to setup database with `mix ecto.create`. Heroku also doesn't allow you to change any database credentials. Instead I changed config in `/config/dev.exs` to \r\n```\r\n# Configure your database. \r\nconfig :test, Test.Repo,\r\n  adapter: Ecto.Adapters.Postgres,\r\n  url: \"postgres://...\",\r\n  pool_size: String.to_integer(System.get_env(\"POOL_SIZE\") || \"10\"),\r\n  ssl: true\r\n```\r\n3. on server start `mix phx.server` all looks good, I've got following in CLI\r\n```\r\n/Users/michalsvrcek/workspace/elixir/test (master*) $ mix phx.server\r\nCompiling 1 file (.ex)\r\n[info] Running TestWeb.Endpoint with cowboy 2.8.0 at 0.0.0.0:4000 (http)\r\n[info] Access TestWeb.Endpoint at http://localhost:4000\r\n\r\nwebpack is watching the files…\r\n\r\n[hardsource:2a797f91] Using 1 MB of disk space.\r\n[hardsource:2a797f91] Tracking node dependencies with: package-lock.json.\r\n[hardsource:2a797f91] Reading from cache 2a797f91...\r\nHash: dd875ba43d3afcc1aac8\r\nVersion: webpack 4.41.5\r\nTime: 153ms\r\nBuilt at: 09/23/2020 3:19:34 PM\r\n                Asset       Size  Chunks             Chunk Names\r\n       ../css/app.css   10.7 KiB     app  [emitted]  app\r\n       ../favicon.ico   1.23 KiB          [emitted]  \r\n../images/phoenix.png   13.6 KiB          [emitted]  \r\n        ../robots.txt  202 bytes          [emitted]  \r\n               app.js   13.5 KiB     app  [emitted]  app\r\nEntrypoint app = ../css/app.css app.js\r\n[0] multi ./js/app.js 28 bytes {app} [built]\r\n    + 5 hidden modules\r\n```\r\n4. when I open `http://localhost:4000`\r\n```\r\n[error] GenServer #PID<0.513.0> terminating\r\n** (Postgrex.Error) FATAL 42501 (insufficient_privilege) permission denied for database \"postgres\"\r\n\r\nUser does not have CONNECT privilege.\r\n    (db_connection 2.2.2) lib/db_connection/connection.ex:87: DBConnection.Connection.connect/2\r\n    (connection 1.0.4) lib/connection.ex:622: Connection.enter_connect/5\r\n    (stdlib 3.13.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3\r\nLast message: nil\r\nState: Postgrex.Protocol\r\n[info] GET /\r\n[debug] Processing with TestWeb.PageController.index/2\r\n  Parameters: %{}\r\n  Pipelines: [:browser]\r\n[info] Sent 200 in 67ms\r\n```\r\n\r\n### Expected behavior\r\nAs talked on freenode with @ericmj and @nicd, this comes from `plug Phoenix.Ecto.CheckRepoStatus, otp_app: :test` which is not using Repo config, but instead trying to connect to default `postgres` database. I'm new to elixir, so it's hard to me to say what is expected behaviour, but I would expect it to either use config from Repo used everywhere in the app, or pop some message in CLI that will be more user friendly instead of connection error. As a newcomer to Elixir, I spent few hours trying to save this till the guys helped me on freenode. ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3960","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3960/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3960/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3960/events","html_url":"https://github.com/phoenixframework/phoenix/issues/3960","id":677521454,"node_id":"MDU6SXNzdWU2Nzc1MjE0NTQ=","number":3960,"title":"Incorrect documentation on `Phoenix.Template`","user":{"login":"LostKobrakai","id":2489835,"node_id":"MDQ6VXNlcjI0ODk4MzU=","avatar_url":"https://avatars2.githubusercontent.com/u/2489835?v=4","gravatar_id":"","url":"https://api.github.com/users/LostKobrakai","html_url":"https://github.com/LostKobrakai","followers_url":"https://api.github.com/users/LostKobrakai/followers","following_url":"https://api.github.com/users/LostKobrakai/following{/other_user}","gists_url":"https://api.github.com/users/LostKobrakai/gists{/gist_id}","starred_url":"https://api.github.com/users/LostKobrakai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LostKobrakai/subscriptions","organizations_url":"https://api.github.com/users/LostKobrakai/orgs","repos_url":"https://api.github.com/users/LostKobrakai/repos","events_url":"https://api.github.com/users/LostKobrakai/events{/privacy}","received_events_url":"https://api.github.com/users/LostKobrakai/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-12T08:56:21Z","updated_at":"2020-09-16T18:23:54Z","closed_at":"2020-09-16T18:23:54Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"https://github.com/phoenixframework/phoenix/blob/cfc12c2b3104f6b6b503e45a4990190e2340ed73/lib/phoenix/template.ex#L25-L33\r\n\r\nThe section does mention `Phoenix.Template` would generate a public `render/2`, which is not true. Only `use Phoenix.View` does so. I'm not sure how exactly this should be resolved in that part of the docs though.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1136","repository_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view","labels_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1136/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1136/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1136/events","html_url":"https://github.com/phoenixframework/phoenix_live_view/issues/1136","id":694055120,"node_id":"MDU6SXNzdWU2OTQwNTUxMjA=","number":1136,"title":"scrolling via URL hash to element with ID does not work","user":{"login":"breunigs","id":307954,"node_id":"MDQ6VXNlcjMwNzk1NA==","avatar_url":"https://avatars1.githubusercontent.com/u/307954?v=4","gravatar_id":"","url":"https://api.github.com/users/breunigs","html_url":"https://github.com/breunigs","followers_url":"https://api.github.com/users/breunigs/followers","following_url":"https://api.github.com/users/breunigs/following{/other_user}","gists_url":"https://api.github.com/users/breunigs/gists{/gist_id}","starred_url":"https://api.github.com/users/breunigs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/breunigs/subscriptions","organizations_url":"https://api.github.com/users/breunigs/orgs","repos_url":"https://api.github.com/users/breunigs/repos","events_url":"https://api.github.com/users/breunigs/events{/privacy}","received_events_url":"https://api.github.com/users/breunigs/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-05T10:27:16Z","updated_at":"2020-09-22T08:52:04Z","closed_at":"2020-09-22T08:52:04Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Environment\r\n\r\n* Elixir version (elixir -v): Elixir 1.10.3 (compiled with Erlang/OTP 21)\r\n* Phoenix version (mix deps): 1.5.4 \r\n* Phoenix LiveView version (mix deps): 0.14.4\r\n* NodeJS version (node -v): v10.16.0\r\n* NPM version (npm -v): 6.9.0\r\n* Operating system: Linux\r\n* Browsers you attempted to reproduce this bug on (the more the merrier): Firefox, Chromium\r\n* Does the problem persist after removing \"assets/node_modules\" and trying again? Yes/no: yes\r\n\r\n### Actual behavior\r\n\r\nClicking on a link like this:\r\n```html\r\n<a data-phx-link-state=\"push\" data-phx-link=\"patch\" href=\"/somewhere#someHashTag\">go to new page and scroll to #someHashTag</a>\r\n```\r\nwhere the target page contains\r\n```html\r\n<h3 id=\"someHashTag\">scroll to me please</h3>\r\n```\r\n\r\nwill not scroll to `someHashTag` but rather scroll to top.\r\n\r\n### Expected behavior\r\n\r\nIt should scroll to `someHashTag`.\r\n\r\n### Cause\r\n\r\nThis doesn't happen if I insert a \r\n```html\r\n<a name=\"someHashTag\"></a>\r\n```\r\nIt also doesn't happen if I change my ID to\r\n```html\r\n<h3 id=\"#someHashTag\">now with extra #</h3>\r\n```\r\n\r\ninto the target page.\r\n\r\nI'm fairly certain the issue is either in the caller of `getHashTargetEl` (https://github.com/phoenixframework/phoenix_live_view/blob/931ff3cafee547635689d2557d752a500403fe46/assets/js/phoenix_live_view.js#L983) or in the implementation of that function (https://github.com/phoenixframework/phoenix_live_view/blob/931ff3cafee547635689d2557d752a500403fe46/assets/js/phoenix_live_view.js#L1011-L1014). `substring(1)` is _only_ called when resolving for `a[name=…]` but not when passing it to `document.getElementById`.\r\n\r\nAdditionally there's an IE11 edge case when an URL looks like `…/some/path#` since `window.location.hash` will be `#`. Modern browsers return an empty string.\r\n\r\nI'll provide a patch to keep the logic within `getHashTargetEl`, though simply making it the caller's responsibility to eat the `#` would be much simpler.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3980","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3980/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3980/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3980/events","html_url":"https://github.com/phoenixframework/phoenix/issues/3980","id":688598624,"node_id":"MDU6SXNzdWU2ODg1OTg2MjQ=","number":3980,"title":"Inability to persist flash across non-300 status code responses","user":{"login":"liamwhite","id":9658600,"node_id":"MDQ6VXNlcjk2NTg2MDA=","avatar_url":"https://avatars1.githubusercontent.com/u/9658600?v=4","gravatar_id":"","url":"https://api.github.com/users/liamwhite","html_url":"https://github.com/liamwhite","followers_url":"https://api.github.com/users/liamwhite/followers","following_url":"https://api.github.com/users/liamwhite/following{/other_user}","gists_url":"https://api.github.com/users/liamwhite/gists{/gist_id}","starred_url":"https://api.github.com/users/liamwhite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liamwhite/subscriptions","organizations_url":"https://api.github.com/users/liamwhite/orgs","repos_url":"https://api.github.com/users/liamwhite/repos","events_url":"https://api.github.com/users/liamwhite/events{/privacy}","received_events_url":"https://api.github.com/users/liamwhite/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-08-29T20:22:43Z","updated_at":"2020-10-09T02:24:14Z","closed_at":"2020-10-09T02:24:14Z","author_association":"NONE","active_lock_reason":null,"body":"Given the following code:\r\nhttps://github.com/phoenixframework/phoenix/blob/f3eb2a9e93f7a8f7caa2ebd0e94305db03fe8612/lib/phoenix/controller.ex#L1334-L1358\r\n\r\nThere is simply no possible method to persist the flash using the built-in Phoenix controller methods across a response that fits a  particular status code if it is not a 300-range code.\r\n\r\nFor an example usecase, I have client logic that may trigger the status code 429 Too Many Requests to a submission endpoint from a fetch-initiated request. In the event this happens, I would like for the client script to reload the page and display the flash error. But it is not possible with just Phoenix alone to persist the flash I set, unless I use a non-redirecting 300 response like 300 Multiple Choices. Unfortunately, this response status does not align with the reason the request has been blocked and complicates my code to support.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1142","repository_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view","labels_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1142/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1142/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix_live_view/issues/1142/events","html_url":"https://github.com/phoenixframework/phoenix_live_view/issues/1142","id":700321792,"node_id":"MDU6SXNzdWU3MDAzMjE3OTI=","number":1142,"title":"\"Cannot convert component\" with comprehensions","user":{"login":"mikepc","id":878739,"node_id":"MDQ6VXNlcjg3ODczOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/878739?v=4","gravatar_id":"","url":"https://api.github.com/users/mikepc","html_url":"https://github.com/mikepc","followers_url":"https://api.github.com/users/mikepc/followers","following_url":"https://api.github.com/users/mikepc/following{/other_user}","gists_url":"https://api.github.com/users/mikepc/gists{/gist_id}","starred_url":"https://api.github.com/users/mikepc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikepc/subscriptions","organizations_url":"https://api.github.com/users/mikepc/orgs","repos_url":"https://api.github.com/users/mikepc/repos","events_url":"https://api.github.com/users/mikepc/events{/privacy}","received_events_url":"https://api.github.com/users/mikepc/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-12T18:02:02Z","updated_at":"2020-09-12T18:40:29Z","closed_at":"2020-09-12T18:40:21Z","author_association":"NONE","active_lock_reason":null,"body":"https://github.com/phoenixframework/phoenix_live_view/issues/505\r\n\r\nThis issue was closed as \"Working as intended\" but that is absolutely no help to the uninitiated. The error states explicitly:\r\n\r\n> Components are also allowed inside Elixir's special forms, such as\r\n> `if`, `for`, `case`, and friends.\r\n> \r\n```elixir\r\n          <%= if assigns[:current_user] do  %>\r\n              <%= live_component(@socket, DemoWeb.Account.Avatar) %>\r\n          <% end %>\r\n```\r\n\r\nI understand this is not supported, but surely there is a more robust explanation that can give some guidance as to how to accomplish the intended outcome.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3994","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3994/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3994/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3994/events","html_url":"https://github.com/phoenixframework/phoenix/issues/3994","id":703242771,"node_id":"MDU6SXNzdWU3MDMyNDI3NzE=","number":3994,"title":"`mix phx.gen.live --no-context` warns about existing context","user":{"login":"axelclark","id":16856928,"node_id":"MDQ6VXNlcjE2ODU2OTI4","avatar_url":"https://avatars1.githubusercontent.com/u/16856928?v=4","gravatar_id":"","url":"https://api.github.com/users/axelclark","html_url":"https://github.com/axelclark","followers_url":"https://api.github.com/users/axelclark/followers","following_url":"https://api.github.com/users/axelclark/following{/other_user}","gists_url":"https://api.github.com/users/axelclark/gists{/gist_id}","starred_url":"https://api.github.com/users/axelclark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axelclark/subscriptions","organizations_url":"https://api.github.com/users/axelclark/orgs","repos_url":"https://api.github.com/users/axelclark/repos","events_url":"https://api.github.com/users/axelclark/events{/privacy}","received_events_url":"https://api.github.com/users/axelclark/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-17T03:51:39Z","updated_at":"2020-10-12T15:26:39Z","closed_at":"2020-10-12T15:26:39Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Environment\r\n\r\n* Elixir version (elixir -v): Elixir 1.10.3 (compiled with Erlang/OTP 22)\r\n* Phoenix version (mix deps): phoenix 1.5.4\r\n\r\n### Expected behavior\r\n\r\nWhen I run `mix phx.gen.live --no-context`, I do not expect a warning about adding to an existing context.\r\n\r\n### Actual behavior\r\n\r\nThe `--no-context` command warns about adding to an existing context.  If you proceed `y`, then it doesn't create the context as expected.  However, the warning is confusing because it implies the generator is going to inject code into your existing context.\r\n\r\nSee terminal output below.\r\n\r\n```terminal\r\n$ mix phx.gen.live --no-context --no-schema --web commish FantasyLeagues FantasyLeague fantasy_leagues fantasy_league_name:string \r\n\r\nYou are generating into an existing context.\r\n\r\nThe Ex338.FantasyLeagues context currently has 9 functions and 5 files in its directory.\r\n\r\n  * It's OK to have multiple resources in the same context as long as they are closely related. But if a context grows too large, consider breaking it apart\r\n\r\n  * If they are not closely related, another context probably works better\r\n\r\nThe fact two entities are related in the database does not mean they belong to the same context.\r\n\r\nIf you are not sure, prefer creating a new context over adding to the existing one.\r\n\r\nWould you like to proceed? [Yn] y\r\n\r\n* creating lib/ex338_web/live/commish/fantasy_league_live/show.ex\r\n* creating lib/ex338_web/live/commish/fantasy_league_live/index.ex\r\n* creating lib/ex338_web/live/commish/fantasy_league_live/form_component.ex\r\n* creating lib/ex338_web/live/commish/fantasy_league_live/form_component.html.leex\r\n* creating lib/ex338_web/live/commish/fantasy_league_live/index.html.leex\r\n* creating lib/ex338_web/live/commish/fantasy_league_live/show.html.leex\r\n* creating test/ex338_web/live/commish/fantasy_league_live_test.exs\r\n```\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3986","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3986/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3986/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3986/events","html_url":"https://github.com/phoenixframework/phoenix/issues/3986","id":697037149,"node_id":"MDU6SXNzdWU2OTcwMzcxNDk=","number":3986,"title":"With Repo: Erlang 23 is considerably slower (+50%) than 21/22 in the Phoenix test suite","user":{"login":"plicjo","id":7145362,"node_id":"MDQ6VXNlcjcxNDUzNjI=","avatar_url":"https://avatars2.githubusercontent.com/u/7145362?v=4","gravatar_id":"","url":"https://api.github.com/users/plicjo","html_url":"https://github.com/plicjo","followers_url":"https://api.github.com/users/plicjo/followers","following_url":"https://api.github.com/users/plicjo/following{/other_user}","gists_url":"https://api.github.com/users/plicjo/gists{/gist_id}","starred_url":"https://api.github.com/users/plicjo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/plicjo/subscriptions","organizations_url":"https://api.github.com/users/plicjo/orgs","repos_url":"https://api.github.com/users/plicjo/repos","events_url":"https://api.github.com/users/plicjo/events{/privacy}","received_events_url":"https://api.github.com/users/plicjo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2020-09-09T18:11:30Z","updated_at":"2020-09-17T14:16:31Z","closed_at":"2020-09-17T14:16:31Z","author_association":"NONE","active_lock_reason":null,"body":"I made a repository with the standard Phoenix installation + generating code with `phx_gen_auth`\r\n\r\nhttps://github.com/plicjo/phoenix_otp_22_vs_23\r\n\r\nMy specs:\r\n\r\n```\r\nHardware Overview:\r\n\r\n  Model Name:\tMac mini\r\n  Model Identifier:\tMacmini6,2\r\n  Processor Name:\tQuad-Core Intel Core i7\r\n  Processor Speed:\t2.3 GHz\r\n  Number of Processors:\t1\r\n  Total Number of Cores:\t4\r\n  L2 Cache (per Core):\t256 KB\r\n  L3 Cache:\t6 MB\r\n  Hyper-Threading Technology:\tEnabled\r\n  Memory:\t16 GB\r\n  Boot ROM Version:\t286.0.0.0.0\r\n  SMC Version (system):\t2.8f1\r\n  Serial Number (system):\tC07N1161DY3H\r\n  Hardware UUID:\t7C3792EF-B8F7-54FB-A607-E0FF2D31EBF1\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expected performance to be similar/faster using Erlang 23, as opposed to Erlang 22.\r\n\r\n### Actual behavior\r\n\r\nI noticed a considerable slowdown in test suite speed when I upgraded from Erlang 22 to 23 in my own Phoenix project.\r\n\r\nWith OTP 23, with the same code, same Phoenix and Elixir version, on the same machine:\r\n![Screen Shot 2020-09-02 at 11 09 32 AM](https://user-images.githubusercontent.com/7145362/92005745-d612ba80-ed11-11ea-8338-667ea006e707.png)\r\n\r\n**The test suite took 4.5 seconds.**\r\n\r\nWith OTP 22, with the same code, same Phoenix and Elixir version, on the same machine:\r\n![Screen Shot 2020-09-02 at 11 42 51 AM](https://user-images.githubusercontent.com/7145362/92005831-f2165c00-ed11-11ea-8369-a6bd02660b2c.png)\r\n**The test suite took 1.3 seconds.**\r\n\r\nThe original report of this issue lives here: https://github.com/phoenixframework/phoenix/issues/3976\r\n\r\nThe repository, where I made a repository with the standard Phoenix installation + generating code with phx_gen_auth\r\n\r\nhttps://github.com/plicjo/phoenix_otp_22_vs_23","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3996","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3996/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3996/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3996/events","html_url":"https://github.com/phoenixframework/phoenix/issues/3996","id":705018391,"node_id":"MDU6SXNzdWU3MDUwMTgzOTE=","number":3996,"title":"Watcher crashes but server keeps running","user":{"login":"brunvez","id":17035407,"node_id":"MDQ6VXNlcjE3MDM1NDA3","avatar_url":"https://avatars2.githubusercontent.com/u/17035407?v=4","gravatar_id":"","url":"https://api.github.com/users/brunvez","html_url":"https://github.com/brunvez","followers_url":"https://api.github.com/users/brunvez/followers","following_url":"https://api.github.com/users/brunvez/following{/other_user}","gists_url":"https://api.github.com/users/brunvez/gists{/gist_id}","starred_url":"https://api.github.com/users/brunvez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brunvez/subscriptions","organizations_url":"https://api.github.com/users/brunvez/orgs","repos_url":"https://api.github.com/users/brunvez/repos","events_url":"https://api.github.com/users/brunvez/events{/privacy}","received_events_url":"https://api.github.com/users/brunvez/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-20T00:09:20Z","updated_at":"2020-10-01T05:24:05Z","closed_at":"2020-10-01T05:24:04Z","author_association":"NONE","active_lock_reason":null,"body":"Related to https://github.com/phoenixframework/phoenix/issues/1870, when developing with autosave mode many times incomplete code gets saved and when Webpack tries to transpile it it crashes. When this happens the Phoenix server keeps running, which is bothersome because you have to manually kill it and restart the whole thing.\r\n\r\nThis might be more related to Webpack than Phoenix but a solution that could improve dev experience could be to link the process status to the watcher, wait a few seconds, and restart it. I'd love to give it a try if pointed in the right direction since I've only found ways to do this with external dependencies, which even in dev I think might be a bit of an overkill.\r\n\r\n### Environment\r\n\r\n* Elixir version (elixir -v): Elixir 1.10.1\r\n* Phoenix version (mix deps): 1.5.3\r\n* NodeJS version (node -v): v12.16.1\r\n* NPM version (npm -v): 6.13.4\r\n* Operating system: macOS Mojave 10.14.6 \r\n\r\n### Expected behavior\r\n\r\nWhen the Webpack server crashes on dev it should either crash the server or (better yet) be restarted.\r\n\r\n### Actual behavior\r\n\r\nThe Webpack server crashes but the Phoenix server keeps serving requests, which causes the assets not to be served.\r\n\r\n![image](https://user-images.githubusercontent.com/17035407/93691432-7c551300-fabb-11ea-9848-e4b409fca169.png)\r\n![image](https://user-images.githubusercontent.com/17035407/93691436-86771180-fabb-11ea-9a44-8aa8ed73461b.png)\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4002","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4002/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4002/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/4002/events","html_url":"https://github.com/phoenixframework/phoenix/issues/4002","id":708275608,"node_id":"MDU6SXNzdWU3MDgyNzU2MDg=","number":4002,"title":"JS-Source-Maps are not generated ","user":{"login":"Aduril","id":24710449,"node_id":"MDQ6VXNlcjI0NzEwNDQ5","avatar_url":"https://avatars3.githubusercontent.com/u/24710449?v=4","gravatar_id":"","url":"https://api.github.com/users/Aduril","html_url":"https://github.com/Aduril","followers_url":"https://api.github.com/users/Aduril/followers","following_url":"https://api.github.com/users/Aduril/following{/other_user}","gists_url":"https://api.github.com/users/Aduril/gists{/gist_id}","starred_url":"https://api.github.com/users/Aduril/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aduril/subscriptions","organizations_url":"https://api.github.com/users/Aduril/orgs","repos_url":"https://api.github.com/users/Aduril/repos","events_url":"https://api.github.com/users/Aduril/events{/privacy}","received_events_url":"https://api.github.com/users/Aduril/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"Gazler","id":477511,"node_id":"MDQ6VXNlcjQ3NzUxMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/477511?v=4","gravatar_id":"","url":"https://api.github.com/users/Gazler","html_url":"https://github.com/Gazler","followers_url":"https://api.github.com/users/Gazler/followers","following_url":"https://api.github.com/users/Gazler/following{/other_user}","gists_url":"https://api.github.com/users/Gazler/gists{/gist_id}","starred_url":"https://api.github.com/users/Gazler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Gazler/subscriptions","organizations_url":"https://api.github.com/users/Gazler/orgs","repos_url":"https://api.github.com/users/Gazler/repos","events_url":"https://api.github.com/users/Gazler/events{/privacy}","received_events_url":"https://api.github.com/users/Gazler/received_events","type":"User","site_admin":false},"assignees":[{"login":"Gazler","id":477511,"node_id":"MDQ6VXNlcjQ3NzUxMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/477511?v=4","gravatar_id":"","url":"https://api.github.com/users/Gazler","html_url":"https://github.com/Gazler","followers_url":"https://api.github.com/users/Gazler/followers","following_url":"https://api.github.com/users/Gazler/following{/other_user}","gists_url":"https://api.github.com/users/Gazler/gists{/gist_id}","starred_url":"https://api.github.com/users/Gazler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Gazler/subscriptions","organizations_url":"https://api.github.com/users/Gazler/orgs","repos_url":"https://api.github.com/users/Gazler/repos","events_url":"https://api.github.com/users/Gazler/events{/privacy}","received_events_url":"https://api.github.com/users/Gazler/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2020-09-24T15:37:23Z","updated_at":"2020-09-25T10:42:47Z","closed_at":"2020-09-25T10:42:47Z","author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n### Precheck\r\n\r\n* For general discussions and support, use Stack Overflow or the Elixir Forum\r\n* For proposing and discussing new features, start a thread on the Phoenix Core mailing list\r\n* For bugs, do a quick search and make sure the bug has not yet been reported\r\n* Ensure that this issue is related to the Phoenix library and not one of the dependencies listed in mix.exs (Ecto, Plug, etc.)\r\n* All checked? Be nice and have fun!\r\n-->\r\n\r\n### Environment\r\n\r\n* Elixir version (elixir -v): Elixir 1.10.4 (compiled with Erlang/OTP 23)\r\n* Phoenix version (mix deps): phoenix 1.5.5\r\n* NodeJS version (node -v): 12.16.1\r\n* NPM version (npm -v): 6.13.4\r\n* Operating system: macOS Catalina\r\n\r\n### Expected behavior\r\n\r\nHello,\r\nI did a quick search and found no related issue here. If I overlooked something: Sorry in advance.\r\nWhen I run `mix phx.server` phoenix should create source-maps for my JS and CSS files.\r\n\r\n### Actual behavior\r\n\r\nThis does not occurr. Instead there is simply my JS/CSS file.\r\n\r\nI found a 'fix' for myself and created a pull request here: https://github.com/phoenixframework/phoenix/pull/4001\r\nI like to encourage you to have someone with a little more insight into webpack look into it. I read about that the `eval-*source-map` improves rebuilds, but somehow it does not build the maps in this case.\r\n \r\nThanks for the great framework and stuff - hope my input helps :)\r\n\r\nKind regards,\r\nAduril","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3975","repository_url":"https://api.github.com/repos/phoenixframework/phoenix","labels_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3975/labels{/name}","comments_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3975/comments","events_url":"https://api.github.com/repos/phoenixframework/phoenix/issues/3975/events","html_url":"https://github.com/phoenixframework/phoenix/issues/3975","id":686178813,"node_id":"MDU6SXNzdWU2ODYxNzg4MTM=","number":3975,"title":"Endpoint url.host warning logic flawed for ipv6 addresses","user":{"login":"robotvert","id":514215,"node_id":"MDQ6VXNlcjUxNDIxNQ==","avatar_url":"https://avatars2.githubusercontent.com/u/514215?v=4","gravatar_id":"","url":"https://api.github.com/users/robotvert","html_url":"https://github.com/robotvert","followers_url":"https://api.github.com/users/robotvert/followers","following_url":"https://api.github.com/users/robotvert/following{/other_user}","gists_url":"https://api.github.com/users/robotvert/gists{/gist_id}","starred_url":"https://api.github.com/users/robotvert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robotvert/subscriptions","organizations_url":"https://api.github.com/users/robotvert/orgs","repos_url":"https://api.github.com/users/robotvert/repos","events_url":"https://api.github.com/users/robotvert/events{/privacy}","received_events_url":"https://api.github.com/users/robotvert/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-26T09:46:41Z","updated_at":"2020-09-16T18:16:21Z","closed_at":"2020-09-16T18:16:21Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"# Environment\r\n\r\n* Elixir version (elixir -v): 1.10.4\r\n* Phoenix version (mix deps): 1.5.4\r\n* NodeJS version (node -v): v14.8.0\r\n* NPM version (npm -v): 6.14.7\r\n* Operating system: macOS\r\n\r\n### Expected behavior\r\n\r\nI should be able to use ipv6 addresses in urls without the framework warn me.\r\n\r\n### Actual behavior\r\n\r\nIn https://github.com/phoenixframework/phoenix_live_view/issues/911 it is assumed that `:` can't be present in a host and https://github.com/phoenixframework/phoenix/pull/3863 implements the display of a warning when `:` is present.\r\nThis makes the framework warn with a config such as\r\n```\r\nconfig :hello, HelloWeb.Endpoint,\r\n  http: [ip: {0, 0, 0, 0, 0, 0, 0, 1}, port: 4000],\r\n  url: [host: \"::1\", port: 4000]\r\n```\r\n\r\nEven though having `:` is valid in hosts using ipv6 addresses, for instance, here localhost would look like `http://[::1]:4000`.\r\nThis SO answer provides references: https://serverfault.com/a/205794\r\n\r\nWhat happens in effect is:\r\n```\r\nmix phx.server\r\n[info] Running HelloWeb.Endpoint with cowboy 2.8.0 at ::1:4000 (http)\r\n[warn] url: [host: ...] configuration value \"::1\" for HelloWeb.Endpoint is invalid\r\n[warn] url: [host: ...] configuration value \"::1\" for HelloWeb.Endpoint is invalid\r\n[warn] url: [host: ...] configuration value \"::1\" for HelloWeb.Endpoint is invalid\r\n[info] Access HelloWeb.Endpoint at http://[::1]:4000\r\n```","performed_via_github_app":null,"score":1.0}]}
0

