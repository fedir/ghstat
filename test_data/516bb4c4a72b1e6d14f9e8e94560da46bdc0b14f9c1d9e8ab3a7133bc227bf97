HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Wed, 11 Apr 2018 18:56:33 GMT
Link: <https://api.github.com/search/issues?q=repo%3Atwitter%2Ffinatra+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Atwitter%2Ffinatra+type%3Aissue+state%3Aclosed&page=9>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CA42:148C:1A7AB4:36959F:5ACE5A60
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 0
X-Ratelimit-Reset: 1523473051
X-Runtime-Rack: 0.606576
X-Xss-Protection: 1; mode=block

8000
{"total_count":243,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/twitter/finatra/issues/452","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/452/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/452/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/452/events","html_url":"https://github.com/twitter/finatra/issues/452","id":312141458,"number":452,"title":"Body members are mixed with route/query params?","user":{"login":"vsapronov","id":886198,"avatar_url":"https://avatars1.githubusercontent.com/u/886198?v=4","gravatar_id":"","url":"https://api.github.com/users/vsapronov","html_url":"https://github.com/vsapronov","followers_url":"https://api.github.com/users/vsapronov/followers","following_url":"https://api.github.com/users/vsapronov/following{/other_user}","gists_url":"https://api.github.com/users/vsapronov/gists{/gist_id}","starred_url":"https://api.github.com/users/vsapronov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsapronov/subscriptions","organizations_url":"https://api.github.com/users/vsapronov/orgs","repos_url":"https://api.github.com/users/vsapronov/repos","events_url":"https://api.github.com/users/vsapronov/events{/privacy}","received_events_url":"https://api.github.com/users/vsapronov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2018-04-06T22:44:43Z","updated_at":"2018-04-10T15:31:51Z","closed_at":"2018-04-10T15:31:51Z","author_association":"NONE","body":"One line summary of the issue here.\r\nIt looks like finatra default deserialization of body and route/query params is forcing me to have case class with mix of all of them. It seems like mixing not really related things and discouraging code reuse.\r\n\r\n### Current behavior\r\n\r\nI have model representing Person, this class is usable by all means in other parts of code:\r\n```\r\ncase class Person (\r\n  firstName: String, \r\n  lastName: String\r\n)\r\n```\r\nAlso I have route in my controller:\r\n```\r\n  post(\"/:auth/person/:id\") { request: Person =>\r\n    ...\r\n  }\r\n```\r\nNow, if I want to get route parameters `auth` and `id` to be parsed automagically I will need to modify my Person case class:\r\n```\r\ncase class Person (\r\n  @RouteParam auth: String,\r\n  @RouteParam id: String,\r\n  firstName: String, \r\n  lastName: String\r\n)\r\n```\r\nHowever, this will make Person class not reusable since it contains specifics of particular HTTP API call. The `auth` property has certainly nothing to do with person's `firstName` and `lastName`.\r\n\r\nIt seems that forcing route/query/header/cookie param to be part of case class that is used for parsing body is not a good idea.\r\n\r\n### Solution wanted\r\n\r\nIt looks like finatra exposes a lot of it's internals for overriding and overloading. Is there easy blood-less  way to introduce something as I describe below (or anything similar)?\r\n\r\nThe solution could be introduction of `@BodyParam` annotation with following logic:\r\n1. If custom request case class does not have any member marked as `@BodyParam` then everything works as it is today (<-backward compatibility!!!).\r\n2. If custom request case class has a member marked as `@BodyParam`, then JSON body of request deserialized into type of that member and placed into the body param member. So for sample above case classes would be:\r\n```\r\ncase class Person (firstName: String, lastName: String) // <- still reusable class\r\n\r\ncase class PersonPostRequest(\r\n    @RouteParam auth: String,\r\n    @RouteParam id: String,\r\n    @BodyParam person: Person\r\n)\r\n```\r\nSee how person is aggregated into PersonPostRequest instead of mixing with it.\r\n\r\n```\r\n  post(\"/:auth/person/:id\") { request: PersonPostRequest =>\r\n    ...\r\n  }\r\n```\r\n\r\nCurrently (without suggested `@BodyParam`) using PersonPostRequest case class is forcing me to put one extra layer in the JSON body payload:\r\n```\r\n{\r\n  \"person\": {\r\n    \"firstName\": \"Vladimir\",\r\n    \"lastName\": \"Sapronov\"\r\n  }\r\n}\r\n```\r\nSee this `\"person\"` level? It shouldn't be there... \r\n\r\nOnce again, here's my question: In it's current finatra state is it possible to achieve something like this (how? give some guidelines, please)?\r\nDo you think that details of behavior described above could be an issue and it would be worth to have this body mixin VS aggregate solution that I described?\r\n\r\nThanks.","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/448","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/448/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/448/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/448/events","html_url":"https://github.com/twitter/finatra/issues/448","id":298715012,"number":448,"title":"@RouteParam is not parsed on get requests","user":{"login":"Ashald","id":397987,"avatar_url":"https://avatars0.githubusercontent.com/u/397987?v=4","gravatar_id":"","url":"https://api.github.com/users/Ashald","html_url":"https://github.com/Ashald","followers_url":"https://api.github.com/users/Ashald/followers","following_url":"https://api.github.com/users/Ashald/following{/other_user}","gists_url":"https://api.github.com/users/Ashald/gists{/gist_id}","starred_url":"https://api.github.com/users/Ashald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ashald/subscriptions","organizations_url":"https://api.github.com/users/Ashald/orgs","repos_url":"https://api.github.com/users/Ashald/repos","events_url":"https://api.github.com/users/Ashald/events{/privacy}","received_events_url":"https://api.github.com/users/Ashald/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2018-02-20T19:16:36Z","updated_at":"2018-03-02T17:41:07Z","closed_at":"2018-03-02T17:41:07Z","author_association":"NONE","body":"`@RouteParam` is not parsed on get requests.\r\n\r\n### Expected behavior\r\n\r\nIf a case class with `@RouteParam` field used for request, the value is extracted from the URI into the request case class instance.\r\n\r\n### Actual behavior\r\n\r\nField is not populated\r\n\r\n### Steps to reproduce the behavior\r\nFinatra `18.2.0`\r\n```scala\r\ncase class AccessCursorRequest(@RouteParam id: String)\r\n\r\nclass ProbeController @Inject()(\r\n  facade: ProbeFacade\r\n) extends Controller\r\n  with Logging {\r\n\r\nget(\"/cursor/:id/read\") { request: AccessCursorRequest =>\r\n    logger.info(s\"Value: <${request.id}>\")\r\n  }\r\n\r\n}\r\n```\r\n\r\nAnd then:\r\n```bash\r\n$ curl \"http://localhost:8888/cursor/foobar/read\"\r\n```\r\nIn logs:\r\n```\r\nfinagle/netty4-1 INFO  n.a.c.ProbeController - Value: <>\r\n```","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/447","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/447/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/447/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/447/events","html_url":"https://github.com/twitter/finatra/issues/447","id":296023933,"number":447,"title":"JsonCreator annotation should work but does not","user":{"login":"devshorts","id":1799346,"avatar_url":"https://avatars1.githubusercontent.com/u/1799346?v=4","gravatar_id":"","url":"https://api.github.com/users/devshorts","html_url":"https://github.com/devshorts","followers_url":"https://api.github.com/users/devshorts/followers","following_url":"https://api.github.com/users/devshorts/following{/other_user}","gists_url":"https://api.github.com/users/devshorts/gists{/gist_id}","starred_url":"https://api.github.com/users/devshorts/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/devshorts/subscriptions","organizations_url":"https://api.github.com/users/devshorts/orgs","repos_url":"https://api.github.com/users/devshorts/repos","events_url":"https://api.github.com/users/devshorts/events{/privacy}","received_events_url":"https://api.github.com/users/devshorts/received_events","type":"User","site_admin":false},"labels":[{"id":267459545,"url":"https://api.github.com/repos/twitter/finatra/labels/in%20triage","name":"in triage","color":"fbca04","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-02-09T21:53:33Z","updated_at":"2018-03-03T01:28:20Z","closed_at":"2018-03-03T01:28:20Z","author_association":"NONE","body":"The jackson statement on the finatra page states that\r\n\r\n> Support “wrapped values” using WrappedValue (needed since jackson-module-scala does not support the @JsonCreator annotation).\r\n\r\nHowever, this isn't true. JsonCreator _does_ work with scala:\r\n\r\n```\r\ncase class Foo(int: Int)\r\n\r\nobject Foo {\r\n  @JsonCreator\r\n  def apply(s: String): Foo = Foo(s.toInt)\r\n}\r\n\r\nclass Tests extends FlatSpec with Matchers {\r\n  \"Json Creator\" should \"deserialize\" in {\r\n    val mapper = new ObjectMapper with ScalaObjectMapper\r\n\r\n    mapper.readValue[Foo](\"1\") shouldEqual Foo(1)\r\n  }\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe finatra object mapper should respect json creator annotations\r\n\r\n### Actual behavior\r\n\r\nFinatra object mapper doesn't:\r\n\r\n```\r\ncase class Foo(int: Int)\r\n\r\nobject Foo {\r\n  @JsonCreator\r\n  def apply(s: String): Foo = Foo(s.toInt)\r\n}\r\n\r\nclass Tests extends FlatSpec with Matchers {\r\n  \"Json Creator\" should \"deserialize\" in {\r\n    val mapper = FinatraObjectMapper.create()\r\n\r\n    mapper.parse[Foo](\"1\") shouldEqual Foo(1)\r\n  }\r\n}\r\n```\r\n```\r\nCan not deserialize instance of tests.Foo out of VALUE_NUMBER_INT token\r\n at [Source: 1; line: 1, column: 1]\r\n at [Source: 1; line: 1, column: 3]\r\ncom.fasterxml.jackson.core.JsonParseException: Can not deserialize instance of tests.Foo out of VALUE_NUMBER_INT token\r\n at [Source: 1; line: 1, column: 1]\r\n at [Source: 1; line: 1, column: 3]\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.incrementParserToFirstField(FinatraCaseClassDeserializer.scala:102)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserializeNonWrapperClass(FinatraCaseClassDeserializer.scala:83)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserialize(FinatraCaseClassDeserializer.scala:67)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2880)\r\n\tat com.fasterxml.jackson.module.scala.experimental.ScalaObjectMapper.readValue(ScalaObjectMapper.scala:190)\r\n\tat com.fasterxml.jackson.module.scala.experimental.ScalaObjectMapper.readValue$(ScalaObjectMapper.scala:189)\r\n\tat com.twitter.finatra.json.modules.FinatraJacksonModule$$anon$1.readValue(FinatraJacksonModule.scala:73)\r\n\tat com.twitter.finatra.json.FinatraObjectMapper.parse(FinatraObjectMapper.scala:86)\r\n```\r\n\r\nWe can work around this by getting the raw request and parsing the body using a standard jackson object mapper, but its a crappy workaround as it forces a non standard access pattern. We could also work around this by adding a custom deserializer module that forces a parse by companion object, but thats also nasty since it should just work out of the box","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/444","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/444/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/444/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/444/events","html_url":"https://github.com/twitter/finatra/issues/444","id":292583090,"number":444,"title":"build errors with JDK 9","user":{"login":"christhalinger","id":17127221,"avatar_url":"https://avatars3.githubusercontent.com/u/17127221?v=4","gravatar_id":"","url":"https://api.github.com/users/christhalinger","html_url":"https://github.com/christhalinger","followers_url":"https://api.github.com/users/christhalinger/followers","following_url":"https://api.github.com/users/christhalinger/following{/other_user}","gists_url":"https://api.github.com/users/christhalinger/gists{/gist_id}","starred_url":"https://api.github.com/users/christhalinger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christhalinger/subscriptions","organizations_url":"https://api.github.com/users/christhalinger/orgs","repos_url":"https://api.github.com/users/christhalinger/repos","events_url":"https://api.github.com/users/christhalinger/events{/privacy}","received_events_url":"https://api.github.com/users/christhalinger/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-01-29T22:23:46Z","updated_at":"2018-02-01T21:30:34Z","closed_at":"2018-02-01T21:30:34Z","author_association":"CONTRIBUTOR","body":"Some method usages are ambiguous with 9.\r\n\r\n### Expected behavior\r\n\r\nNo build failures.\r\n\r\n### Actual behavior\r\n\r\n```\r\n[error] /home/opc/finatra/jackson/src/main/scala/com/twitter/finatra/json/internal/streaming/ByteBufferUtils.scala:39:50: ambiguous reference to overloaded definition,\r\n[error] both method position in class ByteBuffer of type (x$1: Int)java.nio.ByteBuffer\r\n[error] and  method position in class Buffer of type ()Int\r\n[error] match expected type Any\r\n[error]       debug(s\"byteBuffer: $str pos: ${byteBuffer.position}\")\r\n[error]                                                  ^\r\n[error] /home/opc/finatra/jackson/src/main/scala/com/twitter/finatra/json/internal/streaming/JsonArrayChunker.scala:75:26: ambiguous reference to overloaded definition,\r\n[error] both method position in class ByteBuffer of type (x$1: Int)java.nio.ByteBuffer\r\n[error] and  method position in class Buffer of type ()Int\r\n[error] match expected type ?\r\n[error]       else if (in.get(in.position - 2) != '\\\\') {\r\n[error]                          ^\r\n[error] /home/opc/finatra/jackson/src/main/scala/com/twitter/finatra/json/internal/streaming/JsonArrayChunker.scala:86:27: ambiguous reference to overloaded definition,\r\n[error] both method position in class ByteBuffer of type (x$1: Int)java.nio.ByteBuffer\r\n[error] and  method position in class Buffer of type ()Int\r\n[error] match expected type ?\r\n[error]     copy.limit(byteBuffer.position - 1)\r\n[error]                           ^\r\n```\r\n\r\n### Steps to reproduce the behavior\r\n\r\nRun `sbt` with JDK 9, e.g.:\r\n\r\n```\r\n./sbt helloWorld/assembly\r\n```","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/441","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/441/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/441/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/441/events","html_url":"https://github.com/twitter/finatra/issues/441","id":276024453,"number":441,"title":"StreamingResponse stops streaming before the Inputstream is completely read","user":{"login":"testos944","id":22033728,"avatar_url":"https://avatars0.githubusercontent.com/u/22033728?v=4","gravatar_id":"","url":"https://api.github.com/users/testos944","html_url":"https://github.com/testos944","followers_url":"https://api.github.com/users/testos944/followers","following_url":"https://api.github.com/users/testos944/following{/other_user}","gists_url":"https://api.github.com/users/testos944/gists{/gist_id}","starred_url":"https://api.github.com/users/testos944/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/testos944/subscriptions","organizations_url":"https://api.github.com/users/testos944/orgs","repos_url":"https://api.github.com/users/testos944/repos","events_url":"https://api.github.com/users/testos944/events{/privacy}","received_events_url":"https://api.github.com/users/testos944/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-11-22T10:54:21Z","updated_at":"2017-11-22T15:47:34Z","closed_at":"2017-11-22T15:47:33Z","author_association":"NONE","body":"I am trying to download a file from a Finatra server, the file stops downloading but the size is incorrect.\r\n\r\n### Expected behavior\r\n\r\nThe file should actually be downloaded wholly. Its size is 443MB.\r\n\r\n### Actual behavior\r\n\r\nUsing a Java InputStream, the file will download, chunk by chunk, but will stop randomly at less than 100MB.\r\n\r\n### Steps to reproduce the behavior\r\n\r\nUsing Scala version \"2.12.4\"\r\nfinatra-http version \"17.11.0\"\r\n\r\n\r\nSee the following code :\r\n```\r\nimport java.io.FileInputStream\r\n\r\nimport com.twitter.concurrent.AsyncStream\r\nimport com.twitter.finagle.http.Request\r\nimport com.twitter.finatra.http.Controller\r\nimport com.twitter.finatra.http.response.StreamingResponse\r\nimport com.twitter.io.{Buf, Reader}\r\n\r\n\r\nclass TestController2 extends Controller {\r\n  get(\"/hi\") { request: Request =>\r\n    /* this does not work, getting \"Success writing to chunked response\" while the file is not wholly downloaded  */\r\n    val inputStream = new FileInputStream(\"/path_to_large_file\")\r\n    val asyncStream = AsyncStream.fromReader(Reader.fromStream(inputStream))\r\n    val headers = Map(\r\n      \"Content-Type\" -> \"application/octet-stream\",\r\n      \"Content-Disposition\" -> s\"attachment; filename=large-file.tar.gz\"\r\n    )\r\n\r\n    StreamingResponse(Predef.identity[Buf], headers = headers)(asyncStream)\r\n\r\n\r\n    /** This works fine and gives me the actual number of bytes in the inputstream **/\r\n\r\n    var nRead = 0\r\n    val data = new Array[Byte](16384)\r\n    var totalBytes = 0\r\n\r\n    while ( {\r\n      nRead = inputStream.read(data, 0, data.length);\r\n      nRead\r\n    } != -1) {\r\n      totalBytes += nRead\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/440","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/440/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/440/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/440/events","html_url":"https://github.com/twitter/finatra/issues/440","id":275707099,"number":440,"title":"EnrichedResponse.file leaks open files","user":{"login":"trym-moeller","id":7456202,"avatar_url":"https://avatars3.githubusercontent.com/u/7456202?v=4","gravatar_id":"","url":"https://api.github.com/users/trym-moeller","html_url":"https://github.com/trym-moeller","followers_url":"https://api.github.com/users/trym-moeller/followers","following_url":"https://api.github.com/users/trym-moeller/following{/other_user}","gists_url":"https://api.github.com/users/trym-moeller/gists{/gist_id}","starred_url":"https://api.github.com/users/trym-moeller/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trym-moeller/subscriptions","organizations_url":"https://api.github.com/users/trym-moeller/orgs","repos_url":"https://api.github.com/users/trym-moeller/repos","events_url":"https://api.github.com/users/trym-moeller/events{/privacy}","received_events_url":"https://api.github.com/users/trym-moeller/received_events","type":"User","site_admin":false},"labels":[{"id":267459545,"url":"https://api.github.com/repos/twitter/finatra/labels/in%20triage","name":"in triage","color":"fbca04","default":false}],"state":"closed","locked":false,"assignee":{"login":"cacoco","id":613046,"avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false},"assignees":[{"login":"cacoco","id":613046,"avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2017-11-21T13:12:54Z","updated_at":"2017-12-15T03:38:47Z","closed_at":"2017-12-14T05:35:28Z","author_association":"NONE","body":"EnrichedResponse.file opens a file, but nothing seems to close it again\r\n\r\n### Expected behavior\r\nWhen returning a file in a Finatra Controller, I expect the returned file to be closed when the request/response is finished.\r\n\r\nI am using code as follows\r\n```\r\nimport com.twitter.finagle.http.Request\r\nimport com.twitter.finatra.http.Controller\r\n\r\nclass TestController extends Controller {  \r\n  get(\"/myfile.json\") { _: Request => response.ok().file(\"myfile.json\") }\r\n}\r\n```\r\nWhich is using\r\n```\r\nhttps://github.com/twitter/finatra/blob/develop/http/src/main/scala/com/twitter/finatra/http/response/ResponseBuilder.scala\r\n```\r\n\r\n### Actual behavior\r\nThe current code leaves the file open in jvm increasing the number of open files on the OS.\r\n\r\n### Steps to reproduce the behavior\r\nAdd a controller to a finatra server as described above, invoke the controller (e.g. in a browser /myfile.json), try to delete the file (on Windows this gives an error message like \"cannot delete an open file\") or on a more fun OS count the number of open files before and after.\r\n","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/438","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/438/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/438/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/438/events","html_url":"https://github.com/twitter/finatra/issues/438","id":268854224,"number":438,"title":"Big json docs in a AsyncStream over http makes the JsonArrayChunker crash","user":{"login":"tommichiels","id":1727460,"avatar_url":"https://avatars3.githubusercontent.com/u/1727460?v=4","gravatar_id":"","url":"https://api.github.com/users/tommichiels","html_url":"https://github.com/tommichiels","followers_url":"https://api.github.com/users/tommichiels/followers","following_url":"https://api.github.com/users/tommichiels/following{/other_user}","gists_url":"https://api.github.com/users/tommichiels/gists{/gist_id}","starred_url":"https://api.github.com/users/tommichiels/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tommichiels/subscriptions","organizations_url":"https://api.github.com/users/tommichiels/orgs","repos_url":"https://api.github.com/users/tommichiels/repos","events_url":"https://api.github.com/users/tommichiels/events{/privacy}","received_events_url":"https://api.github.com/users/tommichiels/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-10-26T17:56:56Z","updated_at":"2017-11-10T21:08:58Z","closed_at":"2017-11-10T21:08:58Z","author_association":"NONE","body":"When Json object is bigger than the JsonArrayChunker buffer the buffer is reset and the json parser fails\r\n\r\n### Expected behavior\r\n\r\nWhen the buffer is not split and de decode function is called the new buffer should be appended and the position should be kept and not resetted.\r\n\r\n### Actual behavior\r\n\r\nThe buffer is always reset when appending a new Buf\r\n\r\n### Steps to reproduce the behavior\r\n\r\nUse a very big JSON document in the AsyncStream.","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/436","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/436/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/436/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/436/events","html_url":"https://github.com/twitter/finatra/issues/436","id":264004918,"number":436,"title":"sbt.ResolveException: unresolved dependency: com.twitter#scrooge-sbt-plugin;4.20.0-SNAPSHOT: not found","user":{"login":"christhalinger","id":17127221,"avatar_url":"https://avatars3.githubusercontent.com/u/17127221?v=4","gravatar_id":"","url":"https://api.github.com/users/christhalinger","html_url":"https://github.com/christhalinger","followers_url":"https://api.github.com/users/christhalinger/followers","following_url":"https://api.github.com/users/christhalinger/following{/other_user}","gists_url":"https://api.github.com/users/christhalinger/gists{/gist_id}","starred_url":"https://api.github.com/users/christhalinger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/christhalinger/subscriptions","organizations_url":"https://api.github.com/users/christhalinger/orgs","repos_url":"https://api.github.com/users/christhalinger/repos","events_url":"https://api.github.com/users/christhalinger/events{/privacy}","received_events_url":"https://api.github.com/users/christhalinger/received_events","type":"User","site_admin":false},"labels":[{"id":267459545,"url":"https://api.github.com/repos/twitter/finatra/labels/in%20triage","name":"in triage","color":"fbca04","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2017-10-09T19:42:22Z","updated_at":"2017-10-29T05:13:43Z","closed_at":"2017-10-29T05:13:43Z","author_association":"CONTRIBUTOR","body":"`sbt` results in an unresolved dependency.\r\n\r\n### Expected behavior\r\n\r\nSuccessful build.\r\n\r\n### Actual behavior\r\n\r\n```\r\n[warn] \t::::::::::::::::::::::::::::::::::::::::::::::\r\n[warn] \t::          UNRESOLVED DEPENDENCIES         ::\r\n[warn] \t::::::::::::::::::::::::::::::::::::::::::::::\r\n[warn] \t:: com.twitter#scrooge-sbt-plugin;4.20.0-SNAPSHOT: not found\r\n[warn] \t::::::::::::::::::::::::::::::::::::::::::::::\r\n[warn] \r\n[warn] \tNote: Some unresolved dependencies have extra attributes.  Check that these dependencies exist with the requested attributes.\r\n[warn] \t\tcom.twitter:scrooge-sbt-plugin:4.20.0-SNAPSHOT (scalaVersion=2.10, sbtVersion=0.13)\r\n[warn] \r\n[warn] \tNote: Unresolved dependencies path:\r\n[warn] \t\tcom.twitter:scrooge-sbt-plugin:4.20.0-SNAPSHOT (scalaVersion=2.10, sbtVersion=0.13) (/Users/cthalinger/finatra/project/plugins.sbt#L12-13)\r\n[warn] \t\t  +- default:finatra-build:0.1-SNAPSHOT (scalaVersion=2.10, sbtVersion=0.13)\r\n```\r\n\r\n### Steps to reproduce the behavior\r\n\r\nClone and run `sbt`.","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/432","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/432/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/432/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/432/events","html_url":"https://github.com/twitter/finatra/issues/432","id":253498968,"number":432,"title":"Admin Server Shutdown - Get instead of Post","user":{"login":"teodor-pripoae","id":393437,"avatar_url":"https://avatars1.githubusercontent.com/u/393437?v=4","gravatar_id":"","url":"https://api.github.com/users/teodor-pripoae","html_url":"https://github.com/teodor-pripoae","followers_url":"https://api.github.com/users/teodor-pripoae/followers","following_url":"https://api.github.com/users/teodor-pripoae/following{/other_user}","gists_url":"https://api.github.com/users/teodor-pripoae/gists{/gist_id}","starred_url":"https://api.github.com/users/teodor-pripoae/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/teodor-pripoae/subscriptions","organizations_url":"https://api.github.com/users/teodor-pripoae/orgs","repos_url":"https://api.github.com/users/teodor-pripoae/repos","events_url":"https://api.github.com/users/teodor-pripoae/events{/privacy}","received_events_url":"https://api.github.com/users/teodor-pripoae/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-08-29T01:01:20Z","updated_at":"2017-08-30T23:02:49Z","closed_at":"2017-08-29T23:53:03Z","author_association":"NONE","body":"When I click shutdown in the admin server and click OK the request sent is GET instead of POST.\r\n\r\n### Expected behavior\r\n\r\nShutdown the server\r\n\r\n### Actual behavior\r\n\r\nServer returns `405 Method Not Allowed`\r\n\r\n### Steps to reproduce the behavior\r\n\r\n- Run the server using finatra 2.12.0\r\n- Go to admin server\r\n- Click shutdown link in the `utilities` section\r\n- Press Ok","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/430","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/430/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/430/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/430/events","html_url":"https://github.com/twitter/finatra/issues/430","id":251780587,"number":430,"title":"Making finatra-json independent from finagle-http","user":{"login":"viktortnk","id":320239,"avatar_url":"https://avatars0.githubusercontent.com/u/320239?v=4","gravatar_id":"","url":"https://api.github.com/users/viktortnk","html_url":"https://github.com/viktortnk","followers_url":"https://api.github.com/users/viktortnk/followers","following_url":"https://api.github.com/users/viktortnk/following{/other_user}","gists_url":"https://api.github.com/users/viktortnk/gists{/gist_id}","starred_url":"https://api.github.com/users/viktortnk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/viktortnk/subscriptions","organizations_url":"https://api.github.com/users/viktortnk/orgs","repos_url":"https://api.github.com/users/viktortnk/repos","events_url":"https://api.github.com/users/viktortnk/events{/privacy}","received_events_url":"https://api.github.com/users/viktortnk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-08-21T21:49:17Z","updated_at":"2017-08-26T19:08:55Z","closed_at":"2017-08-26T19:08:55Z","author_association":"NONE","body":"Finatra documentation says it it encourages using `finatra-jackson` module potentially independently from http layer. It would be good if dependency footprint of it can be small, but instead it brings quite a lot of dependencies through `finagle-http`\r\n\r\nThe issues I see with that:\r\n1. bigger build archives for apps which want json serialisation, but don'
8000
t need http\r\n2. (to my understanding) slower compilation times because classpath of javac is huge.\r\n\r\nAm I right thinking that this is an issue?\r\n\r\nInternally we use Pants to organise project as big set of small modules and usually having separate module for protocol classes of API. It would be useful to have Finatra validation annotations on those case classes, but make these module light on dependencies (avoid bringing entire finagle stack).\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/429","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/429/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/429/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/429/events","html_url":"https://github.com/twitter/finatra/issues/429","id":251769252,"number":429,"title":"MatchError when returning Mustache view from Filter","user":{"login":"HaydenSikh","id":3667379,"avatar_url":"https://avatars2.githubusercontent.com/u/3667379?v=4","gravatar_id":"","url":"https://api.github.com/users/HaydenSikh","html_url":"https://github.com/HaydenSikh","followers_url":"https://api.github.com/users/HaydenSikh/followers","following_url":"https://api.github.com/users/HaydenSikh/following{/other_user}","gists_url":"https://api.github.com/users/HaydenSikh/gists{/gist_id}","starred_url":"https://api.github.com/users/HaydenSikh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HaydenSikh/subscriptions","organizations_url":"https://api.github.com/users/HaydenSikh/orgs","repos_url":"https://api.github.com/users/HaydenSikh/repos","events_url":"https://api.github.com/users/HaydenSikh/events{/privacy}","received_events_url":"https://api.github.com/users/HaydenSikh/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2017-08-21T20:58:17Z","updated_at":"2017-08-30T04:04:16Z","closed_at":"2017-08-26T18:35:04Z","author_association":"NONE","body":"Returning a Mustache view from a SimpleFilter results in a MatchError on @javax.inject.Inject() to be thrown.\r\n\r\n### Expected behavior\r\n\r\nView to be returned without the runtime error.\r\n\r\n### Actual behavior\r\n\r\nMatchError on @javax.inject.Inject() is thrown while calling `ResponseBuilder#unauthorized#view(String, Any)` within a SimpleFilter.\r\n\r\n### Steps to reproduce the behavior\r\n\r\n1. Clone this [repo with sample code](https://github.com/sharethrough/finatra-inject-exception-report)\r\n2. `sbt test`","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/428","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/428/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/428/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/428/events","html_url":"https://github.com/twitter/finatra/issues/428","id":249346988,"number":428,"title":"Is there a way to access metrics programmatically?","user":{"login":"dwene","id":12628251,"avatar_url":"https://avatars0.githubusercontent.com/u/12628251?v=4","gravatar_id":"","url":"https://api.github.com/users/dwene","html_url":"https://github.com/dwene","followers_url":"https://api.github.com/users/dwene/followers","following_url":"https://api.github.com/users/dwene/following{/other_user}","gists_url":"https://api.github.com/users/dwene/gists{/gist_id}","starred_url":"https://api.github.com/users/dwene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dwene/subscriptions","organizations_url":"https://api.github.com/users/dwene/orgs","repos_url":"https://api.github.com/users/dwene/repos","events_url":"https://api.github.com/users/dwene/events{/privacy}","received_events_url":"https://api.github.com/users/dwene/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-08-10T13:30:57Z","updated_at":"2017-08-22T23:37:59Z","closed_at":"2017-08-22T23:37:59Z","author_association":"NONE","body":"I've been trying to search for a way to access metric values programmatically within our server. It seems that all the injector supplied classes for displaying metrics in the finatra admin are protected to `com.twitter` or `com.twitter.server` packages. `StatsReciever` allows me to write metrics, but not read them. Does finatra currently offer a mechanism to READ metrics within application server code?\r\n\r\nAlternatively I could make a client that hits the server's /admin endpoint for the particular metric, but that seems a little silly","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/425","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/425/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/425/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/425/events","html_url":"https://github.com/twitter/finatra/issues/425","id":243429952,"number":425,"title":"Is there some way to allow websocket in Finatra server","user":{"login":"tang90","id":23169296,"avatar_url":"https://avatars0.githubusercontent.com/u/23169296?v=4","gravatar_id":"","url":"https://api.github.com/users/tang90","html_url":"https://github.com/tang90","followers_url":"https://api.github.com/users/tang90/followers","following_url":"https://api.github.com/users/tang90/following{/other_user}","gists_url":"https://api.github.com/users/tang90/gists{/gist_id}","starred_url":"https://api.github.com/users/tang90/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tang90/subscriptions","organizations_url":"https://api.github.com/users/tang90/orgs","repos_url":"https://api.github.com/users/tang90/repos","events_url":"https://api.github.com/users/tang90/events{/privacy}","received_events_url":"https://api.github.com/users/tang90/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-07-17T15:15:39Z","updated_at":"2017-08-16T16:54:14Z","closed_at":"2017-08-16T16:54:14Z","author_association":"NONE","body":"I would like to achieve websocket through Finatra. Is there some way to do that? Thanks.\r\n\r\n### Expected behavior\r\n\r\nThe Finatra server can communicate with client through websocket\r\n","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/423","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/423/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/423/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/423/events","html_url":"https://github.com/twitter/finatra/issues/423","id":242302192,"number":423,"title":"Links in documentation need to be updated","user":{"login":"jamesfe","id":3836461,"avatar_url":"https://avatars2.githubusercontent.com/u/3836461?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesfe","html_url":"https://github.com/jamesfe","followers_url":"https://api.github.com/users/jamesfe/followers","following_url":"https://api.github.com/users/jamesfe/following{/other_user}","gists_url":"https://api.github.com/users/jamesfe/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesfe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesfe/subscriptions","organizations_url":"https://api.github.com/users/jamesfe/orgs","repos_url":"https://api.github.com/users/jamesfe/repos","events_url":"https://api.github.com/users/jamesfe/events{/privacy}","received_events_url":"https://api.github.com/users/jamesfe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-07-12T08:40:04Z","updated_at":"2017-07-20T00:06:40Z","closed_at":"2017-07-20T00:06:40Z","author_association":"CONTRIBUTOR","body":"Some links do not point to the right place in the docs - this is not high priority but if you have a repo for the docs, I can fix it myself and submit a PR.\r\n\r\n### Expected behavior\r\n\r\nLinks work (in this case should point to https://github.com/twitter/finagle/blob/develop/finagle-base-http/src/main/scala/com/twitter/finagle/http/Request.scala not https://github.com/twitter/finagle/blob/develop/finagle-http/src/main/scala/com/twitter/finagle/http/Request.scala\r\n\r\n### Actual behavior\r\n\r\n404 Error\r\n\r\n### Steps to reproduce the behavior\r\n\r\nVisit https://twitter.github.io/finatra/user-guide/http/controllers.html\r\nClick link for \"c.t.finagle.http.Request\" and receive 404 Error","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/421","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/421/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/421/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/421/events","html_url":"https://github.com/twitter/finatra/issues/421","id":241186792,"number":421,"title":"Memory leak when using StreamingResponse.jsonArray on big/infinite streams.","user":{"login":"tommichiels","id":1727460,"avatar_url":"https://avatars3.githubusercontent.com/u/1727460?v=4","gravatar_id":"","url":"https://api.github.com/users/tommichiels","html_url":"https://github.com/tommichiels","followers_url":"https://api.github.com/users/tommichiels/followers","following_url":"https://api.github.com/users/tommichiels/following{/other_user}","gists_url":"https://api.github.com/users/tommichiels/gists{/gist_id}","starred_url":"https://api.github.com/users/tommichiels/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tommichiels/subscriptions","organizations_url":"https://api.github.com/users/tommichiels/orgs","repos_url":"https://api.github.com/users/tommichiels/repos","events_url":"https://api.github.com/users/tommichiels/events{/privacy}","received_events_url":"https://api.github.com/users/tommichiels/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-07-07T07:57:54Z","updated_at":"2017-08-30T06:56:01Z","closed_at":"2017-08-30T06:56:00Z","author_association":"NONE","body":"Memory leak when using StreamingResponse.jsonArray on big/infinite streams. \r\n\r\n### Expected behavior\r\n\r\nOnce communicated over the wire garbage collection should be able to clean traversed stream elements\r\n\r\n### Actual behavior\r\n\r\nMemory is gradually filling up because head of the stream is kept in a reference. \r\n\r\n### Steps to reproduce the behavior\r\n\r\nJust create an infinite stream returning a jsonarray instead of a String. It is crucial you use a separator. It is in the separator methods I think there is a problem.\r\n\r\n### Probable cause.\r\n\r\nI tried a quick fix local and making the methods addSeparatorIfPresent, addSeparator pass by name and removing buf= asyncStream() map toBuf and passing it directly to addSeparatorIfPresent seems to solve it. \r\n\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/419","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/419/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/419/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/419/events","html_url":"https://github.com/twitter/finatra/issues/419","id":239014837,"number":419,"title":"HttpClient cannot make simple GET requests","user":{"login":"jakehschwartz","id":2754407,"avatar_url":"https://avatars1.githubusercontent.com/u/2754407?v=4","gravatar_id":"","url":"https://api.github.com/users/jakehschwartz","html_url":"https://github.com/jakehschwartz","followers_url":"https://api.github.com/users/jakehschwartz/followers","following_url":"https://api.github.com/users/jakehschwartz/following{/other_user}","gists_url":"https://api.github.com/users/jakehschwartz/gists{/gist_id}","starred_url":"https://api.github.com/users/jakehschwartz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakehschwartz/subscriptions","organizations_url":"https://api.github.com/users/jakehschwartz/orgs","repos_url":"https://api.github.com/users/jakehschwartz/repos","events_url":"https://api.github.com/users/jakehschwartz/events{/privacy}","received_events_url":"https://api.github.com/users/jakehschwartz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2017-06-27T23:49:48Z","updated_at":"2017-07-06T06:29:35Z","closed_at":"2017-06-29T00:44:21Z","author_association":"CONTRIBUTOR","body":"Using the HttpClient, initialized similar to [this](https://twitter.github.io/finatra/user-guide/getting-started/binding_annotations.html), certain requests are not sent.\r\n\r\n### Expected behavior\r\n\r\nAn HTTP request can be made and is received by the server.\r\n\r\n### Actual behavior\r\n\r\nThe server does not get a request and the `HttpClient` returns a `400 Bad Request` with no content string.\r\n\r\n### Steps to reproduce the behavior\r\n\r\nI created a sample project [jakehschwartz/finatra-webhook](https://github.com/jakehschwartz/finatra-webhook) that should have all documentation in it. It attempts to make a request to [webhook.site](http://webhook.site).","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/416","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/416/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/416/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/416/events","html_url":"https://github.com/twitter/finatra/issues/416","id":236183968,"number":416,"title":"RouteDSL should respect slashes fusing prefixes and routes","user":{"login":"Anton-Rodionov","id":5286337,"avatar_url":"https://avatars0.githubusercontent.com/u/5286337?v=4","gravatar_id":"","url":"https://api.github.com/users/Anton-Rodionov","html_url":"https://github.com/Anton-Rodionov","followers_url":"https://api.github.com/users/Anton-Rodionov/followers","following_url":"https://api.github.com/users/Anton-Rodionov/following{/other_user}","gists_url":"https://api.github.com/users/Anton-Rodionov/gists{/gist_id}","starred_url":"https://api.github.com/users/Anton-Rodionov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Anton-Rodionov/subscriptions","organizations_url":"https://api.github.com/users/Anton-Rodionov/orgs","repos_url":"https://api.github.com/users/Anton-Rodionov/repos","events_url":"https://api.github.com/users/Anton-Rodionov/events{/privacy}","received_events_url":"https://api.github.com/users/Anton-Rodionov/received_events","type":"User","site_admin":false},"labels":[{"id":260339486,"url":"https://api.github.com/repos/twitter/finatra/labels/backlog","name":"backlog","color":"0052cc","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2017-06-15T13:02:39Z","updated_at":"2017-09-18T08:47:50Z","closed_at":"2017-09-16T18:15:39Z","author_association":"NONE","body":"The concatenation of a \"prefix\" and \"route\" should be tolerant to a possible trailing slash of a \"prefix\" and a leading slash of a \"route\".\r\n\r\n```scala\r\nprivate def prefixRoute(route: String): String = {\r\n    contextVar().prefix match {\r\n      case prefix if prefix.nonEmpty && prefix.startsWith(\"/\") => s\"$prefix$route\"\r\n      case prefix if prefix.nonEmpty && !prefix.startsWith(\"/\") => s\"/$prefix$route\"\r\n      // ^^^ here: slashes are not respected between $prefix and $route\r\n      case _ => route\r\n    }\r\n  }\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll of the code snippets below should produce \"/v1/api\" route.\r\n\r\n```scala\r\nprefix(\"v1\") {\r\n    get(\"api\") {}\r\n}\r\nprefix(\"v1/\") {\r\n    get(\"api\") {}\r\n}\r\nprefix(\"v1/\") {\r\n    get(\"/api\") {}\r\n}\r\nprefix(\"v1\") {\r\n    get(\"/api\") {}\r\n}\r\n```\r\n\r\n### Actual behavior\r\n\r\n```scala\r\nprefix(\"v1\") { // <-- That one builds \"/v1api\" \r\n    get(\"api\") {}\r\n}\r\nprefix(\"v1/\") {\r\n    get(\"api\") {}\r\n}\r\nprefix(\"v1/\") { // <-- That one builds \"/v1//api\" \r\n    get(\"/api\") {}\r\n}\r\nprefix(\"v1\") {\r\n    get(\"/api\") {}\r\n}","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/415","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/415/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/415/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/415/events","html_url":"https://github.com/twitter/finatra/issues/415","id":235624075,"number":415,"title":"WrappedValue only supports primitive types","user":{"login":"pvcnt","id":944506,"avatar_url":"https://avatars0.githubusercontent.com/u/944506?v=4","gravatar_id":"","url":"https://api.github.com/users/pvcnt","html_url":"https://github.com/pvcnt","followers_url":"https://api.github.com/users/pvcnt/followers","following_url":"https://api.github.com/users/pvcnt/following{/other_user}","gists_url":"https://api.github.com/users/pvcnt/gists{/gist_id}","starred_url":"https://api.github.com/users/pvcnt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pvcnt/subscriptions","organizations_url":"https://api.github.com/users/pvcnt/orgs","repos_url":"https://api.github.com/users/pvcnt/repos","events_url":"https://api.github.com/users/pvcnt/events{/privacy}","received_events_url":"https://api.github.com/users/pvcnt/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-06-13T17:08:55Z","updated_at":"2017-08-25T18:13:41Z","closed_at":"2017-08-25T18:13:41Z","author_association":"NONE","body":"WrappedValue only seems to support primitive types, not collections or complex types.\r\n\r\n### Expected behavior\r\n\r\nI would like to be able to define the following:\r\n```\r\ncase class A(items: Seq[Int]) extends WrappedValue[Seq[Int]]\r\n```\r\n\r\n### Actual behavior\r\n\r\nWhen deserializing, I stumble upon an exception: \"Unable to deserialize wrapped value from a json object\". It comes from [this line](https://github.com/twitter/finatra/blob/1dbdd0313a44ccc4b2239655dac0e9e377f64b13/jackson/src/main/scala/com/twitter/finatra/json/internal/caseclass/jackson/FinatraCaseClassDeserializer.scala#L72), which makes that objects/arrays cannot be deserialized as the single value of a wrapped value.\r\n\r\nMaybe there is a reason for this behavior. Otherwise would it be possible to remove this limitation? Thanks!","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/412","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/412/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/412/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/412/events","html_url":"https://github.com/twitter/finatra/issues/412","id":230803564,"number":412,"title":"JSON deserialization of scala Either type failed in Scala 2.12 build.","user":{"login":"vi-p4f","id":8612009,"avatar_url":"https://avatars2.githubusercontent.com/u/8612009?v=4","gravatar_id":"","url":"https://api.github.com/users/vi-p4f","html_url":"https://github.com/vi-p4f","followers_url":"https://api.github.com/users/vi-p4f/followers","following_url":"https://api.github.com/users/vi-p4f/following{/other_user}","gists_url":"https://api.github.com/users/vi-p4f/gists{/gist_id}","starred_url":"https://api.github.com/users/vi-p4f/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vi-p4f/subscriptions","organizations_url":"https://api.github.com/users/vi-p4f/orgs","repos_url":"https://api.github.com/users/vi-p4f/repos","events_url":"https://api.github.com/users/vi-p4f/events{/privacy}","received_events_url":"https://api.github.com/users/vi-p4f/received_events","type":"User","site_admin":false},"labels":[{"id":206344048,"url":"https://api.github.com/repos/twitter/finatra/labels/bug","name":"bug","color":"FF0000","default":true}],"state":"closed","locked":false,"assignee":{"login":"vi-p4f","id":8612009,"avatar_url":"https://avatars2.githubusercontent.com/u/8612009?v=4","gravatar_id":"","url":"https://api.github.com/users/vi-p4f","html_url":"https://github.com/vi-p4f","followers_url":"https://api.github.com/users/vi-p4f/followers","following_url":"https://api.github.com/users/vi-p4f/following{/other_user}","gists_url":"https://api.github.com/users/vi-p4f/gists{/gist_id}","starred_url":"https://api.github.com/users/vi-p4f/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vi-p4f/subscriptions","organizations_url":"https://api.github.com/users/vi-p4f/orgs","repos_url":"https://api.github.com/users/vi-p4f/repos","events_url":"https://api.github.com/users/vi-p4f/events{/privacy}","received_events_url":"https://api.github.com/users/vi-p4f/received_events","type":"User","site_admin":false},"assignees":[{"login":"vi-p4f","id":8612009,"avatar_url":"https://avatars2.githubusercontent.com/u/8612009?v=4","gravatar_id":"","url":"https://api.github.com/users/vi-p4f","html_url":"https://github.com/vi-p4f","followers_url":"https://api.github.com/users/vi-p4f/followers","following_url":"https://api.github.com/users/vi-p4f/following{/other_user}","gists_url":"https://api.github.com/users/vi-p4f/gists{/gist_id}","starred_url":"https://api.github.com/users/vi-p4f/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vi-p4f/subscriptions","organizations_url":"https://api.github.com/users/vi-p4f/orgs","repos_url":"https://api.github.com/users/vi-p4f/repos","events_url":"https://api.github.com/users/vi-p4f/events{/privacy}","received_events_url":"https://api.github.com/users/vi-p4f/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2017-05-23T18:34:13Z","updated_at":"2017-05-25T13:44:42Z","closed_at":"2017-05-25T13:44:42Z","author_association":"NONE","body":"JSON deserialization of scala Either type failed in Scala 2.12.2, Finatra version 2.9.0.\r\nProblem exists in Finatra 2.10 as well.\r\n\r\n### Expected behavior\r\nIt works well in Scala 2.11.11, Finatra version 2.9.0.\r\n\r\n### Actual behavior\r\nFailed with exception  java.lang.InstantiationException:\r\n   at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)\r\n   at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n   at com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.create(FinatraCaseClassDeserializer.scala:204)\r\n   at com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.createAndValidate(FinatraCaseClassDeserializer.scala:197)\r\n   at com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserialize(FinatraCaseClassDeserializer.scala:88)\r\n   at com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserializeNonWrapperClass(FinatraCaseClassDeserializer.scala:83)\r\n   at com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserialize(FinatraCaseClassDeserializer.scala:65)\r\n   at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)\r\n   at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2880)\r\n   at com.fasterxml.jackson.module.scala.experimental.ScalaObjectMapper.readValue(ScalaObjectMapper.scala:190)\r\n\r\n\r\n### Steps to reproduce the behavior\r\n\r\nHere is simple test:\r\n    val mapper: FinatraObjectMapper = ... // Create default finatra object mapper here\r\n    type T = Either[String, Int]\r\n    val l: T = Left(\"left\")\r\n    val r: T = Right(42)\r\n    assert(l == mapper.parse\\[T\\](mapper.writeValueAsString(l)))\r\n    assert(r == mapper.parse\\[T\\](mapper.writeValueAsString(r)))","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/410","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/410/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/410/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/410/events","html_url":"https://github.com/twitter/finatra/issues/410","id":228279101,"number":410,"title":"HttpServer throws NoSuchMethodError exception when startup","user":{"login":"hellokangning","id":5053603,"avatar_url":"https://avatars3.githubusercontent.com/u/5053603?v=4","gravatar_id":"","url":"https://api.github.com/users/hellokangning","html_url":"https://github.com/hellokangning","followers_url":"https://api.github.com/users/hellokangning/followers","following_url":"https://api.github.com/users/hellokangning/following{/other_user}","gists_url":"https://api.github.com/users/hellokangning/gists{/gist_id}","starred_url":"https://api.github.com/users/hellokangning/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hellokangning/subscriptions","organizations_url":"https://api.github.com/users/hellokangning/orgs","repos_url":"https://api.github.com/users/hellokangning/repos","events_url":"https://api.github.com/users/hellokangning/events{/privacy}","received_events_url":"https://api.github.com/users/hellokangning/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-05-12T12:36:53Z","updated_at":"2017-05-12T14:04:43Z","closed_at":"2017-05-12T12:58:04Z","author_association":"NONE","body":"I start the HttpServer with `java -jar server-0.1.0-all.jar` and got exception as following: \r\n\r\n```\r\nMay 12, 2017 8:31:11 PM com.twitter.finagle.http.HttpMuxer$$anonfun$4 apply\r\nINFO: HttpMuxer[/admin/metrics.json] = com.twitter.finagle.stats.MetricsExporter(<function1>)\r\nMay 12, 2017 8:31:11 PM com.twitter.finagle.http.HttpMuxer$$anonfun$4 apply\r\nINFO: HttpMuxer[/admin/per_host_metrics.json] = com.twitter.finagle.stats.HostMetricsExporter(<function1>)\r\n20:31:11.488 [main] INFO com.twitter.inject.logging.Slf4jBridgeUtility$ - org.slf4j.bridge.SLF4JBridgeHandler installed.\r\n20:31:11.504 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - Process started\r\n20:31:11.764 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ -  => com.twitter.server.handler.AdminRedirectHandler\r\n20:31:11.765 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin => com.twitter.server.handler.SummaryHandler\r\n20:31:11.765 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/server_info => com.twitter.finagle.Filter$$anon$1\r\n20:31:11.765 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/contention => com.twitter.finagle.Filter$$anon$1\r\n20:31:11.766 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/lint => com.twitter.server.handler.LintHandler\r\n20:31:11.766 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/lint.json => com.twitter.server.handler.LintHandler\r\n20:31:11.766 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/failedlint => com.twitter.server.handler.FailedLintRuleHandler\r\n20:31:11.766 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/threads => com.twitter.server.handler.ThreadsHandler\r\n20:31:11.767 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/threads.json => com.twitter.server.handler.ThreadsHandler\r\n20:31:11.767 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/announcer => com.twitter.finagle.Filter$$anon$1\r\n20:31:11.767 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/dtab => com.twitter.finagle.Filter$$anon$1\r\n20:31:11.767 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/pprof/heap => com.twitter.server.handler.HeapResourceHandler\r\n20:31:11.768 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/pprof/profile => com.twitter.server.handler.ProfileResourceHandler\r\n20:31:11.768 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/pprof/contention => com.twitter.server.handler.ProfileResourceHandler\r\n20:31:11.768 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/ping => com.twitter.server.handler.ReplyHandler\r\n20:31:11.769 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/shutdown => com.twitter.server.handler.ShutdownHandler\r\n20:31:11.769 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/tracing => com.twitter.server.handler.TracingHandler\r\n20:31:11.770 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/events => com.twitter.server.handler.EventsHandler\r\n20:31:11.770 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/events/record/ => com.twitter.server.handler.EventRecordingHandler\r\n20:31:11.771 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/logging => com.twitter.server.handler.LoggingHandler\r\n20:31:11.772 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/metrics => com.twitter.server.handler.MetricQueryHandler\r\n20:31:11.772 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/clients/ => com.twitter.server.handler.ClientRegistryHandler\r\n20:31:11.773 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/servers/ => com.twitter.server.handler.ServerRegistryHandler\r\n20:31:11.773 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/files/ => com.twitter.server.handler.ResourceHandler\r\n20:31:11.774 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/registry.json => com.twitter.server.handler.RegistryHandler\r\n20:31:11.774 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/toggles => com.twitter.server.handler.ToggleHandler\r\n20:31:11.774 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/toggles/ => com.twitter.server.handler.ToggleHandler\r\n20:31:11.775 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/tunables => com.twitter.server.handler.TunableHandler\r\n20:31:11.775 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/tunables/ => com.twitter.server.handler.TunableHandler\r\n20:31:11.776 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /favicon.ico => com.twitter.server.handler.ResourceHandler\r\n20:31:11.777 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/histograms => com.twitter.server.handler.HistogramQueryHandler\r\n20:31:11.777 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - /admin/histograms.json => com.twitter.server.handler.HistogramQueryHandler\r\n20:31:11.782 [main] INFO com.qiniu.fusion.log.app.DaemonServerMain$ - Serving admin http on 0.0.0.0/0.0.0.0:9990\r\n20:31:12.375 [main] INFO com.twitter.finagle - Finagle version 6.44.0 (rev=ef94604c6db76959610eeb8fb2bb06810022061f) built at 20170421-125957\r\njava.lang.NoSuchMethodError: io.netty.channel.ChannelOption.newInstance(Ljava/lang/String;)Lio/netty/channel/ChannelOption;\r\n\tat com.twitter.finagle.netty4.Netty4Listener$.<init>(Netty4Listener.scala:23)\r\n\tat com.twitter.finagle.netty4.Netty4Listener$.<clinit>(Netty4Listener.scala)\r\n
8000
\tat com.twitter.finagle.netty4.http.exp$$anonfun$4.apply(Http.scala:146)\r\n\tat com.twitter.finagle.netty4.http.exp$$anonfun$4.apply(Http.scala:145)\r\n\tat com.twitter.finagle.Http$Server.newListener(Http.scala:394)\r\n\tat com.twitter.finagle.server.StdStackServer$class.newListeningServer(StackServer.scala:318)\r\n\tat com.twitter.finagle.Http$Server.newListeningServer(Http.scala:385)\r\n\tat com.twitter.finagle.server.ListeningStackServer$$anon$1.<init>(StackServer.scala:195)\r\n\tat com.twitter.finagle.server.ListeningStackServer$class.serve(StackServer.scala:158)\r\n\tat com.twitter.finagle.Http$Server.serve(Http.scala:385)\r\n\tat com.twitter.finagle.Server$class.serve(Server.scala:112)\r\n\tat com.twitter.finagle.Http$Server.serve(Http.scala:385)\r\n\tat com.twitter.server.AdminHttpServer$class.com$twitter$server$AdminHttpServer$$startServer(AdminHttpServer.scala:210)\r\n\tat com.twitter.server.AdminHttpServer$$anonfun$1.apply$mcV$sp(AdminHttpServer.scala:218)\r\n\tat com.twitter.app.App$$anonfun$nonExitingMain$2.apply(App.scala:167)\r\n\tat com.twitter.app.App$$anonfun$nonExitingMain$2.apply(App.scala:167)\r\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\r\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\r\n\tat com.twitter.app.App$class.nonExitingMain(App.scala:167)\r\n\tat com.qiniu.fusion.log.app.DaemonServer.nonExitingMain(DaemonServer.scala:11)\r\n\tat com.twitter.app.App$class.main(App.scala:141)\r\n\tat com.qiniu.fusion.log.app.DaemonServer.main(DaemonServer.scala:11)\r\n\tat com.qiniu.fusion.log.app.DaemonServerMain.main(DaemonServer.scala)\r\nException thrown in main on startup\r\n```\r\n\r\nAnd here is my `build.gradle` : \r\n\r\n```\r\ngroup 'com.qiniu.fusion.deftones'\r\nversion '0.1.0'\r\n\r\napply plugin: 'scala'\r\n\r\nsourceCompatibility = 1.8\r\ntargetCompatibility = 1.8\r\n\r\ndependencies {\r\n//    compile \"com.twitter.finatra:finatra-http_2.11:2.1.6\" // last support for jdk 1.7\r\n    compile 'com.twitter:finatra-http_2.11:2.10.0'\r\n    compile 'ch.qos.logback:logback-classic:1.1.7'\r\n    compileOnly 'org.scala-lang:scala-library:2.11.8'\r\n}\r\n\r\nconfigurations.all {\r\n    exclude group: 'org.slf4j', module: 'slf4j-log4j12'\r\n}\r\n\r\njar {\r\n    manifest {\r\n        attributes 'Main-Class': 'com.qiniu.fusion.log.app.DaemonServerMain'\r\n    }\r\n}\r\n\r\n```\r\n\r\nand `DaemonApp.scala':\r\n\r\n```\r\nobject DaemonServerMain extends DaemonServer\r\n\r\nclass DaemonServer extends HttpServer {\r\n\r\n  override def defaultFinatraHttpPort: String = \":8998\"\r\n\r\n  override def configureHttp(router: HttpRouter): Unit = {\r\n    router\r\n      .filter[CommonFilters]\r\n      .add[TestController]\r\n  }\r\n\r\n  override def configureHttpServer(server: Http.Server): Http.Server = {\r\n    server.withAdmissionControl.concurrencyLimit(\r\n      maxConcurrentRequests = 2000,\r\n      maxWaiters = 1000\r\n    )\r\n  }\r\n}\r\n```\r\n\r\nMore informaction， I just updated from 2.1.6 which is for jdk 1.7 and worked fine. After switching to jdk 1.8 and Finatra 2.10.0, this exception happens.","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/409","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/409/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/409/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/409/events","html_url":"https://github.com/twitter/finatra/issues/409","id":224583510,"number":409,"title":"Port option long + other jackson niceties to a jackson scala module","user":{"login":"devshorts","id":1799346,"avatar_url":"https://avatars1.githubusercontent.com/u/1799346?v=4","gravatar_id":"","url":"https://api.github.com/users/devshorts","html_url":"https://github.com/devshorts","followers_url":"https://api.github.com/users/devshorts/followers","following_url":"https://api.github.com/users/devshorts/following{/other_user}","gists_url":"https://api.github.com/users/devshorts/gists{/gist_id}","starred_url":"https://api.github.com/users/devshorts/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/devshorts/subscriptions","organizations_url":"https://api.github.com/users/devshorts/orgs","repos_url":"https://api.github.com/users/devshorts/repos","events_url":"https://api.github.com/users/devshorts/events{/privacy}","received_events_url":"https://api.github.com/users/devshorts/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-04-26T20:04:23Z","updated_at":"2017-08-16T16:55:40Z","closed_at":"2017-08-16T16:55:32Z","author_association":"NONE","body":"Finatra has a lot of really nice stuff to make serializing scala types easier with jackson.  Specifically Option[Long] handling.  However, this is locked away inside of Finatra, and not shareable to any other scala users without pulling Finatra in.  It would be very nice to have a complementing jackson module that ported this code over so that the scala community can leverage it outside of Finatra.","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/403","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/403/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/403/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/403/events","html_url":"https://github.com/twitter/finatra/issues/403","id":219589750,"number":403,"title":"Support for Mockito 2 in Feature Tests","user":{"login":"zamzterz","id":1183700,"avatar_url":"https://avatars0.githubusercontent.com/u/1183700?v=4","gravatar_id":"","url":"https://api.github.com/users/zamzterz","html_url":"https://github.com/zamzterz","followers_url":"https://api.github.com/users/zamzterz/followers","following_url":"https://api.github.com/users/zamzterz/following{/other_user}","gists_url":"https://api.github.com/users/zamzterz/gists{/gist_id}","starred_url":"https://api.github.com/users/zamzterz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zamzterz/subscriptions","organizations_url":"https://api.github.com/users/zamzterz/orgs","repos_url":"https://api.github.com/users/zamzterz/repos","events_url":"https://api.github.com/users/zamzterz/events{/privacy}","received_events_url":"https://api.github.com/users/zamzterz/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2017-04-05T13:51:16Z","updated_at":"2017-08-16T17:13:40Z","closed_at":"2017-08-16T17:13:40Z","author_association":"NONE","body":"When using Mockito 2, test classes extending from `FeatureTest` as described in [\"Testing with Finatra\"](https://twitter.github.io/finatra/user-guide/testing/index.html#feature-tests) are aborted (despite the test passing).\r\n\r\n### Expected behavior\r\n\r\nThe test succeeding.\r\n\r\n### Actual behavior\r\n\r\nThe test passes, but the test run is aborted before being finished with the following (partial) stacktrace:\r\n```\r\nAn exception or error caused a run to abort: tried to access method org.mockito.internal.util.MockUtil.<init>()V from class com.twitter.inject.IntegrationTestMixin \r\njava.lang.IllegalAccessError: tried to access method org.mockito.internal.util.MockUtil.<init>()V from class com.twitter.inject.IntegrationTestMixin\r\n\tat com.twitter.inject.IntegrationTestMixin.com$twitter$inject$IntegrationTestMixin$$mockObjects(IntegrationTestMixin.scala:60)\r\n\tat com.twitter.inject.IntegrationTestMixin.com$twitter$inject$IntegrationTestMixin$$mockObjects$(IntegrationTestMixin.scala:59)\r\n\tat com.twitter.inject.server.FeatureTest.com$twitter$inject$IntegrationTestMixin$$mockObjects$lzycompute(FeatureTest.scala:29)\r\n\tat com.twitter.inject.server.FeatureTest.com$twitter$inject$IntegrationTestMixin$$mockObjects(FeatureTest.scala:29)\r\n\tat com.twitter.inject.IntegrationTestMixin.afterEach(IntegrationTestMixin.scala:44)\r\n\tat com.twitter.inject.IntegrationTestMixin.afterEach$(IntegrationTestMixin.scala:40)\r\n\tat com.twitter.inject.server.FeatureTest.com$twitter$inject$server$FeatureTestMixin$$super$afterEach(FeatureTest.scala:29)\r\n\tat com.twitter.inject.server.FeatureTestMixin.afterEach(FeatureTestMixin.scala:44)\r\n\tat com.twitter.inject.server.FeatureTestMixin.afterEach$(FeatureTestMixin.scala:43)\r\n```\r\n\r\n### Steps to reproduce the behavior\r\n\r\n* Depend on any Mockito version > 2 (for example `testCompile('org.mockito:mockito-core:2.7.21')` in Gradle)\r\n* Create a test suite extending from `FeatureTest`:\r\n```scala\r\nclass ReproduceMockitoAbortTest extends FeatureTest with Matchers {\r\n  test(\"Mockito 2 makes this test always be aborted\") {\r\n    true shouldBe true\r\n  }\r\n}\r\n```\r\n\r\nOverriding the `afterEach` method without calling `super.afterEach` in the test class solves the problem.\r\nAn initial guess is that the API changes in Mockito 2 makes [this](https://github.com/twitter/finatra/blob/develop/inject/inject-core/src/test/scala/com/twitter/inject/IntegrationTestMixin.scala#L45) fail.","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/395","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/395/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/395/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/395/events","html_url":"https://github.com/twitter/finatra/issues/395","id":214769404,"number":395,"title":"Request parsing fails when the request body root is an array.","user":{"login":"halvorgb","id":1468693,"avatar_url":"https://avatars0.githubusercontent.com/u/1468693?v=4","gravatar_id":"","url":"https://api.github.com/users/halvorgb","html_url":"https://github.com/halvorgb","followers_url":"https://api.github.com/users/halvorgb/followers","following_url":"https://api.github.com/users/halvorgb/following{/other_user}","gists_url":"https://api.github.com/users/halvorgb/gists{/gist_id}","starred_url":"https://api.github.com/users/halvorgb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/halvorgb/subscriptions","organizations_url":"https://api.github.com/users/halvorgb/orgs","repos_url":"https://api.github.com/users/halvorgb/repos","events_url":"https://api.github.com/users/halvorgb/events{/privacy}","received_events_url":"https://api.github.com/users/halvorgb/received_events","type":"User","site_admin":false},"labels":[{"id":262529463,"url":"https://api.github.com/repos/twitter/finatra/labels/in%20progress","name":"in progress","color":"ededed","default":false}],"state":"closed","locked":false,"assignee":{"login":"cacoco","id":613046,"avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false},"assignees":[{"login":"cacoco","id":613046,"avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2017-03-16T16:49:52Z","updated_at":"2017-03-25T04:16:42Z","closed_at":"2017-03-25T04:16:42Z","author_association":"CONTRIBUTOR","body":"When the root json object is a json array, the object mapper fails and the api consumer gets a 500 response.\r\n\r\n### Expected behavior\r\n\r\nWhen (erroneously) sending a request to a finatra endpoint with `[]` as the body, a 400 bad request response is expected.\r\n\r\n### Actual behavior\r\n\r\nAn internal server error is returned and shown to the api consumer.\r\n\r\n### Steps to reproduce the behavior\r\n\r\nI have created a branch with a failing test case,  see: https://github.com/halvorgb/finatra/commit/7e1441748c5cd8ad2fbdf0424339f82bd4251a8e.\r\n\r\n\r\nAll in all, not a big problem. Made me scratch my head when our frontend team reported it though.","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/392","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/392/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/392/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/392/events","html_url":"https://github.com/twitter/finatra/issues/392","id":211988450,"number":392,"title":"Per-route filters reset prefix value","user":{"login":"chrisbenincasa","id":1640671,"avatar_url":"https://avatars2.githubusercontent.com/u/1640671?v=4","gravatar_id":"","url":"https://api.github.com/users/chrisbenincasa","html_url":"https://github.com/chrisbenincasa","followers_url":"https://api.github.com/users/chrisbenincasa/followers","following_url":"https://api.github.com/users/chrisbenincasa/following{/other_user}","gists_url":"https://api.github.com/users/chrisbenincasa/gists{/gist_id}","starred_url":"https://api.github.com/users/chrisbenincasa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chrisbenincasa/subscriptions","organizations_url":"https://api.github.com/users/chrisbenincasa/orgs","repos_url":"https://api.github.com/users/chrisbenincasa/repos","events_url":"https://api.github.com/users/chrisbenincasa/events{/privacy}","received_events_url":"https://api.github.com/users/chrisbenincasa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-03-05T22:04:55Z","updated_at":"2017-03-24T18:30:30Z","closed_at":"2017-03-24T18:30:30Z","author_association":"CONTRIBUTOR","body":"Using per-route filters within a prefix does not prepend the prefix to the path.\r\n\r\n### Expected behavior\r\n\r\nWhen using the per-route filter, the prefix is correctly prepended when the RouteBuilder is pushed.\r\n\r\n### Actual behavior\r\n\r\nWhen using the per-route filter examples from the documentation along with prefixes, routes are attached without the current prefix.\r\n\r\n\r\n### Steps to reproduce the behavior\r\n\r\n1. Define a simple filter and controller:\r\n```scala\r\nclass ExampleFilter extends SimpleFilter[Request, Response] {\r\n  override def apply(request: Request, service: Service[Request, Response]): Future[Response] = {\r\n    println(\"hello!\")\r\n    service(request)\r\n  }\r\n}\r\n\r\nclass SimpleController extends Controller {\r\n  prefix(\"/v1\") {\r\n    filter[ExampleFilter].get(\"/users\") { _: Request => response.ok(\"HELLO!\\n\") }\r\n  }\r\n}\r\n```\r\n2. Start the server\r\n3. Attempt to hit `/v1/users` on the service and observe a 404.\r\n4. Hit `/users` on the service and observe the response\r\n\r\n```\r\n$ ) curl -v http://localhost:9999/v1/users\r\n* Couldn't find host localhost in the .netrc file; using defaults\r\n*   Trying ::1...\r\n* Connected to localhost (::1) port 9999 (#0)\r\n> GET /v1/users HTTP/1.1\r\n> Host: localhost:9999\r\n> User-Agent: curl/7.43.0\r\n> Accept: */*\r\n> \r\n< HTTP/1.1 404 Not Found\r\n< Content-Length: 0\r\n< \r\n* Connection #0 to host localhost left intact\r\n\r\n$ ) curl -v http://localhost:9999/users\r\n* Couldn't find host localhost in the .netrc file; using defaults\r\n*   Trying ::1...\r\n* Connected to localhost (::1) port 9999 (#0)\r\n> GET /users HTTP/1.1\r\n> Host: localhost:9999\r\n> User-Agent: curl/7.43.0\r\n> Accept: */*\r\n> \r\n< HTTP/1.1 200 OK\r\n< Server: Finatra\r\n< Date: Sun, 05 Mar 2017 22:03:42 GMT\r\n< Content-Type: application/octet-stream\r\n< Content-Length: 7\r\n< \r\nHELLO!\r\n* Connection #0 to host localhost left intact\r\n```","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/390","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/390/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/390/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/390/events","html_url":"https://github.com/twitter/finatra/issues/390","id":210212443,"number":390,"title":"Session and CSRF Documentation for Finatra 2.x","user":{"login":"ochowie","id":4466413,"avatar_url":"https://avatars0.githubusercontent.com/u/4466413?v=4","gravatar_id":"","url":"https://api.github.com/users/ochowie","html_url":"https://github.com/ochowie","followers_url":"https://api.github.com/users/ochowie/followers","following_url":"https://api.github.com/users/ochowie/following{/other_user}","gists_url":"https://api.github.com/users/ochowie/gists{/gist_id}","starred_url":"https://api.github.com/users/ochowie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ochowie/subscriptions","organizations_url":"https://api.github.com/users/ochowie/orgs","repos_url":"https://api.github.com/users/ochowie/repos","events_url":"https://api.github.com/users/ochowie/events{/privacy}","received_events_url":"https://api.github.com/users/ochowie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-02-25T05:28:21Z","updated_at":"2017-10-29T05:16:18Z","closed_at":"2017-02-27T19:13:39Z","author_association":"NONE","body":"Need documentation on sessions and CSRF support. It seems like it was present at one point but got removed in the version 2.x.","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/383","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/383/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/383/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/383/events","html_url":"https://github.com/twitter/finatra/issues/383","id":204191471,"number":383,"title":"HTTP/2 support","user":{"login":"pradyuman","id":9904569,"avatar_url":"https://avatars1.githubusercontent.com/u/9904569?v=4","gravatar_id":"","url":"https://api.github.com/users/pradyuman","html_url":"https://github.com/pradyuman","followers_url":"https://api.github.com/users/pradyuman/followers","following_url":"https://api.github.com/users/pradyuman/following{/other_user}","gists_url":"https://api.github.com/users/pradyuman/gists{/gist_id}","starred_url":"https://api.github.com/users/pradyuman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pradyuman/subscriptions","organizations_url":"https://api.github.com/users/pradyuman/orgs","repos_url":"https://api.github.com/users/pradyuman/repos","events_url":"https://api.github.com/users/pradyuman/events{/privacy}","received_events_url":"https://api.github.com/users/pradyuman/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-01-31T02:49:57Z","updated_at":"2017-01-31T14:28:43Z","closed_at":"2017-01-31T14:28:43Z","author_association":"NONE","body":"What's the timeline for HTTP/2 support in finatra? I heard that HTTP/2 support is in progress from @cacoco on gitter but couldn't find any issues that were tracking it's progress.","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/382","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/382/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/382/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/382/events","html_url":"https://github.com/twitter/finatra/issues/382","id":202839311,"number":382,"title":"Trailing slash gets appended when running feature tests","user":{"login":"basert","id":1951610,"avatar_url":"https://avatars3.githubusercontent.com/u/1951610?v=4","gravatar_id":"","url":"https://api.github.com/users/basert","html_url":"https://github.com/basert","followers_url":"https://api.github.com/users/basert/followers","following_url":"https://api.github.com/users/basert/following{/other_user}","gists_url":"https://api.github.com/users/basert/gists{/gist_id}","starred_url":"https://api.github.com/users/basert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/basert/subscriptions","organizations_url":"https://api.github.com/users/basert/orgs","repos_url":"https://api.github.com/users/basert/repos","events_url":"https://api.github.com/users/basert/events{/privacy}","received_events_url":"https://api.github.com/users/basert/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false}],"state":"closed","locked":false,"assignee":{"login":"isabelmartin","id":10446444,"avatar_url":"https://avatars3.githubusercontent.com/u/10446444?v=4","gravatar_id":"","url":"https://api.github.com/users/isabelmartin","html_url":"https://github.com/isabelmartin","followers_url":"https://api.github.com/users/isabelmartin/followers","following_url":"https://api.github.com/users/isabelmartin/following{/other_user}","gists_url":"https://api.github.com/users/isabelmartin/gists{/gist_id}","starred_url":"https://api.github.com/users/isabelmartin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/isabelmartin/subscriptions","organizations_url":"https://api.github.com/users/isabelmartin/orgs","repos_url":"https://api.github.com/users/isabelmartin/repos","events_url":"https://api.github.com/users/isabelmartin/events{/privacy}","received_events_url":"https://api.github.com/users/isabelmartin/received_events","type":"User","site_admin":false},"assignees":[{"login":"isabelmartin","id":10446444,"avatar_url":"https://avatars3.githubusercontent.com/u/10446444?v=4","gravatar_id":"","url":"https://api.github.com/users/isabelmartin","html_url":"https://github.com/isabelmartin","followers_url":"https://api.github.com/users/isabelmartin/followers","following_url":"https://api.github.com/users/isabelmartin/following{/other_user}","gists_url":"https://api.github.com/users/isabelmartin/gists{/gist_id}","starred_url":"https://api.github.com/users/isabelmartin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/isabelmartin/subscriptions","organizations_url":"https://api.github.com/users/isabelmartin/orgs","repos_url":"https://api.github.com/users/isabelmartin/repos","events_url":"https://api.github.com/users/isabelmartin/events{/privacy}","received_events_url":"https://api.github.com/users/isabelmartin/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2017-01-24T14:49:19Z","updated_at":"2017-01-28T01:06:43Z","closed_at":"2017-01-27T19:26:49Z","author_association":"NONE","body":"A trailing slash gets appended when running feature tests.\r\n\r\n### Expected behavior\r\n\r\nThe request url should be the same as entered into the test and should not falsely append a trailing slash.\r\n\r\n### Actual behavior\r\n\r\nSlash gets added. e.g.: `/oauth2/v1/auth?redirect_uri=http://someurl&client_id=my-client-id&state=1234234` becomes `/oauth2/v1/auth?redirect_uri=http://someurl&client_id=my-client-id&state=1234234/`\r\n\r\n### Steps to reproduce the behavior\r\n\r\nWrite a basic test like this:\r\n```scala\r\nserver.httpGet(\r\n        s\"/oauth2/v1/auth?redirect_uri=http://someurl&client_id=my-client-id&state=1234234\",\r\n        andExpect = Found,\r\n        withLocation = s\"http://localhost?error=unsupported_response_type&error_description=Missing%20required%20parameter%3A%20response_type&state=1234\"\r\n      )\r\n```\r\n\r\nSee the log-output of the access log:\r\n```\r\nHTTP GET /oauth2/v1/auth?redirect_uri=http://someurl&client_id=my-client-id&state=1234234\r\n===========================================================================\r\n10:00:32.510 [finagle/netty3-2] INFO  c.t.f.h.filters.AccessLoggingFilter - 127.0.0.1 - - [19/Jan/2017:10:00:32 +0000] \"GET /oauth2/v1/auth?redirect_uri=http://someurl&client_id=my-client-id&state=1234234/ HTTP/1.1\" 302 - 274 \"-\"\r\n```\r\n\r\n`request.params.get(\"state\").get` now contains `1234234/`.\r\n\r\nGitter ref: https://gitter.im/twitter/finatra?at=588244ad519afee26b8f920c","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/381","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/381/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/381/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/381/events","html_url":"https://github.com/twitter/finatra/issues/381","id":200417997,"number":381,"title":"When trying to subclass Controller, RouteDSL is hidden because it is private to http package","user":{"login":"EricBorczuk","id":4205492,"avatar_url":"https://avatars3.githubusercontent.com/u/4205492?v=4","gravatar_id":"","url":"https://api.github.com/users/EricBorczuk","html_url":"https://github.com/EricBorczuk","followers_url":"https://api.github.com/users/EricBorczuk/followers","following_url":"https://api.github.com/users/EricBorczuk/following{/other_user}","gists_url":"https://api.github.com/users/EricBorczuk/gists{/gist_id}","starred_url":"https://api.github.com/users/EricBorczuk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EricBorczuk/subscriptions","organizations_url":"https://api.github.com/users/EricBorczuk/orgs","repos_url":"https://api.github.com/users/EricBorczuk/repos","events_url":"https://api.github.com/users/EricBorczuk/events{/privacy}","received_events_url":"https://api.github.com/users/EricBorczuk/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-01-12T16:42:25Z","updated_at":"2017-01-23T19:29:24Z","closed_at":"2017-01-23T19:26:46Z","author_association":"NONE","body":"I'm currently attempting to make an implementation of Controller that allows me to customize the DSL a bit.\r\n\r\nHere's a code snippet:\r\n\r\n```\r\nclass SpecialAwesomeController extends Controller with Logging {\r\n\r\n  def get[RequestType: Manifest, ResponseType: Manifest]\r\n    (route: String, filters: Seq[Filter[Request, Response, Request, Response]], name: String)\r\n    (callback: RequestType => ResponseType): Unit = {\r\n\r\n    val filterDslOpt = convertFiltersToRouteDsl(filters)\r\n\r\n    filterDslOpt.map { filterDsl =>\r\n      filterDsl.get[RequestType, ResponseType](route, name)(callback)\r\n    }.getOrElse {\r\n      get[RequestType, ResponseType](route, name)(callback)\r\n    }\r\n  }\r\n  \r\n  private def convertFiltersToRouteDsl(filters: Seq[Filter[Request, Response, Request, Response]]) = {\r\n    if(filters.isEmpty == false) {\r\n      var aggregatedFilters = filter(filters(0))\r\n\r\n      filters.drop(1).foreach { newFilter =>\r\n        aggregatedFilters = aggregatedFilters.filter(newFilter)\r\n      }\r\n\r\n      Some(aggregatedFilters)\r\n    } else None\r\n  }\r\n}\r\n```\r\n\r\nThe idea here is that I want to make a route definition look similar to how we used to do it with our old HTTP framework.  The above code works - however, I'm not allowed to explicitly import RouteDSL because it is private to the http package.  So in the function convertFiltersToRouteDSL, I'm not allowed to explicitly write the return type, nor am I allowed to write out the type of the variable ``aggregatedFilters``.\r\n\r\nFor the purposes of subclassing Controller (with the intent of customizing), is it possible to expose RouteDSL so that I can explicitly import and put types?  The way Scala deals with private traits/classes admittedly makes this situation weird, since you've chosen to make RouteDSL private but I could find a way to make it leak out and use it 😲 \r\n\r\nLet me know! Full disclosure - I'm loving this library thus far, it's far better for our purposes than Spray ever was :D","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/380","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/380/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/380/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/380/events","html_url":"https://github.com/twitter/finatra/issues/380","id":198009397,"number":380,"title":"Unexpected making connection time cost during high concurrency.","user":{"login":"odinliu","id":112489,"avatar_url":"https://avatars0.githubusercontent.com/u/112489?v=4","gravatar_id":"","url":"https://api.github.com/users/odinliu","html_url":"https://github.com/odinliu","followers_url":"https://api.github.com/users/odinliu/followers","following_url":"https://api.github.com/users/odinliu/following{/other_user}","gists_url":"https://api.github.com/users/odinliu/gists{/gist_id}","starred_url":"https://api.github.com/users/odinliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/odinliu/subscriptions","organizations_url":"https://api.github.com/users/odinliu/orgs","repos_url":"https://api.github.com/users/odinliu/repos","events_url":"https://api.github.com/users/odinliu/events{/privacy}","received_events_url":"https://api.github.com/users/odinliu/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-12-29T13:44:15Z","updated_at":"2017-01-23T19:27:15Z","closed_at":"2017-01-23T19:27:15Z","author_association":"CONTRIBUTOR","body":"Our company did some load tests on a service implement by finatra. And we found some strange issue. Our restful service use nginx as a reverse-proxy, and nginx's access log show that the $upstream_connect_time of some requests were nearly 1 second, but the real process time is hundreds milliseconds. Here is nginx log example(1.001 is $upstream_connect_time, 1.303 is $request_time and $upstream_response_time):\r\n```\r\n127.0.0.1|-|29/Dec/2016:19:08:47 +0800|GET /teacher/search?q=Zachary HTTP/1.1|200|2699|-|Go-http-client/1.1|-|1.303|1.303|127.0.0.1:8888|1.001\r\n```\r\n\r\nAnd I reproduce the problem using a simple use case:\r\n```\r\n@Singleton\r\nclass LoadController ex
b78
tends Controller with Logging {\r\n  val ret = \"\"\"{\"timeout\":false,\"took\":3}\"\"\"\r\n  val pool = FuturePools.unboundedPool(\"RequestPool\")\r\n  get (\"/teacher/search\") { req: Request =>\r\n    pool {\r\n      info(\"req received.\")\r\n      Thread.sleep(300)\r\n      response.ok(ret)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI reproduce it under 2.1.6 and 2.7.0. Mostly requests as expected, but some spent nearly 1 second to make a connection.\r\n\r\nOur controller use a unbounded pool to work with some blocked method. I use a `Thread.sleep` to simulate this. The qps is 1600, and few cpu usage. So I don't think it have reached the performance limit.\r\n\r\nI'm not familiar with finagle. So is there anything to optimize this?\r\n","score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/379","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/379/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/379/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/379/events","html_url":"https://github.com/twitter/finatra/issues/379","id":197770616,"number":379,"title":"How to disable zipkin","user":{"login":"codeape","id":1051317,"avatar_url":"https://avatars2.githubusercontent.com/u/1051317?v=4","gravatar_id":"","url":"https://api.github.com/users/codeape","html_url":"https://github.com/codeape","followers_url":"https://api.github.com/users/codeape/followers","following_url":"https://api.github.com/users/codeape/following{/other_user}","gists_url":"https://api.github.com/users/codeape/gists{/gist_id}","starred_url":"https://api.github.com/users/codeape/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codeape/subscriptions","organizations_url":"https://api.github.com/users/codeape/orgs","repos_url":"https://api.github.com/users/codeape/repos","events_url":"https://api.github.com/users/codeape/events{/privacy}","received_events_url":"https://api.github.com/users/codeape/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-12-27T23:15:35Z","updated_at":"2016-12-30T01:12:02Z","closed_at":"2016-12-29T23:36:49Z","author_association":"NONE","body":"I am not using zipkin and I wonder how I can disable it? I get a lot of exceptions looking like this:\r\n`\r\nChannelStatsHandler caught an exception\r\njava.net.ConnectException: Connection refused: localhost/127.0.0.1:1463\r\n`\r\n\r\nIf you give your finatra app -h I find this:\r\n`-com.twitter.finagle.zipkin.host='localhost:1463':`\r\n\r\nSo I am sure it is zipkin causing this.\r\n\r\nThank you in advance\r\n","score":1.0}]}
0

