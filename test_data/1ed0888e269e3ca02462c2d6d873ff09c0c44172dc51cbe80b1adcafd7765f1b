HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:10:24 GMT
Link: <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Factix%2Factix-web+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Factix%2Factix-web+type%3Aissue+state%3Aclosed&page=23>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: D299:B560:3CBFF01:460248C:5FB01D8F
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 22
X-Ratelimit-Reset: 1605377483
X-Ratelimit-Used: 8
X-Xss-Protection: 1; mode=block

1c060
{"total_count":668,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/open-telemetry/opentelemetry-rust/issues/321","repository_url":"https://api.github.com/repos/open-telemetry/opentelemetry-rust","labels_url":"https://api.github.com/repos/open-telemetry/opentelemetry-rust/issues/321/labels{/name}","comments_url":"https://api.github.com/repos/open-telemetry/opentelemetry-rust/issues/321/comments","events_url":"https://api.github.com/repos/open-telemetry/opentelemetry-rust/issues/321/events","html_url":"https://github.com/open-telemetry/opentelemetry-rust/issues/321","id":733315994,"node_id":"MDU6SXNzdWU3MzMzMTU5OTQ=","number":321,"title":"Actix Zipkin exemples","user":{"login":"Farkal","id":3998763,"node_id":"MDQ6VXNlcjM5OTg3NjM=","avatar_url":"https://avatars1.githubusercontent.com/u/3998763?v=4","gravatar_id":"","url":"https://api.github.com/users/Farkal","html_url":"https://github.com/Farkal","followers_url":"https://api.github.com/users/Farkal/followers","following_url":"https://api.github.com/users/Farkal/following{/other_user}","gists_url":"https://api.github.com/users/Farkal/gists{/gist_id}","starred_url":"https://api.github.com/users/Farkal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Farkal/subscriptions","organizations_url":"https://api.github.com/users/Farkal/orgs","repos_url":"https://api.github.com/users/Farkal/repos","events_url":"https://api.github.com/users/Farkal/events{/privacy}","received_events_url":"https://api.github.com/users/Farkal/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-30T16:15:34Z","updated_at":"2020-10-30T19:05:32Z","closed_at":"2020-10-30T19:05:32Z","author_association":"NONE","active_lock_reason":null,"body":"I can't make actix work with opentelemetry-zipkin (https://github.com/OutThereLabs/actix-web-opentelemetry/issues/32) so i think it would help if there was some examples here.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/actix/actix-web/issues/1779","repository_url":"https://api.github.com/repos/actix/actix-web","labels_url":"https://api.github.com/repos/actix/actix-web/issues/1779/labels{/name}","comments_url":"https://api.github.com/repos/actix/actix-web/issues/1779/comments","events_url":"https://api.github.com/repos/actix/actix-web/issues/1779/events","html_url":"https://github.com/actix/actix-web/issues/1779","id":738269324,"node_id":"MDU6SXNzdWU3MzgyNjkzMjQ=","number":1779,"title":"Actix is closing on CTRL-Z but not properly terminating the process","user":{"login":"neilyoung","id":731020,"node_id":"MDQ6VXNlcjczMTAyMA==","avatar_url":"https://avatars2.githubusercontent.com/u/731020?v=4","gravatar_id":"","url":"https://api.github.com/users/neilyoung","html_url":"https://github.com/neilyoung","followers_url":"https://api.github.com/users/neilyoung/followers","following_url":"https://api.github.com/users/neilyoung/following{/other_user}","gists_url":"https://api.github.com/users/neilyoung/gists{/gist_id}","starred_url":"https://api.github.com/users/neilyoung/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neilyoung/subscriptions","organizations_url":"https://api.github.com/users/neilyoung/orgs","repos_url":"https://api.github.com/users/neilyoung/repos","events_url":"https://api.github.com/users/neilyoung/events{/privacy}","received_events_url":"https://api.github.com/users/neilyoung/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-11-07T16:05:34Z","updated_at":"2020-11-07T17:00:28Z","closed_at":"2020-11-07T17:00:28Z","author_association":"NONE","active_lock_reason":null,"body":"I commented on a closed issue already, but maybe it is better to open a new one:\r\n\r\nhttps://github.com/actix/actix-web/issues/1098#issuecomment-723415804\r\n\r\n\r\nActix is reacting on CTRL-Z but not properly terminating. \r\n\r\n```\r\nuse actix_web::{get, web, App, HttpServer, Responder};\r\n\r\n#[get(\"/{id}/{name}/index.html\")]\r\nasync fn index(web::Path((id, name)): web::Path<(u32, String)>) -> impl Responder {\r\n    format!(\"Hello {}! id:{}\", name, id)\r\n}\r\n\r\n#[actix_web::main]\r\nasync fn main() -> std::io::Result<()> {\r\n    HttpServer::new(|| App::new().service(index))\r\n        //.disable_signals()\r\n        .bind(\"127.0.0.1:8080\")?\r\n        .run()\r\n        .await\r\n}\r\n```\r\n\r\nCTRL-Z: \"stopped\" echo, but process is still running\r\nCTRL-C: terminated OK\r\n\r\nWhether or not `disable_signal` is added doesn't change anything\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/DataDog/glommio/issues/126","repository_url":"https://api.github.com/repos/DataDog/glommio","labels_url":"https://api.github.com/repos/DataDog/glommio/issues/126/labels{/name}","comments_url":"https://api.github.com/repos/DataDog/glommio/issues/126/comments","events_url":"https://api.github.com/repos/DataDog/glommio/issues/126/events","html_url":"https://github.com/DataDog/glommio/issues/126","id":724373018,"node_id":"MDU6SXNzdWU3MjQzNzMwMTg=","number":126,"title":"Consider adding a forum/chat?","user":{"login":"matklad","id":1711539,"node_id":"MDQ6VXNlcjE3MTE1Mzk=","avatar_url":"https://avatars3.githubusercontent.com/u/1711539?v=4","gravatar_id":"","url":"https://api.github.com/users/matklad","html_url":"https://github.com/matklad","followers_url":"https://api.github.com/users/matklad/followers","following_url":"https://api.github.com/users/matklad/following{/other_user}","gists_url":"https://api.github.com/users/matklad/gists{/gist_id}","starred_url":"https://api.github.com/users/matklad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matklad/subscriptions","organizations_url":"https://api.github.com/users/matklad/orgs","repos_url":"https://api.github.com/users/matklad/repos","events_url":"https://api.github.com/users/matklad/events{/privacy}","received_events_url":"https://api.github.com/users/matklad/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":24,"created_at":"2020-10-19T07:56:59Z","updated_at":"2020-10-22T13:38:37Z","closed_at":"2020-10-22T13:07:00Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"If we intend to grow community around scipo, we would nee some community-space chat-like thing eventually. If we'll need it eventually, we might want to setup it sooner rather than later, because why not? Besides, I already have a couple of questions/thoughts that are ill-fitted for github issues ^^ \r\n\r\nCommon choices in this area are:\r\n\r\n* Gitter (actix web https://github.com/actix/actix-web)\r\n* Discord (tokio https://github.com/tokio-rs/tokio)\r\n* Discourse (bors-ng https://github.com/bors-ng/bors-ng)\r\n* Zullip (druid https://github.com/linebender/druid)\r\n\r\nI personally have a strong preference towards Zulip or Discourse","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/mozilla-services/syncstorage-rs/issues/832","repository_url":"https://api.github.com/repos/mozilla-services/syncstorage-rs","labels_url":"https://api.github.com/repos/mozilla-services/syncstorage-rs/issues/832/labels{/name}","comments_url":"https://api.github.com/repos/mozilla-services/syncstorage-rs/issues/832/comments","events_url":"https://api.github.com/repos/mozilla-services/syncstorage-rs/issues/832/events","html_url":"https://github.com/mozilla-services/syncstorage-rs/issues/832","id":710475467,"node_id":"MDU6SXNzdWU3MTA0NzU0Njc=","number":832,"title":"Update to actix-web 3","user":{"login":"pjenvey","id":14639,"node_id":"MDQ6VXNlcjE0NjM5","avatar_url":"https://avatars2.githubusercontent.com/u/14639?v=4","gravatar_id":"","url":"https://api.github.com/users/pjenvey","html_url":"https://github.com/pjenvey","followers_url":"https://api.github.com/users/pjenvey/followers","following_url":"https://api.github.com/users/pjenvey/following{/other_user}","gists_url":"https://api.github.com/users/pjenvey/gists{/gist_id}","starred_url":"https://api.github.com/users/pjenvey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjenvey/subscriptions","organizations_url":"https://api.github.com/users/pjenvey/orgs","repos_url":"https://api.github.com/users/pjenvey/repos","events_url":"https://api.github.com/users/pjenvey/events{/privacy}","received_events_url":"https://api.github.com/users/pjenvey/received_events","type":"User","site_admin":false},"labels":[{"id":1582536874,"node_id":"MDU6TGFiZWwxNTgyNTM2ODc0","url":"https://api.github.com/repos/mozilla-services/syncstorage-rs/labels/3","name":"3","color":"ef7f30","default":false,"description":"Estimate - m - This is a small change, but there's some uncertainty."},{"id":1921798738,"node_id":"MDU6TGFiZWwxOTIxNzk4NzM4","url":"https://api.github.com/repos/mozilla-services/syncstorage-rs/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"}],"state":"closed","locked":false,"assignee":{"login":"pjenvey","id":14639,"node_id":"MDQ6VXNlcjE0NjM5","avatar_url":"https://avatars2.githubusercontent.com/u/14639?v=4","gravatar_id":"","url":"https://api.github.com/users/pjenvey","html_url":"https://github.com/pjenvey","followers_url":"https://api.github.com/users/pjenvey/followers","following_url":"https://api.github.com/users/pjenvey/following{/other_user}","gists_url":"https://api.github.com/users/pjenvey/gists{/gist_id}","starred_url":"https://api.github.com/users/pjenvey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjenvey/subscriptions","organizations_url":"https://api.github.com/users/pjenvey/orgs","repos_url":"https://api.github.com/users/pjenvey/repos","events_url":"https://api.github.com/users/pjenvey/events{/privacy}","received_events_url":"https://api.github.com/users/pjenvey/received_events","type":"User","site_admin":false},"assignees":[{"login":"pjenvey","id":14639,"node_id":"MDQ6VXNlcjE0NjM5","avatar_url":"https://avatars2.githubusercontent.com/u/14639?v=4","gravatar_id":"","url":"https://api.github.com/users/pjenvey","html_url":"https://github.com/pjenvey","followers_url":"https://api.github.com/users/pjenvey/followers","following_url":"https://api.github.com/users/pjenvey/following{/other_user}","gists_url":"https://api.github.com/users/pjenvey/gists{/gist_id}","starred_url":"https://api.github.com/users/pjenvey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjenvey/subscriptions","organizations_url":"https://api.github.com/users/pjenvey/orgs","repos_url":"https://api.github.com/users/pjenvey/repos","events_url":"https://api.github.com/users/pjenvey/events{/privacy}","received_events_url":"https://api.github.com/users/pjenvey/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-09-28T18:12:18Z","updated_at":"2020-09-29T19:35:06Z","closed_at":"2020-09-29T00:10:28Z","author_association":"MEMBER","active_lock_reason":null,"body":"actix-web is now at 3.0.2 and has a couple potential improvements we'd like to have sooner rather than later:\r\n\r\n- back pressure improvements: https://github.com/actix/actix-web/issues/1117\r\n- request bodies allocate extremely large buffers: https://github.com/actix/actix-web/issues/1551 (could this be related to #821?)","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/actix/actix-web/issues/1781","repository_url":"https://api.github.com/repos/actix/actix-web","labels_url":"https://api.github.com/repos/actix/actix-web/issues/1781/labels{/name}","comments_url":"https://api.github.com/repos/actix/actix-web/issues/1781/comments","events_url":"https://api.github.com/repos/actix/actix-web/issues/1781/events","html_url":"https://github.com/actix/actix-web/issues/1781","id":738783695,"node_id":"MDU6SXNzdWU3Mzg3ODM2OTU=","number":1781,"title":"Migration to `intra-doc` links","user":{"login":"realaravinth","id":33521410,"node_id":"MDQ6VXNlcjMzNTIxNDEw","avatar_url":"https://avatars3.githubusercontent.com/u/33521410?v=4","gravatar_id":"","url":"https://api.github.com/users/realaravinth","html_url":"https://github.com/realaravinth","followers_url":"https://api.github.com/users/realaravinth/followers","following_url":"https://api.github.com/users/realaravinth/following{/other_user}","gists_url":"https://api.github.com/users/realaravinth/gists{/gist_id}","starred_url":"https://api.github.com/users/realaravinth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/realaravinth/subscriptions","organizations_url":"https://api.github.com/users/realaravinth/orgs","repos_url":"https://api.github.com/users/realaravinth/repos","events_url":"https://api.github.com/users/realaravinth/events{/privacy}","received_events_url":"https://api.github.com/users/realaravinth/received_events","type":"User","site_admin":false},"labels":[{"id":1298345548,"node_id":"MDU6TGFiZWwxMjk4MzQ1NTQ4","url":"https://api.github.com/repos/actix/actix-web/labels/C-docs","name":"C-docs","color":"b9d644","default":false,"description":"Category: docs"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-11-09T07:47:23Z","updated_at":"2020-11-09T16:33:28Z","closed_at":"2020-11-09T16:33:28Z","author_association":"MEMBER","active_lock_reason":null,"body":"When working on #1771, I was also checking feasibility for our migration to `intra-doc` links and I'd like to share my findings and ask for suggestions:\r\n### Motivation\r\nAt the time of writing this, `intra-doc` is a nightly only feature but the standard library folks are [aggressively migrating](https://github.com/rust-lang/rust/issues/43466) to it. So it might land in stable soon. \r\n### Problem\r\nRunning `cargo doc` in `nightly` breaks existing documentation at multiple places(441), at least that's what `cargo deadlinks` is reporting. I manually checked files at random but I couldn't find any breakage though. `tracing::span::Span` was correctly linked, please read next section for context.\r\n### `cargo-deadlinks` report analysis:\r\n- **Broken links:**\r\n\r\n```shell\r\n ➜  actix-web git:(master) ✗ cat broken-links | sort -u\r\n\tLinked file at path client/struct.Span.html does not exist!\r\n\tLinked file at path dev/fn.fn_service.html does not exist!\r\n\tLinked file at path dev/struct.JsonConfig.html does not exist!\r\n\tLinked file at path futures_core::stream::Stream does not exist!\r\n\tLinked file at path h1/futures_sink::Sink does not exist!\r\n\tLinked file at path /home/aravinth/code/actix-web/target/doc/std/primitive.u8.html does not exist!\r\n\tLinked file at path /home/aravinth/code/actix-web/target/doc/struct.Span.html does not exist!\r\n\tLinked file at path http/struct@GetAll does not exist!\r\n\tLinked file at path http/struct.Span.html does not exist!\r\n\tLinked file at path middleware/struct.Span.html does not exist!\r\n\tLinked file at path struct.JsonConfig.html does not exist!\r\n\tLinked file at path struct.PayloadConfig.html does not exist!\r\n\tLinked file at path struct.Span.html does not exist!\r\n\tLinked file at path ws/futures_sink::Sink does not exist!\r\n```\r\n- **Total number of broken links:**\r\n```shell\r\n➜  actix-web git:(master) ✗ cat  broken-links | wc -l\r\n441\r\n```\r\n- **Most number of duplicates:**\r\n```shell\r\n  actix-web git:(master) ✗ rg \"Span\" broken-links | wc -l\r\n426\r\n```\r\n`Span` is from `tracing::span::Span` that we are using in `impl Instrument` for logging purposes(?)\r\n\r\n### Conclusion:\r\nWe should be fine making the switch to `nightly` temporarily. There's at least one place where we can benefit from `intra-doc` links and  `tracing::span::Span` seems like something that the end user might never use(?).\r\n\r\nSo do we start migrating now or wait for it to land in stable?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/LukeMathWalker/zero-to-production/issues/8","repository_url":"https://api.github.com/repos/LukeMathWalker/zero-to-production","labels_url":"https://api.github.com/repos/LukeMathWalker/zero-to-production/issues/8/labels{/name}","comments_url":"https://api.github.com/repos/LukeMathWalker/zero-to-production/issues/8/comments","events_url":"https://api.github.com/repos/LukeMathWalker/zero-to-production/issues/8/events","html_url":"https://github.com/LukeMathWalker/zero-to-production/issues/8","id":709639280,"node_id":"MDU6SXNzdWU3MDk2MzkyODA=","number":8,"title":"RUSTSEC-2020-0048: Use-after-free in BodyStream due to lack of pinning","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars2.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-27T00:41:01Z","updated_at":"2020-10-19T09:16:25Z","closed_at":"2020-10-19T09:16:25Z","author_association":"NONE","active_lock_reason":null,"body":"\n> Use-after-free in BodyStream due to lack of pinning\n\n| Details             |                                                |\n| ------------------- | ---------------------------------------------- |\n| Package             | `actix-http`                      |\n| Version             | `1.0.1`                   |\n| URL                 | [https://github.com/actix/actix-web/issues/1321](https://github.com/actix/actix-web/issues/1321) |\n| Date                | 2020-01-24                         |\n| Patched versions    | `>= 2.0.0-alpha.1`                  |\n\nAffected versions of this crate did not require the buffer wrapped in `BodyStream` to be pinned,\nbut treated it as if it had a fixed location in memory. This may result in a use-after-free.\n \nThe flaw was corrected by making the trait `MessageBody` require `Unpin`\nand making `poll_next()` function accept `Pin&lt;&amp;mut Self&gt;` instead of `&amp;mut self`.\n\n\nSee [advisory page](https://rustsec.org/advisories/RUSTSEC-2020-0048.html) for additional details.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/wafflespeanut/paperclip/issues/255","repository_url":"https://api.github.com/repos/wafflespeanut/paperclip","labels_url":"https://api.github.com/repos/wafflespeanut/paperclip/issues/255/labels{/name}","comments_url":"https://api.github.com/repos/wafflespeanut/paperclip/issues/255/comments","events_url":"https://api.github.com/repos/wafflespeanut/paperclip/issues/255/events","html_url":"https://github.com/wafflespeanut/paperclip/issues/255","id":721370222,"node_id":"MDU6SXNzdWU3MjEzNzAyMjI=","number":255,"title":"paperclip in actix, doesn't work when we use actix macro #[post]","user":{"login":"umaYnit","id":44155578,"node_id":"MDQ6VXNlcjQ0MTU1NTc4","avatar_url":"https://avatars2.githubusercontent.com/u/44155578?v=4","gravatar_id":"","url":"https://api.github.com/users/umaYnit","html_url":"https://github.com/umaYnit","followers_url":"https://api.github.com/users/umaYnit/followers","following_url":"https://api.github.com/users/umaYnit/following{/other_user}","gists_url":"https://api.github.com/users/umaYnit/gists{/gist_id}","starred_url":"https://api.github.com/users/umaYnit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/umaYnit/subscriptions","organizations_url":"https://api.github.com/users/umaYnit/orgs","repos_url":"https://api.github.com/users/umaYnit/repos","events_url":"https://api.github.com/users/umaYnit/events{/privacy}","received_events_url":"https://api.github.com/users/umaYnit/received_events","type":"User","site_admin":false},"labels":[{"id":1365366413,"node_id":"MDU6TGFiZWwxMzY1MzY2NDEz","url":"https://api.github.com/repos/wafflespeanut/paperclip/labels/duplicate","name":"duplicate","color":"cfd3d7","default":true,"description":"This issue or pull request already exists"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-14T11:18:55Z","updated_at":"2020-10-14T13:22:43Z","closed_at":"2020-10-14T13:22:33Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,I am use actix-web just now, and I have issue to integrate the library. My code is the following:\r\nThe following code doesn't work,it has compile error: **the trait \\`Mountable\\` is not implemented for \\`echo_pet\\`**\r\n\r\n```rust\r\nuse actix_web::{App, HttpServer, post};\r\nuse paperclip::actix::{\r\n    api_v2_operation, Apiv2Schema, OpenApiExt,\r\n    web::{self, Json},\r\n};\r\nuse serde::{Deserialize, Serialize};\r\n\r\n#[derive(Serialize, Deserialize, Apiv2Schema)]\r\nstruct Pet {\r\n    name: String,\r\n    id: Option<i64>,\r\n}\r\n\r\n#[api_v2_operation]\r\n#[post(\"\")]\r\nasync fn echo_pet(body: Json<Pet>) -> Result<Json<Pet>, ()> {\r\n    Ok(body)\r\n}\r\n\r\n#[actix_web::main]\r\nasync fn main() -> std::io::Result<()> {\r\n    HttpServer::new(|| App::new()\r\n        .wrap_api()\r\n        .service(\r\n            web::scope(\"/api\").service(echo_pet)\r\n        )\r\n        .with_json_spec_at(\"/api/spec\")\r\n        .build()\r\n    ).bind(\"127.0.0.1:8080\")?\r\n        .run().await\r\n}\r\n```\r\n\r\nMy Cargo.toml is like:\r\n\r\n```toml\r\nactix-web = \"3.0\"\r\npaperclip = { git = \"https://github.com/wafflespeanut/paperclip\", features = [\"actix-nightly\"] }\r\nserde = \"1.0\"\r\n```\r\n\r\nis this not supported now?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/aheart/hearth/issues/85","repository_url":"https://api.github.com/repos/aheart/hearth","labels_url":"https://api.github.com/repos/aheart/hearth/issues/85/labels{/name}","comments_url":"https://api.github.com/repos/aheart/hearth/issues/85/comments","events_url":"https://api.github.com/repos/aheart/hearth/issues/85/events","html_url":"https://github.com/aheart/hearth/issues/85","id":700838014,"node_id":"MDU6SXNzdWU3MDA4MzgwMTQ=","number":85,"title":"Upgrade to actix-web 3.0","user":{"login":"aheart","id":9392791,"node_id":"MDQ6VXNlcjkzOTI3OTE=","avatar_url":"https://avatars1.githubusercontent.com/u/9392791?v=4","gravatar_id":"","url":"https://api.github.com/users/aheart","html_url":"https://github.com/aheart","followers_url":"https://api.github.com/users/aheart/followers","following_url":"https://api.github.com/users/aheart/following{/other_user}","gists_url":"https://api.github.com/users/aheart/gists{/gist_id}","starred_url":"https://api.github.com/users/aheart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aheart/subscriptions","organizations_url":"https://api.github.com/users/aheart/orgs","repos_url":"https://api.github.com/users/aheart/repos","events_url":"https://api.github.com/users/aheart/events{/privacy}","received_events_url":"https://api.github.com/users/aheart/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-14T07:11:53Z","updated_at":"2020-09-29T09:49:31Z","closed_at":"2020-09-29T09:49:26Z","author_association":"OWNER","active_lock_reason":null,"body":"https://github.com/actix/actix-web/blob/master/CHANGES.md","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/actix/actix-web/issues/1731","repository_url":"https://api.github.com/repos/actix/actix-web","labels_url":"https://api.github.com/repos/actix/actix-web/issues/1731/labels{/name}","comments_url":"https://api.github.com/repos/actix/actix-web/issues/1731/comments","events_url":"https://api.github.com/repos/actix/actix-web/issues/1731/events","html_url":"https://github.com/actix/actix-web/issues/1731","id":718882568,"node_id":"MDU6SXNzdWU3MTg4ODI1Njg=","number":1731,"title":"Disable compression headers when disabling compression feature","user":{"login":"Gelbpunkt","id":38864617,"node_id":"MDQ6VXNlcjM4ODY0NjE3","avatar_url":"https://avatars2.githubusercontent.com/u/38864617?v=4","gravatar_id":"","url":"https://api.github.com/users/Gelbpunkt","html_url":"https://github.com/Gelbpunkt","followers_url":"https://api.github.com/users/Gelbpunkt/followers","following_url":"https://api.github.com/users/Gelbpunkt/following{/other_user}","gists_url":"https://api.github.com/users/Gelbpunkt/gists{/gist_id}","starred_url":"https://api.github.com/users/Gelbpunkt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Gelbpunkt/subscriptions","organizations_url":"https://api.github.com/users/Gelbpunkt/orgs","repos_url":"https://api.github.com/users/Gelbpunkt/repos","events_url":"https://api.github.com/users/Gelbpunkt/events{/privacy}","received_events_url":"https://api.github.com/users/Gelbpunkt/received_events","type":"User","site_admin":false},"labels":[{"id":707286502,"node_id":"MDU6TGFiZWw3MDcyODY1MDI=","url":"https://api.github.com/repos/actix/actix-web/labels/C-bug","name":"C-bug","color":"ee0701","default":false,"description":"Category: bug"},{"id":1296793625,"node_id":"MDU6TGFiZWwxMjk2NzkzNjI1","url":"https://api.github.com/repos/actix/actix-web/labels/P-awc","name":"P-awc","color":"fff4af","default":false,"description":"project: awc"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-10-11T17:15:13Z","updated_at":"2020-10-24T20:15:02Z","closed_at":"2020-10-24T20:15:02Z","author_association":"NONE","active_lock_reason":null,"body":"## Expected Behavior\r\nI expect awc to set the Accept-Encoding header to `identity` when the compression feature in actix-web is disabled.\r\n\r\n## Current Behavior\r\nThe Accept-Encoding header is set to `br`. Any HTTP response from a webserver that makes use of the header will send brotli-encoded bodies, which awc can not decode because the feature is disabled, resulting in a \"useless\" body for the user.\r\n\r\n## Possible Solution\r\nSee expected behavior. I am unfamiliar with the source, but https://github.com/actix/actix-web/blob/master/awc/src/request.rs#L24 and below seems like the culprit.\r\n\r\n## Steps to Reproduce (for bugs)\r\nThis code snippet does it just fine. The web server that caused me to run into the issue requires authentication, so I cannot post that here.\r\n```rust\r\n#[actix_web::main]\r\nasync fn main() {\r\n    let client = actix_web::client::Client::new();\r\n    let response = client\r\n        .get(\"https://httpbin.org/anything\")\r\n        .send()\r\n        .await\r\n        .unwrap()\r\n        .body()\r\n        .await\r\n        .unwrap();\r\n    // {\r\n    //  \"args\": {},\r\n    //  \"data\": \"\",\r\n    //  \"files\": {},\r\n    //  \"form\": {},\r\n    //  \"headers\": {\r\n    //    \"Accept-Encoding\": \"br\",\r\n    //    \"Content-Length\": \"0\",\r\n    //    \"Host\": \"httpbin.org\",\r\n    //    \"X-Amzn-Trace-Id\": \"Root=1-5f833c44-343c4ab909998d701ad5df2d\"\r\n    //  },\r\n    //  \"json\": null,\r\n    //  \"method\": \"GET\",\r\n    //  \"origin\": \"not-gonna-leak-my-ip\",\r\n    //   \"url\": \"https://httpbin.org/anything\"\r\n    // }\r\n    println!(\"{}\", String::from_utf8(response.to_vec()).unwrap());\r\n}\r\n```\r\n\r\nI was able to fix it manually with \r\n```rust\r\n                    .header(\r\n                        header::ACCEPT_ENCODING,\r\n                        HeaderValue::from_static(\"identity\"),\r\n                    )\r\n```\r\nbut this should not be the default with these feature flags.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n\r\n* Rust Version (I.e, output of `rustc -V`): rustc 1.48.0-nightly (7402a3944 2020-09-13)\r\n* Actix Web Version: 3.1.0, `default-features = false` to disable compression","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/kellpossible/cargo-i18n/issues/40","repository_url":"https://api.github.com/repos/kellpossible/cargo-i18n","labels_url":"https://api.github.com/repos/kellpossible/cargo-i18n/issues/40/labels{/name}","comments_url":"https://api.github.com/repos/kellpossible/cargo-i18n/issues/40/comments","events_url":"https://api.github.com/repos/kellpossible/cargo-i18n/issues/40/events","html_url":"https://github.com/kellpossible/cargo-i18n/issues/40","id":708091979,"node_id":"MDU6SXNzdWU3MDgwOTE5Nzk=","number":40,"title":"Integration with web frameworks","user":{"login":"xliiv","id":298994,"node_id":"MDQ6VXNlcjI5ODk5NA==","avatar_url":"https://avatars3.githubusercontent.com/u/298994?v=4","gravatar_id":"","url":"https://api.github.com/users/xliiv","html_url":"https://github.com/xliiv","followers_url":"https://api.github.com/users/xliiv/followers","following_url":"https://api.github.com/users/xliiv/following{/other_user}","gists_url":"https://api.github.com/users/xliiv/gists{/gist_id}","starred_url":"https://api.github.com/users/xliiv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xliiv/subscriptions","organizations_url":"https://api.github.com/users/xliiv/orgs","repos_url":"https://api.github.com/users/xliiv/repos","events_url":"https://api.github.com/users/xliiv/events{/privacy}","received_events_url":"https://api.github.com/users/xliiv/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-24T11:31:44Z","updated_at":"2020-09-27T09:49:34Z","closed_at":"2020-09-27T09:49:34Z","author_association":"NONE","active_lock_reason":null,"body":"Just finished testing this crate for a CLI use case and works as expected (`gettext` variant), so great work and thanks for it :)\r\n\r\nNow, I'm wondering how could this be integrated with popular frameworks, like\r\n1. https://github.com/SergioBenitez/Rocket/\r\n2. https://github.com/actix/actix-web\r\n\r\nAll hints are welcome","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/eHealthExperts/k2-basecamp/issues/46","repository_url":"https://api.github.com/repos/eHealthExperts/k2-basecamp","labels_url":"https://api.github.com/repos/eHealthExperts/k2-basecamp/issues/46/labels{/name}","comments_url":"https://api.github.com/repos/eHealthExperts/k2-basecamp/issues/46/comments","events_url":"https://api.github.com/repos/eHealthExperts/k2-basecamp/issues/46/events","html_url":"https://github.com/eHealthExperts/k2-basecamp/issues/46","id":709639435,"node_id":"MDU6SXNzdWU3MDk2Mzk0MzU=","number":46,"title":"RUSTSEC-2020-0048: Use-after-free in BodyStream due to lack of pinning","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars2.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-27T00:42:32Z","updated_at":"2020-09-27T10:04:58Z","closed_at":"2020-09-27T10:04:58Z","author_association":"NONE","active_lock_reason":null,"body":"\n> Use-after-free in BodyStream due to lack of pinning\n\n| Details             |                                                |\n| ------------------- | ---------------------------------------------- |\n| Package             | `actix-http`                      |\n| Version             | `1.0.1`                   |\n| URL                 | [https://github.com/actix/actix-web/issues/1321](https://github.com/actix/actix-web/issues/1321) |\n| Date                | 2020-01-24                         |\n| Patched versions    | `>= 2.0.0-alpha.1`                  |\n\nAffected versions of this crate did not require the buffer wrapped in `BodyStream` to be pinned,\nbut treated it as if it had a fixed location in memory. This may result in a use-after-free.\n \nThe flaw was corrected by making the trait `MessageBody` require `Unpin`\nand making `poll_next()` function accept `Pin&lt;&amp;mut Self&gt;` instead of `&amp;mut self`.\n\n\nSee [advisory page](https://rustsec.org/advisories/RUSTSEC-2020-0048.html) for additional details.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/nlopes/actix-web-prom/issues/35","repository_url":"https://api.github.com/repos/nlopes/actix-web-prom","labels_url":"https://api.github.com/repos/nlopes/actix-web-prom/issues/35/labels{/name}","comments_url":"https://api.github.com/repos/nlopes/actix-web-prom/issues/35/comments","events_url":"https://api.github.com/repos/nlopes/actix-web-prom/issues/35/events","html_url":"https://github.com/nlopes/actix-web-prom/issues/35","id":709070792,"node_id":"MDU6SXNzdWU3MDkwNzA3OTI=","number":35,"title":"no default features for actix-web","user":{"login":"robjtede","id":3316789,"node_id":"MDQ6VXNlcjMzMTY3ODk=","avatar_url":"https://avatars3.githubusercontent.com/u/3316789?v=4","gravatar_id":"","url":"https://api.github.com/users/robjtede","html_url":"https://github.com/robjtede","followers_url":"https://api.github.com/users/robjtede/followers","following_url":"https://api.github.com/users/robjtede/following{/other_user}","gists_url":"https://api.github.com/users/robjtede/gists{/gist_id}","starred_url":"https://api.github.com/users/robjtede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robjtede/subscriptions","organizations_url":"https://api.github.com/users/robjtede/orgs","repos_url":"https://api.github.com/users/robjtede/repos","events_url":"https://api.github.com/users/robjtede/events{/privacy}","received_events_url":"https://api.github.com/users/robjtede/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-25T16:18:03Z","updated_at":"2020-11-12T11:12:44Z","closed_at":"2020-11-12T11:12:44Z","author_association":"NONE","active_lock_reason":null,"body":"The dependency in Cargo.toml should ideally be:\r\n\r\n```diff\r\n- actix-web = \"3.0.2\"\r\n+ actix-web = { version = \"3.0.2\", default-features = false }\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/witnet/witnet-rust/issues/1597","repository_url":"https://api.github.com/repos/witnet/witnet-rust","labels_url":"https://api.github.com/repos/witnet/witnet-rust/issues/1597/labels{/name}","comments_url":"https://api.github.com/repos/witnet/witnet-rust/issues/1597/comments","events_url":"https://api.github.com/repos/witnet/witnet-rust/issues/1597/events","html_url":"https://github.com/witnet/witnet-rust/issues/1597","id":709636236,"node_id":"MDU6SXNzdWU3MDk2MzYyMzY=","number":1597,"title":"RUSTSEC-2020-0048: Use-after-free in BodyStream due to lack of pinning","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars2.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"tmpolaczyk","id":44604217,"node_id":"MDQ6VXNlcjQ0NjA0MjE3","avatar_url":"https://avatars0.githubusercontent.com/u/44604217?v=4","gravatar_id":"","url":"https://api.github.com/users/tmpolaczyk","html_url":"https://github.com/tmpolaczyk","followers_url":"https://api.github.com/users/tmpolaczyk/followers","following_url":"https://api.github.com/users/tmpolaczyk/following{/other_user}","gists_url":"https://api.github.com/users/tmpolaczyk/gists{/gist_id}","starred_url":"https://api.github.com/users/tmpolaczyk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmpolaczyk/subscriptions","organizations_url":"https://api.github.com/users/tmpolaczyk/orgs","repos_url":"https://api.github.com/users/tmpolaczyk/repos","events_url":"https://api.github.com/users/tmpolaczyk/events{/privacy}","received_events_url":"https://api.github.com/users/tmpolaczyk/received_events","type":"User","site_admin":false},"assignees":[{"login":"tmpolaczyk","id":44604217,"node_id":"MDQ6VXNlcjQ0NjA0MjE3","avatar_url":"https://avatars0.githubusercontent.com/u/44604217?v=4","gravatar_id":"","url":"https://api.github.com/users/tmpolaczyk","html_url":"https://github.com/tmpolaczyk","followers_url":"https://api.github.com/users/tmpolaczyk/followers","following_url":"https://api.github.com/users/tmpolaczyk/following{/other_user}","gists_url":"https://api.github.com/users/tmpolaczyk/gists{/gist_id}","starred_url":"https://api.github.com/users/tmpolaczyk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmpolaczyk/subscriptions","organizations_url":"https://api.github.com/users/tmpolaczyk/orgs","repos_url":"https://api.github.com/users/tmpolaczyk/repos","events_url":"https://api.github.com/users/tmpolaczyk/events{/privacy}","received_events_url":"https://api.github.com/users/tmpolaczyk/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-09-27T00:15:11Z","updated_at":"2020-09-30T09:16:06Z","closed_at":"2020-09-30T09:16:06Z","author_association":"NONE","active_lock_reason":null,"body":"\n> Use-after-free in BodyStream due to lack of pinning\n\n| Details             |                                                |\n| ------------------- | ---------------------------------------------- |\n| Package             | `actix-http`                      |\n| Version             | `0.2.11`                   |\n| URL                 | [https://github.com/actix/actix-web/issues/1321](https://github.com/actix/actix-web/issues/1321) |\n| Date                | 2020-01-24                         |\n| Patched versions    | `>= 2.0.0-alpha.1`                  |\n\nAffected versions of this crate did not require the buffer wrapped in `BodyStream` to be pinned,\nbut treated it as if it had a fixed location in memory. This may result in a use-after-free.\n \nThe flaw was corrected by making the trait `MessageBody` require `Unpin`\nand making `poll_next()` function accept `Pin&lt;&amp;mut Self&gt;` instead of `&amp;mut self`.\n\n\nSee [advisory page](https://rustsec.org/advisories/RUSTSEC-2020-0048.html) for additional details.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/actix/actix-web/issues/1732","repository_url":"https://api.github.com/repos/actix/actix-web","labels_url":"https://api.github.com/repos/actix/actix-web/issues/1732/labels{/name}","comments_url":"https://api.github.com/repos/actix/actix-web/issues/1732/comments","events_url":"https://api.github.com/repos/actix/actix-web/issues/1732/events","html_url":"https://github.com/actix/actix-web/issues/1732","id":719296484,"node_id":"MDU6SXNzdWU3MTkyOTY0ODQ=","number":1732,"title":"Err:404 When running in new thread","user":{"login":"OliverBrotchie","id":10332337,"node_id":"MDQ6VXNlcjEwMzMyMzM3","avatar_url":"https://avatars3.githubusercontent.com/u/10332337?v=4","gravatar_id":"","url":"https://api.github.com/users/OliverBrotchie","html_url":"https://github.com/OliverBrotchie","followers_url":"https://api.github.com/users/OliverBrotchie/followers","following_url":"https://api.github.com/users/OliverBrotchie/following{/other_user}","gists_url":"https://api.github.com/users/OliverBrotchie/gists{/gist_id}","starred_url":"https://api.github.com/users/OliverBrotchie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OliverBrotchie/subscriptions","organizations_url":"https://api.github.com/users/OliverBrotchie/orgs","repos_url":"https://api.github.com/users/OliverBrotchie/repos","events_url":"https://api.github.com/users/OliverBrotchie/events{/privacy}","received_events_url":"https://api.github.com/users/OliverBrotchie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-12T11:17:08Z","updated_at":"2020-10-12T11:30:24Z","closed_at":"2020-10-12T11:30:24Z","author_association":"NONE","active_lock_reason":null,"body":"added example https://github.com/actix/examples/tree/master/run-in-thread\r\n\r\n_Originally posted by @fafhrd91 in https://github.com/actix/actix-web/issues/639#issuecomment-568831948_\r\n\r\nI am trying to run the example of running a server in a new thread at the same time as running a simple C# web browser GUI that points towards 'localhost:8080' and I am getting a 404. When accessing the address in a normal browser, the same response is returned.\r\n\r\nHere is my implemenation:\r\n```rust\r\nuse actix_web::{dev::Server, middleware, rt, web, App, HttpRequest, HttpServer};\r\nuse std::process::Command;\r\nuse std::sync::mpsc;\r\nuse std::thread;\r\n\r\nasync fn index(req: HttpRequest) -> &'static str {\r\n    println!(\"REQ: {:?}\", req);\r\n    \"Hello world!\"\r\n}\r\n\r\nfn run_app(tx: mpsc::Sender<Server>) -> std::io::Result<()> {\r\n    let mut sys = rt::System::new(\"test\");\r\n    let port = \"8080\";\r\n  \r\n    let srv = HttpServer::new(|| {\r\n        App::new()\r\n            // enable logger\r\n            .wrap(middleware::Logger::default())\r\n            .service(web::resource(\"/index.html\").to(|| async { \"Hello world!\" }))\r\n            .service(web::resource(\"/\").to(index))\r\n    })\r\n    .bind(\"127.0.0.1:8080\")?\r\n    .run();\r\n\r\n    // send server controller to main thread\r\n    let _ = tx.send(srv.clone());\r\n\r\n    println!(\"Running at: http://localhost:{}\", port);\r\n    // run future\r\n    sys.block_on(srv)\r\n}\r\n\r\nfn main() {\r\n    std::env::set_var(\"RUST_LOG\", \"actix_web=info,actix_server=trace\");\r\n    env_logger::init();\r\n\r\n    let (tx, rx) = mpsc::channel();\r\n\r\n    thread::spawn(move || {\r\n        let _ = run_app(tx);\r\n    });\r\n\r\n    let srv = rx.recv().unwrap();\r\n\r\n    let mut command = Command::new(\"path/to/exe\");\r\n    if let Ok(mut child) = command.spawn() {\r\n        child\r\n            .wait()\r\n            .expect(\"GUI was not running.\");\r\n        println!(\"GUI has finished its execution!\");\r\n        rt::System::new(\"\").block_on(srv.stop(true));\r\n    } else {\r\n        println!(\"GUI failed to start.\");\r\n    }\r\n}\r\n\r\n```\r\n\r\nIf anyone could let me know why this is happening, I would greatly appreciate it!\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/actix/actix-net/issues/193","repository_url":"https://api.github.com/repos/actix/actix-net","labels_url":"https://api.github.com/repos/actix/actix-net/issues/193/labels{/name}","comments_url":"https://api.github.com/repos/actix/actix-net/issues/193/comments","events_url":"https://api.github.com/repos/actix/actix-net/issues/193/events","html_url":"https://github.com/actix/actix-net/issues/193","id":702217872,"node_id":"MDU6SXNzdWU3MDIyMTc4NzI=","number":193,"title":"error[E0658]: use of unstable library feature 'matches_macro'","user":{"login":"jaredforth","id":33227005,"node_id":"MDQ6VXNlcjMzMjI3MDA1","avatar_url":"https://avatars3.githubusercontent.com/u/33227005?v=4","gravatar_id":"","url":"https://api.github.com/users/jaredforth","html_url":"https://github.com/jaredforth","followers_url":"https://api.github.com/users/jaredforth/followers","following_url":"https://api.github.com/users/jaredforth/following{/other_user}","gists_url":"https://api.github.com/users/jaredforth/gists{/gist_id}","starred_url":"https://api.github.com/users/jaredforth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaredforth/subscriptions","organizations_url":"https://api.github.com/users/jaredforth/orgs","repos_url":"https://api.github.com/users/jaredforth/repos","events_url":"https://api.github.com/users/jaredforth/events{/privacy}","received_events_url":"https://api.github.com/users/jaredforth/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-15T19:59:35Z","updated_at":"2020-09-15T20:10:16Z","closed_at":"2020-09-15T20:09:01Z","author_association":"NONE","active_lock_reason":null,"body":"I am getting the following error when trying to compile a crate that depends on actix-utils: \r\n\r\n```rust\r\nerror[E0658]: use of unstable library feature 'matches_macro'\r\n  --> /home/jared/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-utils-2.0.0/src/timeout.rs:61:38\r\n   |\r\n61 |             TimeoutError::Timeout => matches!(other, TimeoutError::Timeout),\r\n   |                                      ^^^^^^^\r\n   |\r\n   = note: for more information, see https://github.com/rust-lang/rust/issues/65721\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nThe [error in question](https://github.com/rust-lang/rust/issues/65721) was closed in October of 2019, but the compiler is complaining about line 61 in [timeout.rs](https://github.com/actix/actix-net/blob/master/actix-utils/src/timeout.rs). \r\n\r\nI am on Ubuntu on WSL(Windows Subsystem for Linux), and have the following versions of Rust tooling: \r\n\r\n- rustup 1.21.1\r\n- rustc 1.41.1\r\n- cargo 1.41.0\r\n\r\nMy rustup toolchain is: `stable-x86_64-unknown-linux-gnu (default)`. \r\n\r\nI have the following Actix related dependencies in the project: \r\n\r\n```rust\r\nactix = { version=\"0.9.0\", features=[\"http\"] }\r\nactix-multipart = \"0.2.0\"\r\nactix-web = \"2.0.0\"\r\nactix-rt = \"1.0.0\"\r\nasync-std = \"1.4.0\"\r\nactix-cors = \"0.2.0\"\r\nactix-web-httpauth = \"0.4.1\"\r\n```\r\n\r\nWhat could be causing this issue? I have successfully compiled this project within the last month and have never seen this problem before.  \r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/eHealthExperts/k2-creek/issues/39","repository_url":"https://api.github.com/repos/eHealthExperts/k2-creek","labels_url":"https://api.github.com/repos/eHealthExperts/k2-creek/issues/39/labels{/name}","comments_url":"https://api.github.com/repos/eHealthExperts/k2-creek/issues/39/comments","events_url":"https://api.github.com/repos/eHealthExperts/k2-creek/issues/39/events","html_url":"https://github.com/eHealthExperts/k2-creek/issues/39","id":709637090,"node_id":"MDU6SXNzdWU3MDk2MzcwOTA=","number":39,"title":"RUSTSEC-2020-0048: Use-after-free in BodyStream due to lack of pinning","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars2.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-27T00:22:28Z","updated_at":"2020-09-27T10:02:30Z","closed_at":"2020-09-27T10:02:30Z","author_association":"NONE","active_lock_reason":null,"body":"\n> Use-after-free in BodyStream due to lack of pinning\n\n| Details             |                                                |\n| ------------------- | ---------------------------------------------- |\n| Package             | `actix-http`                      |\n| Version             | `1.0.1`                   |\n| URL                 | [https://github.com/actix/actix-web/issues/1321](https://github.com/actix/actix-web/issues/1321) |\n| Date                | 2020-01-24                         |\n| Patched versions    | `>= 2.0.0-alpha.1`                  |\n\nAffected versions of this crate did not require the buffer wrapped in `BodyStream` to be pinned,\nbut treated it as if it had a fixed location in memory. This may result in a use-after-free.\n \nThe flaw was corrected by making the trait `MessageBody` require `Unpin`\nand making `poll_next()` function accept `Pin&lt;&amp;mut Self&gt;` instead of `&amp;mut self`.\n\n\nSee [advisory page](https://rustsec.org/advisories/RUSTSEC-2020-0048.html) for additional details.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/actix/actix-web/issues/1672","repository_url":"https://api.github.com/repos/actix/actix-web","labels_url":"https://api.github.com/repos/actix/actix-web/issues/1672/labels{/name}","comments_url":"https://api.github.com/repos/actix/actix-web/issues/1672/comments","events_url":"https://api.github.com/repos/actix/actix-web/issues/1672/events","html_url":"https://github.com/actix/actix-web/issues/1672","id":699768031,"node_id":"MDU6SXNzdWU2OTk3NjgwMzE=","number":1672,"title":"ShortSlice is sometimes constructed bypassing checks","user":{"login":"Shnatsel","id":291257,"node_id":"MDQ6VXNlcjI5MTI1Nw==","avatar_url":"https://avatars1.githubusercontent.com/u/291257?v=4","gravatar_id":"","url":"https://api.github.com/users/Shnatsel","html_url":"https://github.com/Shnatsel","followers_url":"https://api.github.com/users/Shnatsel/followers","following_url":"https://api.github.com/users/Shnatsel/following{/other_user}","gists_url":"https://api.github.com/users/Shnatsel/gists{/gist_id}","starred_url":"https://api.github.com/users/Shnatsel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shnatsel/subscriptions","organizations_url":"https://api.github.com/users/Shnatsel/orgs","repos_url":"https://api.github.com/users/Shnatsel/repos","events_url":"https://api.github.com/users/Shnatsel/events{/privacy}","received_events_url":"https://api.github.com/users/Shnatsel/received_events","type":"User","site_admin":false},"labels":[{"id":1426756839,"node_id":"MDU6TGFiZWwxNDI2NzU2ODM5","url":"https://api.github.com/repos/actix/actix-web/labels/P-http","name":"P-http","color":"fff4af","default":false,"description":"project: actix-http"},{"id":969863010,"node_id":"MDU6TGFiZWw5Njk4NjMwMTA=","url":"https://api.github.com/repos/actix/actix-web/labels/unsafe","name":"unsafe","color":"b60205","default":false,"description":"related to unsafe code"}],"state":"closed","locked":false,"assignee":{"login":"robjtede","id":3316789,"node_id":"MDQ6VXNlcjMzMTY3ODk=","avatar_url":"https://avatars3.githubusercontent.com/u/3316789?v=4","gravatar_id":"","url":"https://api.github.com/users/robjtede","html_url":"https://github.com/robjtede","followers_url":"https://api.github.com/users/robjtede/followers","following_url":"https://api.github.com/users/robjtede/following{/other_user}","gists_url":"https://api.github.com/users/robjtede/gists{/gist_id}","starred_url":"https://api.github.com/users/robjtede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robjtede/subscriptions","organizations_url":"https://api.github.com/users/robjtede/orgs","repos_url":"https://api.github.com/users/robjtede/repos","events_url":"https://api.github.com/users/robjtede/events{/privacy}","received_events_url":"https://api.github.com/users/robjtede/received_events","type":"User","site_admin":false},"assignees":[{"login":"robjtede","id":3316789,"node_id":"MDQ6VXNlcjMzMTY3ODk=","avatar_url":"https://avatars3.githubusercontent.com/u/3316789?v=4","gravatar_id":"","url":"https://api.github.com/users/robjtede","html_url":"https://github.com/robjtede","followers_url":"https://api.github.com/users/robjtede/followers","following_url":"https://api.github.com/users/robjtede/following{/other_user}","gists_url":"https://api.github.com/users/robjtede/gists{/gist_id}","starred_url":"https://api.github.com/users/robjtede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robjtede/subscriptions","organizations_url":"https://api.github.com/users/robjtede/orgs","repos_url":"https://api.github.com/users/robjtede/repos","events_url":"https://api.github.com/users/robjtede/events{/privacy}","received_events_url":"https://api.github.com/users/robjtede/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-09-11T21:30:09Z","updated_at":"2020-10-19T11:51:31Z","closed_at":"2020-10-19T11:51:31Z","author_association":"NONE","active_lock_reason":null,"body":"## Expected Behavior\r\nThe `ShortSlice` type is designed to contain a slice of 8 bytes or less, and guarantee that invariant so that unsafe code can rely on it. The constructor is unsafe to ensure that the invariant is upheld:\r\n\r\nhttps://github.com/actix/actix-web/blob/64a2c13cdfed3616bf6f3ac2c39a5e1b40bfada4/actix-http/src/ws/mask.rs#L6-L20\r\n\r\n## Current Behavior\r\nIt is currently possible to create a ShortSlice without any `unsafe` and bypassing the debug assertion.\r\nIn fact, this line does exactly that:\r\nhttps://github.com/actix/actix-web/blob/64a2c13cdfed3616bf6f3ac2c39a5e1b40bfada4/actix-http/src/ws/mask.rs#L99\r\n\r\nNotice the `ShortSlice(tail)` that doesn't go through `::new()`\r\n\r\n## Possible Solution\r\nThe `ShortSlice` struct shoud not be directly constructable, e.g. by having a private zero-sized field and coercing into the underlying slice via Deref trait.\r\n\r\nDespite allowing violation of an unsafe invariant, this does not have security implications in practice given the current surrounding code.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/sagebind/isahc/issues/242","repository_url":"https://api.github.com/repos/sagebind/isahc","labels_url":"https://api.github.com/repos/sagebind/isahc/issues/242/labels{/name}","comments_url":"https://api.github.com/repos/sagebind/isahc/issues/242/comments","events_url":"https://api.github.com/repos/sagebind/isahc/issues/242/events","html_url":"https://github.com/sagebind/isahc/issues/242","id":728183447,"node_id":"MDU6SXNzdWU3MjgxODM0NDc=","number":242,"title":"How to optimize isahc performance?","user":{"login":"flyinmind","id":6022978,"node_id":"MDQ6VXNlcjYwMjI5Nzg=","avatar_url":"https://avatars1.githubusercontent.com/u/6022978?v=4","gravatar_id":"","url":"https://api.github.com/users/flyinmind","html_url":"https://github.com/flyinmind","followers_url":"https://api.github.com/users/flyinmind/followers","following_url":"https://api.github.com/users/flyinmind/following{/other_user}","gists_url":"https://api.github.com/users/flyinmind/gists{/gist_id}","starred_url":"https://api.github.com/users/flyinmind/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/flyinmind/subscriptions","organizations_url":"https://api.github.com/users/flyinmind/orgs","repos_url":"https://api.github.com/users/flyinmind/repos","events_url":"https://api.github.com/users/flyinmind/events{/privacy}","received_events_url":"https://api.github.com/users/flyinmind/received_events","type":"User","site_admin":false},"labels":[{"id":1197988659,"node_id":"MDU6TGFiZWwxMTk3OTg4NjU5","url":"https://api.github.com/repos/sagebind/isahc/labels/performance","name":"performance","color":"64b5f6","default":false,"description":"An enhancement or problem with performance"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2020-10-23T12:36:27Z","updated_at":"2020-10-30T13:35:39Z","closed_at":"2020-10-30T13:35:39Z","author_association":"NONE","active_lock_reason":null,"body":"I use isahc to realize a simple http bench mark tool.\r\nThe http server runs on actix-web v3.1.0. Rust version is 1.47.\r\nClient and server are all in the same machine.\r\nWindows 10 system, intel 8 cores 1.6Ghz, and 8G mem.\r\n\r\nUse isahc,thread-num:8,use-time:12388 ms,speed:12915, **About 13000/s** , the tool occupies **30%+** CPU , server about **12%CPU.**\r\nOn the same server, use **baton** (a tool by go), **about 40000/s**, it occupies **15% CPU** , server 15% CPU.\r\n\r\nIt is a very simple condition. Isahc performances not well.\r\n**Anybody knows Why? And how to optimize it?** Thanks!\r\nI tried sync/async get, both are bad :(\r\n\r\nThanks!\r\n\r\nComile  command: **cargo run --release**, and profile is:\r\ncodegen-units = 8\r\ncodegen-threads=8\r\n#debug = true\r\nlto = true\r\noverflow-checks = true\r\nopt-level = 3\r\n\r\n**### Code:**\r\n```\r\n//--------------------------------------------------------------------------------------------------\r\nuse isahc::prelude::*;\r\nuse isahc::HttpClient;\r\nuse isahc::config::{ResolveMap, DnsCache};\r\nuse async_std::*;\r\nuse std::time::{SystemTime, Duration};\r\n\r\nconst threadNum : usize = 8;\r\nconst runTimes : u64 = 20000;\r\n\r\n#[async_std::main]\r\nasync fn main() -> Result<(), isahc::Error> {\r\n    // Send a GET request and wait for the response headers.\r\n    // Must be `mut` so we can read the response body.\r\n    let start = SystemTime::now();\r\n    let mut i : usize = 0;\r\n    //let sys = actix::System::new(\"test\");\r\n    let mut handlers = vec![];\r\n\r\n    while i < threadNum {\r\n        i += 1;\r\n        let no = i;\r\n        let h = task::spawn(async move {\r\n            let client = HttpClient::builder()\r\n                .max_connections(10)\r\n                .max_connections_per_host(10)\r\n                .connection_cache_size(10)\r\n                .tcp_keepalive(Duration::from_secs(10))\r\n                .dns_cache(DnsCache::Forever)\r\n                //.dns_resolve(ResolveMap::new()\r\n                // Send requests for example.org on port 80 to 127.0.0.1.\r\n                //.add(\"www.example.org\", 8080, [127, 0, 0, 1]))\r\n                .build().unwrap();\r\n\r\n            let mut i : u64 = 0;\r\n            while i < runTimes {\r\n                i += 1;\r\n                let mut response = client.get_async(\"http://127.0.0.1:8080/\").await.unwrap();\r\n                // Print some basic info about the response to standard output.\r\n                // println!(\"Status: {}\", response.status());\r\n                // println!(\"Headers: {:#?}\", response.headers());\r\n                response.text_async().await.unwrap();\r\n                // // Read the response body as text into a string and print it.\r\n                // print!(\"{}-{},{}\",no, i, response.text().unwrap());\r\n            }\r\n        });\r\n        handlers.push(h);\r\n    }\r\n    for h in handlers {\r\n        h.await;\r\n    }\r\n\r\n    let interval = start.elapsed().unwrap().as_millis() as u64;\r\n\r\n    println!(\"thread-num:{},use-time:{} ms,speed:{}\", \r\n        threadNum, interval, runTimes * 1000 * (threadNum as u64) / interval);\r\n\r\n    Ok(())\r\n}\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/DevinR528/cargo-sort-ck/issues/8","repository_url":"https://api.github.com/repos/DevinR528/cargo-sort-ck","labels_url":"https://api.github.com/repos/DevinR528/cargo-sort-ck/issues/8/labels{/name}","comments_url":"https://api.github.com/repos/DevinR528/cargo-sort-ck/issues/8/comments","events_url":"https://api.github.com/repos/DevinR528/cargo-sort-ck/issues/8/events","html_url":"https://github.com/DevinR528/cargo-sort-ck/issues/8","id":693398520,"node_id":"MDU6SXNzdWU2OTMzOTg1MjA=","number":8,"title":"Reorder corrupted with comments","user":{"login":"darwin67","id":5746693,"node_id":"MDQ6VXNlcjU3NDY2OTM=","avatar_url":"https://avatars1.githubusercontent.com/u/5746693?v=4","gravatar_id":"","url":"https://api.github.com/users/darwin67","html_url":"https://github.com/darwin67","followers_url":"https://api.github.com/users/darwin67/followers","following_url":"https://api.github.com/users/darwin67/following{/other_user}","gists_url":"https://api.github.com/users/darwin67/gists{/gist_id}","starred_url":"https://api.github.com/users/darwin67/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/darwin67/subscriptions","organizations_url":"https://api.github.com/users/darwin67/orgs","repos_url":"https://api.github.com/users/darwin67/repos","events_url":"https://api.github.com/users/darwin67/events{/privacy}","received_events_url":"https://api.github.com/users/darwin67/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-04T17:06:59Z","updated_at":"2020-11-03T19:10:11Z","closed_at":"2020-11-03T19:10:11Z","author_association":"NONE","active_lock_reason":null,"body":"Looks like if there are comments in Cargo.toml, sorting doesn't work as expected.\r\n\r\nOriginal\r\n```\r\n[dependencies]\r\nactix-web = \"2.0\"               # Actix web\r\nactix-rt = \"1.1\"                # Actix runtime\r\nactix-identity = \"0.2\"          # Identity\r\nserde = \"1.0\"                   # serialization\r\nserde_json = \"1.0\"              # serialization for JSON\r\nlog = \"0.4\"                     # logging\r\nenv_logger = \"0.7\"              # logging\r\nderive_more = \"0.99\"\r\nfutures = \"0.3\"                 # async\r\nlazy_static = \"1.4\"             # runtime const evaluation\r\njsonschema = \"0.3\"              # JSON schema\r\nrand = \"0.7.3\"                  # random value generator\r\nuuid = { version = \"0.8\", features = [\"v4\"] } # UUID\r\n\r\nargonautica = \"0.2\"  # argon2 password hashing\r\nhmac = \"0.9.0\"       # for api token hashing\r\nsha2 = \"0.9.1\"       # for api token hashing\r\nhex = \"0.4.2\"        # for encoding the bytes from hmac to a postgres TEXT field\r\n\r\ndiesel = { version = \"1.4.4\", features = [\"postgres\", \"chrono\", \"r2d2\", \"serde_json\"] } # Database\r\nchrono = { version = \"0.4.11\", features = [\"serde\"] } # time\r\ndotenv = \"0.15.0\"                                     # environment variables\r\nr2d2 = \"0.8\"                                          # Database pooling\r\ndiesel_migrations = \"1.4\"       # Embedding database migration\r\n```\r\n\r\nPrint sort attempt\r\n```\r\n❯ cargo sort-ck -p\r\n[dependencies]\r\n# Actix runtime\r\nactix-identity = \"0.2\"          # Actix web\r\nactix-rt = \"1.1\"                actix-web = \"2.0\"               # UUID\r\n\r\nargonautica = \"0.2\"  # Database\r\nchrono = { version = \"0.4.11\", features = [ \"serde\" ] } # logging\r\nderive_more = \"0.99\"\r\n# for encoding the bytes from hmac to a postgres TEXT field\r\n\r\ndiesel = { version = \"1.4.4\", features = [ \"postgres\", \"chrono\", \"r2d2\", \"serde_json\" ] } # Database pooling\r\ndiesel_migrations = \"1.4\"       # time\r\ndotenv = \"0.15.0\"                                     # logging\r\nenv_logger = \"0.7\"              futures = \"0.3\"                 # for api token hashing\r\nhex = \"0.4.2\"        # argon2 password hashing\r\nhmac = \"0.9.0\"       # runtime const evaluation\r\njsonschema = \"0.3\"              # async\r\nlazy_static = \"1.4\"             # serialization for JSON\r\nlog = \"0.4\"                     # environment variables\r\nr2d2 = \"0.8\"                                          # JSON schema\r\nrand = \"0.7.3\"                  # Identity\r\nserde = \"1.0\"                   # serialization\r\nserde_json = \"1.0\"              # for api token hashing\r\nsha2 = \"0.9.1\"       # random value generator\r\nuuid = { version = \"0.8\", features = [ \"v4\" ] } # Embedding database migration\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/LukeMathWalker/zero-to-production/issues/11","repository_url":"https://api.github.com/repos/LukeMathWalker/zero-to-production","labels_url":"https://api.github.com/repos/LukeMathWalker/zero-to-production/issues/11/labels{/name}","comments_url":"https://api.github.com/repos/LukeMathWalker/zero-to-production/issues/11/comments","events_url":"https://api.github.com/repos/LukeMathWalker/zero-to-production/issues/11/events","html_url":"https://github.com/LukeMathWalker/zero-to-production/issues/11","id":724094922,"node_id":"MDU6SXNzdWU3MjQwOTQ5MjI=","number":11,"title":"Errors while compiling chapter 4","user":{"login":"oren","id":6517,"node_id":"MDQ6VXNlcjY1MTc=","avatar_url":"https://avatars0.githubusercontent.com/u/6517?v=4","gravatar_id":"","url":"https://api.github.com/users/oren","html_url":"https://github.com/oren","followers_url":"https://api.github.com/users/oren/followers","following_url":"https://api.github.com/users/oren/following{/other_user}","gists_url":"https://api.github.com/users/oren/gists{/gist_id}","starred_url":"https://api.github.com/users/oren/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oren/subscriptions","organizations_url":"https://api.github.com/users/oren/orgs","repos_url":"https://api.github.com/users/oren/repos","events_url":"https://api.github.com/users/oren/events{/privacy}","received_events_url":"https://api.github.com/users/oren/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-10-18T20:13:35Z","updated_at":"2020-10-19T09:15:57Z","closed_at":"2020-10-18T21:41:36Z","author_association":"NONE","active_lock_reason":null,"body":"Reproduce:\r\n```\r\nrustup install nightly\r\nrustup default nightly\r\nrustc --version\r\nrustc 1.49.0-nightly (043eca7f0 2020-10-17)\r\n\r\ngit clone https://github.com/LukeMathWalker/zero-to-production\r\ncd chapter04\r\ncargo build\r\n\r\n   Compiling proc-macro2 v1.0.24\r\n   Compiling unicode-xid v0.2.1\r\n   Compiling syn v1.0.45\r\n   Compiling libc v0.2.79\r\n   Compiling cfg-if v0.1.10\r\n   Compiling autocfg v1.0.1\r\n   Compiling lazy_static v1.4.0\r\n   Compiling memchr v2.3.3\r\n   Compiling log v0.4.11\r\n   Compiling version_check v0.9.2\r\n   Compiling slab v0.4.2\r\n   Compiling futures-core v0.3.6\r\n   Compiling proc-macro-hack v0.5.18\r\n   Compiling pin-project-internal v0.4.27\r\n   Compiling pin-project-lite v0.1.10\r\n   Compiling futures-sink v0.3.6\r\n   Compiling bytes v0.5.6\r\n   Compiling fnv v1.0.7\r\n   Compiling once_cell v1.4.1\r\n   Compiling proc-macro-nested v0.1.6\r\n   Compiling bitflags v1.2.1\r\n   Compiling arc-swap v0.4.7\r\n   Compiling pin-utils v0.1.0\r\n   Compiling cc v1.0.61\r\n   Compiling futures-io v0.3.6\r\n   Compiling smallvec v1.4.2\r\n   Compiling typenum v1.12.0\r\n   Compiling getrandom v0.1.15\r\n   Compiling scopeguard v1.1.0\r\n   Compiling itoa v0.4.6\r\n   Compiling tinyvec v0.3.4\r\n   Compiling matches v0.1.8\r\n   Compiling serde_derive v1.0.117\r\n   Compiling regex-syntax v0.6.20\r\n   Compiling byteorder v1.3.4\r\n   Compiling serde v1.0.117\r\n   Compiling percent-encoding v2.1.0\r\n   Compiling ppv-lite86 v0.2.9\r\n   Compiling linked-hash-map v0.5.3\r\n   Compiling ryu v1.0.5\r\n   Compiling either v1.6.1\r\n   Compiling pkg-config v0.3.19\r\n   Compiling unicode-segmentation v1.6.0\r\n   Compiling adler v0.2.3\r\n   Compiling opaque-debug v0.3.0\r\n   Compiling copyless v0.1.5\r\n   Compiling gimli v0.22.0\r\n   Compiling cpuid-bool v0.1.2\r\n   Compiling const_fn v0.4.2\r\n   Compiling cfg-if v1.0.0\r\n   Compiling object v0.21.1\r\n   Compiling openssl v0.10.30\r\n   Compiling rustc-demangle v0.1.17\r\n   Compiling foreign-types-shared v0.1.1\r\n   Compiling serde_json v1.0.59\r\n   Compiling match_cfg v0.1.0\r\n   Compiling maybe-uninit v2.0.0\r\n   Compiling quick-error v1.2.3\r\n   Compiling base64 v0.12.3\r\n   Compiling crc32fast v1.2.0\r\n   Compiling native-tls v0.2.4\r\n   Compiling httparse v1.3.4\r\n   Compiling hashbrown v0.9.1\r\n   Compiling encoding_rs v0.8.24\r\n   Compiling build_const v0.2.1\r\n   Compiling openssl-probe v0.1.2\r\n   Compiling subtle v2.3.0\r\n   Compiling dtoa v0.4.6\r\n   Compiling mime v0.3.16\r\n   Compiling lexical-core v0.7.4\r\n   Compiling language-tags v0.2.2\r\n   Compiling ahash v0.3.8\r\n   Compiling maplit v1.0.2\r\n   Compiling hex v0.4.2\r\n   Compiling static_assertions v1.1.0\r\n   Compiling arrayvec v0.5.1\r\n   Compiling whoami v0.9.0\r\n   Compiling tinyvec_macros v0.1.0\r\n   Compiling dotenv v0.15.0\r\n   Compiling ansi_term v0.12.1\r\n   Compiling instant v0.1.7\r\n   Compiling thread_local v1.0.1\r\n   Compiling tracing-core v0.1.17\r\n   Compiling sharded-slab v0.0.9\r\n   Compiling miniz_oxide v0.4.3\r\n   Compiling num-traits v0.2.12\r\n   Compiling num-integer v0.1.43\r\n   Compiling crossbeam-utils v0.7.2\r\n   Compiling indexmap v1.6.0\r\n   Compiling hashbrown v0.8.2\r\n   Compiling futures-channel v0.3.6\r\n   Compiling generic-array v0.14.4\r\n   Compiling standback v0.2.11\r\n   Compiling time v0.2.22\r\n   Compiling cookie v0.14.2\r\n   Compiling nom v5.1.2\r\n   Compiling futures-task v0.3.6\r\n   Compiling bytestring v0.1.5\r\n   Compiling lock_api v0.4.1\r\n   Compiling http v0.2.1\r\n   Compiling unicode-bidi v0.3.4\r\n   Compiling unicode-normalization v0.1.13\r\n   Compiling lru-cache v0.1.2\r\n   Compiling yaml-rust v0.4.4\r\n   Compiling brotli-sys v0.3.2\r\n   Compiling heck v0.3.1\r\n   Compiling openssl-sys v0.9.58\r\n   Compiling foreign-types v0.3.2\r\n   Compiling addr2line v0.13.0\r\n   Compiling crc v1.8.1\r\n   Compiling tinyvec v1.0.1\r\n   Compiling idna v0.2.0\r\n   Compiling stringprep v0.1.2\r\n   Compiling quote v1.0.7\r\n   Compiling iovec v0.1.4\r\n   Compiling net2 v0.2.35\r\n   Compiling num_cpus v1.13.0\r\n   Compiling signal-hook-registry v1.2.1\r\n   Compiling parking_lot_core v0.8.0\r\n   Compiling hostname v0.3.1\r\n   Compiling time v0.1.44\r\n   Compiling socket2 v0.3.15\r\n   Compiling gethostname v0.2.1\r\n   Compiling tracing-log v0.1.1\r\n   Compiling aho-corasick v0.7.14\r\n   Compiling fxhash v0.2.1\r\n   Compiling regex-automata v0.1.9\r\n   Compiling url v2.1.1\r\n   Compiling mio v0.6.22\r\n   Compiling threadpool v1.8.1\r\n   Compiling parking_lot v0.11.0\r\n   Compiling rand_core v0.5.1\r\n   Compiling resolv-conf v0.6.3\r\n   Compiling backtrace v0.3.53\r\n   Compiling flate2 v1.0.18\r\n   Compiling atoi v0.3.2\r\n   Compiling crossbeam-queue v0.2.3\r\n   Compiling crossbeam-channel v0.4.4\r\n   Compiling regex v1.4.1\r\n   Compiling matchers v0.0.1\r\n   Compiling digest v0.9.0\r\n   Compiling block-buffer v0.9.0\r\n   Compiling crypto-mac v0.8.0\r\n   Compiling mio-uds v0.6.8\r\n   Compiling rand_chacha v0.2.2\r\n   Compiling brotli2 v0.3.2\r\n   Compiling chrono v0.4.19\r\n   Compiling sqlformat v0.1.1\r\n   Compiling sha-1 v0.9.1\r\n   Compiling sha2 v0.9.1\r\n   Compiling md-5 v0.9.1\r\n   Compiling hmac v0.8.1\r\n   Compiling rand v0.7.3\r\n   Compiling uuid v0.8.1\r\n   Compiling tokio-macros v0.2.5\r\n   Compiling futures-macro v0.3.6\r\n   Compiling derive_more v0.99.11\r\n   Compiling thiserror-impl v1.0.21\r\n   Compiling actix-macros v0.1.2\r\n   Compiling tracing-attributes v0.1.11\r\n   Compiling enum-as-inner v0.3.3\r\n   Compiling time-macros-impl v0.1.1\r\n   Compiling async-trait v0.1.41\r\n   Compiling actix-web-codegen v0.3.0\r\n   Compiling tokio v0.2.22\r\n   Compiling pin-project v0.4.27\r\n   Compiling thiserror v1.0.21\r\n   Compiling tracing v0.1.21\r\n   Compiling time-macros v0.1.1\r\n   Compiling actix-threadpool v0.3.3\r\n   Compiling futures-util v0.3.6\r\n   Compiling tracing-futures v0.2.4\r\n   Compiling tokio-util v0.3.1\r\n   Compiling tokio-native-tls v0.1.0\r\n   Compiling serde_urlencoded v0.6.1\r\n   Compiling actix-router v0.2.5\r\n   Compiling tracing-serde v0.1.2\r\n   Compiling config v0.10.1\r\n   Compiling sqlx-rt v0.1.1\r\n   Compiling actix-codec v0.3.0\r\n   Compiling futures-executor v0.3.6\r\n   Compiling actix-service v1.0.6\r\n   Compiling actix-rt v1.1.1\r\n   Compiling h2 v0.2.6\r\n   Compiling tracing-subscriber v0.2.13\r\n   Compiling sqlx-core v0.4.0-beta.1\r\n   Compiling futures v0.3.6\r\n   Compiling actix-utils v2.0.0\r\n   Compiling trust-dns-proto v0.19.5\r\n   Compiling tracing-bunyan-formatter v0.1.6\r\n   Compiling actix-server v1.0.4\r\n   Compiling actix-tls v2.0.0\r\n   Compiling trust-dns-resolver v0.19.5\r\n   Compiling actix-testing v1.0.1\r\n   Compiling actix-connect v2.0.0\r\n   Compiling sqlx-macros v0.4.0-beta.1\r\n   Compiling actix-http v2.0.0\r\n   Compiling awc v2.0.0\r\n   Compiling actix-web v3.1.0\r\n   Compiling sqlx v0.4.0-beta.1\r\n   Compiling tracing-actix-web v0.2.1\r\n   Compiling chapter04 v0.1.0 (/home/oren/p/rust/zero-to-production/chapter04)\r\nerror: error communicating with the server: Connection refused (os error 111)\r\n   --> /home/oren/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.4.0-beta.1/src/macros.rs:292:9\r\n    |\r\n278 | / macro_rules! query (\r\n279 | |     // in Rust 1.45 we can now invoke proc macros in expression position\r\n280 | |     ($query:expr) => ({\r\n281 | |         $crate::sqlx_macros::expand_query!(source = $query)\r\n...   |\r\n292 | |         $crate::sqlx_macros::expand_query!(source = $query, args = [$($args)*])\r\n    | |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ in this macro invocation (#2)\r\n293 | |     })\r\n294 | | );\r\n    | |__- in this expansion of `sqlx::query!` (#1)\r\n    | \r\n   ::: /home/oren/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-macros-0.4.0-beta.1/src/lib.rs:24:1\r\n    |\r\n24  |   pub fn expand_query(input: TokenStream) -> TokenStream {\r\n    |   ------------------------------------------------------ in this expansion of `$crate::sqlx_macros::expand_query!` (#2)\r\n    | \r\n   ::: chapter04/src/routes/subscriptions.rs:35:5\r\n    |\r\n35  | /     sqlx::query!(\r\n36  | |         r#\"\r\n37  | |     INSERT INTO subscriptions (id, email, name, subscribed_at)\r\n38  | |     VALUES ($1, $2, $3, $4)\r\n...   |\r\n43  | |         Utc::now()\r\n44  | |     )\r\n    | |_____- in this macro invocation (#1)\r\n\r\nwarning: unused import: `chrono::Utc`\r\n --> chapter04/src/routes/subscriptions.rs:2:5\r\n  |\r\n2 | use chrono::Utc;\r\n  |     ^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(unused_imports)]` on by default\r\n\r\nwarning: unused import: `uuid::Uuid`\r\n --> chapter04/src/routes/subscriptions.rs:4:5\r\n  |\r\n4 | use uuid::Uuid;\r\n  |     ^^^^^^^^^^\r\n\r\nerror: aborting due to previous error; 2 warnings emitted\r\n\r\nerror: could not compile `chapter04`\r\n\r\nTo learn more, run the command again with --verbose.\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: build failed\r\n```\r\n\r\n```\r\ncargo build --verbose\r\n```\r\nOutput is here: http://paste.ubuntu.com/p/JvrRQh9c5d/","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/davidpdrsn/juniper-from-schema/issues/130","repository_url":"https://api.github.com/repos/davidpdrsn/juniper-from-schema","labels_url":"https://api.github.com/repos/davidpdrsn/juniper-from-schema/issues/130/labels{/name}","comments_url":"https://api.github.com/repos/davidpdrsn/juniper-from-schema/issues/130/comments","events_url":"https://api.github.com/repos/davidpdrsn/juniper-from-schema/issues/130/events","html_url":"https://github.com/davidpdrsn/juniper-from-schema/issues/130","id":725414381,"node_id":"MDU6SXNzdWU3MjU0MTQzODE=","number":130,"title":"Interface field resolving causes \"Concrete type is not handled by instance resolvers on GraphQL union\"","user":{"login":"acelot","id":1065215,"node_id":"MDQ6VXNlcjEwNjUyMTU=","avatar_url":"https://avatars1.githubusercontent.com/u/1065215?v=4","gravatar_id":"","url":"https://api.github.com/users/acelot","html_url":"https://github.com/acelot","followers_url":"https://api.github.com/users/acelot/followers","following_url":"https://api.github.com/users/acelot/following{/other_user}","gists_url":"https://api.github.com/users/acelot/gists{/gist_id}","starred_url":"https://api.github.com/users/acelot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acelot/subscriptions","organizations_url":"https://api.github.com/users/acelot/orgs","repos_url":"https://api.github.com/users/acelot/repos","events_url":"https://api.github.com/users/acelot/events{/privacy}","received_events_url":"https://api.github.com/users/acelot/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-10-20T09:56:08Z","updated_at":"2020-10-29T14:30:53Z","closed_at":"2020-10-29T14:30:52Z","author_association":"NONE","active_lock_reason":null,"body":"I have some field that returns an union type:\r\n```graphql\r\ntype Query {\r\n  testField: TestFieldResult!\r\n}\r\n\r\nunion TestFieldResult =\r\n  | Ok\r\n  | SomeProblem\r\n  | AnotherProblem\r\n\r\ntype Ok {\r\n  dummy: Boolean!\r\n}\r\n```\r\n\r\n`SomeProblem` and `AnotherProblem` are implementing one shared interface:\r\n```graphql\r\ntype SomeProblem implements ProblemInterface {\r\n  message: String!\r\n}\r\n\r\ntype AnotherProblem implements ProblemInterface {\r\n  message: String!\r\n}\r\n\r\ninterface ProblemInterface {\r\n  message: String!\r\n}\r\n```\r\n\r\nNow I'm trying to perform the query and I just need to know that there is a problem, I am not interested in a specific one:\r\n```graphql\r\nquery {\r\n  testField {\r\n    __typename\r\n    ... on Ok {\r\n      dummy\r\n    }\r\n    ... on ProblemInterface {\r\n      message\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAnd I getting an error:\r\n```\r\nthread 'actix-rt:worker:2' panicked at 'Concrete type ProblemInterface is not handled by instance resolvers on GraphQL union TestFieldResult'\r\n```\r\n\r\nHowever, if you specify a specific type of problem, then everything works.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/actix/actix-web/issues/1746","repository_url":"https://api.github.com/repos/actix/actix-web","labels_url":"https://api.github.com/repos/actix/actix-web/issues/1746/labels{/name}","comments_url":"https://api.github.com/repos/actix/actix-web/issues/1746/comments","events_url":"https://api.github.com/repos/actix/actix-web/issues/1746/events","html_url":"https://github.com/actix/actix-web/issues/1746","id":724797704,"node_id":"MDU6SXNzdWU3MjQ3OTc3MDQ=","number":1746,"title":"Fails to build with mongodb in docker alpine","user":{"login":"AlexKovalevych","id":577231,"node_id":"MDQ6VXNlcjU3NzIzMQ==","avatar_url":"https://avatars0.githubusercontent.com/u/577231?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexKovalevych","html_url":"https://github.com/AlexKovalevych","followers_url":"https://api.github.com/users/AlexKovalevych/followers","following_url":"https://api.github.com/users/AlexKovalevych/following{/other_user}","gists_url":"https://api.github.com/users/AlexKovalevych/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexKovalevych/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexKovalevych/subscriptions","organizations_url":"https://api.github.com/users/AlexKovalevych/orgs","repos_url":"https://api.github.com/users/AlexKovalevych/repos","events_url":"https://api.github.com/users/AlexKovalevych/events{/privacy}","received_events_url":"https://api.github.com/users/AlexKovalevych/received_events","type":"User","site_admin":false},"labels":[{"id":707286504,"node_id":"MDU6TGFiZWw3MDcyODY1MDQ=","url":"https://api.github.com/repos/actix/actix-web/labels/duplicate","name":"duplicate","color":"cccccc","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-10-19T16:55:04Z","updated_at":"2020-10-19T18:49:47Z","closed_at":"2020-10-19T18:46:09Z","author_association":"NONE","active_lock_reason":null,"body":"## Expected Behavior\r\nSuccessfull build\r\n\r\n## Current Behavior\r\nFails to build an alpine docker container (getting the same issue in debian) consuming all the RAM available at the machine (memory consuming constantly increasing until it reaches 32Gb).\r\n\r\nBut build is successful locally on arch consuming maximum about 0.5 Gb of memory.\r\nLocal rust version (stable works as well): \r\n```\r\nrustc 1.47.0-nightly (6c8927b0c 2020-07-26)\r\n```\r\n\r\n## Possible Solution\r\nNot sure where to start and how to debug it. Removing one of actix-web or mongodb dependencies works, but using them together doesn't. \r\n\r\n## Steps to Reproduce (for bugs)\r\nmain.rs:\r\n\r\n```rust\r\nuse actix_web::{web, App, HttpResponse, HttpServer};\r\nuse mongodb::Client;\r\nuse schema::OperationOutcome;\r\nuse std::env;\r\nuse std::sync::Mutex;\r\n\r\npub mod issues;\r\npub mod schema;\r\npub mod server;\r\n\r\npub mod fhir {\r\n    tonic::include_proto!(\"fhir\");\r\n}\r\n\r\n#[derive(Clone)]\r\nstruct AppState {\r\n    mongo: web::Data<Mutex<Client>>,\r\n    db: String,\r\n}\r\n\r\nasync fn health() -> HttpResponse {\r\n    HttpResponse::Ok().finish()\r\n}\r\n\r\nasync fn expand(data: web::Data<AppState>, web::Path(id): web::Path<String>) -> HttpResponse {\r\n    let db = data.mongo.lock().unwrap().database(data.db.as_str());\r\n    match server::value_set::expand(&db, &id).await {\r\n        Ok(value_set) => HttpResponse::Ok().json(value_set),\r\n        Err(error_response) => HttpResponse::Ok().json(OperationOutcome {\r\n            issue: error_response.issue,\r\n        }),\r\n    }\r\n}\r\n\r\n#[actix_web::main]\r\nasync fn main() -> std::io::Result<()> {\r\n    let port: u64 = env::var(\"PORT\")\r\n        .unwrap_or(String::from(\"4000\"))\r\n        .parse()\r\n        .unwrap();\r\n\r\n    let db_url = env::var(\"DB_URL\").unwrap_or(String::from(\"mongodb://localhost:27017\"));\r\n    let db = env::var(\"DB\").unwrap_or(String::from(\"terminology_test\"));\r\n    let client = web::Data::new(Mutex::new(\r\n        Client::with_uri_str(db_url.as_str()).await.unwrap(),\r\n    ));\r\n\r\n    HttpServer::new(move || {\r\n        App::new()\r\n            .data(AppState {\r\n                mongo: client.clone(),\r\n                db: db.clone(),\r\n            })\r\n            .route(\"/health\", web::get().to(health))\r\n            .route(\"/ValueSet/{id}/$expand\", web::get().to(expand))\r\n    })\r\n    .bind(format!(\"0.0.0.0:{}\", port))?\r\n    .run()\r\n    .await\r\n}\r\n```\r\n\r\n## Context\r\nDockerfile:\r\n\r\n```dockerfile\r\nFROM rust:1.47-alpine as builder\r\nRUN apk add --no-cache musl-dev protoc openssl-dev\r\nADD  . /app\r\nWORKDIR /app\r\nENV PROTOC=/usr/bin/protoc\r\nRUN rustup component add rustfmt\r\nRUN cargo install --locked --path .\r\n\r\nFROM alpine:3.12\r\nCOPY --from=builder /usr/local/cargo/bin/fhir_terminology_server /app/terminology\r\nEXPOSE 4000\r\nCMD [\"/app/terminology\"]\r\n```\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\nCargo.toml:\r\n\r\n```toml\r\n[dependencies]\r\ntonic = \"0.3.0\"\r\nprost = \"0.6.1\"\r\nactix-web = \"3.1.0\"\r\nserde = {version = \"1.0\", features = [\"derive\"]}\r\nserde_json = \"1.0\"\r\nmongodb = \"1.1.1\"\r\ntokio = {version = \"0.3.0\", features = [\"stream\"]}\r\n\r\n[build-dependencies]\r\ntonic-build = \"0.3.0\"\r\n```\r\n\r\nAny ideas what can cause such weird behavior in docker only?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/casbin-rs/actix-casbin-auth/issues/23","repository_url":"https://api.github.com/repos/casbin-rs/actix-casbin-auth","labels_url":"https://api.github.com/repos/casbin-rs/actix-casbin-auth/issues/23/labels{/name}","comments_url":"https://api.github.com/repos/casbin-rs/actix-casbin-auth/issues/23/comments","events_url":"https://api.github.com/repos/casbin-rs/actix-casbin-auth/issues/23/events","html_url":"https://github.com/casbin-rs/actix-casbin-auth/issues/23","id":709101798,"node_id":"MDU6SXNzdWU3MDkxMDE3OTg=","number":23,"title":"no default features for actix-web","user":{"login":"robjtede","id":3316789,"node_id":"MDQ6VXNlcjMzMTY3ODk=","avatar_url":"https://avatars3.githubusercontent.com/u/3316789?v=4","gravatar_id":"","url":"https://api.github.com/users/robjtede","html_url":"https://github.com/robjtede","followers_url":"https://api.github.com/users/robjtede/followers","following_url":"https://api.github.com/users/robjtede/following{/other_user}","gists_url":"https://api.github.com/users/robjtede/gists{/gist_id}","starred_url":"https://api.github.com/users/robjtede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robjtede/subscriptions","organizations_url":"https://api.github.com/users/robjtede/orgs","repos_url":"https://api.github.com/users/robjtede/repos","events_url":"https://api.github.com/users/robjtede/events{/privacy}","received_events_url":"https://api.github.com/users/robjtede/received_events","type":"User","site_admin":false},"labels":[{"id":2312070786,"node_id":"MDU6TGFiZWwyMzEyMDcwNzg2","url":"https://api.github.com/repos/casbin-rs/actix-casbin-auth/labels/feature_request","name":"feature_request","color":"ededed","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-09-25T16:48:15Z","updated_at":"2020-09-27T06:36:08Z","closed_at":"2020-09-27T05:46:26Z","author_association":"NONE","active_lock_reason":null,"body":"\r\nIf/when the actix-web dependency is updated to v3, the dependency in Cargo.toml should ideally be:\r\n\r\n```diff\r\n- actix-web = \"3.0.2\"\r\n+ actix-web = { version = \"3.0.2\", default-features = false }\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/actix/actix-web/issues/1727","repository_url":"https://api.github.com/repos/actix/actix-web","labels_url":"https://api.github.com/repos/actix/actix-web/issues/1727/labels{/name}","comments_url":"https://api.github.com/repos/actix/actix-web/issues/1727/comments","events_url":"https://api.github.com/repos/actix/actix-web/issues/1727/events","html_url":"https://github.com/actix/actix-web/issues/1727","id":717864079,"node_id":"MDU6SXNzdWU3MTc4NjQwNzk=","number":1727,"title":"Support MTLS","user":{"login":"howard0su","id":766788,"node_id":"MDQ6VXNlcjc2Njc4OA==","avatar_url":"https://avatars1.githubusercontent.com/u/766788?v=4","gravatar_id":"","url":"https://api.github.com/users/howard0su","html_url":"https://github.com/howard0su","followers_url":"https://api.github.com/users/howard0su/followers","following_url":"https://api.github.com/users/howard0su/following{/other_user}","gists_url":"https://api.github.com/users/howard0su/gists{/gist_id}","starred_url":"https://api.github.com/users/howard0su/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/howard0su/subscriptions","organizations_url":"https://api.github.com/users/howard0su/orgs","repos_url":"https://api.github.com/users/howard0su/repos","events_url":"https://api.github.com/users/howard0su/events{/privacy}","received_events_url":"https://api.github.com/users/howard0su/received_events","type":"User","site_admin":false},"labels":[{"id":1799291852,"node_id":"MDU6TGFiZWwxNzk5MjkxODUy","url":"https://api.github.com/repos/actix/actix-web/labels/C-feature","name":"C-feature","color":"88c313","default":false,"description":"Category: new functionality"},{"id":2345270051,"node_id":"MDU6TGFiZWwyMzQ1MjcwMDUx","url":"https://api.github.com/repos/actix/actix-web/labels/P-web","name":"P-web","color":"fff4af","default":false,"description":"project: actix-web"}],"state":"closed","locked":false,"assignee":{"login":"robjtede","id":3316789,"node_id":"MDQ6VXNlcjMzMTY3ODk=","avatar_url":"https://avatars3.githubusercontent.com/u/3316789?v=4","gravatar_id":"","url":"https://api.github.com/users/robjtede","html_url":"https://github.com/robjtede","followers_url":"https://api.github.com/users/robjtede/followers","following_url":"https://api.github.com/users/robjtede/following{/other_user}","gists_url":"https://api.github.com/users/robjtede/gists{/gist_id}","starred_url":"https://api.github.com/users/robjtede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robjtede/subscriptions","organizations_url":"https://api.github.com/users/robjtede/orgs","repos_url":"https://api.github.com/users/robjtede/repos","events_url":"https://api.github.com/users/robjtede/events{/privacy}","received_events_url":"https://api.github.com/users/robjtede/received_events","type":"User","site_admin":false},"assignees":[{"login":"robjtede","id":3316789,"node_id":"MDQ6VXNlcjMzMTY3ODk=","avatar_url":"https://avatars3.githubusercontent.com/u/3316789?v=4","gravatar_id":"","url":"https://api.github.com/users/robjtede","html_url":"https://github.com/robjtede","followers_url":"https://api.github.com/users/robjtede/followers","following_url":"https://api.github.com/users/robjtede/following{/other_user}","gists_url":"https://api.github.com/users/robjtede/gists{/gist_id}","starred_url":"https://api.github.com/users/robjtede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robjtede/subscriptions","organizations_url":"https://api.github.com/users/robjtede/orgs","repos_url":"https://api.github.com/users/robjtede/repos","events_url":"https://api.github.com/users/robjtede/events{/privacy}","received_events_url":"https://api.github.com/users/robjtede/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2020-10-09T05:31:04Z","updated_at":"2020-10-30T04:23:17Z","closed_at":"2020-10-30T03:30:11Z","author_association":"NONE","active_lock_reason":null,"body":"Support MTLS, the request handler is able to validate the certificate from the client.\r\n\r\nIf someone can point out the code to start with, I can try to do this task as well.\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/oxidecomputer/dropshot/issues/56","repository_url":"https://api.github.com/repos/oxidecomputer/dropshot","labels_url":"https://api.github.com/repos/oxidecomputer/dropshot/issues/56/labels{/name}","comments_url":"https://api.github.com/repos/oxidecomputer/dropshot/issues/56/comments","events_url":"https://api.github.com/repos/oxidecomputer/dropshot/issues/56/events","html_url":"https://github.com/oxidecomputer/dropshot/issues/56","id":716878772,"node_id":"MDU6SXNzdWU3MTY4Nzg3NzI=","number":56,"title":"Discussion of alternative crates is not publicly available","user":{"login":"mikeyhew","id":6751033,"node_id":"MDQ6VXNlcjY3NTEwMzM=","avatar_url":"https://avatars2.githubusercontent.com/u/6751033?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeyhew","html_url":"https://github.com/mikeyhew","followers_url":"https://api.github.com/users/mikeyhew/followers","following_url":"https://api.github.com/users/mikeyhew/following{/other_user}","gists_url":"https://api.github.com/users/mikeyhew/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeyhew/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeyhew/subscriptions","organizations_url":"https://api.github.com/users/mikeyhew/orgs","repos_url":"https://api.github.com/users/mikeyhew/repos","events_url":"https://api.github.com/users/mikeyhew/events{/privacy}","received_events_url":"https://api.github.com/users/mikeyhew/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-10-07T21:58:35Z","updated_at":"2020-11-14T05:14:12Z","closed_at":"2020-10-08T18:42:14Z","author_association":"NONE","active_lock_reason":null,"body":"Hey Oxiders!\r\n\r\nI heard about this project from your [post on twitter](https://twitter.com/oxidecomputer/status/1308636868859195392). Since we're creating a public API at my work, I was interested to know what you thought of the alternative crates in the ecosystem, and why you decided to roll your own. I was excited to see that [in the documentation for this crate](https://docs.rs/dropshot/0.3.0/dropshot/), you wrote:\r\n\r\n>For a discussion of alternative crates considered, see Oxide RFD 10.\r\n\r\nUnfortunately it looks like that's an internal discussion that I can't see. I was wondering if you could share any of the specifics about what other crates you looked at and what you thought about them?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/wafflespeanut/paperclip/issues/222","repository_url":"https://api.github.com/repos/wafflespeanut/paperclip","labels_url":"https://api.github.com/repos/wafflespeanut/paperclip/issues/222/labels{/name}","comments_url":"https://api.github.com/repos/wafflespeanut/paperclip/issues/222/comments","events_url":"https://api.github.com/repos/wafflespeanut/paperclip/issues/222/events","html_url":"https://github.com/wafflespeanut/paperclip/issues/222","id":705455222,"node_id":"MDU6SXNzdWU3MDU0NTUyMjI=","number":222,"title":"I couldn't make the actix example in the book work","user":{"login":"omid","id":45714,"node_id":"MDQ6VXNlcjQ1NzE0","avatar_url":"https://avatars1.githubusercontent.com/u/45714?v=4","gravatar_id":"","url":"https://api.github.com/users/omid","html_url":"https://github.com/omid","followers_url":"https://api.github.com/users/omid/followers","following_url":"https://api.github.com/users/omid/following{/other_user}","gists_url":"https://api.github.com/users/omid/gists{/gist_id}","starred_url":"https://api.github.com/users/omid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/omid/subscriptions","organizations_url":"https://api.github.com/users/omid/orgs","repos_url":"https://api.github.com/users/omid/repos","events_url":"https://api.github.com/users/omid/events{/privacy}","received_events_url":"https://api.github.com/users/omid/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-09-21T10:00:55Z","updated_at":"2020-09-23T07:47:34Z","closed_at":"2020-09-23T07:47:34Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This code in the book returns some errors!\r\n\r\nhttps://github.com/wafflespeanut/paperclip/blob/d08e85d4930269befeb81f3bc08149936e915ee6/book/actix-plugin.md\r\n\r\n```\r\nuse actix_web::{App, HttpServer};\r\nuse paperclip::actix::{\r\n    // extension trait for actix_web::App and proc-macro attributes\r\n    OpenApiExt, Apiv2Schema, api_v2_operation,\r\n    // use this instead of actix_web::web\r\n    web::{self, Json},\r\n};\r\nuse serde::{Serialize, Deserialize};\r\n\r\n// Mark containers (body, query, parameter, etc.) like so...\r\n#[derive(Serialize, Deserialize, Apiv2Schema)]\r\nstruct Pet {\r\n    name: String,\r\n    id: Option<i64>,\r\n}\r\n\r\n// Mark operations like so...\r\n#[api_v2_operation]\r\nasync fn echo_pet(body: Json<Pet>) -> Result<Json<Pet>, ()> {\r\n    Ok(body)\r\n}\r\n\r\n#[actix_web::main]\r\nasync fn main() -> std::io::Result<()> {\r\n    HttpServer::new(|| App::new()\r\n        // Record services and routes from this line.\r\n        .wrap_api()\r\n        // Add routes like you normally do...\r\n        .service(\r\n            web::resource(\"/pets\")\r\n                .route(web::post().to(echo_pet))\r\n        )\r\n        // Mount the JSON spec at this path.\r\n        .with_json_spec_at(\"/api/spec\")\r\n\r\n        // ... or if you wish to build the spec by yourself...\r\n\r\n        // .with_raw_json_spec(|app, spec| {\r\n        //     app.route(\"/api/spec\", web::get().to(move || {\r\n        //         actix_web::HttpResponse::Ok().json(&spec)\r\n        //     }))\r\n        // })\r\n\r\n        // IMPORTANT: Build the app!\r\n        .build()\r\n    ).bind(\"127.0.0.1:8080\")?\r\n    .run().await\r\n}\r\n```\r\n\r\nI'm using the feature \"actix\", even tested with what we have currently in master.\r\nAnd I also replaced `api_v2_schema` with `Apiv2Schema`.\r\n\r\nThe error I can see is:\r\n```\r\nerror[E0599]: no method named `wrap_api` found for struct `actix_web::app::App<actix_web::app_service::AppEntry, actix_http::body::Body>` in the current scope\r\n  --> src/main.rs:25:10\r\n   |\r\n25 |         .wrap_api()\r\n   |          ^^^^^^^^ method not found in `actix_web::app::App<actix_web::app_service::AppEntry, actix_http::body::Body>`\r\n```\r\n\r\nAnyway, this example is old.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/actix/actix-web/issues/1683","repository_url":"https://api.github.com/repos/actix/actix-web","labels_url":"https://api.github.com/repos/actix/actix-web/issues/1683/labels{/name}","comments_url":"https://api.github.com/repos/actix/actix-web/issues/1683/comments","events_url":"https://api.github.com/repos/actix/actix-web/issues/1683/events","html_url":"https://github.com/actix/actix-web/issues/1683","id":701899932,"node_id":"MDU6SXNzdWU3MDE4OTk5MzI=","number":1683,"title":"actix-files having trouble with Chinese characters in file content (not filename)","user":{"login":"lucifer1004","id":13583761,"node_id":"MDQ6VXNlcjEzNTgzNzYx","avatar_url":"https://avatars2.githubusercontent.com/u/13583761?v=4","gravatar_id":"","url":"https://api.github.com/users/lucifer1004","html_url":"https://github.com/lucifer1004","followers_url":"https://api.github.com/users/lucifer1004/followers","following_url":"https://api.github.com/users/lucifer1004/following{/other_user}","gists_url":"https://api.github.com/users/lucifer1004/gists{/gist_id}","starred_url":"https://api.github.com/users/lucifer1004/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lucifer1004/subscriptions","organizations_url":"https://api.github.com/users/lucifer1004/orgs","repos_url":"https://api.github.com/users/lucifer1004/repos","events_url":"https://api.github.com/users/lucifer1004/events{/privacy}","received_events_url":"https://api.github.com/users/lucifer1004/received_events","type":"User","site_admin":false},"labels":[{"id":1799291852,"node_id":"MDU6TGFiZWwxNzk5MjkxODUy","url":"https://api.github.com/repos/actix/actix-web/labels/C-feature","name":"C-feature","color":"88c313","default":false,"description":"Category: new functionality"},{"id":1286567531,"node_id":"MDU6TGFiZWwxMjg2NTY3NTMx","url":"https://api.github.com/repos/actix/actix-web/labels/P-files","name":"P-files","color":"fff4af","default":false,"description":"project: actix-files"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-09-15T12:47:15Z","updated_at":"2020-10-07T21:03:38Z","closed_at":"2020-10-06T20:56:29Z","author_association":"NONE","active_lock_reason":null,"body":"## Expected Behavior\r\n\r\nChinese characters (and other unicode characters) should be displayed correctly.\r\n\r\n## Current Behavior\r\n\r\nThey are not.\r\n\r\n## Possible Solution\r\n\r\nI noticed that there was a pull request related to this (#1151), that PR did fix the issue with filename, but it seems that there are still issues with file contents.\r\n\r\n## Steps to Reproduce (for bugs)\r\n\r\nSee: https://github.com/lucifer1004/actix-file-utf-8\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n\r\n* Rust Version (I.e, output of `rustc -V`): rustc 1.47.0-nightly (30f0a0768 2020-08-18)\r\n* Actix Web Version: 3.0.1\r\n* Actix Files Version: 0.3.0\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/kooparse/bast/issues/43","repository_url":"https://api.github.com/repos/kooparse/bast","labels_url":"https://api.github.com/repos/kooparse/bast/issues/43/labels{/name}","comments_url":"https://api.github.com/repos/kooparse/bast/issues/43/comments","events_url":"https://api.github.com/repos/kooparse/bast/issues/43/events","html_url":"https://github.com/kooparse/bast/issues/43","id":712271144,"node_id":"MDU6SXNzdWU3MTIyNzExNDQ=","number":43,"title":"Can't create account","user":{"login":"aspenluxxxy","id":65794972,"node_id":"MDQ6VXNlcjY1Nzk0OTcy","avatar_url":"https://avatars1.githubusercontent.com/u/65794972?v=4","gravatar_id":"","url":"https://api.github.com/users/aspenluxxxy","html_url":"https://github.com/aspenluxxxy","followers_url":"https://api.github.com/users/aspenluxxxy/followers","following_url":"https://api.github.com/users/aspenluxxxy/following{/other_user}","gists_url":"https://api.github.com/users/aspenluxxxy/gists{/gist_id}","starred_url":"https://api.github.com/users/aspenluxxxy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aspenluxxxy/subscriptions","organizations_url":"https://api.github.com/users/aspenluxxxy/orgs","repos_url":"https://api.github.com/users/aspenluxxxy/repos","events_url":"https://api.github.com/users/aspenluxxxy/events{/privacy}","received_events_url":"https://api.github.com/users/aspenluxxxy/received_events","type":"User","site_admin":false},"labels":[{"id":1671339678,"node_id":"MDU6TGFiZWwxNjcxMzM5Njc4","url":"https://api.github.com/repos/kooparse/bast/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":{"login":"kooparse","id":2859122,"node_id":"MDQ6VXNlcjI4NTkxMjI=","avatar_url":"https://avatars1.githubusercontent.com/u/2859122?v=4","gravatar_id":"","url":"https://api.github.com/users/kooparse","html_url":"https://github.com/kooparse","followers_url":"https://api.github.com/users/kooparse/followers","following_url":"https://api.github.com/users/kooparse/following{/other_user}","gists_url":"https://api.github.com/users/kooparse/gists{/gist_id}","starred_url":"https://api.github.com/users/kooparse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kooparse/subscriptions","organizations_url":"https://api.github.com/users/kooparse/orgs","repos_url":"https://api.github.com/users/kooparse/repos","events_url":"https://api.github.com/users/kooparse/events{/privacy}","received_events_url":"https://api.github.com/users/kooparse/received_events","type":"User","site_admin":false},"assignees":[{"login":"kooparse","id":2859122,"node_id":"MDQ6VXNlcjI4NTkxMjI=","avatar_url":"https://avatars1.githubusercontent.com/u/2859122?v=4","gravatar_id":"","url":"https://api.github.com/users/kooparse","html_url":"https://github.com/kooparse","followers_url":"https://api.github.com/users/kooparse/followers","following_url":"https://api.github.com/users/kooparse/following{/other_user}","gists_url":"https://api.github.com/users/kooparse/gists{/gist_id}","starred_url":"https://api.github.com/users/kooparse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kooparse/subscriptions","organizations_url":"https://api.github.com/users/kooparse/orgs","repos_url":"https://api.github.com/users/kooparse/repos","events_url":"https://api.github.com/users/kooparse/events{/privacy}","received_events_url":"https://api.github.com/users/kooparse/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2020-09-30T20:50:40Z","updated_at":"2020-10-05T13:15:04Z","closed_at":"2020-10-05T13:14:53Z","author_association":"NONE","active_lock_reason":null,"body":"```\r\nbast_1         | [2020-09-30T20:48:48Z INFO  actix_web::middleware::logger] 172.22.0.3:41616 \"POST /api/register HTTP/1.1\" 200 40 \"https://SITE/register\" \"Mozilla/5.0 (X11; Linux x86_64; rv:81.0) Gecko/20100101 Firefox/81.0\" 0.444690\r\nbast_1         | [2020-09-30T20:48:49Z INFO  actix_web::middleware::logger] 172.22.0.3:41616 \"POST /api/login HTTP/1.1\" 401 22 \"https://SITE/register\" \"Mozilla/5.0 (X11; Linux x86_64; rv:81.0) Gecko/20100101 Firefox/81.0\" 0.446657\r\n\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/65794972/94738190-0ebba900-033d-11eb-83ca-2649c676e443.png)\r\n\r\nOn both v0.2.0 and master","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/OutThereLabs/actix-web-opentelemetry/issues/16","repository_url":"https://api.github.com/repos/OutThereLabs/actix-web-opentelemetry","labels_url":"https://api.github.com/repos/OutThereLabs/actix-web-opentelemetry/issues/16/labels{/name}","comments_url":"https://api.github.com/repos/OutThereLabs/actix-web-opentelemetry/issues/16/comments","events_url":"https://api.github.com/repos/OutThereLabs/actix-web-opentelemetry/issues/16/events","html_url":"https://github.com/OutThereLabs/actix-web-opentelemetry/issues/16","id":678047890,"node_id":"MDU6SXNzdWU2NzgwNDc4OTA=","number":16,"title":"Using RequestTracingMiddleware with a TraceContextPropagator.","user":{"login":"allonhadaya","id":704531,"node_id":"MDQ6VXNlcjcwNDUzMQ==","avatar_url":"https://avatars1.githubusercontent.com/u/704531?v=4","gravatar_id":"","url":"https://api.github.com/users/allonhadaya","html_url":"https://github.com/allonhadaya","followers_url":"https://api.github.com/users/allonhadaya/followers","following_url":"https://api.github.com/users/allonhadaya/following{/other_user}","gists_url":"https://api.github.com/users/allonhadaya/gists{/gist_id}","starred_url":"https://api.github.com/users/allonhadaya/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/allonhadaya/subscriptions","organizations_url":"https://api.github.com/users/allonhadaya/orgs","repos_url":"https://api.github.com/users/allonhadaya/repos","events_url":"https://api.github.com/users/allonhadaya/events{/privacy}","received_events_url":"https://api.github.com/users/allonhadaya/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-12T23:56:21Z","updated_at":"2020-09-13T00:14:10Z","closed_at":"2020-08-17T18:02:15Z","author_association":"NONE","active_lock_reason":null,"body":"hey :wave: thanks for putting together this crate!\r\n\r\nI see you've defined the type `RequestTracingMiddleware` to be generic in terms of an `HttpTextFormat`, and was hoping to use this type like `RequestTracing` does, but with [`TraceContextPropagator`](https://docs.rs/opentelemetry/0.5.0/opentelemetry/api/trace/trace_context_propagator/struct.TraceContextPropagator.html) instead of `B3Propagator`.\r\n\r\nIn trying to do the above myself, I found that `RequestTracingMiddleware` is public but not exposed in `lib.rs`.\r\n\r\nhttps://github.com/OutThereLabs/actix-web-opentelemetry/blob/5a58b827c1dea03e17b6c18ebc631bb16f367ea8/src/middleware/trace.rs#L130-L135\r\n\r\nhttps://github.com/OutThereLabs/actix-web-opentelemetry/blob/5a58b827c1dea03e17b6c18ebc631bb16f367ea8/src/lib.rs#L68-L73\r\n\r\nHave you given thought to how library users can do this, and what the desired api would be? Ideally I could write something as simple as:\r\n\r\n```rust\r\nuse actix_web_opentelemetry::RequestTracing\r\n...\r\nApp::new().wrap(RequestTracing::new(TextContextPropagator::new()))\r\n```\r\n\r\nthanks for everything :pray: ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/near/nearup/issues/121","repository_url":"https://api.github.com/repos/near/nearup","labels_url":"https://api.github.com/repos/near/nearup/issues/121/labels{/name}","comments_url":"https://api.github.com/repos/near/nearup/issues/121/comments","events_url":"https://api.github.com/repos/near/nearup/issues/121/events","html_url":"https://github.com/near/nearup/issues/121","id":711107683,"node_id":"MDU6SXNzdWU3MTExMDc2ODM=","number":121,"title":"Add verbose logging for RPC to nearup","user":{"login":"chefsale","id":3193842,"node_id":"MDQ6VXNlcjMxOTM4NDI=","avatar_url":"https://avatars1.githubusercontent.com/u/3193842?v=4","gravatar_id":"","url":"https://api.github.com/users/chefsale","html_url":"https://github.com/chefsale","followers_url":"https://api.github.com/users/chefsale/followers","following_url":"https://api.github.com/users/chefsale/following{/other_user}","gists_url":"https://api.github.com/users/chefsale/gists{/gist_id}","starred_url":"https://api.github.com/users/chefsale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chefsale/subscriptions","organizations_url":"https://api.github.com/users/chefsale/orgs","repos_url":"https://api.github.com/users/chefsale/repos","events_url":"https://api.github.com/users/chefsale/events{/privacy}","received_events_url":"https://api.github.com/users/chefsale/received_events","type":"User","site_admin":false},"labels":[{"id":2208226782,"node_id":"MDU6TGFiZWwyMjA4MjI2Nzgy","url":"https://api.github.com/repos/near/nearup/labels/SRE","name":"SRE","color":"b60205","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"chefsale","id":3193842,"node_id":"MDQ6VXNlcjMxOTM4NDI=","avatar_url":"https://avatars1.githubusercontent.com/u/3193842?v=4","gravatar_id":"","url":"https://api.github.com/users/chefsale","html_url":"https://github.com/chefsale","followers_url":"https://api.github.com/users/chefsale/followers","following_url":"https://api.github.com/users/chefsale/following{/other_user}","gists_url":"https://api.github.com/users/chefsale/gists{/gist_id}","starred_url":"https://api.github.com/users/chefsale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chefsale/subscriptions","organizations_url":"https://api.github.com/users/chefsale/orgs","repos_url":"https://api.github.com/users/chefsale/repos","events_url":"https://api.github.com/users/chefsale/events{/privacy}","received_events_url":"https://api.github.com/users/chefsale/received_events","type":"User","site_admin":false},"assignees":[{"login":"chefsale","id":3193842,"node_id":"MDQ6VXNlcjMxOTM4NDI=","avatar_url":"https://avatars1.githubusercontent.com/u/3193842?v=4","gravatar_id":"","url":"https://api.github.com/users/chefsale","html_url":"https://github.com/chefsale","followers_url":"https://api.github.com/users/chefsale/followers","following_url":"https://api.github.com/users/chefsale/following{/other_user}","gists_url":"https://api.github.com/users/chefsale/gists{/gist_id}","starred_url":"https://api.github.com/users/chefsale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chefsale/subscriptions","organizations_url":"https://api.github.com/users/chefsale/orgs","repos_url":"https://api.github.com/users/chefsale/repos","events_url":"https://api.github.com/users/chefsale/events{/privacy}","received_events_url":"https://api.github.com/users/chefsale/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-09-29T13:22:13Z","updated_at":"2020-09-30T15:32:27Z","closed_at":"2020-09-30T15:32:27Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This is the guide how to do it from @frol:\r\n```\r\nWell, here is the logging infrastructure setup: https://github.com/nearprotocol/nearcore/blob/7b5f592c364d79fd9f32ea04eec2ae5aa4e92a89/neard/src/main.rs#L21\r\nYou can see that there are some defaults for specific modules, and if you run neard with --verbose \"module_name\", you can enable debug level for specific ones. You can also use RUST_LOG environment variable like env RUST_LOG=actix_web=info neard run ..., and that should display more logs about RPC calls. We may also add more logging into near-jsonrpc crate itself\r\n```","performed_via_github_app":null,"score":1.0}]}
0

