HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:01:22 GMT
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CE28:41F3:1ECB257:2393A53:5FB01B72
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 26
X-Ratelimit-Reset: 1605376942
X-Ratelimit-Used: 4
X-Xss-Protection: 1; mode=block

2557
{"total_count":4,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/kittinunf/Result/issues/18","repository_url":"https://api.github.com/repos/kittinunf/Result","labels_url":"https://api.github.com/repos/kittinunf/Result/issues/18/labels{/name}","comments_url":"https://api.github.com/repos/kittinunf/Result/issues/18/comments","events_url":"https://api.github.com/repos/kittinunf/Result/issues/18/events","html_url":"https://github.com/kittinunf/Result/issues/18","id":189914348,"node_id":"MDU6SXNzdWUxODk5MTQzNDg=","number":18,"title":"What about Result<T?>","user":{"login":"danneu","id":529580,"node_id":"MDQ6VXNlcjUyOTU4MA==","avatar_url":"https://avatars0.githubusercontent.com/u/529580?v=4","gravatar_id":"","url":"https://api.github.com/users/danneu","html_url":"https://github.com/danneu","followers_url":"https://api.github.com/users/danneu/followers","following_url":"https://api.github.com/users/danneu/following{/other_user}","gists_url":"https://api.github.com/users/danneu/gists{/gist_id}","starred_url":"https://api.github.com/users/danneu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danneu/subscriptions","organizations_url":"https://api.github.com/users/danneu/orgs","repos_url":"https://api.github.com/users/danneu/repos","events_url":"https://api.github.com/users/danneu/events{/privacy}","received_events_url":"https://api.github.com/users/danneu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-11-17T02:15:04Z","updated_at":"2020-01-31T11:40:17Z","closed_at":"2017-07-08T17:35:50Z","author_association":"NONE","active_lock_reason":null,"body":"I'm new to Kotlin, so I may be missing something obvious, but it seems to me that Result values are constrained to `Any` rather than `Any?` because of `<V : Any>`.\r\n\r\nI believe this means that I can't have a result of `Result<String?, Exception>`.\r\n\r\nWhat should we do when `null` is a legal value?\r\n\r\nI've been writing a JSON decoder combinator where `Decoder<T>` means that the decoder will return `Result<T, Exception>` when applied to a JSON string. Since JSON can contain nulls, I want to implement a null combinator such as `Decoder.nullable(Decoder.string)` which returns `Result<String?, Exception>`.\r\n\r\nHowever, I wasn't sure how to make this work beyond bringing in some sort of `Maybe<T> : Just<T> | None` monad so that I could return `Result<Maybe<String>, Exception>`. I'd prefer to just use Kotlin's optional here since it already exists.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/danneu/kog/issues/21","repository_url":"https://api.github.com/repos/danneu/kog","labels_url":"https://api.github.com/repos/danneu/kog/issues/21/labels{/name}","comments_url":"https://api.github.com/repos/danneu/kog/issues/21/comments","events_url":"https://api.github.com/repos/danneu/kog/issues/21/events","html_url":"https://github.com/danneu/kog/issues/21","id":247450999,"node_id":"MDU6SXNzdWUyNDc0NTA5OTk=","number":21,"title":"Websocket keepalive","user":{"login":"ThraaxSession","id":3085830,"node_id":"MDQ6VXNlcjMwODU4MzA=","avatar_url":"https://avatars3.githubusercontent.com/u/3085830?v=4","gravatar_id":"","url":"https://api.github.com/users/ThraaxSession","html_url":"https://github.com/ThraaxSession","followers_url":"https://api.github.com/users/ThraaxSession/followers","following_url":"https://api.github.com/users/ThraaxSession/following{/other_user}","gists_url":"https://api.github.com/users/ThraaxSession/gists{/gist_id}","starred_url":"https://api.github.com/users/ThraaxSession/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ThraaxSession/subscriptions","organizations_url":"https://api.github.com/users/ThraaxSession/orgs","repos_url":"https://api.github.com/users/ThraaxSession/repos","events_url":"https://api.github.com/users/ThraaxSession/events{/privacy}","received_events_url":"https://api.github.com/users/ThraaxSession/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-08-02T16:36:29Z","updated_at":"2017-08-06T09:55:44Z","closed_at":"2017-08-06T03:46:35Z","author_association":"NONE","active_lock_reason":null,"body":"Hi :)\r\n\r\nit's a nice framework. But I've got a little issue with the connection timeout on websocket.\r\n\r\n```\r\n[70294c19-6a40-4f0e-93a2-84ef22679498] onError: Timeout on Read\r\n[70294c19-6a40-4f0e-93a2-84ef22679498] onClose: 1001 Idle Timeout\r\n```\r\n\r\nDo you know how to do a `keepalive` on websocket? Didn't find anything on Jetty side. \r\nOr how to do a ping/pong at least. (With JS side)\r\n\r\nThanks and best regards\r\nGino","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/danneu/kog/issues/3","repository_url":"https://api.github.com/repos/danneu/kog","labels_url":"https://api.github.com/repos/danneu/kog/issues/3/labels{/name}","comments_url":"https://api.github.com/repos/danneu/kog/issues/3/comments","events_url":"https://api.github.com/repos/danneu/kog/issues/3/events","html_url":"https://github.com/danneu/kog/issues/3","id":198374547,"node_id":"MDU6SXNzdWUxOTgzNzQ1NDc=","number":3,"title":"[Router] Implement type-safe router","user":{"login":"danneu","id":529580,"node_id":"MDQ6VXNlcjUyOTU4MA==","avatar_url":"https://avatars0.githubusercontent.com/u/529580?v=4","gravatar_id":"","url":"https://api.github.com/users/danneu","html_url":"https://github.com/danneu","followers_url":"https://api.github.com/users/danneu/followers","following_url":"https://api.github.com/users/danneu/following{/other_user}","gists_url":"https://api.github.com/users/danneu/gists{/gist_id}","starred_url":"https://api.github.com/users/danneu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danneu/subscriptions","organizations_url":"https://api.github.com/users/danneu/orgs","repos_url":"https://api.github.com/users/danneu/repos","events_url":"https://api.github.com/users/danneu/events{/privacy}","received_events_url":"https://api.github.com/users/danneu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-01-02T19:46:07Z","updated_at":"2017-02-04T23:31:46Z","closed_at":"2017-02-04T23:31:46Z","author_association":"OWNER","active_lock_reason":null,"body":"The API could look something like this:\r\n\r\n``` kotlin\r\nRouter {\r\n    get(\"/users/:id\", fun(id: Int): Handler = { req ->\r\n        Response().text(\"User $id\")\r\n    })\r\n}\r\n```\r\n\r\n### TODO:\r\n\r\n- [x] Middleware tests\r\n- [x] Figure out a good `group(\"/prefix\")` API.\r\n- [x] Support websockets\r\n    - Could map SafeRouter patterns into jetty context paths with wildcards: http://stackoverflow.com/questions/4798120/is-it-possible-to-use-regular-expression-for-jettys-servlet-mapping\r\n- [x] Build router using reflection once so that the router isn't using reflection (slow) during dispatch. Right now it naively uses reflection on every request when instead it should compile a mapping at init. (Even though I improved it and checked the box, more work could be done)\r\n- [x] Consider compiling one regex that maps requests to handlers.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/danneu/kog/issues/1","repository_url":"https://api.github.com/repos/danneu/kog","labels_url":"https://api.github.com/repos/danneu/kog/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/danneu/kog/issues/1/comments","events_url":"https://api.github.com/repos/danneu/kog/issues/1/events","html_url":"https://github.com/danneu/kog/issues/1","id":191827800,"node_id":"MDU6SXNzdWUxOTE4Mjc4MDA=","number":1,"title":"[Router] Parse url /:params","user":{"login":"danneu","id":529580,"node_id":"MDQ6VXNlcjUyOTU4MA==","avatar_url":"https://avatars0.githubusercontent.com/u/529580?v=4","gravatar_id":"","url":"https://api.github.com/users/danneu","html_url":"https://github.com/danneu","followers_url":"https://api.github.com/users/danneu/followers","following_url":"https://api.github.com/users/danneu/following{/other_user}","gists_url":"https://api.github.com/users/danneu/gists{/gist_id}","starred_url":"https://api.github.com/users/danneu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danneu/subscriptions","organizations_url":"https://api.github.com/users/danneu/orgs","repos_url":"https://api.github.com/users/danneu/repos","events_url":"https://api.github.com/users/danneu/events{/privacy}","received_events_url":"https://api.github.com/users/danneu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-11-26T21:29:55Z","updated_at":"2017-01-03T03:49:58Z","closed_at":"2017-01-03T03:49:58Z","author_association":"OWNER","active_lock_reason":null,"body":"This is a familiar way to parameterize segments of the route url:\r\n\r\n``` kotlin\r\nget(\"/users/:id\", fun(request: Request): Response {\r\n    val user = database.getUser(request.params.get(\":id\"))\r\n    user ?: return Response(Status.notFound)\r\n    return Response().text(\"Hello, ${user.name}\")\r\n})\r\n```\r\n\r\nJust want something quick/dirty/working to start with.","performed_via_github_app":null,"score":1.0}]}
0

