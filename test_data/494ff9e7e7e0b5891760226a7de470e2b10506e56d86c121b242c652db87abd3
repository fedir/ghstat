HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:08:39 GMT
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: D179:41F4:3DA0EB3:4706F64:5FB01D26
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 10
X-Ratelimit-Reset: 1605377359
X-Ratelimit-Used: 20
X-Xss-Protection: 1; mode=block

c1a6
{"total_count":6,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/keean/zenscript/issues/50","repository_url":"https://api.github.com/repos/keean/zenscript","labels_url":"https://api.github.com/repos/keean/zenscript/issues/50/labels{/name}","comments_url":"https://api.github.com/repos/keean/zenscript/issues/50/comments","events_url":"https://api.github.com/repos/keean/zenscript/issues/50/events","html_url":"https://github.com/keean/zenscript/issues/50","id":644591776,"node_id":"MDU6SXNzdWU2NDQ1OTE3NzY=","number":50,"title":"[reconstructed] WD-40 (for reducing Rust with the next mainstream language) #35","user":{"login":"shelby3","id":247731,"node_id":"MDQ6VXNlcjI0NzczMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/247731?v=4","gravatar_id":"","url":"https://api.github.com/users/shelby3","html_url":"https://github.com/shelby3","followers_url":"https://api.github.com/users/shelby3/followers","following_url":"https://api.github.com/users/shelby3/following{/other_user}","gists_url":"https://api.github.com/users/shelby3/gists{/gist_id}","starred_url":"https://api.github.com/users/shelby3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shelby3/subscriptions","organizations_url":"https://api.github.com/users/shelby3/orgs","repos_url":"https://api.github.com/users/shelby3/repos","events_url":"https://api.github.com/users/shelby3/events{/privacy}","received_events_url":"https://api.github.com/users/shelby3/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":603,"created_at":"2020-06-24T12:54:23Z","updated_at":"2020-11-11T18:39:29Z","closed_at":"2020-06-30T01:43:12Z","author_association":"NONE","active_lock_reason":null,"body":"Original Author: @shelby3\r\nOriginal URL: https://github.com/keean/zenscript/issues/35#issue-243345358\r\nOriginal Date: July 17, 2017\r\n\r\n---\r\n\r\n⁣ | ⁣\r\n----- | -----\r\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/e/ed/WD-40_Smart_Straw.JPG/103px-WD-40_Smart_Straw.JPG)<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | I propose a (rough sketch for a) language design that I posit while attempting to maintain the most significant opportunities for performance (e.g. monomorphisation) would have superior tradeoffs  than Rust in the areas of complexity bloat, design freedom, and benefits versus inflexibility/tsuris of static code analysis. It would have the HLL feel of JavaScript with the LLL control of C++ without all the complexity and unnecessary abstractions (e.g. not the anti-patterns OOP subclassing and not `shared_ptr` as the default over GC).\r\n\r\n<dl>\r\n  <dt>GC Exclusion Axiom:</dt>\r\n  <dd>Afaics, presuming (<sup><sub>enforcement of <a href='https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html#the-borrow-checker'>block scope lifetimes</a> and</sub></sup>) all functions input (<sup><sub>mutable or immutable because <a href='https://github.com/keean/zenscript/issues/17#issuecomment-315656536'>we don’t care in a single-threaded model</a></sub></sup>) borrows—i.e. don’t take lifetime ownership (<sup><sub>note callbacks take lifetime ownership</sub></sup>)—then GC is not required for provable use-after-free (<sup><sub>aka <a href='https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references'>dangling reference</a>/pointer</sub></sup>) safety. However, for <i>dynamic</i> data structures that share references (<sup><sub>e.g. directed graphs with <a href='https://en.wikipedia.org/wiki/Directed_graph#Indegree_and_outdegree'>in-degree > 1</a></sub></sup>), then GC references are much more convenient and performant than the alternative of representing the references with array indices. Note functions that would otherwise take ownership can take ownership of a (GC referenced or unboxed¹) deep copy/clone instead. However where deep cloning would be too costly in terms of performance and memory consumption, shared GC references may be preferred. <sup><sub>Where GC is employed we have protection against memory leaks which <a href='https://github.com/keean/zenscript/issues/17#issuecomment-314963860'>Rust does not provide</a>, except with an <a href='https://github.com/keean/zenscript/issues/34#issuecomment-310898051'>inferior except prompt/deterministic</a> reference counting smart pointer paradigm <a href='https://doc.rust-lang.org/book/second-edition/ch15-04-rc.html'><code>Rc&lt;T></code></a>.</sub></sup></dd>\r\n</dl>\r\n\r\nAfaics, there are some marvelous simplifying implications of this axiom:\r\n\r\n1. Presuming all functions adhere except where they declare references to be GC, afaics the compiler can _automatically_ implement RAII (in `try-finally` blocks² with an equivalent `finally` [concept for](https://github.com/keean/zenscript/issues/17#issuecomment-318685944) `Promise` callbacks) for deterministic memory deallocation (and _automatically_ deterministically destruct instances of a type that have a destructor¹ which is [a major feature lacking from GC languages](http://blog.skylight.io/rust-means-never-having-to-close-a-socket/#theownershipsystem) and the `with` of Python being inferior because it is manual and [object isn’t deallocated deterministically](https://stackoverflow.com/questions/5071121/raii-in-python-automatic-destruction-when-leaving-a-scope); <sup><sub>noting that such types can not used with GC references directly or indirectly as a member of a data structure that is GC referenced</sub></sup>).\r\n\r\n2. Afaics, the same code will be sound and applicable whether the data structures are implemented by compiler unboxed without GC or boxed with GC. In other words, other than the aforementioned explicit GC references for algorithmic convenience and performance, the programmer never needs to indicate whether the data structures should be boxed or unboxed³. I want to strip away the noise/complexity of `Ref<>`, `Box<>`, etc.. For read-only inputs (i.e. the unannotated default) the programmer need not even think about whether the inputs are cloned-by-value (i.e. primitive type) or passed-by-reference; and cloned-by-value type inputs should never be allowed to be annotated as mutable on the function signature (<sup><sub>although they can be mutated inside the function body unless they explicitly annotated read-only and the point being that the programmer never needs to think about whether the type is primitive or not and can see if there is a mutability implication by looking at the function signature</sub></sup>). Although I presume an optimizing compiler will always strive for unboxed (because this will be more performant), if we start writing code in say TypeScript we can strive to adhere to this pattern (or have our compiler generate TypeScript) without all the unboxing mess if we so desire.\r\n\r\n3. Goodbye to Rust’s lifetime parameters and 3 kinds of pointers noise/tsuris/complexity; and  [due to the proposed single-threaded _concurrency_ event model](https://github.com/keean/zenscript/issues/17#issuecomment-315656536) goodbye also to Rust’s mutability borrowing restrictions/complexity/tsuris.\r\n\r\n4. When thinking about interfacing with ASM.js (or Webassembly aka WASM) with minimum (or no) marshaling overhead, then since (which IMO is a [major paradigmatic flaw](http://mrale.ph/blog/2013/03/28/why-asmjs-bothers-me.html#odinmonkey-makes-javascript-fast-with-insane-optimizations)) there is no way yet to have those [interact directly with GC references](https://stackoverflow.com/questions/17564972/handwriting-asm-js-how-can-you-track-javascript-objects-in-the-heap) (ostensibly because since there is no static typing then JavaScript thinks these are unbounded polymorphic, i.e. `Any` aka `Object`), we can (until some future where we write our own VM) favor unboxed and [`malloc`ing these via Emscripten](https://kripken.github.io/emscripten-site/docs/porting/connecting_cpp_and_javascript/Interacting-with-code.html#access-memory-from-javascript) (or similar transpilation to ASM.js/WASM of our own C-like language features).\r\n\r\n¹ But not cloning resources such as file handles.\r\n\r\n² And [Rust’s error handling](https://doc.rust-lang.org/book/second-edition/ch09-00-error-handling.html) has no `try` (`panic!` is doesn't `throw` an error up the stack call hierarchy) and instead forces all exceptions to be bubbled up as [`Result<T, E>`](https://doc.rust-lang.org/book/second-edition/ch09-02-recoverable-errors-with-result.html) return values which is excessive boilerplate noise/tsuris.\r\n\r\n³ Even arrays of data structures that have variable sized members such as `String` can be cleverly implemented (by a library or the compiler) to use indices byte offsets into a second array which contains the variable sized values. This can even work with mutable variable size values, by creating a new value at the end of the second array growing the array as necessary and/or implementing a `malloc` and `free` on the second array, i.e. this second array heap is freed from the parent heap as a monolith. Note if the second array is encapsulated so it can never be referenced directly, then it can be repositioned in virtual address space as needed to minimize virtual address space fragmentation. Monomorphisation could make such libraries more efficient.\r\n\r\nNote _bounded_ polymorphism never absolutely requires boxing. Unbounded polymorphism would but we are refusing to support `Any`, i.e. all unbounded polymorphism in modules must be bounded when consumed by compiled/linked code.\r\n\r\nSubsequent discussion in this thread will explain further the rough sketch so that readers can gain clarity. Let’s see what caveats and flaws are revealed via discussion. I look forward to @keean’s feedback and perhaps he will explain to what degree it corresponds to some features of the Ada PL.\r\n\r\nI do not claim any of these ideas are novel inventions. @keean has alluded to for example cloning as an alternative to lifetimes and/or GC. What I am doing above is making a more holistic presentation of various ideas that have been floating around.\r\n\r\nOf course [typeclasses or ML functor/modules](https://github.com/keean/zenscript/issues/14#issuecomment-308722477) on top of this for HLL abstractions. If typeclasses, there is [an option to go with implicit function arguments](https://github.com/keean/zenscript/issues/30#issuecomment-302123983) instead of `requires`, which makes it more readily implementable in TypeScript.\r\n\r\n@shelby [wrote](https://github.com/keean/zenscript/issues/17#issuecomment-315656536):\r\n> My expectation is that in Rust the programmer will often need to resort to unsafe code to obtain the necessary freedom. My overriding concern is the K.I.S.S. principle and the amount of the complexity budget consumed for the benefits attained.\r\n\r\n@shelby3 [wrote](https://github.com/keean/zenscript/issues/34#issuecomment-315576966):\r\n> …the goals that one justifies employing static typing (“_better structure/abstraction, have more readable/maintainable code, and giving stronger guarantees about safety, lack of bugs, and lack of exploits_”)…\r\n>\r\n> A valid argument against static typing which I have made on these issues threads, is that no static abstraction can be 100% leak-free. Meaning that eventually we always end up having to violate the invariants of the abstraction, or moreover that it becomes very convoluted to maintain type safety and have complete degrees-of-freedom of expression. So then static typing becomes a negative factor for productivity instead of a positive one. This is why selecting which abstractions to enforce with a compiler is an engineering design challenge (arguably even perhaps an art) of matching to use cases.\r\n\r\nEDIT: on the coding for readability point, [_“Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.”_](http://ruby.zigzo.com/2014/08/01/who-said-that-one-violent-psychopath-quote/)\r\n\r\n@shelby3 [wrote](https://github.com/keean/zenscript/issues/17#issuecomment-313808940):\r\n> …there is diminishing return from static checking complexity because we can not statically check every clever algorithm and design paradigm that programmers will come up with. I think he had mentioned fighting with type systems.\r\n>\r\n> I am interested to explore static typing that does not frustrate programmers.\r\n> …\r\n> Disagree that Rust’s balance of flexibility and tsuris is ideally suited to most apps.\r\n\r\n@shelby3 [wrote](https://github.com/keean/zenscript/issues/17#issuecomment-313713206):\r\n> Additionally it’s the noise of extreme static checking such as the lifetime parameters (in addition to generic parameters and normal kinds of static types) on every function in Rust… GC is so much more elegant. I understand certain real-time use cases will not tolerate GC pauses (although we did also discuss V8’s incremental mark-and-sweep upthread) and more optimized by zero overhead abstractions (e.g. no runtime overhead for deciding which to deallocate)\r\n\r\n@shelby3 [wrote](https://github.com/keean/zenscript/issues/17#issuecomment-313578132):\r\n> Perhaps we will eventually think of some low-complexity abstraction that gives us non-marshaled integration for tree data structures between HLL and LLL, and perhaps we can even prove borrowing and lifetimes statically. But I suspect we can not without heading towards the complexity of C++ and Rust.\r\n\r\n@keean [wrote](https://github.com/keean/zenscript/issues/17#issuecomment-312874353):\r\n> I would not write a web service in 'C' or even 'Rust' ever, this is really ideal ground for a garbage collected language. I would use Node (TypeScript), Django(Python) or 'Go'.\r\n\r\n@keean [wrote](https://github.com/keean/zenscript/issues/17#issuecomment-312443168):\r\n> My view is there needs to be a high-level-language and a low-level-language that share enough memory-layout and data-structure that data can easily be passed backward and forward.\r\n\r\n@shelby3 wrote:\r\n> I am wanting to move away from such clusterfucks of never ending aggregation of complexity.\r\n\r\n> I am not going to try to argue that Rust has no use cases.\r\n> \r\n> But I want to create a mainstream programming language used by millions of programmers.\r\n> \r\n> Do you want to compete with Rust?\r\n\r\n@keean [replied](https://github.com/keean/zenscript/issues/17#issuecomment-312446734):\r\n> @shelby3 wrote:\r\n>> Once we start heading for Rust’s three different kinds of pointers, then I will think we have failed to make a clean high-level language for the masses.\r\n>\r\n> Here we agree.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/eclipse/che/issues/15484","repository_url":"https://api.github.com/repos/eclipse/che","labels_url":"https://api.github.com/repos/eclipse/che/issues/15484/labels{/name}","comments_url":"https://api.github.com/repos/eclipse/che/issues/15484/comments","events_url":"https://api.github.com/repos/eclipse/che/issues/15484/events","html_url":"https://github.com/eclipse/che/issues/15484","id":538044580,"node_id":"MDU6SXNzdWU1MzgwNDQ1ODA=","number":15484,"title":"devfile verifier/saver put the argument before the command","user":{"login":"agocorona","id":522634,"node_id":"MDQ6VXNlcjUyMjYzNA==","avatar_url":"https://avatars0.githubusercontent.com/u/522634?v=4","gravatar_id":"","url":"https://api.github.com/users/agocorona","html_url":"https://github.com/agocorona","followers_url":"https://api.github.com/users/agocorona/followers","following_url":"https://api.github.com/users/agocorona/following{/other_user}","gists_url":"https://api.github.com/users/agocorona/gists{/gist_id}","starred_url":"https://api.github.com/users/agocorona/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/agocorona/subscriptions","organizations_url":"https://api.github.com/users/agocorona/orgs","repos_url":"https://api.github.com/users/agocorona/repos","events_url":"https://api.github.com/users/agocorona/events{/privacy}","received_events_url":"https://api.github.com/users/agocorona/received_events","type":"User","site_admin":false},"labels":[{"id":192367931,"node_id":"MDU6TGFiZWwxOTIzNjc5MzE=","url":"https://api.github.com/repos/eclipse/che/labels/kind/question","name":"kind/question","color":"cc317c","default":false,"description":"Questions that haven't been identified as being feature requests or bugs."},{"id":345100100,"node_id":"MDU6TGFiZWwzNDUxMDAxMDA=","url":"https://api.github.com/repos/eclipse/che/labels/status/info-needed","name":"status/info-needed","color":"505050","default":false,"description":"More information is needed before the issue can move into the “analyzing” state for engineering."}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-12-15T12:30:39Z","updated_at":"2019-12-17T16:53:01Z","closed_at":"2019-12-17T16:53:01Z","author_association":"NONE","active_lock_reason":null,"body":"In my devfile, I have:\r\n\r\n```\r\ncomponents:\r\n  - id: eclipse/che-theia/latest\r\n    type: cheEditor\r\n  - mountSources: true\r\n    command:\r\n      - sleep\r\n      - infinity\r\n```\r\n\r\nbut when I touch the devfile, half of the time, che edit it and reverse the order of command:\r\n\r\n```\r\ncomponents:\r\n  - id: eclipse/che-theia/latest\r\n    type: cheEditor\r\n  - mountSources: true\r\n    command:\r\n      - Infinity\r\n      - sleep\r\n```\r\nThat happens even if if I write it as   `command=['sleep','infinity']`","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/fedir/ghstat/issues/11","repository_url":"https://api.github.com/repos/fedir/ghstat","labels_url":"https://api.github.com/repos/fedir/ghstat/issues/11/labels{/name}","comments_url":"https://api.github.com/repos/fedir/ghstat/issues/11/comments","events_url":"https://api.github.com/repos/fedir/ghstat/issues/11/events","html_url":"https://github.com/fedir/ghstat/issues/11","id":306659046,"node_id":"MDU6SXNzdWUzMDY2NTkwNDY=","number":11,"title":"Comparison of Haskell Web Frameworks","user":{"login":"fedir","id":306586,"node_id":"MDQ6VXNlcjMwNjU4Ng==","avatar_url":"https://avatars1.githubusercontent.com/u/306586?v=4","gravatar_id":"","url":"https://api.github.com/users/fedir","html_url":"https://github.com/fedir","followers_url":"https://api.github.com/users/fedir/followers","following_url":"https://api.github.com/users/fedir/following{/other_user}","gists_url":"https://api.github.com/users/fedir/gists{/gist_id}","starred_url":"https://api.github.com/users/fedir/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fedir/subscriptions","organizations_url":"https://api.github.com/users/fedir/orgs","repos_url":"https://api.github.com/users/fedir/repos","events_url":"https://api.github.com/users/fedir/events{/privacy}","received_events_url":"https://api.github.com/users/fedir/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-03-19T22:20:19Z","updated_at":"2018-03-21T00:38:43Z","closed_at":"2018-03-21T00:38:43Z","author_association":"OWNER","active_lock_reason":null,"body":"* https://github.com/yesodweb/yesod\r\n* https://github.com/snapframework/snap-core\r\n* https://github.com/agrafix/Spock\r\n* https://github.com/transient-haskell/axiom\r\n* https://github.com/myfreeweb/magicbane\r\n* https://github.com/positiondev/fn\r\n\r\nRessources :\r\n* https://github.com/uhub/awesome-haskell","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/commercialhaskell/stackage/issues/3394","repository_url":"https://api.github.com/repos/commercialhaskell/stackage","labels_url":"https://api.github.com/repos/commercialhaskell/stackage/issues/3394/labels{/name}","comments_url":"https://api.github.com/repos/commercialhaskell/stackage/issues/3394/comments","events_url":"https://api.github.com/repos/commercialhaskell/stackage/issues/3394/events","html_url":"https://github.com/commercialhaskell/stackage/issues/3394","id":306111149,"node_id":"MDU6SXNzdWUzMDYxMTExNDk=","number":3394,"title":"Blocked from GHC 8.4 builds via build failures (own or transitive)","user":{"login":"DanBurton","id":713692,"node_id":"MDQ6VXNlcjcxMzY5Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/713692?v=4","gravatar_id":"","url":"https://api.github.com/users/DanBurton","html_url":"https://github.com/DanBurton","followers_url":"https://api.github.com/users/DanBurton/followers","following_url":"https://api.github.com/users/DanBurton/following{/other_user}","gists_url":"https://api.github.com/users/DanBurton/gists{/gist_id}","starred_url":"https://api.github.com/users/DanBurton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DanBurton/subscriptions","organizations_url":"https://api.github.com/users/DanBurton/orgs","repos_url":"https://api.github.com/users/DanBurton/repos","events_url":"https://api.github.com/users/DanBurton/events{/privacy}","received_events_url":"https://api.github.com/users/DanBurton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-03-17T00:18:42Z","updated_at":"2018-05-21T15:28:52Z","closed_at":"2018-03-17T00:21:44Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The following packages are not present in the current stackage nightly build plan (which is now using ghc-8.4.1), mostly due to a build failure of the package itself, or of a transitive dependency. This listing may be incomplete. This thread will include a lot of pings, so I will lock it. To get your package back into the nightly builds, once you have made it compatible with ghc 8.4, please open a PR as usual on https://github.com/fpco/stackage/blob/master/build-constraints.yaml.\r\n\r\nBe sure to uncomment your package, as well as deleting any lines that state - yourPackage < 0\r\n\r\nIf you do not understand why your package was excluded from the nightly build plan, please feel free to open an issue, and we will be happy to try and explain, and help you to figure out any steps needed to get your package back in.\r\n\r\nstackage-curator: \r\nHTF (not present) depended on by:\r\n- [ ] Spock-worker-0.3.1.0 (>=0.12.2.1). Alexander Thiemann <mail@athiemann.net> @agrafix. @agrafix. Used by: test-suite\r\n- [ ] buffer-builder-0.2.4.4 (-any). No maintainer. @chadaustin. Used by: test-suite\r\n- [ ] ignore-0.1.1.0 (>=0.12.1). Alexander Thiemann <mail@athiemann.net> @agrafix. @agrafix. Used by: test-suite\r\n- [ ] large-hashable-0.1.0.4 (-any). Stefan Wehr <wehr@factisresearch.com> @skogsbaer. @factisresearch. Used by: test-suite\r\n\r\nHaXml (not present) depended on by:\r\n- [ ] haxr-3000.11.2 (>=1.22 && < 1.26). Brent Yorgey <byorgey@gmail.com> @byorgey. @byorgey. Used by: library\r\n\r\nRasterific (not present) depended on by:\r\n- [ ] rasterific-svg-0.3.3.1 (==0.7.*). Vincent Berthoux <vincent.berthoux@gmail.com> @Twinside. @Twinside. Used by: library, executable\r\n\r\nSpock-core (not present) depended on by:\r\n- [ ] Spock-0.12.0.0 (>=0.12). Alexander Thiemann <mail@athiemann.net> @agrafix. @agrafix. Used by: library, test-suite\r\n\r\narithmoi (not present) depended on by:\r\n- [ ] pell-0.1.1.0 (-any). Lars Brünjes <brunjlar@gmail.com> @brunjlar. @brunjlar. Used by: library\r\n\r\nbiocore (not present) depended on by:\r\n- [ ] biopsl-0.4 (>=0.1). Ketil Malde @ketil-malde.. Used by: library\r\n- [ ] seqloc-0.6.1.1 (>=0.2). Ketil Malde @ketil-malde. @ingolia. Used by: library, test-suite\r\n\r\nbytestring-trie (not present) depended on by:\r\n- [ ] tries-0.0.5 (-any). Athan Clark <athan.clark@gmail.com> @athanclark. @athanclark. Used by: library, test-suite, benchmark\r\n\r\ncmark (not present) depended on by:\r\n- [ ] cmark-lucid-0.1.0.0 (-any). Artyom <yom@artyom.me> @neongreen. @aelve. Used by: library\r\n- [ ] tldr-0.3.0 (-any). Sibi Prabakaran <sibi@psibi.in> @psibi. @psibi. Used by: library\r\n\r\ncolorful-monoids (not present) depended on by:\r\n- [ ] wl-pprint-console-0.1.0.1 (==0.2.*). Daniel Mendler <mail@daniel-mendler.de> @minad. @minad. Used by: library\r\n\r\ndirect-sqlite (not present) depended on by:\r\n- [ ] groundhog-sqlite-0.8.0.1 (>=2.3.5). Boris Lykah <lykahb@gmail.com> @lykahb. @lykahb. Used by: library\r\n- [ ] selda-sqlite-0.1.6.0 (>=2.2 && < 2.4). Anton Ekblad <anton@ekblad.cc> @valderman. @valderman. Used by: library\r\n\r\ndjinn-lib (not present) depended on by:\r\n- [ ] djinn-ghc-0.0.2.3 (>=0.0.1.2). trupill@gmail.com.. Used by: library\r\n\r\ndom-parser (not present) depended on by:\r\n- [ ] xml-isogen-0.2.1 (>=2.0.0). typeable.io <makeit@typeable.io>. @typeable. Used by: library, test-suite\r\n\r\nenclosed-exceptions (not present) depended on by:\r\n- [ ] configuration-tools-0.3.0 (>=1.0). Lars Kuhtz <lakuhtz@gmail.com> @larskuhtz. @alephcloud. Used by: library, test-suite\r\n- [ ] network-attoparsec-0.12.2 (-any). Leon Mergen <leon@solatis.com> @solatis. @solatis. Used by: library\r\n- [ ] riak-1.1.2.4 (>=1.0.1.1 && < =1.1). Tim McGilchrist <timmcgil@gmail.com>  @tmcgilchrist. @riak-haskell-client. Used by: library\r\n\r\nfb (not present) depended on by:\r\n- [ ] yesod-auth-fb-1.9.0 (>=1.2.0). Felipe Lessa <felipe.lessa@gmail.com> @meteficha. @psibi. Used by: library\r\n\r\nghcjs-base-stub (not present) depended on by:\r\n- [ ] disposable-0.2.0.4 (>=0.1.0.2 && < 1). Louis Pan <louis@pan.me> @louispan. @githubuser @louispan. Used by: library\r\n- [ ] javascript-extras-0.3.2.0 (>=0.1.0.2 && < 1). Louis Pan <louis@pan.me> @louispan. @louispan. Used by: library, executable\r\n\r\nghcjs-perch (not present) depended on by:\r\n- [ ] axiom-0.4.6 (>=0.3.3). Alberto G. Corona <agocorona@gmail.com> @agocorona. @agocorona @transient-haskell. Used by: library\r\n\r\ngroundhog (not present) depended on by:\r\n- [ ] groundhog-inspector-0.8.0.2 (==0.8.*). Boris Lykah <lykahb@gmail.com> @lykahb. @lykahb. Used by: library, executable\r\n- [ ] groundhog-mysql-0.8.0.1 (>=0.8.0.1 && < 0.9). Boris Lykah <lykahb@gmail.com> @lykahb.. Used by: library\r\n- [ ] groundhog-sqlite-0.8.0.1 (>=0.8.0.1 && < 0.9). Boris Lykah <lykahb@gmail.com> @lykahb. @lykahb. Used by: library\r\n- [ ] groundhog-th-0.8.0.2 (==0.8.*). Boris Lykah <lykahb@gmail.com> @lykahb. @lykahb. Used by: library\r\n\r\nhashtables (not present) depended on by:\r\n- [ ] Hoed-0.5.0 (-any). Maarten Faddegon <stackage@maartenfaddegon.nl> @MaartenFaddegon. @MaartenFaddegon. Used by: library\r\n- [ ] RefSerialize-0.4.0 (-any). Alberto G. Corona <agocorona@gmail.com> @agocorona.. Used by: library\r\n- [ ] TCache-0.12.1 (-any). Alberto G. Corona <agocorona@gmail.com> @agocorona. @agocorona. Used by: library\r\n- [ ] hledger-lib-1.5 (>=1.2). Simon Michael <simon@joyful.com> @simonmichael. @simonmichael. Used by: library, test-suite\r\n- [ ] pred-trie-0.5.1.2 (-any). Athan Clark <athan.clark@gmail.com> @athanclark. @athanclark. Used by: library\r\n\r\nhlibsass (not present) depended on by:\r\n- [ ] hsass-0.5.0 (>=0.1.5.2). Jakub Fijałkowski <kuba@codinginfinity.me> @jakubfijalkowski. @jakubfijalkowski. Used by: library\r\n\r\nhpqtypes (not present) depended on by:\r\n- [ ] log-postgres-0.7.0.2 (>=1.5). Oleg Grenrus <oleg.grenrus@iki.fi> @phadej. @scrive. Used by: library\r\n\r\ninline-c (not present) depended on by:\r\n- [ ] hocilib-0.2.0 (>=0.5 && < 1). Thierry Bourrillon <thierry.bourrillon@fpinsight.com> @tbourrillon. @thierry-b. Used by: library\r\n- [ ] inline-c-cpp-0.2.1.0 (>=0.6.0.0). Luke Iannini <lukexi@me.com> @lukexi. @snoyberg. Used by: library, test-suite\r\n- [ ] inline-r-0.9.1 (==0.6.*). No maintainer. @tweag. Used by: library\r\n- [ ] liboath-hs-0.0.1.0 (>=0.5.6.1 && < 0.6.1.0). Matt Parsons <parsonsmatt@gmail.com> @parsonsmatt. @parsonsmatt. Used by: library\r\n\r\njson (not present) depended on by:\r\n- [ ] hledger-web-1.5.1 (-any). Simon Michael <simon@joyful.com> @simonmichael. @simonmichael. Used by: library, executable, test-suite\r\n- [ ] katydid-0.1.1.0 (-any). Walter Schulze <awalterschulze@gmail.com> @awalterschulze. @katydid. Used by: library, test-suite\r\n\r\nlist-t (not present) depended on by:\r\n- [ ] Spock-0.12.0.0 (>=0.4). Alexander Thiemann <mail@athiemann.net> @agrafix. @agrafix. Used by: library\r\n- [ ] slave-thread-1.0.2 (>=0.2.4 && < 2). Nikita Volkov <nikita.y.volkov@mail.ru> @nikita-volkov. @nikita-volkov. Used by: library\r\n- [ ] stm-containers-0.2.16 (>=0.2 && < 2). Nikita Volkov <nikita.y.volkov@mail.ru> @nikita-volkov. @nikita-volkov. Used by: library\r\n- [ ] timemap-0.0.6 (-any). Athan Clark <athan.clark@gmail.com> @athanclark. @athanclark. Used by: library, executable, test-suite, benchmark\r\n\r\nmatrix (not present) depended on by:\r\n- [ ] astro-0.4.2.0 (>=0.3.4.4). Alexander Ignatyev <ignatyev.alexander@gmail.com> @alexander-ignatyev. @alexander-ignatyev. Used by: library\r\n- [ ] exp-pairs-0.1.6.0 (>=0.1). Andrew Lelechenko <andrew.lelechenko@gmail.com> @Bodigrim. @Bodigrim. Used by: test-suite\r\n\r\nmonoid-subclasses (not present) depended on by:\r\n- [ ] incremental-parser-0.2.5.3 (< 0.5). Mario Blazevic <blamario@yahoo.com> @blamario. @blamario. Used by: library, test-suite, benchmark\r\n- [ ] opml-conduit-0.6.0.4 (-any). koral koral@mailoo.org @k0ral. @k0ral. Used by: library\r\n- [ ] picoparsec-0.1.2.3 (==0.4.*). Mario Blazevic <blamario@yahoo.com> @blamario.. Used by: library, benchmark\r\n- [ ] timerep-2.0.0.2 (>=0.4.1). koral koral@mailoo.org @k0ral. @HugoDaniel. Used by: library\r\n\r\nmysql (not present) depended on by:\r\n- [ ] groundhog-mysql-0.8.0.1 (>=0.1.1.3 && < 0.2). Boris Lykah <lykahb@gmail.com> @lykahb.. Used by: library\r\n- [ ] mysql-simple-0.4.4 (>=0.1.1.1). Paul Rouse <pgr@doynton.org> @paul-rouse. @paul-rouse. Used by: library\r\n- [ ] persistent-mysql-2.8.1 (>=0.1.1.3 && < 0.2). Michael Snoyman michael@snoyman.com @snoyberg. @snoyberg. Used by: library\r\n\r\npipes-concurrency (not present) depended on by:\r\n- [ ] pipes-fluid-0.6.0.0 (==2.*). Louis Pan <louis@pan.me> @louispan. @louispan. Used by: test-suite\r\n- [ ] pipes-misc-0.4.0.1 (==2.*). Louis Pan <louis@pan.me> @louispan. @louispan. Used by: library, test-suite\r\n\r\npipes-safe (not present) depended on by:\r\n- [ ] pipes-network-0.6.4.1 (>=2.1 && < 2.3). Renzo Carbonara <renzocarbonara@gmail.com> @k0001. @k0001. Used by: library\r\n\r\npred-set (not present) depended on by:\r\n- [ ] pred-trie-0.5.1.2 (-any). Athan Clark <athan.clark@gmail.com> @athanclark. @athanclark. Used by: library\r\n\r\nrainbow (not present) depended on by:\r\n- [ ] rainbox-0.18.0.10 (>=0.26). Omari Norman <omari@smileystation.com> @massysett. @massysett. Used by: library, test-suite\r\n\r\nreform (not present) depended on by:\r\n- [ ] reform-blaze-0.2.4.3 (==0.2.*). Jeremy Shaw <jeremy@n-heptane.com> @stepcut. @stepcut. Used by: library\r\n- [ ] reform-hamlet-0.0.5.3 (==0.2.*). Jeremy Shaw <jeremy@n-heptane.com> @stepcut. @stepcut. Used by: library\r\n\r\nreroute (not present) depended on by:\r\n- [ ] Spock-0.12.0.0 (>=0.3.1). Alexander Thiemann <mail@athiemann.net> @agrafix. @agrafix. Used by: library\r\n\r\nshelly (not present) depended on by:\r\n- [ ] c2hs-0.28.3 (>=1.0). Michael Snoyman michael@snoyman.com @snoyberg. @haskell. Used by: test-suite\r\n\r\nsimple-templates (not present) depended on by:\r\n- [ ] simple-0.11.2 (>=0.7.0). Amit Levy <amit@amitlevy.com> @alevy. @alevy. Used by: library, executable, test-suite\r\n\r\nsqlite-simple (not present) depended on by:\r\n- [ ] mbtiles-0.6.0.0 (-any). Joseph Canero <jmc41493@gmail.com> @caneroj1. @caneroj1. Used by: library\r\n\r\ntext-format (not present) depended on by:\r\n- [ ] morte-1.6.16 (< 0.4). Gabriel Gonzalez <Gabriel439@gmail.com> @Gabriel439. @Gabriel439. Used by: library, executable\r\n\r\ntinylog (not present) depended on by:\r\n- [ ] redis-io-0.7.0 (>=0.10). Toralf Wittner <tw@dtex.org> @twittner.. Used by: library, test-suite, benchmark\r\n\r\ntransient (not present) depended on by:\r\n- [ ] axiom-0.4.6 (>=0.5.9.2). Alberto G. Corona <agocorona@gmail.com> @agocorona. @agocorona @transient-haskell. Used by: library\r\n- [ ] transient-universe-0.4.6.1 (>=0.5.9.2). Alberto G. Corona <agocorona@gmail.com> @agocorona. @agocorona. Used by: library, executable, test-suite\r\n\r\ntype-combinators (not present) depended on by:\r\n- [ ] backprop-0.1.3.0 (-any). Justin Le <justin@jle.im> @mstksg. @mstksg. Used by: library\r\n\r\nvalidity (not present) depended on by:\r\n- [ ] genvalidity-0.4.0.4 (>=0.4.0.3 && < 0.5). Tom Sydney Kerckhove <syd.kerckhove@gmail.com> @NorfairKing. @NorfairKing. Used by: library\r\n- [ ] validity-aeson-0.1.0.0 (==0.4.*). Tom Sydney Kerckhove <syd.kerckhove@gmail.com> @NorfairKing. @NorfairKing. Used by: library\r\n- [ ] validity-path-0.2.0.2 (==0.4.*). Tom Sydney Kerckhove <syd.kerckhove@gmail.com> @NorfairKing. @NorfairKing. Used by: library\r\n- [ ] validity-scientific-0.1.0.0 (==0.4.*). Tom Sydney Kerckhove <syd.kerckhove@gmail.com> @NorfairKing. @NorfairKing. Used by: library\r\n- [ ] validity-unordered-containers-0.1.0.0 (==0.4.*). Tom Sydney Kerckhove <syd.kerckhove@gmail.com> @NorfairKing. @NorfairKing. Used by: library\r\n- [ ] validity-vector-0.1.0.0 (==0.4.*). Tom Sydney Kerckhove <syd.kerckhove@gmail.com> @NorfairKing. @NorfairKing. Used by: library\r\n\r\nvalidity-text (not present) depended on by:\r\n- [ ] validity-aeson-0.1.0.0 (==0.2.*). Tom Sydney Kerckhove <syd.kerckhove@gmail.com> @NorfairKing. @NorfairKing. Used by: library\r\n\r\nvector-sized (not present) depended on by:\r\n- [ ] hamilton-0.1.0.2 (>=0.6). Justin Le <justin@jle.im> @mstksg. @mstksg. Used by: library, executable\r\n\r\nwl-pprint-text (not present) depended on by:\r\n- [ ] elm-export-0.6.0.1 (>=1.1.0.4). William Casarin <bill@casarin.me> @jb55. @krisajenkins. Used by: library\r\n- [ ] hsx-jmacro-7.3.8 (==1.1.*). Jeremy Shaw <jeremy@n-heptane.com> @stepcut. @stepcut. Used by: library\r\n- [ ] jmacro-0.6.14 (-any). Gershom Bazerman <gershomb@gmail.com> @gbaz.. Used by: library, executable\r\n\r\nyesod-fb (not present) depended on by:\r\n- [ ] yesod-auth-fb-1.9.0 (>=0.5.0). Felipe Lessa <felipe.lessa@gmail.com> @meteficha. @psibi. Used by: library\r\n\r\nyjsvg (not present) depended on by:\r\n- [ ] xturtle-0.2.0.0 (==0.2.*). Yoshikuni Jujo <PAF01143@nifty.ne.jp> @YoshikuniJujo. @YoshikuniJujo. Used by: library\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/input-output-hk/stack2nix/issues/101","repository_url":"https://api.github.com/repos/input-output-hk/stack2nix","labels_url":"https://api.github.com/repos/input-output-hk/stack2nix/issues/101/labels{/name}","comments_url":"https://api.github.com/repos/input-output-hk/stack2nix/issues/101/comments","events_url":"https://api.github.com/repos/input-output-hk/stack2nix/issues/101/events","html_url":"https://github.com/input-output-hk/stack2nix/issues/101","id":327106227,"node_id":"MDU6SXNzdWUzMjcxMDYyMjc=","number":101,"title":"Support stack's new syntax for git locations in extra-deps","user":{"login":"nh2","id":399535,"node_id":"MDQ6VXNlcjM5OTUzNQ==","avatar_url":"https://avatars1.githubusercontent.com/u/399535?v=4","gravatar_id":"","url":"https://api.github.com/users/nh2","html_url":"https://github.com/nh2","followers_url":"https://api.github.com/users/nh2/followers","following_url":"https://api.github.com/users/nh2/following{/other_user}","gists_url":"https://api.github.com/users/nh2/gists{/gist_id}","starred_url":"https://api.github.com/users/nh2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nh2/subscriptions","organizations_url":"https://api.github.com/users/nh2/orgs","repos_url":"https://api.github.com/users/nh2/repos","events_url":"https://api.github.com/users/nh2/events{/privacy}","received_events_url":"https://api.github.com/users/nh2/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2018-05-28T19:51:20Z","updated_at":"2018-07-27T01:04:48Z","closed_at":"2018-07-27T01:04:48Z","author_association":"MEMBER","active_lock_reason":null,"body":"Current stack allows to write this new syntax:\r\n\r\n```\r\nextra-deps:\r\n- git: git@github.com:NorfairKing/validity.git\r\n  commit: a86dd3e4830c14c056a0d5d8712864d395d25b2a\r\n```\r\n\r\nthe old syntax for this was to put it in `packages`:\r\n\r\n```\r\npackages:\r\n- location:\r\n    git: git@github.com:NorfairKing/validity.git\r\n    commit: a86dd3e4830c14c056a0d5d8712864d395d25b2a\r\n```\r\n\r\nSee https://www.fpcomplete.com/blog/2017/07/stacks-new-extensible-snapshots:\r\n\r\n> Next, we've moved the Git repo information out of packages and into `extra-deps` where it logically belongs.\r\n\r\nIf you use the new `extra-deps` syntax, then you get a lot of confusing and fancy errors from `cabal2nix`:\r\n\r\n```\r\n[nix-shell:~/src/haskell/intray]$ git rev-parse HEAD\r\n0841d5ee3132e56387f7f466c8292b2d03da34ad\r\n\r\n[nix-shell:~/src/haskell/intray]$ ~/src/haskell/stack2nix/.stack-work/install/x86_64-linux/lts-9.20/8.0.2/bin/stack2nix --version\r\nstack2nix 0.1.3.1\r\n\r\n~/src/haskell/stack2nix (git)-[remotes/origin/master] % git rev-parse HEAD\r\n9070f9173ae32f0be6f7830c41c8cfb8e780fdbf\r\n\r\n[nix-shell:~/src/haskell/intray]$ ~/src/haskell/stack2nix/.stack-work/install/x86_64-linux/lts-9.20/8.0.2/bin/stack2nix . > default.nix\r\nEnsuring git version is >= 2 ...\r\nEnsuring cabal version is >= 2 ...\r\nthese paths will be fetched (151.73 MiB download, 1637.46 MiB unpacked):\r\n  /nix/store/1is4c0vfcs0q5i3ygij21y6z713lihw9-binutils-wrapper-2.28.1\r\n  /nix/store/2pdyyxb4dzhrbpyhq57rwnn8nahahr9f-ghc-8.2.2\r\n  /nix/store/4r5kszyy0iirc5agfah45lvz7mnnsrb4-gcc-wrapper-7.3.0\r\n  /nix/store/a7w4hp7pzs2npccy31svc9bxcna77lwk-ghc-8.2.2-doc\r\n  /nix/store/cm5znbhvylrh702hhsy9hnad7wk3v7xv-gcc-7.3.0\r\n  /nix/store/fn2x7v3bs305xl55ynj698mjc0yfn1lh-glibc-2.26-131-dev\r\n  /nix/store/fzcs0fn6bb04m82frhlb78nc03ny3w55-binutils-2.28.1\r\n  /nix/store/g6clshyqd7nvfh5zbvvzpms5qhrks7mw-expand-response-params\r\n  /nix/store/jc8c6pkdd132yr9ii5s2zasi7ri1f822-gmp-6.1.2-dev\r\n  /nix/store/jy6igfw7xawlhsyk7f7cjng8hd0dqdpf-glibc-2.26-131-bin\r\n  /nix/store/y3rny9613dsz4l0k1nwqmzk5irnn0mdy-linux-headers-4.15\r\nfetching path ‘/nix/store/fzcs0fn6bb04m82frhlb78nc03ny3w55-binutils-2.28.1’...\r\nfetching path ‘/nix/store/a7w4hp7pzs2npccy31svc9bxcna77lwk-ghc-8.2.2-doc’...\r\nfetching path ‘/nix/store/jc8c6pkdd132yr9ii5s2zasi7ri1f822-gmp-6.1.2-dev’...\r\nfetching path ‘/nix/store/y3rny9613dsz4l0k1nwqmzk5irnn0mdy-linux-headers-4.15’...\r\nfetching path ‘/nix/store/g6clshyqd7nvfh5zbvvzpms5qhrks7mw-expand-response-params’...\r\nfetching path ‘/nix/store/jy6igfw7xawlhsyk7f7cjng8hd0dqdpf-glibc-2.26-131-bin’...\r\nfetching path ‘/nix/store/fn2x7v3bs305xl55ynj698mjc0yfn1lh-glibc-2.26-131-dev’...\r\nfetching path ‘/nix/store/cm5znbhvylrh702hhsy9hnad7wk3v7xv-gcc-7.3.0’...\r\nfetching path ‘/nix/store/1is4c0vfcs0q5i3ygij21y6z713lihw9-binutils-wrapper-2.28.1’...\r\nfetching path ‘/nix/store/4r5kszyy0iirc5agfah45lvz7mnnsrb4-gcc-wrapper-7.3.0’...\r\nfetching path ‘/nix/store/2pdyyxb4dzhrbpyhq57rwnn8nahahr9f-ghc-8.2.2’...\r\n\r\nCloning a86dd3e4830c14c056a0d5d8712864d395d25b2a from https://github.com/NorfairKing/validity.git\r\nCloning into '/home/niklas/src/haskell/intray/.stack-work/downloaded/DJYyHnECDN11'...\r\nremote: Counting objects: 3743, done.\r\nremote: Total 3743 (delta 0), reused 0 (delta 0), pack-reused 3743\r\nReceiving objects: 100% (3743/3743), 462.11 KiB | 0 bytes/s, done.\r\nResolving deltas: 100% (2066/2066), done.\r\nCloning 155c9ec880ca1c12f7dd8a8468b3626de8164823 from https://github.com/NorfairKing/typed-uuid.git\r\nCloning into '/home/niklas/src/haskell/intray/.stack-work/downloaded/vXlhG1BOSkPx'...\r\nremote: Counting objects: 65, done.\r\nremote: Total 65 (delta 0), reused 0 (delta 0), pack-reused 65\r\nUnpacking objects: 100% (65/65), done.\r\nCloning 9a670db25ac68974045c75da364486c10970824f from https://github.com/NorfairKing/pretty-relative-time.git\r\nCloning into '/home/niklas/src/haskell/intray/.stack-work/downloaded/ggQgp47KzyyB'...\r\nremote: Counting objects: 95, done.\r\nremote: Compressing objects: 100% (7/7), done.\r\nremote: Total 95 (delta 2), reused 8 (delta 2), pack-reused 84\r\nUnpacking objects: 100% (95/95), done.\r\n+ cabal2nix --subpath . --system x86_64-linux cabal://ALUT-2.4.0.2\r\n[...]\r\n+ cabal2nix --subpath . --system x86_64-linux cabal://geniplate-mirror-0.7.6\r\n+ cabal2nix --revision a86dd3e4830c14c056a0d5d8712864d395d25b2a --subpath genvalidity --system x86_64-linux https://github.com/NorfairKing/valownloading ‘https://github.com/NorfairKing/validity.git’... 1D [0/0 KiB, 0.0 KiB/s [0/0 KiB, 0.0 KiB/s]downloading ‘https://github.com/NorfairKing/validity.git’... [93/0 KiB, 91.1 KiB/s]4d395d25b2a --subpath genvalidity-bytest [39/0 KiB, 37.8 KiB/s]*** parsing cabal file: https://github.com/NorfairKing/validity.git/genvalidity-hspec: openFile: does not exist (No such file or directory)ath genvalidity-contai [ [39/0 KiB, 37.1 KiB/s]x https://github.com/NorfairKing/validity.git\r\n*** parsing cabal file: https://github.com/NorfairKing/validity.git/genvalidity: openFile: does not exist (No such file or directory)NorfairKing/validity.git\r\nInitialized empty Git repository in /run/user/1000/git-checkout-tmp-QdgTNNHN/validity-a86dd3e/.git/://github.com/NorfairKing/validity.git’... \r\n\r\n*** parsing cabal file: https://github.com/NorfairKing/validity.git/genvalidity-bytestring: openFile: does not exist (No such file or directory)\r\nInitialized empty Git repository in /run/user/1000/git-checkout-tmp-xf35kT5f/validity-a86dd3e/.git/\r\nInitialized empty Git repository in /run/user/1000/git-checkout-tmp-3KdkkJyD/validity-a86dd3e/.git/\r\n\r\n*** parsing cabal file: https://github.com/NorfairKing/validity.git/genvalidity-containers: openFile: does not exist (No such file or directory)\r\nInitialized empty Git repository in /run/user/1000/git-checkout-tmp-A6qtmrFO/validity-a86dd3e/.git/\r\nremote: Counting objects: 344, done.\r\nremote: Counting objects: 344, done.\r\nremote: Counting objects: 344, done.\r\nremote: Counting objects: 344, done.\r\nremote: Compressing objects: 100% (213/213), done.\r\nremote: Compressing objects: 100% (213/213), done.\r\nremote: Compressing objects: 100% (213/213), done.\r\nremote: Compressing objects: 100% (213/213), done.\r\nremote: Total 344 (delta 61), reused 178 (delta 20), pack-reused 0\r\nReceiving objects: 100% (344/344), 89.72 KiB | 0 bytes/s, done.\r\nResolving deltas: 100% (61/61), done.\r\nFrom https://github.com/NorfairKing/validity\r\n * branch            development -> FETCH_HEAD\r\n * [new branch]      development -> origin/development\r\nSwitched to a new branch 'fetchgit' \r\nremote: Total 344 (delta 61), reused 178 (delta 20), pack-reused 0\r\nremote: Total 344 (delta 61), reused 178 (delta 20), pack-reused 0\r\nReceiving objects: 100% (344/344), 89.72 KiB | 0 bytes/s, done.\r\nReceiving objects: 100% (344/344), 89.72 KiB | 0 bytes/s, done.\r\nResolving deltas: 100% (61/61), done.\r\nResolving deltas: 100% (61/61), done.\r\nFrom https://github.com/NorfairKing/validity\r\n * branch            development -> FETCH_HEAD\r\n * [new branch]      development -> origin/development\r\nFrom https://github.com/NorfairKing/validity\r\n * branch            development -> FETCH_HEAD\r\n * [new branch]      development -> origin/development\r\nSwitched to a new branch 'fetchgit'\r\nSwitched to a new branch 'fetchgit'\r\nremote: Total 344 (delta 61), reused 178 (delta 20), pack-reused 0\r\nReceiving objects: 100% (344/344), 89.72 KiB | 0 bytes/s, done.\r\nResolving deltas: 100% (61/61), done.\r\nFrom https://github.com/NorfairKing/validity\r\n * branch            development -> FETCH_HEAD\r\n * [new branch]      development -> origin/development\r\nSwitched to a new branch 'fetchgit'\r\nremoving `.git'...\r\nremoving `.git'...\r\nremoving `.git'...\r\nerror: current Nix store schema is version 10, but I only support 7\r\nerror: current Nix store schema is version 10, but I only support 7\r\nerror: current Nix store schema is version 10, but I only support 7\r\nremoving `.git'...\r\nerror: current Nix store schema is version 10, but I only support 7\r\nabort: HTTP Error 406: Not Acceptable\r\nabort: HTTP Error 406: Not Acceptable\r\nabort: HTTP Error 406: Not Acceptable\r\nabort: HTTP Error 406: Not Acceptable\r\nsvn: E205000: Syntax error in revision argument 'a86dd3e4830c14c056a0d5d8712864d395d25b2a'\r\nsvn: E205000: Syntax error in revision argument 'a86dd3e4830c14c056a0d5d8712864d395d25b2a'\r\nsvn: E205000: Syntax error in revision argument 'a86dd3e4830c14c056a0d5d8712864d395d25b2a'\r\nsvn: E205000: Syntax error in revision argument 'a86dd3e4830c14c056a0d5d8712864d395d25b2a'\r\nfailed to open trace file: [Errno 2] No such file or directory: ':/.bzr.log'\r\nfailed to open trace file: [Errno 2] No such file or directory: ':/.bzr.log'\r\nfailed to open trace file: [Errno 2] No such file or directory: ':/.bzr.log'\r\nfailed to open trace file: [Errno 2] No such file or directory: ':/.bzr.log'\r\nNot checking SSL certificate for github.com.\r\nNot checking SSL certificate for github.com.\r\nNot checking SSL certificate for github.com.\r\nNot checking SSL certificate for github.com.\r\nbzr: ERROR: Not a branch: \"https://github.com/NorfairKing/validity.git/\".\r\n+ cabal2nix --subpath . --system x86_64-linux cabal://gi-javascriptcore-4.0.15\r\n+ cabal2nix --subpath . --system x86_64-linux cabal://gloss-accelerate-2.0.0.1\r\n+ cabal2nix --subpath . --system x86_64-linux cabal://dynamic-state-0.3\r\n+ cabal2nix --subpath . --system x86_64-linux cabal://distribution-nixpkgs-1.1\r\n+ cabal2nix --subpath . --system x86_64-linux cabal://lens-simple-0.1.0.9\r\nbzr: ERROR: Not a branch: \"https://github.com/NorfairKing/validity.git/\".\r\nbzr: ERROR: Not a branch: \"https://github.com/NorfairKing/validity.git/\".\r\nbzr: ERROR: Not a branch: \"https://github.com/NorfairKing/validity.git/\".\r\n+ cabal2nix --subpath . --system x86_64-linux cabal://lift-generics-0.1.2\r\n[...]\r\n+ cabal2nix --subpath . --system x86_64-linux cabal://vivid-supercollider-0.3.0.0\r\nstack2nix: user error (Failed to fetch source. Does the URL exist?)\r\n\r\n[nix-shell:~/src/haskell/intray]$ echo $?\r\n1\r\n```\r\n\r\nStack still supports the old syntax so using that is a workaround, but `stack2nix` should ideally learn the new syntax as well. I suppose that shouldn't be too hard because it's semantically identical to the other one as far as I know.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/transient-haskell/axiom/issues/21","repository_url":"https://api.github.com/repos/transient-haskell/axiom","labels_url":"https://api.github.com/repos/transient-haskell/axiom/issues/21/labels{/name}","comments_url":"https://api.github.com/repos/transient-haskell/axiom/issues/21/comments","events_url":"https://api.github.com/repos/transient-haskell/axiom/issues/21/events","html_url":"https://github.com/transient-haskell/axiom/issues/21","id":250440644,"node_id":"MDU6SXNzdWUyNTA0NDA2NDQ=","number":21,"title":"build failure","user":{"login":"bergmark","id":100681,"node_id":"MDQ6VXNlcjEwMDY4MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/100681?v=4","gravatar_id":"","url":"https://api.github.com/users/bergmark","html_url":"https://github.com/bergmark","followers_url":"https://api.github.com/users/bergmark/followers","following_url":"https://api.github.com/users/bergmark/following{/other_user}","gists_url":"https://api.github.com/users/bergmark/gists{/gist_id}","starred_url":"https://api.github.com/users/bergmark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bergmark/subscriptions","organizations_url":"https://api.github.com/users/bergmark/orgs","repos_url":"https://api.github.com/users/bergmark/repos","events_url":"https://api.github.com/users/bergmark/events{/privacy}","received_events_url":"https://api.github.com/users/bergmark/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-08-15T21:12:13Z","updated_at":"2017-08-16T19:32:33Z","closed_at":"2017-08-16T12:00:29Z","author_association":"NONE","active_lock_reason":null,"body":"This just popped up when trying to build LTS 9\r\n\r\n```\r\nPreprocessing library axiom-0.4.5...\r\n[1 of 2] Compiling GHCJS.HPlay.View ( src/GHCJS/HPlay/View.hs, dist/build/GHCJS/HPlay/View.o )\r\n[2 of 2] Compiling GHCJS.HPlay.Cell ( src/GHCJS/HPlay/Cell.hs, dist/build/GHCJS/HPlay/Cell.o )\r\n\r\nsrc/GHCJS/HPlay/Cell.hs:98:13: error:\r\n    • Data constructor not in scope: Transient :: m0 (Maybe a) -> t\r\n    • Perhaps you want to add ‘Transient’ to the import list\r\n      in the import of ‘Transient.Internals’\r\n      (src/GHCJS/HPlay/Cell.hs:18:1-42).\r\n```\r\n\r\nit's also visible on matrix: https://matrix.hackage.haskell.org/package/axiom#GHC-8.0/axiom-0.4.5","performed_via_github_app":null,"score":1.0}]}
0

