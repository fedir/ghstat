HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:01:23 GMT
Link: <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fhttp4k%2Fhttp4k+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fhttp4k%2Fhttp4k+type%3Aissue+state%3Aclosed&page=2>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CE2C:E7C3:F6833D:11B4F57:5FB01B72
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 23
X-Ratelimit-Reset: 1605376942
X-Ratelimit-Used: 7
X-Xss-Protection: 1; mode=block

19301
{"total_count":59,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/http4k/http4k/issues/502","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/502/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/502/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/502/events","html_url":"https://github.com/http4k/http4k/issues/502","id":725910888,"node_id":"MDU6SXNzdWU3MjU5MTA4ODg=","number":502,"title":"OPTIONS request for route with Header/Body fails with 400","user":{"login":"knyttl","id":401107,"node_id":"MDQ6VXNlcjQwMTEwNw==","avatar_url":"https://avatars3.githubusercontent.com/u/401107?v=4","gravatar_id":"","url":"https://api.github.com/users/knyttl","html_url":"https://github.com/knyttl","followers_url":"https://api.github.com/users/knyttl/followers","following_url":"https://api.github.com/users/knyttl/following{/other_user}","gists_url":"https://api.github.com/users/knyttl/gists{/gist_id}","starred_url":"https://api.github.com/users/knyttl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knyttl/subscriptions","organizations_url":"https://api.github.com/users/knyttl/orgs","repos_url":"https://api.github.com/users/knyttl/repos","events_url":"https://api.github.com/users/knyttl/events{/privacy}","received_events_url":"https://api.github.com/users/knyttl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-10-20T20:15:17Z","updated_at":"2020-10-21T08:31:48Z","closed_at":"2020-10-21T08:30:43Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"To properly provide for CORS, each endpoint must support `OPTIONS` method to prevent `CORS preflight channel did not succeed`.\r\n\r\nThis normally works for endpoints without required `Headers` or `Body`. `OPTIONS` of such endpoints with fail with: \r\n\r\n```\r\n{\"message\":\"Missing/invalid parameters\",\"params\":[\r\n   {\"name\":\"body\",\"type\":\"body\",\"datatype\":\"object\",\"required\":true,\"reason\":\"Invalid\"}\r\n]}\r\n```\r\n\r\nI believe this is a bug as these parameters should not be required for `OPTIONS` method call.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k.github.io/issues/4","repository_url":"https://api.github.com/repos/http4k/http4k.github.io","labels_url":"https://api.github.com/repos/http4k/http4k.github.io/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k.github.io/issues/4/comments","events_url":"https://api.github.com/repos/http4k/http4k.github.io/issues/4/events","html_url":"https://github.com/http4k/http4k.github.io/issues/4","id":512862787,"node_id":"MDU6SXNzdWU1MTI4NjI3ODc=","number":4,"title":"Incomplete, possibly redundant, sentence in documentation","user":{"login":"alexclarkofficial","id":4665704,"node_id":"MDQ6VXNlcjQ2NjU3MDQ=","avatar_url":"https://avatars2.githubusercontent.com/u/4665704?v=4","gravatar_id":"","url":"https://api.github.com/users/alexclarkofficial","html_url":"https://github.com/alexclarkofficial","followers_url":"https://api.github.com/users/alexclarkofficial/followers","following_url":"https://api.github.com/users/alexclarkofficial/following{/other_user}","gists_url":"https://api.github.com/users/alexclarkofficial/gists{/gist_id}","starred_url":"https://api.github.com/users/alexclarkofficial/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexclarkofficial/subscriptions","organizations_url":"https://api.github.com/users/alexclarkofficial/orgs","repos_url":"https://api.github.com/users/alexclarkofficial/repos","events_url":"https://api.github.com/users/alexclarkofficial/events{/privacy}","received_events_url":"https://api.github.com/users/alexclarkofficial/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-10-26T17:26:13Z","updated_at":"2020-08-19T18:57:01Z","closed_at":"2020-08-19T18:57:01Z","author_association":"NONE","active_lock_reason":null,"body":"This line in the documentation for lenses is incomplete:\r\nhttps://github.com/http4k/http4k.github.io/blob/master/tutorials/typesafe_configuration/index.html#L1173\r\n\r\nAlso, it seems like I'd imagine it to be redundant and maybe it's better removed?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/468","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/468/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/468/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/468/events","html_url":"https://github.com/http4k/http4k/issues/468","id":674552218,"node_id":"MDU6SXNzdWU2NzQ1NTIyMTg=","number":468,"title":"AWS Lambda Serverless throws httpMethod must not be null","user":{"login":"kalaiselvan369","id":14306248,"node_id":"MDQ6VXNlcjE0MzA2MjQ4","avatar_url":"https://avatars3.githubusercontent.com/u/14306248?v=4","gravatar_id":"","url":"https://api.github.com/users/kalaiselvan369","html_url":"https://github.com/kalaiselvan369","followers_url":"https://api.github.com/users/kalaiselvan369/followers","following_url":"https://api.github.com/users/kalaiselvan369/following{/other_user}","gists_url":"https://api.github.com/users/kalaiselvan369/gists{/gist_id}","starred_url":"https://api.github.com/users/kalaiselvan369/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kalaiselvan369/subscriptions","organizations_url":"https://api.github.com/users/kalaiselvan369/orgs","repos_url":"https://api.github.com/users/kalaiselvan369/repos","events_url":"https://api.github.com/users/kalaiselvan369/events{/privacy}","received_events_url":"https://api.github.com/users/kalaiselvan369/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-08-06T19:32:58Z","updated_at":"2020-08-19T06:16:25Z","closed_at":"2020-08-19T06:16:25Z","author_association":"NONE","active_lock_reason":null,"body":"I followed this example:\r\n\r\n```\r\nobject TweetEchoLambda : AppLoader {\r\n    override fun invoke(env: Map<String, String>): HttpHandler = {\r\n        Response(OK).body(it.bodyString().take(20))\r\n    }\r\n}\r\n\r\n```\r\nOnly this code snippet I used, then uploaded as jar + update environment variables and org.http4k.serverless.LambdaFunction::handle in lambda console. I couldn't figure it out where is the issue.\r\n\r\n```\r\n{\r\n  \"errorMessage\": \"httpMethod must not be null\",\r\n  \"errorType\": \"java.lang.IllegalStateException\",\r\n  \"stackTrace\": [\r\n    \"org.http4k.serverless.LambdaFunctionKt.asHttp4k(LambdaFunction.kt:43)\",\r\n    \"org.http4k.serverless.LambdaFunction.handle(LambdaFunction.kt:32)\",\r\n    \"sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\",\r\n    \"sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\",\r\n    \"sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\",\r\n    \"java.lang.reflect.Method.invoke(Method.java:498)\"\r\n  ]\r\n}\r\n```\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/sdkman/sdkman-cli/issues/786","repository_url":"https://api.github.com/repos/sdkman/sdkman-cli","labels_url":"https://api.github.com/repos/sdkman/sdkman-cli/issues/786/labels{/name}","comments_url":"https://api.github.com/repos/sdkman/sdkman-cli/issues/786/comments","events_url":"https://api.github.com/repos/sdkman/sdkman-cli/issues/786/events","html_url":"https://github.com/sdkman/sdkman-cli/issues/786","id":674020581,"node_id":"MDU6SXNzdWU2NzQwMjA1ODE=","number":786,"title":"Bug: upgrade message does not contain the new version","user":{"login":"lutzhorn","id":13868605,"node_id":"MDQ6VXNlcjEzODY4NjA1","avatar_url":"https://avatars3.githubusercontent.com/u/13868605?v=4","gravatar_id":"","url":"https://api.github.com/users/lutzhorn","html_url":"https://github.com/lutzhorn","followers_url":"https://api.github.com/users/lutzhorn/followers","following_url":"https://api.github.com/users/lutzhorn/following{/other_user}","gists_url":"https://api.github.com/users/lutzhorn/gists{/gist_id}","starred_url":"https://api.github.com/users/lutzhorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lutzhorn/subscriptions","organizations_url":"https://api.github.com/users/lutzhorn/orgs","repos_url":"https://api.github.com/users/lutzhorn/repos","events_url":"https://api.github.com/users/lutzhorn/events{/privacy}","received_events_url":"https://api.github.com/users/lutzhorn/received_events","type":"User","site_admin":false},"labels":[{"id":12543686,"node_id":"MDU6TGFiZWwxMjU0MzY4Ng==","url":"https://api.github.com/repos/sdkman/sdkman-cli/labels/bug","name":"bug","color":"fc2929","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-08-06T05:08:24Z","updated_at":"2020-08-06T18:21:31Z","closed_at":"2020-08-06T18:21:31Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Thank you for using the SDKMAN! issue tracker! If you are unsure if it is a bug, then consider using the Slack chat before creating a new issue. Please understand, that we cannot offer regular support through GitHub issues and might close the issue, if it is not an actual bug! -->\r\n\r\n**Bug report**\r\n\r\nThe message about a possible upgrade of sdkman as generated by  `sdk update` does not include the version that can be upgraded to:\r\n\r\n```\r\nThe current version is , but you have 5.8.3+506.\r\n```\r\n\r\n<!-- A clear and concise description of the bug you encountered  -->\r\n\r\n**To reproduce**\r\n\r\n```\r\n% sdk update\r\n==== BROADCAST =================================================================\r\n* 2020-08-05: Gradle 6.6-rc-6 released on SDKMAN! #gradle\r\n* 2020-08-03: Gradle 6.6-rc-5 released on SDKMAN! #gradle\r\n* 2020-08-02: Jbang 0.36.1 released on SDKMAN! Checkout https://github.com/jbangdev/jbang/releases/tag/v0.36.1. Follow @jbangdev #jbang\r\n================================================================================\r\n\r\nAdding new candidates(s): gradleprofiler http4k\r\n\r\nPlease open a new terminal now...\r\n\r\n\r\nATTENTION: A new version of SDKMAN is available...\r\n\r\nThe current version is , but you have 5.8.3+506.\r\n\r\nWould you like to upgrade now? (Y/n): n\r\nNot upgrading today...\r\n```\r\n<!-- Steps to reproduce the behavior or verify the issue -->\r\n\r\n**System info**\r\n<!-- Please add relevant information about your system:\r\n- OS (e.g. Windows, Linux, Mac, Cygwin, WSL, etc.) and version\r\n- Shell and version (e.g. `bash --version`/`zsh --version`)\r\n- The output of `sdk version`\r\n-->\r\n\r\n```\r\n% zsh --version\r\nzsh 5.1.1 (x86_64-ubuntu-linux-gnu)\r\n```\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/455","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/455/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/455/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/455/events","html_url":"https://github.com/http4k/http4k/issues/455","id":651812887,"node_id":"MDU6SXNzdWU2NTE4MTI4ODc=","number":455,"title":"Documenting http post request body","user":{"login":"knyttl","id":401107,"node_id":"MDQ6VXNlcjQwMTEwNw==","avatar_url":"https://avatars3.githubusercontent.com/u/401107?v=4","gravatar_id":"","url":"https://api.github.com/users/knyttl","html_url":"https://github.com/knyttl","followers_url":"https://api.github.com/users/knyttl/followers","following_url":"https://api.github.com/users/knyttl/following{/other_user}","gists_url":"https://api.github.com/users/knyttl/gists{/gist_id}","starred_url":"https://api.github.com/users/knyttl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knyttl/subscriptions","organizations_url":"https://api.github.com/users/knyttl/orgs","repos_url":"https://api.github.com/users/knyttl/repos","events_url":"https://api.github.com/users/knyttl/events{/privacy}","received_events_url":"https://api.github.com/users/knyttl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-07-06T20:55:28Z","updated_at":"2020-07-09T06:33:20Z","closed_at":"2020-07-09T06:33:20Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I am following this code:\r\n\r\nhttps://github.com/http4k/http4k/blob/master/http4k-contract/src/test/kotlin/org/http4k/contract/ContractRendererContract.kt\r\n\r\n```kotlin\r\n                receiving(Body.webForm(Strict,\r\n                    FormField.boolean().required(\"b\", \"booleanField\"),\r\n                    FormField.int().optional(\"i\", \"intField\"),\r\n                    FormField.string().optional(\"s\", \"stringField\"),\r\n                    json.lens(FormField).required(\"j\", \"jsonField\")\r\n                ).toLens())\r\n```\r\n\r\nI would like to use this part to document form field of Apple login response:\r\n\r\n```kotlin\r\n                receiving(Body.webForm(Strict,\r\n                    FormField.string().required(\"code\", \"stringField\"),\r\n                    FormField.string().required(\"user\", \"jsonField:\" + AppleUserInfo(AppleUserInfoFirstAndLast(\"Jane\", \"Doe\"), \"jane@doe.net\"))\r\n                ).toLens())\r\n```\r\n\r\nThis is not ideal as I pass the JSON example as String, without Lens support. However I couldn't figure out how to do this correctly.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/141","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/141/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/141/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/141/events","html_url":"https://github.com/http4k/http4k/issues/141","id":336542846,"node_id":"MDU6SXNzdWUzMzY1NDI4NDY=","number":141,"title":"Http4k-netty performs really badly on all benchmarks (with lots of errors)","user":{"login":"adam-arold","id":1253248,"node_id":"MDQ6VXNlcjEyNTMyNDg=","avatar_url":"https://avatars0.githubusercontent.com/u/1253248?v=4","gravatar_id":"","url":"https://api.github.com/users/adam-arold","html_url":"https://github.com/adam-arold","followers_url":"https://api.github.com/users/adam-arold/followers","following_url":"https://api.github.com/users/adam-arold/following{/other_user}","gists_url":"https://api.github.com/users/adam-arold/gists{/gist_id}","starred_url":"https://api.github.com/users/adam-arold/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adam-arold/subscriptions","organizations_url":"https://api.github.com/users/adam-arold/orgs","repos_url":"https://api.github.com/users/adam-arold/repos","events_url":"https://api.github.com/users/adam-arold/events{/privacy}","received_events_url":"https://api.github.com/users/adam-arold/received_events","type":"User","site_admin":false},"labels":[{"id":567897075,"node_id":"MDU6TGFiZWw1Njc4OTcwNzU=","url":"https://api.github.com/repos/http4k/http4k/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2018-06-28T09:27:10Z","updated_at":"2020-08-26T10:42:30Z","closed_at":"2020-08-25T05:10:29Z","author_association":"NONE","active_lock_reason":null,"body":"I've checked the [techempower benchmarks](https://www.techempower.com/benchmarks/#section=data-r16&hw=ph&test=plaintext&f=zik0zj-zik0zj-zik0zj-zik0zj-zik0zj-zik0zj-zik0zj-4zsor) and it seems that `http4k-netty` performs really badly and has a lot of errors in the benchmarks. Is this an inherent problem with Netty or is the benchmark bad?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/sdkman/sdkman-cli/issues/805","repository_url":"https://api.github.com/repos/sdkman/sdkman-cli","labels_url":"https://api.github.com/repos/sdkman/sdkman-cli/issues/805/labels{/name}","comments_url":"https://api.github.com/repos/sdkman/sdkman-cli/issues/805/comments","events_url":"https://api.github.com/repos/sdkman/sdkman-cli/issues/805/events","html_url":"https://github.com/sdkman/sdkman-cli/issues/805","id":707651817,"node_id":"MDU6SXNzdWU3MDc2NTE4MTc=","number":805,"title":"Bug: sdk install sbt fails regardless of version","user":{"login":"anthonylusardi-da","id":59614480,"node_id":"MDQ6VXNlcjU5NjE0NDgw","avatar_url":"https://avatars1.githubusercontent.com/u/59614480?v=4","gravatar_id":"","url":"https://api.github.com/users/anthonylusardi-da","html_url":"https://github.com/anthonylusardi-da","followers_url":"https://api.github.com/users/anthonylusardi-da/followers","following_url":"https://api.github.com/users/anthonylusardi-da/following{/other_user}","gists_url":"https://api.github.com/users/anthonylusardi-da/gists{/gist_id}","starred_url":"https://api.github.com/users/anthonylusardi-da/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anthonylusardi-da/subscriptions","organizations_url":"https://api.github.com/users/anthonylusardi-da/orgs","repos_url":"https://api.github.com/users/anthonylusardi-da/repos","events_url":"https://api.github.com/users/anthonylusardi-da/events{/privacy}","received_events_url":"https://api.github.com/users/anthonylusardi-da/received_events","type":"User","site_admin":false},"labels":[{"id":12543686,"node_id":"MDU6TGFiZWwxMjU0MzY4Ng==","url":"https://api.github.com/repos/sdkman/sdkman-cli/labels/bug","name":"bug","color":"fc2929","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2020-09-23T20:17:50Z","updated_at":"2020-09-24T18:58:57Z","closed_at":"2020-09-24T18:58:57Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- Thank you for using the SDKMAN! issue tracker! If you are unsure if it is a bug, then consider using the Slack chat before creating a new issue. Please understand, that we cannot offer regular support through GitHub issues and might close the issue, if it is not an actual bug! -->\r\n\r\n**Bug report**\r\nAttempting to install `sbt` with `sdk` does not work now. Appears to be an issue with the repository.\r\nProblem occurs on both a Mac with an old version of sdkman and a Linux instance with the latest version of sdkman installed via `curl -s \"https://get.sdkman.io\" | bash`\r\n\r\nError message:\r\n```\r\n-=O=-                                                                                                               #      #     #   #\r\n  End-of-central-directory signature not found.  Either this file is not\r\n  a zipfile, or it constitutes one disk of a multi-part archive.  In the\r\n  latter case the central directory and zipfile comment will be found on\r\n  the last disk(s) of this archive.\r\nunzip:  cannot find zipfile directory in one of /root/.sdkman/archives/sbt-1.3.13.zip or\r\n        /root/.sdkman/archives/sbt-1.3.13.zip.zip, and cannot find /root/.sdkman/archives/sbt-1.3.13.zip.ZIP, period.\r\n```\r\n\r\n`/root/.sdkman/archives` is empty\r\n\r\n**To reproduce**\r\nRun `sdk install sbt` or `sdk install <specific version>`\r\n\r\n**System info**\r\n- Mac and Linux\r\n- bash on both\r\n- The output of `sdk version` 5.7.4+362 (Mac) and 5.9.0+555 (Linux)\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/396","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/396/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/396/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/396/events","html_url":"https://github.com/http4k/http4k/issues/396","id":602447527,"node_id":"MDU6SXNzdWU2MDI0NDc1Mjc=","number":396,"title":"Running in Google Cloud Functions","user":{"login":"knyttl","id":401107,"node_id":"MDQ6VXNlcjQwMTEwNw==","avatar_url":"https://avatars3.githubusercontent.com/u/401107?v=4","gravatar_id":"","url":"https://api.github.com/users/knyttl","html_url":"https://github.com/knyttl","followers_url":"https://api.github.com/users/knyttl/followers","following_url":"https://api.github.com/users/knyttl/following{/other_user}","gists_url":"https://api.github.com/users/knyttl/gists{/gist_id}","starred_url":"https://api.github.com/users/knyttl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knyttl/subscriptions","organizations_url":"https://api.github.com/users/knyttl/orgs","repos_url":"https://api.github.com/users/knyttl/repos","events_url":"https://api.github.com/users/knyttl/events{/privacy}","received_events_url":"https://api.github.com/users/knyttl/received_events","type":"User","site_admin":false},"labels":[{"id":758868625,"node_id":"MDU6TGFiZWw3NTg4Njg2MjU=","url":"https://api.github.com/repos/http4k/http4k/labels/feature%20request","name":"feature request","color":"f742a3","default":false,"description":null},{"id":567897075,"node_id":"MDU6TGFiZWw1Njc4OTcwNzU=","url":"https://api.github.com/repos/http4k/http4k/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-04-18T12:19:43Z","updated_at":"2020-05-31T20:16:14Z","closed_at":"2020-05-31T20:16:13Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"http4k is currently able to natively run in AWS Lambda as described here: https://www.http4k.org/guide/modules/serverless/\r\n\r\nGoogle Cloudfunctions now support running Java (in beta):\r\n\r\nhttps://github.com/GoogleCloudPlatform/kotlin-samples/tree/master/functions\r\n\r\nThis should allow us to run http4k there as well. As far as I can read the example, it probably won't be easy to fit the API with http4k:\r\n\r\nhttps://github.com/GoogleCloudPlatform/kotlin-samples/blob/master/functions/src/main/kotlin/HttpExample.kt\r\n\r\nAre you aware of these and are you planning to support GCF?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/410","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/410/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/410/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/410/events","html_url":"https://github.com/http4k/http4k/issues/410","id":614088072,"node_id":"MDU6SXNzdWU2MTQwODgwNzI=","number":410,"title":"Server with Ktor-CIO engine cannot be effectively closed","user":{"login":"carranca","id":1651191,"node_id":"MDQ6VXNlcjE2NTExOTE=","avatar_url":"https://avatars1.githubusercontent.com/u/1651191?v=4","gravatar_id":"","url":"https://api.github.com/users/carranca","html_url":"https://github.com/carranca","followers_url":"https://api.github.com/users/carranca/followers","following_url":"https://api.github.com/users/carranca/following{/other_user}","gists_url":"https://api.github.com/users/carranca/gists{/gist_id}","starred_url":"https://api.github.com/users/carranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carranca/subscriptions","organizations_url":"https://api.github.com/users/carranca/orgs","repos_url":"https://api.github.com/users/carranca/repos","events_url":"https://api.github.com/users/carranca/events{/privacy}","received_events_url":"https://api.github.com/users/carranca/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-05-07T14:09:24Z","updated_at":"2020-05-08T09:20:46Z","closed_at":"2020-05-08T09:19:10Z","author_association":"NONE","active_lock_reason":null,"body":"# Description\r\nCalling `stop()` on a Ktor-CIO backed server does not close the server engine.\r\nThis seems to be because in https://github.com/http4k/http4k/blob/master/http4k-server-ktorcio/src/main/kotlin/org/http4k/server/KtorCIO.kt#L42-L44 we're calling [stopServerOnCancellation](https://api.ktor.io/1.3.0/io.ktor.server.engine/stop-server-on-cancellation.html), the Deferred returned by which according to the Ktor docs must be completed or cancelled.\r\n\r\n# Scenario\r\n```\r\nval handler = { _: Request -> println(\"Hello!\") }\r\nval server = handler.asServer(KtorCIO(9000))\r\n\r\nserver.start()\r\n// Sending a request to the server will print \"Hello\"\r\nserver.stop()\r\n// Sending a request to the server will still print \"Hello\"\r\n```\r\n\r\n# Proposed solution\r\nReplacing `stopServerOnCancellation()` with `stop(1, 1, TimeUnit.SECONDS)` or another reasonable or configurable timeout and grace period. Looking at #206 I noticed this exact solution was introduced in ef2620db6e93ec50ff335ae06e36112397fecd52 but removed in 7dc7198ef3ca288674090b3ce67ee635d4d89871\r\n\r\nHappy to submit PR if maintainers agree with proposed solution. I've verified locally with my project that it works.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/454","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/454/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/454/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/454/events","html_url":"https://github.com/http4k/http4k/issues/454","id":650960912,"node_id":"MDU6SXNzdWU2NTA5NjA5MTI=","number":454,"title":"WebSocket handshake not working when using Sec-WebSocket-Protocol header","user":{"login":"rschlegel-cc","id":20888244,"node_id":"MDQ6VXNlcjIwODg4MjQ0","avatar_url":"https://avatars1.githubusercontent.com/u/20888244?v=4","gravatar_id":"","url":"https://api.github.com/users/rschlegel-cc","html_url":"https://github.com/rschlegel-cc","followers_url":"https://api.github.com/users/rschlegel-cc/followers","following_url":"https://api.github.com/users/rschlegel-cc/following{/other_user}","gists_url":"https://api.github.com/users/rschlegel-cc/gists{/gist_id}","starred_url":"https://api.github.com/users/rschlegel-cc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rschlegel-cc/subscriptions","organizations_url":"https://api.github.com/users/rschlegel-cc/orgs","repos_url":"https://api.github.com/users/rschlegel-cc/repos","events_url":"https://api.github.com/users/rschlegel-cc/events{/privacy}","received_events_url":"https://api.github.com/users/rschlegel-cc/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-07-04T21:46:11Z","updated_at":"2020-07-07T16:51:27Z","closed_at":"2020-07-07T16:51:27Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nrecently I started migrating a small service from ktor to http4k and experienced some handshake issues when using the http4k-client-websocket (3.251.0) module, despite sending the exact same request to start the session as in the previous implementation (verified in Wireshark). \r\n\r\nThe code used to create the non-blocking client:\r\n```kotlin\r\nWebsocketClient.nonBlocking(Uri.of(\"ws://192.168.1.24:8214\"), listOf(\"Sec-WebSocket-Protocol\" to \"Lux_WS\")) {\r\n    // not relevant, after handshake\r\n}\r\n```\r\n\r\nThis led to the error message `1002 draft Draft_6455 extension: DefaultExtension max frame size: 2147483647 refuses handshake` in the onError-handler. After some digging around I found out that the value passed in the Sec-WebSocket-Protocol needs to be included as a protocol when creating the Draft_6455 instance. I tried replacing `Draft_6455()` with `Draft_6455(emptyList<IExtension>(), headers.filter { \"Sec-WebSocket-Protocol\".equals(it.first, true) }.map {Protocol(it.second)})` in WebsocketClient.kt:83 and while it is surely not the most elegant solution it does indeed allow the handshake to complete.\r\n\r\nIs there a better way of achieving this that I'm missing or is this a rather obscure edge case? ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/jmfayard/refreshVersions/issues/77","repository_url":"https://api.github.com/repos/jmfayard/refreshVersions","labels_url":"https://api.github.com/repos/jmfayard/refreshVersions/issues/77/labels{/name}","comments_url":"https://api.github.com/repos/jmfayard/refreshVersions/issues/77/comments","events_url":"https://api.github.com/repos/jmfayard/refreshVersions/issues/77/events","html_url":"https://github.com/jmfayard/refreshVersions/issues/77","id":493590561,"node_id":"MDU6SXNzdWU0OTM1OTA1NjE=","number":77,"title":"./gradlew :refreshVersions ","user":{"login":"jmfayard","id":459464,"node_id":"MDQ6VXNlcjQ1OTQ2NA==","avatar_url":"https://avatars3.githubusercontent.com/u/459464?v=4","gravatar_id":"","url":"https://api.github.com/users/jmfayard","html_url":"https://github.com/jmfayard","followers_url":"https://api.github.com/users/jmfayard/followers","following_url":"https://api.github.com/users/jmfayard/following{/other_user}","gists_url":"https://api.github.com/users/jmfayard/gists{/gist_id}","starred_url":"https://api.github.com/users/jmfayard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmfayard/subscriptions","organizations_url":"https://api.github.com/users/jmfayard/orgs","repos_url":"https://api.github.com/users/jmfayard/repos","events_url":"https://api.github.com/users/jmfayard/events{/privacy}","received_events_url":"https://api.github.com/users/jmfayard/received_events","type":"User","site_admin":false},"labels":[{"id":1163258796,"node_id":"MDU6TGFiZWwxMTYzMjU4Nzk2","url":"https://api.github.com/repos/jmfayard/refreshVersions/labels/documentation","name":"documentation","color":"30f451","default":true,"description":"FAQ"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-09-14T06:32:02Z","updated_at":"2020-10-18T05:32:37Z","closed_at":"2020-10-18T05:32:37Z","author_association":"OWNER","active_lock_reason":null,"body":"<img src=\"https://github.com/jmfayard/buildSrcVersions/raw/master/doc/versions-gradle-properties.png\"></img>\r\n\r\n**Available since: 0.6.0**\r\n\r\nThe plugin `de.fayard.buildSrcVersions` has now two tasks. \r\n\r\n- The new task  `:refreshVersions` task provides *just the versions and their available updates* and is a good solution for simple, single-module Gradle projects.\r\n- [The task `:buildSrcVersions`](https://github.com/jmfayard/buildSrcVersions/issues/88) still exists and is a good solution for complex multi-module Gradle projects: Android, Kotlin multi-platform, ...\r\n\r\n\r\n# Getting Started\r\n\r\n## Add the plugin `de.fayard.refreshVersions` to your project\r\n\r\nEdit your root `build.gradle(.kts)` file\r\n\r\n[![pluginVersion](https://img.shields.io/maven-metadata/v/https/plugins.gradle.org/m2/de.fayard/buildSrcVersions/de.fayard.buildSrcVersions.gradle.plugin/maven-metadata.xml.svg?label=gradlePluginPortal)](https://plugins.gradle.org/plugin/de.fayard.buildSrcVersions)\r\n\r\n```kotlin\r\nbuildscript {\r\n}\r\nplugins {\r\n  id(\"de.fayard.refreshVersions\") version \"$VERSION\"\r\n}\r\n// Don't put any code before the buildscript {} and plugins {} block\r\n\r\n// See configuration options at https://github.com/jmfayard/buildSrcVersions/issues/53\r\nbuildSrcVersions {\r\n    \r\n}\r\n```\r\n\r\nThe configuration options are described in [#53 Plugin Configuration](https://github.com/jmfayard/buildSrcVersions/issues/53)\r\n\r\nYou can find the latest `$VERSION` at https://plugins.gradle.org/plugin/de.fayard.refreshVersions\r\n\r\n## Why should I use `gradle.properties` instead of `buildSrc/../Versions.kt`?\r\n\r\nThe best way to [improve the Performance of Gradle Builds](https://guides.gradle.org/performance/) is compilation avoidance: all the tasks in your project describe their inputs and their outputs, and if nothing changed, well, nothing needs to be done. \r\n\r\nThe problem with `buildSrc/src/main/kotlin/Versions.kt` is that each time you update a single version, the `buildClasspath` of the project changes, and you are basically doing a `clean` build :(\r\n\r\nIn contrast, if you modify a version in `gradle.properties`, only the tasks that were actually using the new dependency needs to be recompiled!\r\n\r\n## But I liked to auto-complete Libs.xxx!\r\n\r\nNo problem, you can still use it!\r\n\r\n`:refreshVersions` replaces `buildSrc/.../Versions.kt` but `buildSrc/.../Libs.kt` is still available!\r\n\r\nHere is how it works. \r\n\r\n- First run `./gradlew :refreshVersions`\r\n- Then run `./gradlew :buildSrcVersions`. The plugin will notice that you use `gradle.properties` for managing versions and will only generate `Libs.kt`\r\n\r\nLater \r\n\r\n- Run `./gradlew :refreshVersions` to find available updates\r\n- Run `./gradlew :buildSrcVersions` only when you have **added** a dependency\r\n\r\n\r\n## Understanding how it works\r\n\r\nYou can understand how it works by trying the three samples from the repository. \r\n\r\nThey are also very handy to report a bug.\r\n\r\n```bash\r\n$ git clone https://github.com/jmfayard/buildSrcVersions\r\n$ cd buildSrcVersions/sample-kotlin\r\n$ ./gradlew run -q\r\n> Task :run\r\nGuava says: mean(4, 2)=3.0\r\n```\r\n\r\n## Look at the gradle.properties file\r\n \r\nIf you have a look at [sample-kotlin](https://github.com/jmfayard/buildSrcVersions/tree/master/sample-kotlin), the first thing you will notice is a `gradle.properties` file containing:\r\n\r\n```properties\r\n## gradle.properties\r\n# user settings go here\r\n# some.gradle.property=value\r\n\r\n# Dependencies and Plugin versions with their available updates\r\n# Generated by $ ./gradlew refreshVersions\r\n# You can edit the rest of the file, it will be kept intact\r\n# See https://github.com/jmfayard/buildSrcVersions/issues/77\r\nplugin.com.github.ben-manes.versions=0.25.0\r\nplugin.org.jetbrains.kotlin.jvm=1.3.50\r\nplugin.com.gradle.build-scan=2.4.2\r\nversion.com.google.inject..guice=2.0\r\nversion.com.squareup.okhttp3=4.2.0\r\nversion.org.jetbrains.kotlin=1.3.50\r\nversion.gradleLatestVersion=5.6.2\r\nversion.guava=15.0\r\n```\r\n\r\n## The Resolution Strategy useVersionsFromGradleProperties()\r\n\r\nThe second thing you should notice is that you don't have to modify the [`build.gradle`](https://github.com/jmfayard/buildSrcVersions/blob/master/sample-kotlin/build.gradle.kts#L19-L23) to replace manually all dependencies\r\n\r\n```\r\ndependencies {\r\n    implementation(\"com.google.guava:guava:15.0\")\r\n    implementation(\"com.google.inject:guice:2.0\")\r\n    implementation(kotlin(\"stdlib-jdk8\"))\r\n    \r\n    // This would be possible but boring and error-prone:\r\n    //implementation(\"com.google.guava:guava:\" + ext[\"version.guava\"])\r\n}\r\n```\r\n\r\nHow come? \r\n\r\n- all Gradle properties follow a [systematic naming convention](https://github.com/jmfayard/buildSrcVersions/blob/8921d1ea6561d2909a00dcc1835b903ef7e5cba6/plugin/src/main/kotlin/de/fayard/internal/PluginConfig.kt#L40-L79). Basically the plugin looks if a version is present for 1) `version.$group..$module` 2) the `version.$group` 3) the `version.$module`. In order of preference.\r\n- the plugin installs a [`ResolutionStrategy`](https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.ResolutionStrategy.html) called [`Project.useVersionsFromGradleProperties()`](https://github.com/jmfayard/buildSrcVersions/blob/84414da65573d9d6870983b581099a25d0243cce/plugin/src/main/kotlin/de/fayard/BuildSrcVersionsPlugin.kt#L51-L75) \r\n\r\nYou can see it in action like this:\r\n\r\n```bash\r\n$ ./gradlew run -PresolutionStrategyConfig=verbose -q   \r\nResolutionStrategy selected version=0.10.0 from property=plugin.com.gradle.plugin-publish\r\nResolutionStrategy selected version=2.4.1 from property=plugin.com.gradle.build-scan\r\nResolutionStrategy selected version=1.3.50 from property=plugin.org.jetbrains.kotlin.jvm\r\nResolutionStrategy selected version=2.4.2 from property=plugin.com.gradle.build-scan\r\nResolutionStrategy selected version=1.3.41 from property=version.org.jetbrains.kotlin with for dependency=org.jetbrains.kotlin:kotlin-stdlib-jdk8\r\nResolutionStrategy selected version=1.3.41 from property=version.org.jetbrains.kotlin with for dependency=org.jetbrains.kotlin:kotlin-reflect\r\nResolutionStrategy selected version=2.1.0 from property=version.okio with for dependency=com.squareup.okio:okio\r\nResolutionStrategy selected version=1.7.0 from property=version.moshi with for dependency=com.squareup.moshi:moshi\r\nResolutionStrategy selected version=1.3.0 from property=version.kotlinpoet with for dependency=com.squareup:kotlinpoet\r\nResolutionStrategy selected version=1.3.41 from property=version.org.jetbrains.kotlin with for dependency=org.jetbrains.kotlin:kotlin-stdlib-jdk7\r\nResolutionStrategy selected version=1.3.41 from property=version.org.jetbrains.kotlin with for dependency=org.jetbrains.kotlin:kotlin-stdlib\r\nResolutionStrategy selected version=2.1.0 from property=version.okio with for dependency=com.squareup.okio:okio\r\nResolutionStrategy selected version=1.3.41 from property=version.org.jetbrains.kotlin with for dependency=org.jetbrains.kotlin:kotlin-stdlib-jdk7\r\n\r\n> Task :run\r\nGuava says: mean(4, 2)=3.0\r\n\r\nBUILD SUCCESSFUL in 1s\r\n```\r\n\r\nThe property `resolutionStrategyConfig=verbose` is actually set by default for `sample-kotlin` inside `gradle.properties`. \r\n\r\n\r\n## Override dependency version from the command-line\r\n\r\nSince the version is a Gradle property, you can override it from the command-line.\r\n\r\nIt allows you to quickly test if your build is working with another version of a library.\r\n\r\nFor example, Guava introduced this `mean()` function in 15.0 so it's not working with version 14.0:\r\n\r\n```bash\r\n$ ./gradlew -Pversion.guava=14.0 run\r\n> Configure project :\r\nResolutionStrategy for configuration=runtimeClasspath selected version=14.0 from property=version.guava with for dependency=com.google.guava:guava\r\n\r\n> Task :compileKotlin FAILED\r\ne: /Users/jmfayard/try/buildSrcVersions/sample-kotlin/src/main/kotlin/de/fayard/GuavaTest.kt: (7, 27): Unresolved reference: mean\r\n```\r\n\r\n# Search for available dependencies updates\r\n\r\nSo far we have extracted our dependencies version in a file format that is really tooling-friendly. \r\n\r\nWe can come up to the core value proposition of this plugin, one it inherits from the [gradle-versions-plugin](https://github.com/ben-manes/gradle-versions-plugin) \r\n\r\n> 👍👍 The task `:refreshVersions` automatically find **available updates** for your dependencies so that you don't have to 👍👍\r\n\r\n## Run `:refreshVersions` again\r\n\r\n```bash\r\n$ ./gradlew :refreshVersions\r\n\r\n> Task :dependencyUpdates\r\n# Resolving new versions for your dependencies, give it some time!\r\n# .....\r\n# Generated report file build/dependencyUpdates/report.json\r\n> Task :refreshVersions\r\nPlugin configuration: {\"alwaysUpdateVersions\":false,\"indent\":\"  \",\"renameLibs\":\"Libs\",\"renameVersions\":\"Versions\",\"useFqqnFor\":[],\"versionsOnlyFile\":\"gradle.properties\",\"versionsOnlyMode\":\"GRADLE_PROPERTIES\"}\r\nSee documentation at https://github.com/jmfayard/buildSrcVersions/issues/53\r\n```\r\n\r\n## Edit gradle.properties in IntelliJ\r\n\r\nAll you have to do is open [`gradle.properties`](https://github.com/jmfayard/buildSrcVersions/blob/e28b39308afdf30fc47c709b9f0dcda4d3b4c4a0/doc/gradle.properties), look at the comments and edit the file accordingly:\r\n\r\n```diff\r\n// gradle.properties\r\n\r\nplugin.com.github.ben.manes.versions=0.25.0\r\nplugin.de.fayard.buildsrcversions=0.6.0\r\nplugin.org.jetbrains.kotlin.jvm=1.3.11\r\n+                   # available=1.3.50\r\nversion.micrometer.registry.prometheus=1.0.3\r\nversion.jackson.module.kotlin=2.9.6\r\nversion.gradleLatestVersion=4.10.1\r\n+               # available=5.6.2\r\nversion.java.dotenv=3.1.2\r\nversion.org.http4k=3.105.0\r\n+      # available=3.180.0\r\nversion.wiremock=2.18.0\r\n```\r\n\r\n## ... or auto-update dependencies and then use git diff\r\n\r\nThe plugin has a design goal of *First, do not harm*. This is why by default it only add comments. It would be really surprising that adding comments break your build. Please fill a bug if that's the case. \r\n\r\nBut there is another workflow that also makes sense: updates all dependencies to the latest version **and then** look at the **git diff**. \r\n\r\nThis is possible from the command-line\r\n\r\n`$ ./gradlew :refreshVersions --update`\r\n\r\nAnd you can opt-in to make it the default with the `buildSrcVersions.alwaysUpdateVersions()` option. See next section.\r\n\r\nOk, are you ready to try this out in your project? Let's move the setup part.\r\n\r\n\r\n\r\n# Configure the plugins versions (Gradle 5.6)\r\n\r\n## Update Gradle\r\n\r\nAlways a good idea. You get more features, less bugs, more speed.\r\n\r\n$ ./gradlew wrapper --gradle-version 5.6.2\r\n$ ./gradlew tasks\r\n\r\nThis is also necessary to configure the plugins to use the versions from `gradle.properties`.  This requires Gradle 5.6 and the new `pluginManagement { resolutionStrategy { ... } }` block. \r\nhttps://docs.gradle.org/current/userguide/plugins.html#sec:plugin_management\r\n\r\n## Configure `./settings.gradle(.kts) \r\n\r\nThere is some boilerplate code that you have to add to `./settings.gradle(.kts)\r\n\r\n<details>\r\n<summary>Groovy</summary>\r\n\r\nIn the file `./settings.gradle` at the root of your project, add:\r\n\r\n```groovy\r\n// ./settings.gradle\r\npluginManagement {\r\n    repositories {\r\n    }\r\n\r\n    def resolutionStrategyConfig = ext.find(\"resolutionStrategyConfig\")\r\n    resolutionStrategy.eachPlugin {\r\n        def property = \"plugin.${requested.id.id}\"\r\n        if (settings.ext.has(property) && resolutionStrategyConfig != \"false\") {\r\n            def version = settings.ext.get(property)\r\n            if (resolutionStrategyConfig == \"verbose\") print(\"ResolutionStrategy selected version=$version from property=$property\")\r\n            useVersion(version)\r\n        }\r\n    }\r\n}\r\n// rootProject.name = \"my-project-name\"\r\n```\r\n</details>\r\n<details>\r\n<summary>Kotlin</summary>\r\n\r\nIn the file `./settings.gradle.kts` at the root of your project, add:\r\n\r\n```kotlin\r\n// ./settings.gradle.kts\r\npluginManagement {\r\n    repositories {\r\n    }\r\n\r\n    val resolutionStrategyConfig: String? by extra\r\n    resolutionStrategy.eachPlugin {\r\n        val property = \"plugin.${requested.id.id}\"\r\n        if (extra.has(property) && resolutionStrategyConfig != \"false\") {\r\n            val version = extra.get(property) as String\r\n            if (resolutionStrategyConfig == \"verbose\") println(\"ResolutionStrategy selected version=$version from property=$property\")\r\n            useVersion(version)\r\n        }\r\n    }\r\n}\r\n// rootProject.name = \"my-project-name\"\r\n```\r\n\r\n</details>\r\n\r\n\r\n## How to update Gradle itself?\r\n\r\nIf you have an older version of Gradle, unfortunately configuring plugin versions is quit messy. Try to upgrade Gradle if that's an option for you.\r\n\r\nSee: [#19 How to update Gradle itself?](https://github.com/jmfayard/buildSrcVersions/issues/19)\r\n\r\n## Is it magic?\r\n\r\nNo.\r\n\r\nSee [#70 How does it work? Is it magic?](https://github.com/jmfayard/buildSrcVersions/issues/79)\r\n \r\n## Configuring Gradle with the `gradle.properties` file\r\n\r\nIn order to make it even easier to upgrade a project, here is an overview of settings that can be used in gradle.properties. \r\n\r\n[Configuring Gradle with the `gradle.properties` file](https://dev.to/jmfayard/configuring-gradle-with-gradle-properties-211k)\r\n\r\nIt's hard to find an overview of this information so I thought I would provide it\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/381","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/381/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/381/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/381/events","html_url":"https://github.com/http4k/http4k/issues/381","id":577344162,"node_id":"MDU6SXNzdWU1NzczNDQxNjI=","number":381,"title":"gradlew -q clean build : 3 Unresolved reference: readAllBytes","user":{"login":"GustaveNimant","id":12022061,"node_id":"MDQ6VXNlcjEyMDIyMDYx","avatar_url":"https://avatars0.githubusercontent.com/u/12022061?v=4","gravatar_id":"","url":"https://api.github.com/users/GustaveNimant","html_url":"https://github.com/GustaveNimant","followers_url":"https://api.github.com/users/GustaveNimant/followers","following_url":"https://api.github.com/users/GustaveNimant/following{/other_user}","gists_url":"https://api.github.com/users/GustaveNimant/gists{/gist_id}","starred_url":"https://api.github.com/users/GustaveNimant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GustaveNimant/subscriptions","organizations_url":"https://api.github.com/users/GustaveNimant/orgs","repos_url":"https://api.github.com/users/GustaveNimant/repos","events_url":"https://api.github.com/users/GustaveNimant/events{/privacy}","received_events_url":"https://api.github.com/users/GustaveNimant/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-03-07T14:43:20Z","updated_at":"2020-03-07T14:51:37Z","closed_at":"2020-03-07T14:51:37Z","author_association":"NONE","active_lock_reason":null,"body":"I git clone  https://github.com/http4k/http4k.git\r\nthen i run : gradlew -q clean build \r\nthis gives :\r\n\r\ne: ~/http4k/http4k-testing-servirtium/src/test/kotlin/org/http4k/servirtium/FakeGitHub.kt: (27, 68): Unresolved reference: readAllBytes\r\ne: ~/http4k/http4k-testing-servirtium/src/test/kotlin/org/http4k/traffic/TrafficExtensionTests.kt: (70, 84): Unresolved reference: readAllBytes\r\ne: ~/http4k/http4k-testing-servirtium/src/test/kotlin/org/http4k/traffic/TrafficExtensionTests.kt: (88, 90): Unresolved reference: readAllBytes\r\n\r\nI modified readAllBytes in readBytes then compilation went Ok.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/384","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/384/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/384/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/384/events","html_url":"https://github.com/http4k/http4k/issues/384","id":578584774,"node_id":"MDU6SXNzdWU1Nzg1ODQ3NzQ=","number":384,"title":" Unresolved reference: OkHttp","user":{"login":"GustaveNimant","id":12022061,"node_id":"MDQ6VXNlcjEyMDIyMDYx","avatar_url":"https://avatars0.githubusercontent.com/u/12022061?v=4","gravatar_id":"","url":"https://api.github.com/users/GustaveNimant","html_url":"https://github.com/GustaveNimant","followers_url":"https://api.github.com/users/GustaveNimant/followers","following_url":"https://api.github.com/users/GustaveNimant/following{/other_user}","gists_url":"https://api.github.com/users/GustaveNimant/gists{/gist_id}","starred_url":"https://api.github.com/users/GustaveNimant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GustaveNimant/subscriptions","organizations_url":"https://api.github.com/users/GustaveNimant/orgs","repos_url":"https://api.github.com/users/GustaveNimant/repos","events_url":"https://api.github.com/users/GustaveNimant/events{/privacy}","received_events_url":"https://api.github.com/users/GustaveNimant/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-03-10T13:37:21Z","updated_at":"2020-03-10T14:57:48Z","closed_at":"2020-03-10T14:38:19Z","author_association":"NONE","active_lock_reason":null,"body":"My setup \r\ngradle 6.1.1\r\nkotlin 1.3.70\r\nokhttpVersion 4.4.0\r\njava 11.0.6.hs-adpt\r\nhttp4kVersion 3.239.0\r\n\r\nin build.gradle.kts \r\nimplementation(\"com.squareup.okhttp3:okhttp:${extra[\"okhttpVersion\"]}\")\r\nimplementation(\"org.http4k:http4k-core:${extra[\"http4kVersion\"]}\")\r\nimplementation(\"org.http4k:http4k-server-jetty:${extra[\"http4kVersion\"]}\")\r\nimplementation(\"org.http4k:http4k-client-apache:${extra[\"http4kVersion\"]}\"\r\n\r\nIn the main I implemented the code from https://github.com/http4k/http4k/blob/master/src/docs/cookbook/readme/example.kt\r\n./gradlew -q clean build  gives the error : Unresolved reference: OkHttp\r\n\r\nWhat is wrong with my build.gradle.kts ?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/383","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/383/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/383/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/383/events","html_url":"https://github.com/http4k/http4k/issues/383","id":577531732,"node_id":"MDU6SXNzdWU1Nzc1MzE3MzI=","number":383,"title":"gradlew -q clean build :  Cannot access class 'org.apache.http.impl.client.CloseableHttpClient'","user":{"login":"GustaveNimant","id":12022061,"node_id":"MDQ6VXNlcjEyMDIyMDYx","avatar_url":"https://avatars0.githubusercontent.com/u/12022061?v=4","gravatar_id":"","url":"https://api.github.com/users/GustaveNimant","html_url":"https://github.com/GustaveNimant","followers_url":"https://api.github.com/users/GustaveNimant/followers","following_url":"https://api.github.com/users/GustaveNimant/following{/other_user}","gists_url":"https://api.github.com/users/GustaveNimant/gists{/gist_id}","starred_url":"https://api.github.com/users/GustaveNimant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GustaveNimant/subscriptions","organizations_url":"https://api.github.com/users/GustaveNimant/orgs","repos_url":"https://api.github.com/users/GustaveNimant/repos","events_url":"https://api.github.com/users/GustaveNimant/events{/privacy}","received_events_url":"https://api.github.com/users/GustaveNimant/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-03-08T17:01:31Z","updated_at":"2020-03-10T13:00:39Z","closed_at":"2020-03-08T17:35:54Z","author_association":"NONE","active_lock_reason":null,"body":"I git clone https://github.com/http4k/http4k.git\r\nthen i run : gradlew -q clean build\r\nthis gives :\r\ne: ~/http4k/http4k-testing-servirtium/src/main/kotlin/org/http4k/servirtium/ServirtiumServer.kt: (56, 40): Cannot access class 'org.apache.http.impl.client.CloseableHttpClient'. Check your module classpath for missing or conflicting dependencies\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':http4k-testing-servirtium:compileKotlin'.\r\n> Compilation error. See log for more details\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/slackapi/java-slack-sdk/issues/483","repository_url":"https://api.github.com/repos/slackapi/java-slack-sdk","labels_url":"https://api.github.com/repos/slackapi/java-slack-sdk/issues/483/labels{/name}","comments_url":"https://api.github.com/repos/slackapi/java-slack-sdk/issues/483/comments","events_url":"https://api.github.com/repos/slackapi/java-slack-sdk/issues/483/events","html_url":"https://github.com/slackapi/java-slack-sdk/issues/483","id":635836711,"node_id":"MDU6SXNzdWU2MzU4MzY3MTE=","number":483,"title":"Question about how to use Scalatra with Bolt","user":{"login":"timrourke","id":8141770,"node_id":"MDQ6VXNlcjgxNDE3NzA=","avatar_url":"https://avatars0.githubusercontent.com/u/8141770?v=4","gravatar_id":"","url":"https://api.github.com/users/timrourke","html_url":"https://github.com/timrourke","followers_url":"https://api.github.com/users/timrourke/followers","following_url":"https://api.github.com/users/timrourke/following{/other_user}","gists_url":"https://api.github.com/users/timrourke/gists{/gist_id}","starred_url":"https://api.github.com/users/timrourke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/timrourke/subscriptions","organizations_url":"https://api.github.com/users/timrourke/orgs","repos_url":"https://api.github.com/users/timrourke/repos","events_url":"https://api.github.com/users/timrourke/events{/privacy}","received_events_url":"https://api.github.com/users/timrourke/received_events","type":"User","site_admin":false},"labels":[{"id":1640289785,"node_id":"MDU6TGFiZWwxNjQwMjg5Nzg1","url":"https://api.github.com/repos/slackapi/java-slack-sdk/labels/project:bolt","name":"project:bolt","color":"0052cc","default":false,"description":""},{"id":401915483,"node_id":"MDU6TGFiZWw0MDE5MTU0ODM=","url":"https://api.github.com/repos/slackapi/java-slack-sdk/labels/question","name":"question","color":"cc317c","default":true,"description":"M-T: User needs support to use the project"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-06-10T00:16:13Z","updated_at":"2020-06-10T11:03:25Z","closed_at":"2020-06-10T10:57:01Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Issue Type\r\n\r\n- [ ] Bug\r\n- [ ] Enhancement / Feature request\r\n- [x] Question\r\n- [ ] Documentation\r\n\r\n### Description\r\n\r\nI'm trying to figure out how to use `com.slack.api.bolt.App` with a brand new Scalatra application. Was hoping @seratch might have some insight since it looks like you contribute to both this project and to Scalatra.\r\n\r\nRight now I'm trying to define a Scalatra `POST` request handler for the `/slack/events` endpoint, and then manually deserialize the HttpServletRequest into a SlackRequest. This approach of mine is awful, perhaps you have a better idea?\r\n\r\nMy Scalatra request handler looks like this:\r\n\r\n```scala\r\n  post(\"/slack/events\") {\r\n//      This throws an IOException because the request body is already read. Why?\r\n//      I should also note that `request.body` is empty in this handler. Why?\r\n    val body = request.getReader.lines().collect(Collectors.joining(System.lineSeparator()))\r\n    val headers = new RequestHeaders(toHeaderMap(request))\r\n    val rawRequest = SlackRequestParser.HttpRequest.builder()\r\n      .requestUri(request.getRequestURI)\r\n      .requestBody(body)\r\n      .queryString(QueryStringParser.toMap(request.getQueryString))\r\n      .headers(headers)\r\n      .remoteAddress(request.getRemoteAddr)\r\n      .build()\r\n\r\n    val slackRequestParser = new SlackRequestParser(slackApp.config())\r\n\r\n    val slackRequest = slackRequestParser.parse(rawRequest)\r\n\r\n    try {\r\n//      This throws an IOException because the request body is already read. Why?\r\n//      val slackRequest = slackRequestAdapter.buildSlackRequest(request)\r\n      val res = slackApp.run(slackRequest)\r\n      slackRequestAdapter.writeResponse(response, res)\r\n    } catch {\r\n      case e: Throwable =>\r\n        log(s\"Failed to handle a request - ${e.getMessage}\", e)\r\n        status = 500\r\n        contentType = \"application/json\"\r\n        \"{\\\"error\\\":\\\"Something is wrong\\\"}\"\r\n    }\r\n  }\r\n```\r\n\r\nFor some reason, the `request.body` value is always empty, and attempts to read the body of the request (using the SlackRequestParser, or doing it manually as above) fail because something else has already read the request body stream.\r\n\r\n1. So first of all, any idea what's reading my request body before my code runs? Can't tell from the stack trace, but I'm probably overlooking something.\r\n\r\n2. Second, what's the best way to marry the `com.slack.api.bolt.App` with a Scalatra application?\r\n\r\nMy main goal is really just to be able to use `com.slack.api.bolt.App` but still define my own HTTP handlers and business logic in the same application codebase, so using Scalatra isn't that important to me, it's just simpler for me to understand than Play and Akka HTTP.\r\n\r\nThanks!\r\n\r\n---\r\n(only for a bug report)\r\n\r\n### Requirements\r\n\r\n* [x] I've read and understood the [Contributing guidelines](https://github.com/slackapi/java-slack-sdk/blob/master/.github/contributing.md) and have done my best effort to follow them.\r\n* [x] I've read and agree to the [Code of Conduct](https://slackhq.github.io/code-of-conduct).\r\n* [x] I've searched for any related issues and avoided creating a duplicate issue.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/360","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/360/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/360/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/360/events","html_url":"https://github.com/http4k/http4k/issues/360","id":555208965,"node_id":"MDU6SXNzdWU1NTUyMDg5NjU=","number":360,"title":"SLF4J and http4k-client-websocket","user":{"login":"fintara","id":4290594,"node_id":"MDQ6VXNlcjQyOTA1OTQ=","avatar_url":"https://avatars0.githubusercontent.com/u/4290594?v=4","gravatar_id":"","url":"https://api.github.com/users/fintara","html_url":"https://github.com/fintara","followers_url":"https://api.github.com/users/fintara/followers","following_url":"https://api.github.com/users/fintara/following{/other_user}","gists_url":"https://api.github.com/users/fintara/gists{/gist_id}","starred_url":"https://api.github.com/users/fintara/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fintara/subscriptions","organizations_url":"https://api.github.com/users/fintara/orgs","repos_url":"https://api.github.com/users/fintara/repos","events_url":"https://api.github.com/users/fintara/events{/privacy}","received_events_url":"https://api.github.com/users/fintara/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-01-26T10:33:44Z","updated_at":"2020-01-31T20:49:57Z","closed_at":"2020-01-31T20:49:57Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Steps to reproduce:\r\n1. add dependencies:\r\n```\r\nimplementation(group: \"org.http4k\", name: \"http4k-core\", version: \"3.226.0\")\r\nimplementation(group: \"org.http4k\", name: \"http4k-server-jetty\", version: \"3.226.0\")\r\nimplementation(group: \"org.http4k\", name: \"http4k-client-websocket\", version: \"3.226.0\")\r\n```\r\n\r\n2. write simple main\r\n```kotlin\r\nfun main() {\r\n    websockets(\r\n        \"/ws\" bind { ws: Websocket -> }\r\n    ).asServer(Jetty(8080)).start()\r\n}\r\n```\r\n\r\nOutput from console:\r\n```\r\nSLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\r\nSLF4J: Defaulting to no-operation (NOP) logger implementation\r\nSLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\r\n```\r\n\r\nIf you remove `http4k-client-websocket` dep, then logging works.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/362","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/362/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/362/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/362/events","html_url":"https://github.com/http4k/http4k/issues/362","id":555460554,"node_id":"MDU6SXNzdWU1NTU0NjA1NTQ=","number":362,"title":"Jetty, websockets and UninitializedPropertyAccessException","user":{"login":"fintara","id":4290594,"node_id":"MDQ6VXNlcjQyOTA1OTQ=","avatar_url":"https://avatars0.githubusercontent.com/u/4290594?v=4","gravatar_id":"","url":"https://api.github.com/users/fintara","html_url":"https://github.com/fintara","followers_url":"https://api.github.com/users/fintara/followers","following_url":"https://api.github.com/users/fintara/following{/other_user}","gists_url":"https://api.github.com/users/fintara/gists{/gist_id}","starred_url":"https://api.github.com/users/fintara/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fintara/subscriptions","organizations_url":"https://api.github.com/users/fintara/orgs","repos_url":"https://api.github.com/users/fintara/repos","events_url":"https://api.github.com/users/fintara/events{/privacy}","received_events_url":"https://api.github.com/users/fintara/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-01-27T09:46:59Z","updated_at":"2020-01-31T20:47:03Z","closed_at":"2020-01-31T20:43:53Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In [this code](https://github.com/fintara/http4k-lateinit/blob/master/src/main/kotlin/Main.kt#L18) references to websocket connections are kept and all are informed when a new user joins (same as in [this example](https://github.com/daviddenton/http4k-demo-irc/blob/master/src/main/kotlin/org/http4k/demo/IrcApp.kt)).\r\nWhen many connections are opened and closed in short time, at some point `Http4kWebSocketListener::onClose` and `::onError` are unable to use `websocket`:\r\n\r\n```\r\n2020-01-27 10:30:55.912:WARN:oejwc.WebSocketSession:qtp1761061602-46: Exception while notifying onClose\r\nkotlin.UninitializedPropertyAccessException: lateinit property websocket has not been initialized\r\n\tat org.http4k.server.Http4kWebSocketListener.onWebSocketClose(Http4kWebSocketListener.kt:36)\r\n\tat org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onClose(JettyListenerEventDriver.java:119)\r\n\tat org.eclipse.jetty.websocket.common.WebSocketSession.callApplicationOnClose(WebSocketSession.java:389)\r\n...\r\n```\r\nand similar for onError:\r\n```\r\n2020-01-27 10:40:50.079:WARN:oejwc.WebSocketSession:qtp1761061602-16: Exception while notifying onError\r\nkotlin.UninitializedPropertyAccessException: lateinit property websocket has not been initialized\r\n...\r\n```\r\n\r\nIf I wrap this line in try/catch, there's exception from Jetty: `java.lang.IllegalStateException: Blocking message pending 10000 for BLOCKING`, but this is for another issue.\r\n\r\nI believe this happens when a connection is dropped and the forEach loop is still running and/or exceptions are not handled properly.\r\nYou can run the code in this repo https://github.com/fintara/http4k-lateinit/ and simulate many connections with `npx artillery run load.yml` (or connect via javascript and hold Refresh).\r\n\r\nWould a possible fix be to make `websocket` nullable instead of lateinit?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/313","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/313/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/313/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/313/events","html_url":"https://github.com/http4k/http4k/issues/313","id":527510872,"node_id":"MDU6SXNzdWU1Mjc1MTA4NzI=","number":313,"title":"Jackson serialization is not working properly with polymorphic types stored in a collection","user":{"login":"alphaho","id":666504,"node_id":"MDQ6VXNlcjY2NjUwNA==","avatar_url":"https://avatars2.githubusercontent.com/u/666504?v=4","gravatar_id":"","url":"https://api.github.com/users/alphaho","html_url":"https://github.com/alphaho","followers_url":"https://api.github.com/users/alphaho/followers","following_url":"https://api.github.com/users/alphaho/following{/other_user}","gists_url":"https://api.github.com/users/alphaho/gists{/gist_id}","starred_url":"https://api.github.com/users/alphaho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alphaho/subscriptions","organizations_url":"https://api.github.com/users/alphaho/orgs","repos_url":"https://api.github.com/users/alphaho/repos","events_url":"https://api.github.com/users/alphaho/events{/privacy}","received_events_url":"https://api.github.com/users/alphaho/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2019-11-23T04:59:24Z","updated_at":"2019-12-30T06:33:37Z","closed_at":"2019-12-29T15:05:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi, \r\n\r\nI've found that the current `ConfigurableJackson.autoBody` implementation would not work with collections of polymorphic types. It would lose the `@class` field in the serialized json in the below example:\r\n\r\n```kotlin\r\n@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = \"@class\")\r\n@JsonSubTypes(\r\n    JsonSubTypes.Type(value = FirstChild::class, name = \"first\"),\r\n    JsonSubTypes.Type(value = SecondChild::class, name = \"second\")\r\n)\r\nsealed class PolymorphicParent\r\ndata class FirstChild(val something: String): PolymorphicParent()\r\ndata class SecondChild(val somethingElse: String): PolymorphicParent()\r\n\r\nclass SampleTest {\r\n    @Test\r\n    fun `roundtrip polymorphic object to and from body`() {\r\n        val body = Body.auto<PolymorphicParent>().toLens()\r\n\r\n        val firstChild: PolymorphicParent = FirstChild(\"hello\")\r\n        val secondChild: PolymorphicParent = SecondChild(\"world\")\r\n\r\n        assertThat(body(Response(OK).with(body of firstChild)), equalTo(firstChild))\r\n        assertThat(body(Response(OK).with(body of secondChild)), equalTo(secondChild))\r\n    }\r\n\r\n    @Test\r\n    fun `roundtrip list of polymorphic objects to and from body`() {\r\n        val body = Body.auto<List<PolymorphicParent>>().toLens()\r\n\r\n        val list = listOf(FirstChild(\"hello\"), SecondChild(\"world\"))\r\n        \r\n        assertThat(body(Response(OK).with(body of list)), equalTo(list))\r\n    }\r\n}\r\n```\r\n\r\nWhile the first test(one without being stored in a collection) works, the second test would get:\r\n\r\n```\r\nCaused by: com.fasterxml.jackson.databind.exc.InvalidTypeIdException: Missing type id when trying to resolve subtype of [simple type, class org.http4k.format.PolymorphicParent]: missing type id property '@class'\r\n at [Source: (String)\"[{\"something\":\"hello\"},{\"somethingElse\":\"world\"}]\"; line: 1, column: 22] (through reference chain: java.util.ArrayList[0])\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/305","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/305/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/305/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/305/events","html_url":"https://github.com/http4k/http4k/issues/305","id":513357296,"node_id":"MDU6SXNzdWU1MTMzNTcyOTY=","number":305,"title":"Support kotlinx.serialization","user":{"login":"KushalP","id":138382,"node_id":"MDQ6VXNlcjEzODM4Mg==","avatar_url":"https://avatars1.githubusercontent.com/u/138382?v=4","gravatar_id":"","url":"https://api.github.com/users/KushalP","html_url":"https://github.com/KushalP","followers_url":"https://api.github.com/users/KushalP/followers","following_url":"https://api.github.com/users/KushalP/following{/other_user}","gists_url":"https://api.github.com/users/KushalP/gists{/gist_id}","starred_url":"https://api.github.com/users/KushalP/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KushalP/subscriptions","organizations_url":"https://api.github.com/users/KushalP/orgs","repos_url":"https://api.github.com/users/KushalP/repos","events_url":"https://api.github.com/users/KushalP/events{/privacy}","received_events_url":"https://api.github.com/users/KushalP/received_events","type":"User","site_admin":false},"labels":[{"id":758868625,"node_id":"MDU6TGFiZWw3NTg4Njg2MjU=","url":"https://api.github.com/repos/http4k/http4k/labels/feature%20request","name":"feature request","color":"f742a3","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-10-28T14:55:58Z","updated_at":"2020-02-02T13:37:11Z","closed_at":"2020-02-02T13:37:11Z","author_association":"NONE","active_lock_reason":null,"body":"It's common for teams to use a common serialisation approach with a core set of `data` classes.\r\n\r\n[kotlinx.serialization](https://github.com/Kotlin/kotlinx.serialization) can do a lot of the things that we need. Investigate ways to use this library as the serialisation/deserialisation method for things like JSON, CBOR, Protobufs, and Avro.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/292","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/292/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/292/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/292/events","html_url":"https://github.com/http4k/http4k/issues/292","id":492760173,"node_id":"MDU6SXNzdWU0OTI3NjAxNzM=","number":292,"title":"Provide structured logging format for DebuggingFilters.*","user":{"login":"KushalP","id":138382,"node_id":"MDQ6VXNlcjEzODM4Mg==","avatar_url":"https://avatars1.githubusercontent.com/u/138382?v=4","gravatar_id":"","url":"https://api.github.com/users/KushalP","html_url":"https://github.com/KushalP","followers_url":"https://api.github.com/users/KushalP/followers","following_url":"https://api.github.com/users/KushalP/following{/other_user}","gists_url":"https://api.github.com/users/KushalP/gists{/gist_id}","starred_url":"https://api.github.com/users/KushalP/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KushalP/subscriptions","organizations_url":"https://api.github.com/users/KushalP/orgs","repos_url":"https://api.github.com/users/KushalP/repos","events_url":"https://api.github.com/users/KushalP/events{/privacy}","received_events_url":"https://api.github.com/users/KushalP/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2019-09-12T11:59:49Z","updated_at":"2019-11-10T18:54:47Z","closed_at":"2019-11-10T18:54:47Z","author_association":"NONE","active_lock_reason":null,"body":"Structured logging is useful for a [number of reasons](https://stackify.com/what-is-structured-logging-and-why-developers-need-it/). It makes it easier to parse logs using a tool that understands either `key=value` or `json` structures.\r\n\r\nAllow configuring the output format for easier integration with tools like [Stackdriver](https://cloud.google.com/logging/docs/structured-logging).","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/287","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/287/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/287/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/287/events","html_url":"https://github.com/http4k/http4k/issues/287","id":489337414,"node_id":"MDU6SXNzdWU0ODkzMzc0MTQ=","number":287,"title":"Expose the AWS Lambda context to the handlers","user":{"login":"lambrospetrou","id":2052105,"node_id":"MDQ6VXNlcjIwNTIxMDU=","avatar_url":"https://avatars0.githubusercontent.com/u/2052105?v=4","gravatar_id":"","url":"https://api.github.com/users/lambrospetrou","html_url":"https://github.com/lambrospetrou","followers_url":"https://api.github.com/users/lambrospetrou/followers","following_url":"https://api.github.com/users/lambrospetrou/following{/other_user}","gists_url":"https://api.github.com/users/lambrospetrou/gists{/gist_id}","starred_url":"https://api.github.com/users/lambrospetrou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lambrospetrou/subscriptions","organizations_url":"https://api.github.com/users/lambrospetrou/orgs","repos_url":"https://api.github.com/users/lambrospetrou/repos","events_url":"https://api.github.com/users/lambrospetrou/events{/privacy}","received_events_url":"https://api.github.com/users/lambrospetrou/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-09-04T18:58:05Z","updated_at":"2019-09-18T18:43:18Z","closed_at":"2019-09-18T18:43:18Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, I am trying to use the [Http4k serverless](https://www.http4k.org/guide/modules/serverless/) feature for some of my Lambda functions, but I need to get access to the [`AWS Lambda Java Context object`](https://docs.aws.amazon.com/lambda/latest/dg/java-context-object.html).\r\n\r\nBased on the [Java Lambda function handler docs](https://docs.aws.amazon.com/lambda/latest/dg/java-programming-model-req-resp.html) just having a second argument to the Lambda function entrypoint is enough to give you the context.\r\n\r\nHowever, the [Lambda function `handle`](https://github.com/http4k/http4k/blob/master/http4k-serverless-lambda/src/main/kotlin/org/http4k/serverless/lambda/LambdaFunction.kt#L19) method does not receive the context so essentially it gets lost and I cannot access it from inside my handlers.\r\n\r\nI thought of several approaches on getting access to the context so I would like to see if it's possible to get something that can be merged into the project so that others can use it as well, or at least you can tell me if I am missing something that would make it easier for me.\r\n\r\n### Approach 1\r\n\r\nCreate a new `LambdaFunctionWithContext` class which is the entry point to my lambdas and it essentially looks something like:\r\n\r\n```\r\nimport org.http4k.serverless.lambda.LambdaFunction\r\n\r\nclass LambdaFunctionLambdaFunctionWithContext(env: Map<String, String> = System.getenv()) {\r\n    fun handle(request: ApiGatewayProxyRequest, context: com.amazonaws.services.lambda.runtime.Context) = {\r\n        GlobalSingleton.set(context)\r\n        LambdaFunction(env).handle(request)\r\n    }\r\n}\r\n```\r\n\r\nAnd from inside my handlers I can do `GlobalSingleton.get()` and retrieve the function context. However, I don't like having global state in my code so I would treat this as a last-way approach, but it is the easiest (and has no concurrency issues due to Lambda's execution model)!\r\n\r\n### Approach 2\r\n\r\nFork the [`LambdaFunction`](https://github.com/http4k/http4k/blob/master/http4k-serverless-lambda/src/main/kotlin/org/http4k/serverless/lambda/LambdaFunction.kt) class into a `LambdaFunctionWithContext` and instead of creating a [`Request`](https://github.com/http4k/http4k/blob/5a3dcde40dec1e71ec583c8738532b2bdc9eb574/http4k-core/src/main/kotlin/org/http4k/core/http.kt#L209-L213) object it will create a class `RequestWithContext` that implements `Request` but also contains the AWS Lambda Context and allows the handlers to cast the received `Request` into `RequestWithContext` and extract the context they need.\r\n\r\nThe downside of this is that basically I stop using your `LambdaFunction` and any improvement you make on it won't be applicable to my lambda functions since I am using a fork copy of it.\r\n\r\n### Approach 3\r\n\r\nAt first when I saw the [`Request Contexts`](https://www.http4k.org/cookbook/request_context/) I thought that it's something that each request handler could use to receive implicit context but it seems that it's not the case and the contexts need to be explicitly given to the handlers.\r\n\r\nIs there any way that I missed where the `RequestContexts` can be used and make what I want to achieve above easier than the two approaches described?\r\n\r\nIf there is an approach that can be merged back into the package I am happy to contribute it, but I think deciding the best approach is the first step towards that.\r\n\r\nThanks a lot for any tips or hints.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/265","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/265/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/265/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/265/events","html_url":"https://github.com/http4k/http4k/issues/265","id":468605787,"node_id":"MDU6SXNzdWU0Njg2MDU3ODc=","number":265,"title":"Mention http4s in the readme?","user":{"login":"Krever","id":2219224,"node_id":"MDQ6VXNlcjIyMTkyMjQ=","avatar_url":"https://avatars1.githubusercontent.com/u/2219224?v=4","gravatar_id":"","url":"https://api.github.com/users/Krever","html_url":"https://github.com/Krever","followers_url":"https://api.github.com/users/Krever/followers","following_url":"https://api.github.com/users/Krever/following{/other_user}","gists_url":"https://api.github.com/users/Krever/gists{/gist_id}","starred_url":"https://api.github.com/users/Krever/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Krever/subscriptions","organizations_url":"https://api.github.com/users/Krever/orgs","repos_url":"https://api.github.com/users/Krever/repos","events_url":"https://api.github.com/users/Krever/events{/privacy}","received_events_url":"https://api.github.com/users/Krever/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-07-16T11:41:47Z","updated_at":"2019-07-16T11:57:08Z","closed_at":"2019-07-16T11:57:08Z","author_association":"NONE","active_lock_reason":null,"body":"Hey, it seems that http4k might be inspired by http4s at few spots and if so it would be nice to mention and link it from the readme. \r\n\r\nhttps://github.com/http4s/http4s\r\n\r\nIf I'm wrong and you have not seen the http4s before and not have taken inspiration from it then feel free to close this issue :)","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/quarkusio/quarkus/issues/2367","repository_url":"https://api.github.com/repos/quarkusio/quarkus","labels_url":"https://api.github.com/repos/quarkusio/quarkus/issues/2367/labels{/name}","comments_url":"https://api.github.com/repos/quarkusio/quarkus/issues/2367/comments","events_url":"https://api.github.com/repos/quarkusio/quarkus/issues/2367/events","html_url":"https://github.com/quarkusio/quarkus/issues/2367","id":441610369,"node_id":"MDU6SXNzdWU0NDE2MTAzNjk=","number":2367,"title":"Quarkus 0.14 problem with sourceDirectory specified in Pom","user":{"login":"uberto","id":481292,"node_id":"MDQ6VXNlcjQ4MTI5Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/481292?v=4","gravatar_id":"","url":"https://api.github.com/users/uberto","html_url":"https://github.com/uberto","followers_url":"https://api.github.com/users/uberto/followers","following_url":"https://api.github.com/users/uberto/following{/other_user}","gists_url":"https://api.github.com/users/uberto/gists{/gist_id}","starred_url":"https://api.github.com/users/uberto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uberto/subscriptions","organizations_url":"https://api.github.com/users/uberto/orgs","repos_url":"https://api.github.com/users/uberto/repos","events_url":"https://api.github.com/users/uberto/events{/privacy}","received_events_url":"https://api.github.com/users/uberto/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/quarkusio/quarkus/milestones/20","html_url":"https://github.com/quarkusio/quarkus/milestone/20","labels_url":"https://api.github.com/repos/quarkusio/quarkus/milestones/20/labels","id":4256049,"node_id":"MDk6TWlsZXN0b25lNDI1NjA0OQ==","number":20,"title":"0.15.0","description":"","creator":{"login":"gsmet","id":1279749,"node_id":"MDQ6VXNlcjEyNzk3NDk=","avatar_url":"https://avatars1.githubusercontent.com/u/1279749?v=4","gravatar_id":"","url":"https://api.github.com/users/gsmet","html_url":"https://github.com/gsmet","followers_url":"https://api.github.com/users/gsmet/followers","following_url":"https://api.github.com/users/gsmet/following{/other_user}","gists_url":"https://api.github.com/users/gsmet/gists{/gist_id}","starred_url":"https://api.github.com/users/gsmet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gsmet/subscriptions","organizations_url":"https://api.github.com/users/gsmet/orgs","repos_url":"https://api.github.com/users/gsmet/repos","events_url":"https://api.github.com/users/gsmet/events{/privacy}","received_events_url":"https://api.github.com/users/gsmet/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":160,"state":"closed","created_at":"2019-04-24T15:59:23Z","updated_at":"2019-08-28T15:47:30Z","due_on":null,"closed_at":"2019-05-14T17:12:42Z"},"comments":13,"created_at":"2019-05-08T08:20:38Z","updated_at":"2019-05-10T12:44:43Z","closed_at":"2019-05-09T18:21:40Z","author_association":"NONE","active_lock_reason":null,"body":"","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/TechEmpower/FrameworkBenchmarks/issues/3966","repository_url":"https://api.github.com/repos/TechEmpower/FrameworkBenchmarks","labels_url":"https://api.github.com/repos/TechEmpower/FrameworkBenchmarks/issues/3966/labels{/name}","comments_url":"https://api.github.com/repos/TechEmpower/FrameworkBenchmarks/issues/3966/comments","events_url":"https://api.github.com/repos/TechEmpower/FrameworkBenchmarks/issues/3966/events","html_url":"https://github.com/TechEmpower/FrameworkBenchmarks/issues/3966","id":347618121,"node_id":"MDU6SXNzdWUzNDc2MTgxMjE=","number":3966,"title":"Include memory consumption for the benchmark","user":{"login":"ufoscout","id":960885,"node_id":"MDQ6VXNlcjk2MDg4NQ==","avatar_url":"https://avatars1.githubusercontent.com/u/960885?v=4","gravatar_id":"","url":"https://api.github.com/users/ufoscout","html_url":"https://github.com/ufoscout","followers_url":"https://api.github.com/users/ufoscout/followers","following_url":"https://api.github.com/users/ufoscout/following{/other_user}","gists_url":"https://api.github.com/users/ufoscout/gists{/gist_id}","starred_url":"https://api.github.com/users/ufoscout/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ufoscout/subscriptions","organizations_url":"https://api.github.com/users/ufoscout/orgs","repos_url":"https://api.github.com/users/ufoscout/repos","events_url":"https://api.github.com/users/ufoscout/events{/privacy}","received_events_url":"https://api.github.com/users/ufoscout/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-08-04T13:10:15Z","updated_at":"2019-07-16T00:04:36Z","closed_at":"2018-08-07T13:48:35Z","author_association":"NONE","active_lock_reason":null,"body":"I often hear complains about the TechEmpower benchmarks not reporting any information about frameworks memory consumption. I agree that indeed it is an interesting information and that it should be somehow provided.\r\nTicket #1295 was closed four years ago but still nothing has been implemented.\r\nIs there any real plan to have this fixed in the coming rounds?\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/228","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/228/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/228/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/228/events","html_url":"https://github.com/http4k/http4k/issues/228","id":436962907,"node_id":"MDU6SXNzdWU0MzY5NjI5MDc=","number":228,"title":"Support additionalProperties (map types) in `http4k-contract`","user":{"login":"noahbetzen-wk","id":31736963,"node_id":"MDQ6VXNlcjMxNzM2OTYz","avatar_url":"https://avatars1.githubusercontent.com/u/31736963?v=4","gravatar_id":"","url":"https://api.github.com/users/noahbetzen-wk","html_url":"https://github.com/noahbetzen-wk","followers_url":"https://api.github.com/users/noahbetzen-wk/followers","following_url":"https://api.github.com/users/noahbetzen-wk/following{/other_user}","gists_url":"https://api.github.com/users/noahbetzen-wk/gists{/gist_id}","starred_url":"https://api.github.com/users/noahbetzen-wk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/noahbetzen-wk/subscriptions","organizations_url":"https://api.github.com/users/noahbetzen-wk/orgs","repos_url":"https://api.github.com/users/noahbetzen-wk/repos","events_url":"https://api.github.com/users/noahbetzen-wk/events{/privacy}","received_events_url":"https://api.github.com/users/noahbetzen-wk/received_events","type":"User","site_admin":false},"labels":[{"id":567897074,"node_id":"MDU6TGFiZWw1Njc4OTcwNzQ=","url":"https://api.github.com/repos/http4k/http4k/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-04-25T00:41:43Z","updated_at":"2019-05-26T20:17:01Z","closed_at":"2019-05-26T20:17:01Z","author_association":"NONE","active_lock_reason":null,"body":"Currently when the contract/OpenAPI/Swagger renderer finds a type of `Map<String, T>` it produces the Swagger JSON below:\r\n\r\n<img width=\"1074\" alt=\"Screen Shot 2019-04-24 at 7 24 47 PM\" src=\"https://user-images.githubusercontent.com/31736963/56701947-2104d280-66c7-11e9-8944-6c8cfe6cad51.png\">\r\n\r\nBoth Swagger 2 and OpenAPI 3 support the concept of `additionalProperties`, as documented here: https://swagger.io/docs/specification/data-models/dictionaries/\r\n\r\nFor any type definition of the form `Map<String, T>` where T is a primitive type, Swagger supports something like\r\n\r\n```\r\nschema:\r\n    type: \"object\"\r\n    additionalProperties:\r\n        type: \"string\"\r\n```\r\n\r\nIn the above case, this object schema would represent a `Map<String, String>` object (the key being of type `String` is forced by the specification).\r\n\r\nExample from the Swagger petstore in the Swagger editor: https://editor.swagger.io/\r\n\r\n<img width=\"1117\" alt=\"Screen Shot 2019-04-24 at 7 07 06 PM\" src=\"https://user-images.githubusercontent.com/31736963/56702081-d20b6d00-66c7-11e9-9e95-c02c0bd5aa67.png\">\r\n\r\nThis entire issue is partially invalidated by the fact that not even `swagger-ui` has the ability to render these properly, which you can read more about in https://github.com/swagger-api/swagger-ui/issues/1248.\r\n\r\n<img width=\"971\" alt=\"Screen Shot 2019-04-24 at 7 40 16 PM\" src=\"https://user-images.githubusercontent.com/31736963/56702285-d1270b00-66c8-11e9-8e68-881a371eaecd.png\">\r\n\r\nNevertheless, the ability to have `http4k-contract` generate valid `Map<String, T>` types in Swagger JSON would be extremely useful.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/246","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/246/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/246/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/246/events","html_url":"https://github.com/http4k/http4k/issues/246","id":446439614,"node_id":"MDU6SXNzdWU0NDY0Mzk2MTQ=","number":246,"title":"Echo example won't work for me, or any request that uses body.auto lens...","user":{"login":"raxelz","id":17725093,"node_id":"MDQ6VXNlcjE3NzI1MDkz","avatar_url":"https://avatars3.githubusercontent.com/u/17725093?v=4","gravatar_id":"","url":"https://api.github.com/users/raxelz","html_url":"https://github.com/raxelz","followers_url":"https://api.github.com/users/raxelz/followers","following_url":"https://api.github.com/users/raxelz/following{/other_user}","gists_url":"https://api.github.com/users/raxelz/gists{/gist_id}","starred_url":"https://api.github.com/users/raxelz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/raxelz/subscriptions","organizations_url":"https://api.github.com/users/raxelz/orgs","repos_url":"https://api.github.com/users/raxelz/repos","events_url":"https://api.github.com/users/raxelz/events{/privacy}","received_events_url":"https://api.github.com/users/raxelz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-05-21T06:33:20Z","updated_at":"2019-05-21T07:30:25Z","closed_at":"2019-05-21T07:28:30Z","author_association":"NONE","active_lock_reason":null,"body":"I have been trying to make this automatic marshaling and lenses to work for any request that uses body.auto lens and it won't work... please help me out, I tried for hours :(\r\n\r\nWhen using the echo example: https://github.com/http4k/http4k/blob/master/src/docs/guide/modules/contracts/example.kt\r\n\r\n\r\n```\r\n// this route uses auto-marshalling to convert the JSON body directly to/from a data class instance\r\nfun echoRoute(): ContractRoute {\r\n\r\n    data class NameAndMessage(val name: String, val message: String)\r\n\r\n    // the body lens here is imported as an extension function from the Jacskson instance\r\n    val body = Body.auto<NameAndMessage>().toLens()\r\n\r\n    // this specifies the route contract, including examples of the input and output body objects - they will\r\n    // get exploded into JSON schema in the OpenAPI docs\r\n    val spec = \"/echo\" meta {\r\n        summary = \"echoes the name and message sent to it\"\r\n        receiving(body to NameAndMessage(\"jim\", \"hello!\"))\r\n        returning(OK, body to NameAndMessage(\"jim\", \"hello!\"))\r\n    } bindContract POST\r\n\r\n    // note that because we don't have any dynamic parameters, we can use a HttpHandler instance instad of a function\r\n    val echo: HttpHandler = { request: Request ->\r\n        val received: NameAndMessage = body(request)\r\n        Response(OK).with(body of received)\r\n    }\r\n\r\n    return spec to echo\r\n}\r\n\r\n val contract = contract {\r\n        renderer = OpenApi3(ApiInfo(\"ID-Lite API\", \"1.0\", \"Connecting legacy and new accounts\"), Jackson)\r\n        descriptionPath = \"/swagger.json\"\r\n\r\n        routes += echoRoute()\r\n    }\r\n\r\n    val handler = routes(\r\n        \"/\" bind filter.then(contract),\r\n        \"/static\" bind NoCache().then(static(Classpath(\"idlite/api_skeleton\"))),\r\n        \"/api/v1\" bind contract\r\n    )\r\n```\r\n\r\n**I start server:**\r\n\r\n`\r\nServerFilters.Cors(CorsPolicy.UnsafeGlobalPermissive).then(handler).asServer(Netty(8000)).start()\r\n`\r\n\r\n**I receive:**\r\n```{\r\n    \"message\": \"Missing/invalid parameters\",\r\n    \"params\": [\r\n        {\r\n            \"name\": \"body\",\r\n            \"type\": \"body\",\r\n            \"datatype\": \"object\",\r\n            \"required\": true,\r\n            \"reason\": \"Invalid\"\r\n        }\r\n    ]\r\n}```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/233","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/233/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/233/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/233/events","html_url":"https://github.com/http4k/http4k/issues/233","id":440121379,"node_id":"MDU6SXNzdWU0NDAxMjEzNzk=","number":233,"title":"MemoryBody blows up with \"java.nio.ReadOnlyBufferException\" if constructed with read-only ByteBuffer","user":{"login":"xenomachina","id":50810,"node_id":"MDQ6VXNlcjUwODEw","avatar_url":"https://avatars3.githubusercontent.com/u/50810?v=4","gravatar_id":"","url":"https://api.github.com/users/xenomachina","html_url":"https://github.com/xenomachina","followers_url":"https://api.github.com/users/xenomachina/followers","following_url":"https://api.github.com/users/xenomachina/following{/other_user}","gists_url":"https://api.github.com/users/xenomachina/gists{/gist_id}","starred_url":"https://api.github.com/users/xenomachina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xenomachina/subscriptions","organizations_url":"https://api.github.com/users/xenomachina/orgs","repos_url":"https://api.github.com/users/xenomachina/repos","events_url":"https://api.github.com/users/xenomachina/events{/privacy}","received_events_url":"https://api.github.com/users/xenomachina/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-05-03T16:22:17Z","updated_at":"2019-05-09T23:34:58Z","closed_at":"2019-05-08T07:16:08Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This test runs successfully:\r\n\r\n```kotlin\r\n    @Test\r\n    fun `MemoryBody works with ByteBuffer`() {\r\n        val bb = ByteBuffer.wrap(\"Goodbye\".toByteArray())\r\n        val body = Body(bb)\r\n        assertThat(body.length, equalTo(7L))\r\n        assertThat(body.toString(), equalTo(\"Goodbye\"))\r\n        assertThat(body.stream.bufferedReader().readText(), equalTo(\"Goodbye\"))\r\n    }\r\n```\r\n\r\nhowever, this variant fails:\r\n\r\n```kotlin\r\n    @Test\r\n    fun `MemoryBody works with read-only ByteBuffer`() {\r\n        val bb = ByteBuffer.wrap(\"Goodbye\".toByteArray())\r\n        val body = Body(bb.asReadOnlyBuffer())\r\n        assertThat(body.length, equalTo(7L))\r\n        assertThat(body.toString(), equalTo(\"Goodbye\"))\r\n        assertThat(body.stream.bufferedReader().readText(), equalTo(\"Goodbye\"))\r\n    }\r\n```\r\n\r\nDespite the fact that `MemoryBody` only \"reads\" from the `ByteBuffer`, it does this by getting its array, which is not allowed on read-only `ByteBuffer` instances.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/issues/5","repository_url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app","labels_url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/issues/5/labels{/name}","comments_url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/issues/5/comments","events_url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/issues/5/events","html_url":"https://github.com/alisabzevari/kotlin-http4k-realworld-example-app/issues/5","id":367443301,"node_id":"MDU6SXNzdWUzNjc0NDMzMDE=","number":5,"title":"Get articles","user":{"login":"alisabzevari","id":826242,"node_id":"MDQ6VXNlcjgyNjI0Mg==","avatar_url":"https://avatars1.githubusercontent.com/u/826242?v=4","gravatar_id":"","url":"https://api.github.com/users/alisabzevari","html_url":"https://github.com/alisabzevari","followers_url":"https://api.github.com/users/alisabzevari/followers","following_url":"https://api.github.com/users/alisabzevari/following{/other_user}","gists_url":"https://api.github.com/users/alisabzevari/gists{/gist_id}","starred_url":"https://api.github.com/users/alisabzevari/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alisabzevari/subscriptions","organizations_url":"https://api.github.com/users/alisabzevari/orgs","repos_url":"https://api.github.com/users/alisabzevari/repos","events_url":"https://api.github.com/users/alisabzevari/events{/privacy}","received_events_url":"https://api.github.com/users/alisabzevari/received_events","type":"User","site_admin":false},"labels":[{"id":996604628,"node_id":"MDU6TGFiZWw5OTY2MDQ2Mjg=","url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-10-06T10:09:46Z","updated_at":"2019-01-16T20:48:15Z","closed_at":"2019-01-16T20:48:15Z","author_association":"OWNER","active_lock_reason":null,"body":"Swagger description:\r\nhttps://github.com/alisabzevari/kotlin-http4k-realworld-example-app/blob/576aecc205fcba499c8f482d1aeef3f490264467/api/swagger.json#L346-L410","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/issues/8","repository_url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app","labels_url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/issues/8/labels{/name}","comments_url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/issues/8/comments","events_url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/issues/8/events","html_url":"https://github.com/alisabzevari/kotlin-http4k-realworld-example-app/issues/8","id":367443438,"node_id":"MDU6SXNzdWUzNjc0NDM0Mzg=","number":8,"title":"Update article","user":{"login":"alisabzevari","id":826242,"node_id":"MDQ6VXNlcjgyNjI0Mg==","avatar_url":"https://avatars1.githubusercontent.com/u/826242?v=4","gravatar_id":"","url":"https://api.github.com/users/alisabzevari","html_url":"https://github.com/alisabzevari","followers_url":"https://api.github.com/users/alisabzevari/followers","following_url":"https://api.github.com/users/alisabzevari/following{/other_user}","gists_url":"https://api.github.com/users/alisabzevari/gists{/gist_id}","starred_url":"https://api.github.com/users/alisabzevari/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alisabzevari/subscriptions","organizations_url":"https://api.github.com/users/alisabzevari/orgs","repos_url":"https://api.github.com/users/alisabzevari/repos","events_url":"https://api.github.com/users/alisabzevari/events{/privacy}","received_events_url":"https://api.github.com/users/alisabzevari/received_events","type":"User","site_admin":false},"labels":[{"id":996604628,"node_id":"MDU6TGFiZWw5OTY2MDQ2Mjg=","url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-10-06T10:11:25Z","updated_at":"2018-12-05T17:07:56Z","closed_at":"2018-12-05T17:07:56Z","author_association":"OWNER","active_lock_reason":null,"body":"Swagger description:\r\nhttps://github.com/alisabzevari/kotlin-http4k-realworld-example-app/blob/576aecc205fcba499c8f482d1aeef3f490264467/api/swagger.json#L485-L532","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/issues/7","repository_url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app","labels_url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/issues/7/comments","events_url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/issues/7/events","html_url":"https://github.com/alisabzevari/kotlin-http4k-realworld-example-app/issues/7","id":367443395,"node_id":"MDU6SXNzdWUzNjc0NDMzOTU=","number":7,"title":"Get article","user":{"login":"alisabzevari","id":826242,"node_id":"MDQ6VXNlcjgyNjI0Mg==","avatar_url":"https://avatars1.githubusercontent.com/u/826242?v=4","gravatar_id":"","url":"https://api.github.com/users/alisabzevari","html_url":"https://github.com/alisabzevari","followers_url":"https://api.github.com/users/alisabzevari/followers","following_url":"https://api.github.com/users/alisabzevari/following{/other_user}","gists_url":"https://api.github.com/users/alisabzevari/gists{/gist_id}","starred_url":"https://api.github.com/users/alisabzevari/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alisabzevari/subscriptions","organizations_url":"https://api.github.com/users/alisabzevari/orgs","repos_url":"https://api.github.com/users/alisabzevari/repos","events_url":"https://api.github.com/users/alisabzevari/events{/privacy}","received_events_url":"https://api.github.com/users/alisabzevari/received_events","type":"User","site_admin":false},"labels":[{"id":996604628,"node_id":"MDU6TGFiZWw5OTY2MDQ2Mjg=","url":"https://api.github.com/repos/alisabzevari/kotlin-http4k-realworld-example-app/labels/help%20wanted","name":"help wanted","color":"008672","default":true,"description":"Extra attention is needed"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-10-06T10:10:54Z","updated_at":"2018-12-05T16:38:19Z","closed_at":"2018-12-05T16:38:19Z","author_association":"OWNER","active_lock_reason":null,"body":"Swagger description:\r\nhttps://github.com/alisabzevari/kotlin-http4k-realworld-example-app/blob/576aecc205fcba499c8f482d1aeef3f490264467/api/swagger.json#L453-L484","performed_via_github_app":null,"score":1.0}]}
0

