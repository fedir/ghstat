HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 17:59:59 GMT
Link: <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fcrystal-lang%2Fcrystal+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fcrystal-lang%2Fcrystal+type%3Aissue+state%3Aclosed&page=34>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CE11:BAD3:3CC98BF:46039E8:5FB01B1E
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 18
X-Ratelimit-Reset: 1605376822
X-Ratelimit-Used: 12
X-Xss-Protection: 1; mode=block

1773c
{"total_count":1917,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9861","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9861/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9861/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9861/events","html_url":"https://github.com/crystal-lang/crystal/issues/9861","id":731482464,"node_id":"MDU6SXNzdWU3MzE0ODI0NjQ=","number":9861,"title":"Arithmetic overflow in the compiler","user":{"login":"grkek","id":44188195,"node_id":"MDQ6VXNlcjQ0MTg4MTk1","avatar_url":"https://avatars2.githubusercontent.com/u/44188195?v=4","gravatar_id":"","url":"https://api.github.com/users/grkek","html_url":"https://github.com/grkek","followers_url":"https://api.github.com/users/grkek/followers","following_url":"https://api.github.com/users/grkek/following{/other_user}","gists_url":"https://api.github.com/users/grkek/gists{/gist_id}","starred_url":"https://api.github.com/users/grkek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/grkek/subscriptions","organizations_url":"https://api.github.com/users/grkek/orgs","repos_url":"https://api.github.com/users/grkek/repos","events_url":"https://api.github.com/users/grkek/events{/privacy}","received_events_url":"https://api.github.com/users/grkek/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-28T14:13:46Z","updated_at":"2020-11-05T06:46:49Z","closed_at":"2020-11-05T06:46:49Z","author_association":"NONE","active_lock_reason":null,"body":"# Problem\r\n```\r\nArithmetic overflow (OverflowError)\r\n  from raise<OverflowError>:NoReturn\r\n  from __crystal_raise_overflow\r\n  from Crystal::Cover#compute_fast_cover:BitArray\r\n  from Crystal::Matches#cover_all?:(Array(Crystal::Match) | Bool | Nil)\r\n  from Crystal::Type+@Crystal::Type#lookup_matches<Crystal::CallSignature, Crystal::Type+, Crystal::Type+, Nil>:Crystal::Matches\r\n  from Crystal::Call#lookup_matches_checking_expansion<Crystal::Type+, Crystal::CallSignature, Bool, Bool>:Crystal::Matches\r\n  from Crystal::Call#lookup_matches_in_type<Crystal::Type+, Array(Crystal::Type+), (Array(Crystal::NamedArgumentType) | Nil), Nil, String, Bool, Bool, Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#lookup_matches_in:with_literals<Crystal::Type+, Array(Crystal::Type+), (Array(Crystal::NamedArgumentType) | Nil), Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#lookup_matches:with_literals<Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#recalculate:Nil\r\n  from Crystal::MainVisitor#visit<Crystal::Call>:Bool\r\n  from Crystal::ASTNode+@Crystal::ASTNode#accept<Crystal::MainVisitor>:Nil\r\n  from Crystal::MainVisitor#type_assign<Crystal::Var+, Crystal::ASTNode+, Crystal::Assign, Nil>:(Crystal::MetaVar | Nil)\r\n  from Crystal::MainVisitor#visit<Crystal::Assign>:Bool\r\n  from Crystal::ASTNode+@Crystal::ASTNode#accept<Crystal::MainVisitor>:Nil\r\n  from Crystal::ASTNode+@Crystal::ASTNode#accept<Crystal::MainVisitor>:Nil\r\n  from Crystal::Call#instantiate<Crystal::CallSignature, Crystal::Matches, Crystal::Type+, Nil, Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#lookup_matches_in_type<Crystal::Type+, Array(Crystal::Type+), (Array(Crystal::NamedArgumentType) | Nil), Nil, String, Bool, Bool, Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#lookup_matches_in:with_literals<Crystal::Type+, Array(Crystal::Type+), (Array(Crystal::NamedArgumentType) | Nil), Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#lookup_matches:with_literals<Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#recalculate:Nil\r\n  from Crystal::MainVisitor#visit<Crystal::Call>:Bool\r\n  from Crystal::ASTNode+@Crystal::ASTNode#accept<Crystal::MainVisitor>:Nil\r\n  from Crystal::MainVisitor#visit<Crystal::Block>:(Bool | Nil)\r\n  from Crystal::Block@Crystal::ASTNode#accept<Crystal::MainVisitor>:Nil\r\n  from Crystal::MainVisitor#visit<Crystal::Yield>:Bool\r\n  from Crystal::ASTNode+@Crystal::ASTNode#accept<Crystal::MainVisitor>:Nil\r\n  from Crystal::Call#instantiate<Crystal::CallSignature, Crystal::Matches, Crystal::Type+, Nil, Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#lookup_matches_in_type<Crystal::Type+, Array(Crystal::Type+), (Array(Crystal::NamedArgumentType) | Nil), Nil, String, Bool, Bool, Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#lookup_matches_in:with_literals<Crystal::Type+, Array(Crystal::Type+), (Array(Crystal::NamedArgumentType) | Nil), Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#lookup_matches:with_literals<Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#recalculate:Nil\r\n  from Crystal::MainVisitor#visit<Crystal::Call>:Bool\r\n  from Crystal::ASTNode+@Crystal::ASTNode#accept<Crystal::MainVisitor>:Nil\r\n  from Crystal::MainVisitor#type_assign<Crystal::Var+, Crystal::ASTNode+, Crystal::Assign, Nil>:(Crystal::MetaVar | Nil)\r\n  from Crystal::MainVisitor#visit<Crystal::Assign>:Bool\r\n  from Crystal::ASTNode+@Crystal::ASTNode#accept<Crystal::MainVisitor>:Nil\r\n  from Crystal::ASTNode+@Crystal::ASTNode#accept<Crystal::MainVisitor>:Nil\r\n  from Crystal::Call#instantiate<Crystal::CallSignature, Crystal::Matches, Crystal::Type+, Nil, Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#lookup_matches_in_type<Crystal::Type+, Array(Crystal::Type+), (Array(Crystal::NamedArgumentType) | Nil), Nil, String, Bool, Bool, Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#lookup_matches_in:with_literals<Crystal::Type+, Array(Crystal::Type+), (Array(Crystal::NamedArgumentType) | Nil), Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#lookup_matches:with_literals<Bool>:Array(Crystal::Def+)\r\n  from Crystal::Call#recalculate:Nil\r\n  from Crystal::MainVisitor#visit<Crystal::Call>:Bool\r\n  from Crystal::ASTNode+@Crystal::ASTNode#accept<Crystal::MainVisitor>:Nil\r\n  from Crystal::ASTNode+@Crystal::ASTNode#accept<Crystal::MainVisitor>:Nil\r\n  from Crystal::Program#visit_main<Crystal::ASTNode+, Crystal::MainVisitor, Bool, Bool>:Crystal::ASTNode+\r\n  from Crystal::Program#semantic<Crystal::ASTNode+, Bool>:Crystal::ASTNode+\r\n  from Crystal::Compiler#compile<Array(Crystal::Compiler::Source), String>:Crystal::Compiler::Result\r\n  from Crystal::Command#run_command<Bool>:Nil\r\n  from Crystal::Command#run:(Bool | Nil)\r\n  from __crystal_main\r\n  from main\r\nError: you've found a bug in the Crystal compiler. Please open an issue, including source code that will allow us to reproduce the bug: https://github.com/crystal-lang/crystal/issues\r\n```\r\n\r\nThe issue spawned when I tried to use too many properties, but then when I tried to disable the properties it still keeps overflowing for no reason.\r\n\r\n```\r\nCrystal 0.35.1 (2020-06-19)\r\n\r\nLLVM: 10.0.0\r\nDefault target: x86_64-apple-macosx\r\n```\r\n\r\n# Instructions\r\n\r\n```bash\r\ngit clone git@github.com:grkek/v6.git\r\ncd v6\r\nshards install\r\ncrystal run src/v6.cr\r\n```\r\n\r\nYou will see the above mentioned issue.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/jgaskins/redis/issues/3","repository_url":"https://api.github.com/repos/jgaskins/redis","labels_url":"https://api.github.com/repos/jgaskins/redis/issues/3/labels{/name}","comments_url":"https://api.github.com/repos/jgaskins/redis/issues/3/comments","events_url":"https://api.github.com/repos/jgaskins/redis/issues/3/events","html_url":"https://github.com/jgaskins/redis/issues/3","id":704685262,"node_id":"MDU6SXNzdWU3MDQ2ODUyNjI=","number":3,"title":"can't use this shard together with crystal-mysql","user":{"login":"Manu-sh","id":13910080,"node_id":"MDQ6VXNlcjEzOTEwMDgw","avatar_url":"https://avatars2.githubusercontent.com/u/13910080?v=4","gravatar_id":"","url":"https://api.github.com/users/Manu-sh","html_url":"https://github.com/Manu-sh","followers_url":"https://api.github.com/users/Manu-sh/followers","following_url":"https://api.github.com/users/Manu-sh/following{/other_user}","gists_url":"https://api.github.com/users/Manu-sh/gists{/gist_id}","starred_url":"https://api.github.com/users/Manu-sh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Manu-sh/subscriptions","organizations_url":"https://api.github.com/users/Manu-sh/orgs","repos_url":"https://api.github.com/users/Manu-sh/repos","events_url":"https://api.github.com/users/Manu-sh/events{/privacy}","received_events_url":"https://api.github.com/users/Manu-sh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-09-18T22:09:29Z","updated_at":"2020-10-20T14:10:08Z","closed_at":"2020-10-20T14:10:08Z","author_association":"NONE","active_lock_reason":null,"body":"can't using this shard with `crystal-mysql`, while `stefanwille/crystal-redis` is not affect by this issue\r\n```\r\nResolving dependencies\r\nFetching https://github.com/jgaskins/redis.git\r\nFetching https://github.com/jgaskins/crystal-db.git\r\nFetching https://github.com/crystal-lang/crystal-mysql.git\r\nError shard name (db) has ambiguous sources: 'git: https://github.com/jgaskins/crystal-db.git' and 'git: https://github.com/crystal-lang/crystal-db.git'.\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/PercussiveElbow/docker-escape-tool/issues/4","repository_url":"https://api.github.com/repos/PercussiveElbow/docker-escape-tool","labels_url":"https://api.github.com/repos/PercussiveElbow/docker-escape-tool/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/PercussiveElbow/docker-escape-tool/issues/4/comments","events_url":"https://api.github.com/repos/PercussiveElbow/docker-escape-tool/issues/4/events","html_url":"https://github.com/PercussiveElbow/docker-escape-tool/issues/4","id":706741218,"node_id":"MDU6SXNzdWU3MDY3NDEyMTg=","number":4,"title":"Move to using Crystal HTTP:Client Unix socket support","user":{"login":"PercussiveElbow","id":10052381,"node_id":"MDQ6VXNlcjEwMDUyMzgx","avatar_url":"https://avatars1.githubusercontent.com/u/10052381?v=4","gravatar_id":"","url":"https://api.github.com/users/PercussiveElbow","html_url":"https://github.com/PercussiveElbow","followers_url":"https://api.github.com/users/PercussiveElbow/followers","following_url":"https://api.github.com/users/PercussiveElbow/following{/other_user}","gists_url":"https://api.github.com/users/PercussiveElbow/gists{/gist_id}","starred_url":"https://api.github.com/users/PercussiveElbow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PercussiveElbow/subscriptions","organizations_url":"https://api.github.com/users/PercussiveElbow/orgs","repos_url":"https://api.github.com/users/PercussiveElbow/repos","events_url":"https://api.github.com/users/PercussiveElbow/events{/privacy}","received_events_url":"https://api.github.com/users/PercussiveElbow/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"PercussiveElbow","id":10052381,"node_id":"MDQ6VXNlcjEwMDUyMzgx","avatar_url":"https://avatars1.githubusercontent.com/u/10052381?v=4","gravatar_id":"","url":"https://api.github.com/users/PercussiveElbow","html_url":"https://github.com/PercussiveElbow","followers_url":"https://api.github.com/users/PercussiveElbow/followers","following_url":"https://api.github.com/users/PercussiveElbow/following{/other_user}","gists_url":"https://api.github.com/users/PercussiveElbow/gists{/gist_id}","starred_url":"https://api.github.com/users/PercussiveElbow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PercussiveElbow/subscriptions","organizations_url":"https://api.github.com/users/PercussiveElbow/orgs","repos_url":"https://api.github.com/users/PercussiveElbow/repos","events_url":"https://api.github.com/users/PercussiveElbow/events{/privacy}","received_events_url":"https://api.github.com/users/PercussiveElbow/received_events","type":"User","site_admin":false},"assignees":[{"login":"PercussiveElbow","id":10052381,"node_id":"MDQ6VXNlcjEwMDUyMzgx","avatar_url":"https://avatars1.githubusercontent.com/u/10052381?v=4","gravatar_id":"","url":"https://api.github.com/users/PercussiveElbow","html_url":"https://github.com/PercussiveElbow","followers_url":"https://api.github.com/users/PercussiveElbow/followers","following_url":"https://api.github.com/users/PercussiveElbow/following{/other_user}","gists_url":"https://api.github.com/users/PercussiveElbow/gists{/gist_id}","starred_url":"https://api.github.com/users/PercussiveElbow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PercussiveElbow/subscriptions","organizations_url":"https://api.github.com/users/PercussiveElbow/orgs","repos_url":"https://api.github.com/users/PercussiveElbow/repos","events_url":"https://api.github.com/users/PercussiveElbow/events{/privacy}","received_events_url":"https://api.github.com/users/PercussiveElbow/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-09-22T22:52:30Z","updated_at":"2020-11-01T20:17:38Z","closed_at":"2020-11-01T20:17:38Z","author_association":"OWNER","active_lock_reason":null,"body":"This was always a lame fix to avoid screwing around libc until Crystal supported stdlib HTTP client calls to unix sockets. This looks to be coming with Crystal 1.0 https://github.com/crystal-lang/crystal/pull/9543 which should allow avoiding both methods and using the same code when interacting with `/var/unix/socket/` and the TCP socket.\r\n\r\nWill likely also provide the bonus of escapes now working on read only containers.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9835","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9835/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9835/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9835/events","html_url":"https://github.com/crystal-lang/crystal/issues/9835","id":723825032,"node_id":"MDU6SXNzdWU3MjM4MjUwMzI=","number":9835,"title":"Cannot receive datagram over unix socket","user":{"login":"carlhoerberg","id":180046,"node_id":"MDQ6VXNlcjE4MDA0Ng==","avatar_url":"https://avatars3.githubusercontent.com/u/180046?v=4","gravatar_id":"","url":"https://api.github.com/users/carlhoerberg","html_url":"https://github.com/carlhoerberg","followers_url":"https://api.github.com/users/carlhoerberg/followers","following_url":"https://api.github.com/users/carlhoerberg/following{/other_user}","gists_url":"https://api.github.com/users/carlhoerberg/gists{/gist_id}","starred_url":"https://api.github.com/users/carlhoerberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carlhoerberg/subscriptions","organizations_url":"https://api.github.com/users/carlhoerberg/orgs","repos_url":"https://api.github.com/users/carlhoerberg/repos","events_url":"https://api.github.com/users/carlhoerberg/events{/privacy}","received_events_url":"https://api.github.com/users/carlhoerberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-10-17T18:47:56Z","updated_at":"2020-11-04T14:37:17Z","closed_at":"2020-11-04T14:37:17Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Maybe I'm doing something wrong, but this code:\r\n\r\n```crystal\r\nrequire \"socket\"\r\n\r\npath = File.tempname\r\nserver = Socket.unix(Socket::Type::DGRAM)\r\nserver.bind Socket::UNIXAddress.new(path)\r\n\r\nclient = Socket.unix(Socket::Type::DGRAM)\r\nclient.connect Socket::UNIXAddress.new(path)\r\nclient.send \"foo\"\r\n\r\nmessage, _ = server.receive\r\nputs message\r\n```\r\n\r\nends up with this exception:\r\n```\r\nUnhandled exception: Unsupported family type: UNSPEC (0) (Exception)\r\n  from ../../../../usr/share/crystal/src/socket/address.cr:18:65 in 'from'\r\n  from ../../../../usr/share/crystal/src/socket.cr:335:17 in 'receive'\r\n  from ../../../../usr/share/crystal/src/socket.cr:331:3 in 'receive'\r\n  from bug.cr:11:14 in '__crystal_main'\r\n  from ../../../../usr/share/crystal/src/crystal/main.cr:105:5 in 'main_user_code'\r\n  from ../../../../usr/share/crystal/src/crystal/main.cr:91:7 in 'main'\r\n  from ../../../../usr/share/crystal/src/crystal/main.cr:114:3 in 'main'\r\n  from __libc_start_main\r\n  from _start\r\n  from ???\r\n```\r\n\r\nError raised from here: https://github.com/crystal-lang/crystal/blob/0.35.1/src/socket/address.cr#L20\r\n\r\nLooks like it's expected that the client address is supposed to be a `UNSPEC` for unix socket datagrams (makes sense, you can't really reply to it), so maybe just return nil, or a some sort of `UnspecifiedAddress`?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9891","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9891/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9891/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9891/events","html_url":"https://github.com/crystal-lang/crystal/issues/9891","id":737873660,"node_id":"MDU6SXNzdWU3Mzc4NzM2NjA=","number":9891,"title":"Chained logical disjunction breaks type inference with #is_a?","user":{"login":"HertzDevil","id":1361918,"node_id":"MDQ6VXNlcjEzNjE5MTg=","avatar_url":"https://avatars3.githubusercontent.com/u/1361918?v=4","gravatar_id":"","url":"https://api.github.com/users/HertzDevil","html_url":"https://github.com/HertzDevil","followers_url":"https://api.github.com/users/HertzDevil/followers","following_url":"https://api.github.com/users/HertzDevil/following{/other_user}","gists_url":"https://api.github.com/users/HertzDevil/gists{/gist_id}","starred_url":"https://api.github.com/users/HertzDevil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HertzDevil/subscriptions","organizations_url":"https://api.github.com/users/HertzDevil/orgs","repos_url":"https://api.github.com/users/HertzDevil/repos","events_url":"https://api.github.com/users/HertzDevil/events{/privacy}","received_events_url":"https://api.github.com/users/HertzDevil/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-11-06T16:04:38Z","updated_at":"2020-11-10T09:19:15Z","closed_at":"2020-11-10T09:19:15Z","author_association":"NONE","active_lock_reason":null,"body":"It appears the `||` operator causes type inference to fail if more than one is used together and each predicate applies type restrictions to the variables used:\r\n\r\n```crystal\r\ndef f1(x)\r\n  x.is_a?(Int8) ? x : x[0]\r\nend\r\n\r\ndef f2(x)\r\n  x.is_a?(Int8) || x.is_a?(Int8) ? x : x[0]\r\nend\r\n\r\ndef f3(x)\r\n  x.is_a?(Int8) || x.is_a?(Int8) || x.is_a?(Int8) ? x : x[0]\r\nend\r\n\r\ntypeof(f1(\"\")) # => Char\r\ntypeof(f2(\"\")) # => Char\r\ntypeof(f3(\"\")) # => (Char | String)\r\n```\r\n\r\nHere Crystal seems to decide that the true branch of the ternary inside `f3(\"\")` is reachable, and thus include `String` in its return type. Similar results can be obtained with `#responds_to?` as well.\r\n\r\n`case` expressions with type conditions are a special case of the above; they break if 3 or more clauses follow a `when`:\r\n\r\n```crystal\r\ndef f3_case(x)\r\n  case x\r\n  when Int8, Int16, Int32\r\n    x\r\n  else\r\n    x[0]\r\n  end\r\nend\r\n\r\ntypeof(f3_case(\"\")) # => (Char | String)\r\n```\r\n\r\nIn contrast `&&` doesn't break like this:\r\n\r\n```crystal\r\ndef f3_and(x)\r\n  x.is_a?(Int8) && x.is_a?(Int8) && x.is_a?(Int8) ? x : x[0]\r\nend\r\ntypeof(f3_and(\"\")) # => Char\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/will/crystal-pg/issues/215","repository_url":"https://api.github.com/repos/will/crystal-pg","labels_url":"https://api.github.com/repos/will/crystal-pg/issues/215/labels{/name}","comments_url":"https://api.github.com/repos/will/crystal-pg/issues/215/comments","events_url":"https://api.github.com/repos/will/crystal-pg/issues/215/events","html_url":"https://github.com/will/crystal-pg/issues/215","id":719655811,"node_id":"MDU6SXNzdWU3MTk2NTU4MTE=","number":215,"title":"shards update/install/build failing at the crystal-pg step","user":{"login":"rishavs","id":1210239,"node_id":"MDQ6VXNlcjEyMTAyMzk=","avatar_url":"https://avatars3.githubusercontent.com/u/1210239?v=4","gravatar_id":"","url":"https://api.github.com/users/rishavs","html_url":"https://github.com/rishavs","followers_url":"https://api.github.com/users/rishavs/followers","following_url":"https://api.github.com/users/rishavs/following{/other_user}","gists_url":"https://api.github.com/users/rishavs/gists{/gist_id}","starred_url":"https://api.github.com/users/rishavs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rishavs/subscriptions","organizations_url":"https://api.github.com/users/rishavs/orgs","repos_url":"https://api.github.com/users/rishavs/repos","events_url":"https://api.github.com/users/rishavs/events{/privacy}","received_events_url":"https://api.github.com/users/rishavs/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-10-12T20:41:30Z","updated_at":"2020-10-12T22:04:56Z","closed_at":"2020-10-12T22:04:16Z","author_association":"NONE","active_lock_reason":null,"body":"On using shards build/update on my exiting projects, the shards process is failing. I am using wsl on a windows 10 device.\r\n\r\n```\r\nrishav@Romana:/mnt/c/Users/Mockingbird/Documents/GitHub/kaipi$ shards build\r\nResolving dependencies\r\nFetching https://github.com/will/crystal-pg.git\r\nFetching https://github.com/gdotdesign/cr-dotenv.git\r\nFetching https://github.com/crystal-lang/crystal-db.git\r\nShard \"pg\" version (0.21.1) doesn't match tag version (0.22.0)\r\nInstalling db (0.10.0)\r\nFailed git archive --format=tar --prefix= refs/tags/v0.10.0 | tar -x -f - -C '/mnt/c/Users/Mockingbird/Documents/GitHub/kaipi/lib/db' (). Maybe a commit, branch or file doesn't exist?\r\n```\r\nSlightly more verbose error;\r\n```\r\ngit ls-remote --get-url origin\r\nFetching https://github.com/crystal-lang/crystal-db.git\r\ngit fetch --all --quiet\r\ngit tag --list --column=never\r\ngit ls-tree -r --full-tree --name-only refs/tags/v0.10.0 -- shard.yml\r\ngit show refs/tags/v0.10.0:shard.yml\r\nShard \"pg\" version (0.21.1) doesn't match tag version (0.22.0)\r\nInstalling db (0.10.0)\r\nrm -rf ''/mnt/c/Users/Mockingbird/Documents/GitHub/kaipi/lib/db''\r\ngit archive --format=tar --prefix= refs/tags/v0.10.0 | tar -x -f - -C '/mnt/c/Users/Mockingbird/Documents/GitHub/kaipi/lib/db'\r\nFailed git archive --format=tar --prefix= refs/tags/v0.10.0 | tar -x -f - -C '/mnt/c/Users/Mockingbird/Documents/GitHub/kaipi/lib/db' (). Maybe a commit, branch or file doesn't exist?\r\n```\r\n\r\nHere is my env etails;\r\n```\r\nrishav@Romana:/mnt/c/Users/Mockingbird/Documents/GitHub/kaipi$ crystal -v\r\nCrystal 0.35.1 [5999ae29b] (2020-06-19)\r\n\r\nLLVM: 8.0.0\r\nDefault target: x86_64-unknown-linux-gnu\r\nrishav@Romana:/mnt/c/Users/Mockingbird/Documents/GitHub/kaipi$ shards --version\r\nShards 0.11.1 [3b7d490] (2020-06-19)\r\nrishav@Romana:/mnt/c/Users/Mockingbird/Documents/GitHub/kaipi$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 20.04.1 LTS\r\nRelease:        20.04\r\nCodename:       focal\r\n```\r\n\r\nHere is my shards.yml\r\n```\r\nname: Kaipi\r\nversion: 0.1.0\r\n\r\nauthors:\r\n  - your-name-here <your-email-here>\r\n\r\ntargets:\r\n    kaipi:\r\n        main: src/kaipi.cr\r\n\r\ndependencies:\r\n    pg:\r\n        github: will/crystal-pg\r\n    dotenv:\r\n        github: gdotdesign/cr-dotenv\r\n\r\ncrystal: 0.35.0\r\n\r\nlicense: MIT\r\n```\r\n\r\nCurrently I am blocked on restarting with my older projects.\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9785","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9785/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9785/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9785/events","html_url":"https://github.com/crystal-lang/crystal/issues/9785","id":713098595,"node_id":"MDU6SXNzdWU3MTMwOTg1OTU=","number":9785,"title":"Prepare Windows GitHub Action for upcoming deprecations","user":{"login":"bcardiff","id":459923,"node_id":"MDQ6VXNlcjQ1OTkyMw==","avatar_url":"https://avatars1.githubusercontent.com/u/459923?v=4","gravatar_id":"","url":"https://api.github.com/users/bcardiff","html_url":"https://github.com/bcardiff","followers_url":"https://api.github.com/users/bcardiff/followers","following_url":"https://api.github.com/users/bcardiff/following{/other_user}","gists_url":"https://api.github.com/users/bcardiff/gists{/gist_id}","starred_url":"https://api.github.com/users/bcardiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bcardiff/subscriptions","organizations_url":"https://api.github.com/users/bcardiff/orgs","repos_url":"https://api.github.com/users/bcardiff/repos","events_url":"https://api.github.com/users/bcardiff/events{/privacy}","received_events_url":"https://api.github.com/users/bcardiff/received_events","type":"User","site_admin":false},"labels":[{"id":766733448,"node_id":"MDU6TGFiZWw3NjY3MzM0NDg=","url":"https://api.github.com/repos/crystal-lang/crystal/labels/platform:windows","name":"platform:windows","color":"66dd66","default":false,"description":""},{"id":274569036,"node_id":"MDU6TGFiZWwyNzQ1NjkwMzY=","url":"https://api.github.com/repos/crystal-lang/crystal/labels/topic:infrastructure","name":"topic:infrastructure","color":"000000","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-01T18:48:51Z","updated_at":"2020-10-26T15:44:59Z","closed_at":"2020-10-26T15:44:59Z","author_association":"MEMBER","active_lock_reason":null,"body":"Ref: https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/\r\n\r\n`::set-env` is used https://github.com/crystal-lang/crystal/blob/master/.github/workflows/win.yml#L149-L155\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-ameba/ameba/issues/168","repository_url":"https://api.github.com/repos/crystal-ameba/ameba","labels_url":"https://api.github.com/repos/crystal-ameba/ameba/issues/168/labels{/name}","comments_url":"https://api.github.com/repos/crystal-ameba/ameba/issues/168/comments","events_url":"https://api.github.com/repos/crystal-ameba/ameba/issues/168/events","html_url":"https://github.com/crystal-ameba/ameba/issues/168","id":727773396,"node_id":"MDU6SXNzdWU3Mjc3NzMzOTY=","number":168,"title":"Error: Index out of bounds","user":{"login":"jwoertink","id":2391,"node_id":"MDQ6VXNlcjIzOTE=","avatar_url":"https://avatars1.githubusercontent.com/u/2391?v=4","gravatar_id":"","url":"https://api.github.com/users/jwoertink","html_url":"https://github.com/jwoertink","followers_url":"https://api.github.com/users/jwoertink/followers","following_url":"https://api.github.com/users/jwoertink/following{/other_user}","gists_url":"https://api.github.com/users/jwoertink/gists{/gist_id}","starred_url":"https://api.github.com/users/jwoertink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwoertink/subscriptions","organizations_url":"https://api.github.com/users/jwoertink/orgs","repos_url":"https://api.github.com/users/jwoertink/repos","events_url":"https://api.github.com/users/jwoertink/events{/privacy}","received_events_url":"https://api.github.com/users/jwoertink/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-10-22T23:00:57Z","updated_at":"2020-11-05T08:25:55Z","closed_at":"2020-10-23T07:42:12Z","author_association":"NONE","active_lock_reason":null,"body":"I'm not sure why, but I just started getting this error both locally, and in our CI\r\n\r\nhttps://github.com/luckyframework/avram/pull/495/checks?check_run_id=1295328991\r\n\r\n```\r\nFinished in 988.8 milliseconds\r\n\r\n279 inspected, 0 failures.\r\nError: Index out of bounds\r\n```\r\n\r\nIt must be something in that PR specifically. I wonder if it's something with the fact that I have macro args called `if` and `unless` 😬 \r\n\r\n```\r\nshards:\r\n  ameba:\r\n    git: https://github.com/crystal-ameba/ameba.git\r\n    version: 0.13.2\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/PercussiveElbow/docker-crystal/issues/1","repository_url":"https://api.github.com/repos/PercussiveElbow/docker-crystal","labels_url":"https://api.github.com/repos/PercussiveElbow/docker-crystal/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/PercussiveElbow/docker-crystal/issues/1/comments","events_url":"https://api.github.com/repos/PercussiveElbow/docker-crystal/issues/1/events","html_url":"https://github.com/PercussiveElbow/docker-crystal/issues/1","id":723247662,"node_id":"MDU6SXNzdWU3MjMyNDc2NjI=","number":1,"title":"Crystal version","user":{"login":"marghidanu","id":2437823,"node_id":"MDQ6VXNlcjI0Mzc4MjM=","avatar_url":"https://avatars0.githubusercontent.com/u/2437823?v=4","gravatar_id":"","url":"https://api.github.com/users/marghidanu","html_url":"https://github.com/marghidanu","followers_url":"https://api.github.com/users/marghidanu/followers","following_url":"https://api.github.com/users/marghidanu/following{/other_user}","gists_url":"https://api.github.com/users/marghidanu/gists{/gist_id}","starred_url":"https://api.github.com/users/marghidanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marghidanu/subscriptions","organizations_url":"https://api.github.com/users/marghidanu/orgs","repos_url":"https://api.github.com/users/marghidanu/repos","events_url":"https://api.github.com/users/marghidanu/events{/privacy}","received_events_url":"https://api.github.com/users/marghidanu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-16T13:52:11Z","updated_at":"2020-10-27T12:10:42Z","closed_at":"2020-10-27T12:10:42Z","author_association":"NONE","active_lock_reason":null,"body":"What version of Crystal are you using for this? The HTTP::Client from 0.35.1 doesn't support the features in the code:\r\n\r\n```\r\nError: no overload matches 'HTTP::Client.new' with type UNIXSocket\r\n\r\nOverloads are:\r\n - HTTP::Client.new(host : String, port = nil, tls : TLSContext = nil)\r\n - HTTP::Client.new(uri : URI, tls : TLSContext = nil)\r\n - HTTP::Client.new(uri : URI, tls : TLSContext = nil, &block)\r\n - HTTP::Client.new(host : String, port = nil, tls : TLSContext = nil, &block)\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9842","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9842/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9842/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9842/events","html_url":"https://github.com/crystal-lang/crystal/issues/9842","id":727933159,"node_id":"MDU6SXNzdWU3Mjc5MzMxNTk=","number":9842,"title":"unexpected behavior in gsub with regex for $","user":{"login":"NIFR91","id":4471736,"node_id":"MDQ6VXNlcjQ0NzE3MzY=","avatar_url":"https://avatars0.githubusercontent.com/u/4471736?v=4","gravatar_id":"","url":"https://api.github.com/users/NIFR91","html_url":"https://github.com/NIFR91","followers_url":"https://api.github.com/users/NIFR91/followers","following_url":"https://api.github.com/users/NIFR91/following{/other_user}","gists_url":"https://api.github.com/users/NIFR91/gists{/gist_id}","starred_url":"https://api.github.com/users/NIFR91/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NIFR91/subscriptions","organizations_url":"https://api.github.com/users/NIFR91/orgs","repos_url":"https://api.github.com/users/NIFR91/repos","events_url":"https://api.github.com/users/NIFR91/events{/privacy}","received_events_url":"https://api.github.com/users/NIFR91/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-10-23T05:48:23Z","updated_at":"2020-10-23T14:34:27Z","closed_at":"2020-10-23T06:13:06Z","author_association":"NONE","active_lock_reason":null,"body":"Hello I think this is a bug in `gsub` for `string`\r\n\r\n```crystal\r\n# Crystal \r\nstr = <<-str\r\n# comment\r\ntext1 # other comment\r\n\r\nstr\r\np str.gsub(/#.*$/,\"\") #=> \"# comment\\n\" + \"text1\\n\"\r\np str.gsub(/#.*/,\"\")  #=> \"\\n\" + \"text1\\n\"\r\n```\r\n\r\nI expected the first form to delete the comments just like the second form, i checked\r\nin ruby and both forms return the same output. \r\n\r\n```ruby\r\n# Ruby \r\nstr = <<~str\r\n# comment\r\ntext1 # other comment\r\n\r\nstr\r\np str.gsub(/#.*$/,\"\") #=> \"\\n\" + \"text1\\n\"\r\np str.gsub(/#.*/,\"\")  #=> \"\\n\" + \"text1\\n\"\r\n```\r\n\r\nVersions: \r\n\r\n```txt\r\nCrystal 0.35.1 (2020-06-21)\r\n\r\nLLVM: 10.0.0\r\nDefault target: x86_64-pc-linux-gnu\r\n```\r\n\r\n```txt\r\nruby 2.7.1p83 (2020-03-31 revision a0c7c23c9c) [x86_64-linux]\r\n```\r\n\r\n```txt\r\nLinux mio 5.8.16-2-MANJARO #1 SMP PREEMPT Mon Oct 19 11:33:03 UTC 2020 x86_64 GNU/Linux\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9789","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9789/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9789/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9789/events","html_url":"https://github.com/crystal-lang/crystal/issues/9789","id":713653822,"node_id":"MDU6SXNzdWU3MTM2NTM4MjI=","number":9789,"title":"Confusing assertion error when building docs without git installed","user":{"login":"myfreeweb","id":208340,"node_id":"MDQ6VXNlcjIwODM0MA==","avatar_url":"https://avatars0.githubusercontent.com/u/208340?v=4","gravatar_id":"","url":"https://api.github.com/users/myfreeweb","html_url":"https://github.com/myfreeweb","followers_url":"https://api.github.com/users/myfreeweb/followers","following_url":"https://api.github.com/users/myfreeweb/following{/other_user}","gists_url":"https://api.github.com/users/myfreeweb/gists{/gist_id}","starred_url":"https://api.github.com/users/myfreeweb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/myfreeweb/subscriptions","organizations_url":"https://api.github.com/users/myfreeweb/orgs","repos_url":"https://api.github.com/users/myfreeweb/repos","events_url":"https://api.github.com/users/myfreeweb/events{/privacy}","received_events_url":"https://api.github.com/users/myfreeweb/received_events","type":"User","site_admin":false},"labels":[{"id":20487867,"node_id":"MDU6TGFiZWwyMDQ4Nzg2Nw==","url":"https://api.github.com/repos/crystal-lang/crystal/labels/kind:bug","name":"kind:bug","color":"fc2929","default":false,"description":null},{"id":1166990021,"node_id":"MDU6TGFiZWwxMTY2OTkwMDIx","url":"https://api.github.com/repos/crystal-lang/crystal/labels/topic:tools:docs","name":"topic:tools:docs","color":"1d76db","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-10-02T14:13:05Z","updated_at":"2020-11-11T14:19:08Z","closed_at":"2020-11-11T14:19:08Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Building 0.35.1 in a clean environment (FreeBSD packaging) would fail with a confusing\r\n\r\n```\r\nbin/crystal docs src/docs_main.cr  --project-name=Crystal --project-version=0.35.1 --source-refname=\r\nbin/crystal: crystal: not found\r\nUsing compiled compiler at .build/crystal\r\nUnhandled exception: Crystal::Compiler#program cannot be nil (NilAssertionError)\r\n  from __crystal_realloc\r\n  from __crystal_sigfault_handler\r\n  from __crystal_sigfault_handler\r\n  from __crystal_main\r\n  from main\r\n  from _start\r\n```\r\n\r\nturns out, right after it tries to execute git:\r\n\r\n```\r\n12598: execve(\"/usr/local/sbin/git\",0x806dd74c0,0x7fffffffda60) ERR#2 'No such file or directory'\r\n12598: execve(\"/usr/local/bin/git\",0x806dd74c0,0x7fffffffda60) ERR#2 'No such file or directory'\r\n12598: execve(\"/usr/sbin/git\",0x806dd74c0,0x7fffffffda60) ERR#2 'No such file or directory'\r\n12598: execve(\"/usr/bin/git\",0x806dd74c0,0x7fffffffda60) ERR#2 'No such file or directory'\r\n12598: execve(\"/sbin/git\",0x806dd74c0,0x7fffffffda60) ERR#2 'No such file or directory'\r\n12598: execve(\"/bin/git\",0x806dd74c0,0x7fffffffda60) ERR#2 'No such file or directory'\r\n12598: write(15,\"\\^A\",1)                         = 1 (0x1)\r\n 7355: kevent(15,{ 14,EVFILT_READ,EV_ADD,0,0,0x30303 8,EVFILT_READ,EV_ADD,0,0,0x30303 11,EVFILT_READ,EV_ADD,0,0,0x30303 },3,{ 14,EVFILT_READ,0x0,0,0x1,0x30303 },64,{ 4.999951000 }) = 1 (0x1)\r\n12598: write(15,\"\\^B\\0\\0\\0\",4)                   = 4 (0x4)\r\n 7355: read(14,\"\\^A\\^B\\0\\0\\0\",8192)              = 5 (0x5)\r\n 7355: mmap(0x0,28672,PROT_READ|PROT_WRITE,MAP_PRIVATE|MAP_ANON,-1,0x0) = 34508636160 (0x808e00000)\r\n 7355: fstatat(AT_FDCWD,\"/usr/share/nls/C/libc.cat\",0x7fffffffbcb0,0x0) ERR#2 'No such file or directory'\r\n 7355: fstatat(AT_FDCWD,\"/usr/share/nls/libc/C\",0x7fffffffbcb0,0x0) ERR#2 'No such file or directory'\r\n 7355: fstatat(AT_FDCWD,\"/usr/local/share/nls/C/libc.cat\",0x7fffffffbcb0,0x0) ERR#2 'No such file or directory'\r\n 7355: fstatat(AT_FDCWD,\"/usr/local/share/nls/libc/C\",0x7fffffffbcb0,0x0) ERR#2 'No such file or directory'\r\n 7355: close(14)                                 = 0 (0x0)\r\nUnhandled exception: Crystal::Compiler#program cannot be nil (NilAssertionError)\r\n```\r\n\r\nand installing git fixes it.\r\n\r\nWould be nice to make git not required (probably there's already a way to provide the git rev or whatever it wants?) but at least please make a **good error message**!","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/lukesampson/scoop/issues/4114","repository_url":"https://api.github.com/repos/lukesampson/scoop","labels_url":"https://api.github.com/repos/lukesampson/scoop/issues/4114/labels{/name}","comments_url":"https://api.github.com/repos/lukesampson/scoop/issues/4114/comments","events_url":"https://api.github.com/repos/lukesampson/scoop/issues/4114/events","html_url":"https://github.com/lukesampson/scoop/issues/4114","id":700885671,"node_id":"MDU6SXNzdWU3MDA4ODU2NzE=","number":4114,"title":"[Request] Add Crystal-lang","user":{"login":"rishavs","id":1210239,"node_id":"MDQ6VXNlcjEyMTAyMzk=","avatar_url":"https://avatars3.githubusercontent.com/u/1210239?v=4","gravatar_id":"","url":"https://api.github.com/users/rishavs","html_url":"https://github.com/rishavs","followers_url":"https://api.github.com/users/rishavs/followers","following_url":"https://api.github.com/users/rishavs/following{/other_user}","gists_url":"https://api.github.com/users/rishavs/gists{/gist_id}","starred_url":"https://api.github.com/users/rishavs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rishavs/subscriptions","organizations_url":"https://api.github.com/users/rishavs/orgs","repos_url":"https://api.github.com/users/rishavs/repos","events_url":"https://api.github.com/users/rishavs/events{/privacy}","received_events_url":"https://api.github.com/users/rishavs/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-14T08:21:14Z","updated_at":"2020-10-20T23:13:55Z","closed_at":"2020-10-20T23:13:55Z","author_association":"NONE","active_lock_reason":null,"body":"Crystal is a programming language with the following goals:\r\n\r\n- Have a syntax similar to Ruby (but compatibility with it is not a goal).\r\n- Be statically type-checked, but without having to specify the type of variables or method arguments.\r\n- Be able to call C code by writing bindings to it in Crystal.\r\n- Have compile-time evaluation and generation of code, to avoid boilerplate code.\r\n- Compile to efficient native code.\r\n\r\nsite: https://crystal-lang.org/\r\n\r\nIt has a Github Actions CI which produces the windows binaries https://github.com/crystal-lang/crystal/actions?query=workflow%3A%22Windows+CI%22\r\n\r\nWhile parts of language (like networking) are still under work, a lot of if it usable today, specifically for things like gamedev and shell programs. Ref https://pryp.in/blog/28/running-crystal-natively-on-windows-building-videogame-examples.html\r\n\r\nI hope that if we can have scoop support for fetching Crystal binaries, setting up the required env vars and the folder structure for the compiler, it would remove a lot of friction in getting starting on this wonderful language.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/cncf/cnf-conformance/issues/429","repository_url":"https://api.github.com/repos/cncf/cnf-conformance","labels_url":"https://api.github.com/repos/cncf/cnf-conformance/issues/429/labels{/name}","comments_url":"https://api.github.com/repos/cncf/cnf-conformance/issues/429/comments","events_url":"https://api.github.com/repos/cncf/cnf-conformance/issues/429/events","html_url":"https://github.com/cncf/cnf-conformance/issues/429","id":716081387,"node_id":"MDU6SXNzdWU3MTYwODEzODc=","number":429,"title":"[BUG] Invalid memory access address during build","user":{"login":"wavell","id":29548,"node_id":"MDQ6VXNlcjI5NTQ4","avatar_url":"https://avatars3.githubusercontent.com/u/29548?v=4","gravatar_id":"","url":"https://api.github.com/users/wavell","html_url":"https://github.com/wavell","followers_url":"https://api.github.com/users/wavell/followers","following_url":"https://api.github.com/users/wavell/following{/other_user}","gists_url":"https://api.github.com/users/wavell/gists{/gist_id}","starred_url":"https://api.github.com/users/wavell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wavell/subscriptions","organizations_url":"https://api.github.com/users/wavell/orgs","repos_url":"https://api.github.com/users/wavell/repos","events_url":"https://api.github.com/users/wavell/events{/privacy}","received_events_url":"https://api.github.com/users/wavell/received_events","type":"User","site_admin":false},"labels":[{"id":1871158040,"node_id":"MDU6TGFiZWwxODcxMTU4MDQw","url":"https://api.github.com/repos/cncf/cnf-conformance/labels/5%20pts","name":"5 pts","color":"68e278","default":false,"description":""},{"id":1794117143,"node_id":"MDU6TGFiZWwxNzk0MTE3MTQz","url":"https://api.github.com/repos/cncf/cnf-conformance/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":2447273618,"node_id":"MDU6TGFiZWwyNDQ3MjczNjE4","url":"https://api.github.com/repos/cncf/cnf-conformance/labels/sprint20","name":"sprint20","color":"42bfbf","default":false,"description":"Sprint 20: Nov 5-18"}],"state":"closed","locked":false,"assignee":{"login":"denverwilliams","id":19196797,"node_id":"MDQ6VXNlcjE5MTk2Nzk3","avatar_url":"https://avatars2.githubusercontent.com/u/19196797?v=4","gravatar_id":"","url":"https://api.github.com/users/denverwilliams","html_url":"https://github.com/denverwilliams","followers_url":"https://api.github.com/users/denverwilliams/followers","following_url":"https://api.github.com/users/denverwilliams/following{/other_user}","gists_url":"https://api.github.com/users/denverwilliams/gists{/gist_id}","starred_url":"https://api.github.com/users/denverwilliams/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/denverwilliams/subscriptions","organizations_url":"https://api.github.com/users/denverwilliams/orgs","repos_url":"https://api.github.com/users/denverwilliams/repos","events_url":"https://api.github.com/users/denverwilliams/events{/privacy}","received_events_url":"https://api.github.com/users/denverwilliams/received_events","type":"User","site_admin":false},"assignees":[{"login":"denverwilliams","id":19196797,"node_id":"MDQ6VXNlcjE5MTk2Nzk3","avatar_url":"https://avatars2.githubusercontent.com/u/19196797?v=4","gravatar_id":"","url":"https://api.github.com/users/denverwilliams","html_url":"https://github.com/denverwilliams","followers_url":"https://api.github.com/users/denverwilliams/followers","following_url":"https://api.github.com/users/denverwilliams/following{/other_user}","gists_url":"https://api.github.com/users/denverwilliams/gists{/gist_id}","starred_url":"https://api.github.com/users/denverwilliams/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/denverwilliams/subscriptions","organizations_url":"https://api.github.com/users/denverwilliams/orgs","repos_url":"https://api.github.com/users/denverwilliams/repos","events_url":"https://api.github.com/users/denverwilliams/events{/privacy}","received_events_url":"https://api.github.com/users/denverwilliams/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2020-10-06T23:13:29Z","updated_at":"2020-11-09T22:11:50Z","closed_at":"2020-11-09T22:11:50Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"**Describe the bug**\r\ndocker run --rm -it -v $PWD:/workspace -w /workspace crystallang/crystal:0.35.1-alpine crystal build src/cnf-conformance.cr --release --static --link-flags \"-lxml2 -llzma\"\r\nInvalid memory access (signal 11) at address 0x7f332e561b28\r\n\r\n**Will get this error about 3 times out of 10 builds**\r\n```\r\n# cmd line\r\ndocker run --rm -it -v $PWD:/workspace -w /workspace crystallang/crystal:0.35.1-alpine crystal build src/cnf-conformance.cr --release --static --link-flags \"-lxml2 -llzma\"\r\nInvalid memory access (signal 11) at address 0x7f332e561b28\r\n```\r\n\r\n**Expected behavior**\r\nShould not get an error\r\n\r\n\r\n**Additional context**\r\nSee https://forum.crystal-lang.org/t/invalid-memory-access-in-crystal-compiler-pre-solved/2237/7\r\n```\r\npfischer\r\nJun 17\r\nLLVM 10.0.0 looks good (tested now). It’s the reason, why Crystal on \r\nalpine:edge is not segfaulting - there is also LLVM 10.0.0.\r\n```\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9843","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9843/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9843/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9843/events","html_url":"https://github.com/crystal-lang/crystal/issues/9843","id":727951626,"node_id":"MDU6SXNzdWU3Mjc5NTE2MjY=","number":9843,"title":"Please add crystal.zip containing (crystal.exe and the libs) to the Release artefacts going forward","user":{"login":"rishavs","id":1210239,"node_id":"MDQ6VXNlcjEyMTAyMzk=","avatar_url":"https://avatars3.githubusercontent.com/u/1210239?v=4","gravatar_id":"","url":"https://api.github.com/users/rishavs","html_url":"https://github.com/rishavs","followers_url":"https://api.github.com/users/rishavs/followers","following_url":"https://api.github.com/users/rishavs/following{/other_user}","gists_url":"https://api.github.com/users/rishavs/gists{/gist_id}","starred_url":"https://api.github.com/users/rishavs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rishavs/subscriptions","organizations_url":"https://api.github.com/users/rishavs/orgs","repos_url":"https://api.github.com/users/rishavs/repos","events_url":"https://api.github.com/users/rishavs/events{/privacy}","received_events_url":"https://api.github.com/users/rishavs/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-10-23T06:25:42Z","updated_at":"2020-10-24T12:30:59Z","closed_at":"2020-10-24T12:30:58Z","author_association":"NONE","active_lock_reason":null,"body":"Right now programmatically fetching the crystal exe for any release from the CI is very hard.\r\nFor using package managers like Scoop, it is very difficult to create a script for setting up Crystal on the Windows device without this first step.\r\nAdding a direct path to the crystal exe and corresponding libs for every releases at least open windows package managers to consider having app packages for Crystal on Windows.\r\n\r\nEven if we don't have full windows support, we should look at making the act of using Crystal on Windows as painless as possible.\r\n\r\nNote: I know that networking is missing but at least other use cases like gamedev, shell programming etc can still be done in Crystal.\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/iv-org/invidious/issues/1418","repository_url":"https://api.github.com/repos/iv-org/invidious","labels_url":"https://api.github.com/repos/iv-org/invidious/issues/1418/labels{/name}","comments_url":"https://api.github.com/repos/iv-org/invidious/issues/1418/comments","events_url":"https://api.github.com/repos/iv-org/invidious/issues/1418/events","html_url":"https://github.com/iv-org/invidious/issues/1418","id":723261908,"node_id":"MDU6SXNzdWU3MjMyNjE5MDg=","number":1418,"title":"Killed with signal 11","user":{"login":"FireMasterK","id":20838718,"node_id":"MDQ6VXNlcjIwODM4NzE4","avatar_url":"https://avatars1.githubusercontent.com/u/20838718?v=4","gravatar_id":"","url":"https://api.github.com/users/FireMasterK","html_url":"https://github.com/FireMasterK","followers_url":"https://api.github.com/users/FireMasterK/followers","following_url":"https://api.github.com/users/FireMasterK/following{/other_user}","gists_url":"https://api.github.com/users/FireMasterK/gists{/gist_id}","starred_url":"https://api.github.com/users/FireMasterK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FireMasterK/subscriptions","organizations_url":"https://api.github.com/users/FireMasterK/orgs","repos_url":"https://api.github.com/users/FireMasterK/repos","events_url":"https://api.github.com/users/FireMasterK/events{/privacy}","received_events_url":"https://api.github.com/users/FireMasterK/received_events","type":"User","site_admin":false},"labels":[{"id":829396698,"node_id":"MDU6TGFiZWw4MjkzOTY2OTg=","url":"https://api.github.com/repos/iv-org/invidious/labels/invalid","name":"invalid","color":"e4e669","default":true,"description":"This doesn't seem right"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2020-10-16T14:10:38Z","updated_at":"2020-10-28T03:12:11Z","closed_at":"2020-10-28T03:12:10Z","author_association":"NONE","active_lock_reason":null,"body":"```\r\nInvalid memory access (signal 11) at address 0x0\r\n[0x7f1b256f46e6] ???\r\n[0x7f1b25053d15] ???\r\n[0x7f1b26038930] ???\r\n[0x7f1b2604fdf6] ???\r\n```\r\n\r\nThe invidious process dies because of this.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9836","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9836/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9836/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9836/events","html_url":"https://github.com/crystal-lang/crystal/issues/9836","id":724228478,"node_id":"MDU6SXNzdWU3MjQyMjg0Nzg=","number":9836,"title":"[RFC] Parsing JSON/YAML at compile time","user":{"login":"Blacksmoke16","id":12136995,"node_id":"MDQ6VXNlcjEyMTM2OTk1","avatar_url":"https://avatars1.githubusercontent.com/u/12136995?v=4","gravatar_id":"","url":"https://api.github.com/users/Blacksmoke16","html_url":"https://github.com/Blacksmoke16","followers_url":"https://api.github.com/users/Blacksmoke16/followers","following_url":"https://api.github.com/users/Blacksmoke16/following{/other_user}","gists_url":"https://api.github.com/users/Blacksmoke16/gists{/gist_id}","starred_url":"https://api.github.com/users/Blacksmoke16/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Blacksmoke16/subscriptions","organizations_url":"https://api.github.com/users/Blacksmoke16/orgs","repos_url":"https://api.github.com/users/Blacksmoke16/repos","events_url":"https://api.github.com/users/Blacksmoke16/events{/privacy}","received_events_url":"https://api.github.com/users/Blacksmoke16/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2020-10-19T03:26:29Z","updated_at":"2020-10-20T21:14:06Z","closed_at":"2020-10-20T21:14:06Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Using JSON/YAML files for configuration is a common practice. Being able to read these files at compile time (into a useable structure) could be quite useful.  A personal use case for me would be the allowing of using YAML to define configuration that can later be used to register services/parameters within https://github.com/athena-framework/dependency-injection.\r\n\r\nCurrently this is only half possible as you can read in the file, but it'll be a `StringLiteral` so you can't really use it in any meaningful fashion.  https://github.com/crystal-lang/crystal/issues/8835 might be a solution as you could just define a custom macro method to do it, but that itself still has quite a bit of discussions yet to had.\r\n\r\nI think this would be pretty easy to do.  The `YAML` and `JSON` modules could be leveraged for the actual parsing, only macro code that would be needed is transforming the `YAML/JSON::Any` values into macro `*Literal` nodes.  This feature would also be simple parsing, returning a `HashLiteral` or `ArrayLiteral` for example.  There are no types in macro land so (de)serialization isn't really required.\r\n\r\nThe compiler already seems to have a dependency on the `JSON` module, so that wouldn't be a problem.  However, `YAML` support would be a new non ideal dependency as it would add a `libyaml` requirement.  `YAML` would be more ideal in regards to the format of the configuration file tho.  I'm sure we could think of something.\r\n\r\nI have a working proof of concept here: https://github.com/crystal-lang/crystal/compare/master...Blacksmoke16:yaml-json-macro-parse\r\n\r\ntest.yml\r\n```yaml\r\n---\r\nname: foo\r\nfirewalls:\r\n  main:\r\n    pattern: ^/admin\r\nids:\r\n  - 1\r\n  - 2\r\n```\r\n\r\ntest.json\r\n```json\r\n{\r\n  \"name\": \"foo\",\r\n  \"ids\": [\r\n    1,\r\n    2\r\n  ]\r\n}\r\n```\r\n\r\ntest.cr\r\n```cr\r\n{% begin %}\r\n  {% data = read_yaml \"./test.yml\" %}\r\n  {% pp data %}\r\n  {% pp data[\"name\"] %}\r\n  {% pp data[\"ids\"].map &.+(1) %}\r\n{% end %}\r\n\r\n{% begin %}\r\n  {% data = read_json \"./test.json\" %}\r\n  {% pp data %}\r\n  {% pp data[\"name\"] %}\r\n  {% pp data[\"ids\"].map &.+(1) %}\r\n{% end %}\r\n\r\n# {\"name\" => \"foo\", \"firewalls\" => {\"main\" => {\"pattern\" => \"^/admin\"}}, \"ids\" => [1_i64, 2_i64]}\r\n# \"foo\"\r\n# [2_i64, 3_i64]\r\n# {\"name\" => \"foo\", \"ids\" => [1_i64, 2_i64]}\r\n# \"foo\"\r\n# [2_i64, 3_i64]\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/imdrasil/jennifer.cr/issues/337","repository_url":"https://api.github.com/repos/imdrasil/jennifer.cr","labels_url":"https://api.github.com/repos/imdrasil/jennifer.cr/issues/337/labels{/name}","comments_url":"https://api.github.com/repos/imdrasil/jennifer.cr/issues/337/comments","events_url":"https://api.github.com/repos/imdrasil/jennifer.cr/issues/337/events","html_url":"https://github.com/imdrasil/jennifer.cr/issues/337","id":703591210,"node_id":"MDU6SXNzdWU3MDM1OTEyMTA=","number":337,"title":"Crystal Nightly: Error: cannot use 'in' as an argument name","user":{"login":"mamantoha","id":61285,"node_id":"MDQ6VXNlcjYxMjg1","avatar_url":"https://avatars2.githubusercontent.com/u/61285?v=4","gravatar_id":"","url":"https://api.github.com/users/mamantoha","html_url":"https://github.com/mamantoha","followers_url":"https://api.github.com/users/mamantoha/followers","following_url":"https://api.github.com/users/mamantoha/following{/other_user}","gists_url":"https://api.github.com/users/mamantoha/gists{/gist_id}","starred_url":"https://api.github.com/users/mamantoha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mamantoha/subscriptions","organizations_url":"https://api.github.com/users/mamantoha/orgs","repos_url":"https://api.github.com/users/mamantoha/repos","events_url":"https://api.github.com/users/mamantoha/events{/privacy}","received_events_url":"https://api.github.com/users/mamantoha/received_events","type":"User","site_admin":false},"labels":[{"id":538050205,"node_id":"MDU6TGFiZWw1MzgwNTAyMDU=","url":"https://api.github.com/repos/imdrasil/jennifer.cr/labels/bug","name":"bug","color":"ee0701","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-17T13:30:17Z","updated_at":"2020-09-23T07:17:54Z","closed_at":"2020-09-23T07:17:54Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"```\r\nIn lib/jennifer/src/jennifer/validations/macros.cr:66:40\r\n\r\n 66 | macro validates_inclusion(field, in, allow_blank = false, if if_value = nil)\r\n                                       ^\r\nError: cannot use 'in' as an argument name\r\n```\r\n\r\nReference: https://github.com/crystal-lang/crystal/pull/9704\r\n\r\nThis can be fixed by replacing `in` with something else. Suggestions?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9790","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9790/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9790/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9790/events","html_url":"https://github.com/crystal-lang/crystal/issues/9790","id":713776048,"node_id":"MDU6SXNzdWU3MTM3NzYwNDg=","number":9790,"title":"`make spec` raises an error from digest/md5.cr:134:25","user":{"login":"sugarfi","id":45051954,"node_id":"MDQ6VXNlcjQ1MDUxOTU0","avatar_url":"https://avatars0.githubusercontent.com/u/45051954?v=4","gravatar_id":"","url":"https://api.github.com/users/sugarfi","html_url":"https://github.com/sugarfi","followers_url":"https://api.github.com/users/sugarfi/followers","following_url":"https://api.github.com/users/sugarfi/following{/other_user}","gists_url":"https://api.github.com/users/sugarfi/gists{/gist_id}","starred_url":"https://api.github.com/users/sugarfi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sugarfi/subscriptions","organizations_url":"https://api.github.com/users/sugarfi/orgs","repos_url":"https://api.github.com/users/sugarfi/repos","events_url":"https://api.github.com/users/sugarfi/events{/privacy}","received_events_url":"https://api.github.com/users/sugarfi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-10-02T17:12:54Z","updated_at":"2020-10-09T18:46:10Z","closed_at":"2020-10-09T18:46:10Z","author_association":"NONE","active_lock_reason":null,"body":"When running `make spec` in the compiler source code to execute tests, the following error is thrown:\r\n```\r\nIn /snap/crystal/current/share/crystal/src/digest/md5.cr:134:25\r\n\r\n 134 | private def transform(in)\r\n                             ^\r\nError: cannot use 'in' as an argument name\r\n```\r\nThis prevents any tests from being run.\r\nInput: `make spec`\r\nExpected behavior: tests are run.\r\nActual behavior (full output, may vary slightly between machines):\r\n```\r\nUsing /usr/bin/llvm-config-10 [version=10.0.0]\r\nCRYSTAL_CONFIG_LIBRARY_PATH=\"/snap/crystal/397/bin/../lib/crystal/lib\" CRYSTAL_CONFIG_BUILD_COMMIT=\"ee5813058\" SOURCE_DATE_EPOCH=\"1601658550\" ./bin/crystal build  --exclude-warnings spec/std --exclude-warnings spec/compiler -o .build/all_spec spec/all_spec.cr\r\nUsing compiled compiler at .build/crystal\r\nIn /snap/crystal/current/share/crystal/src/digest/md5.cr:134:25\r\n\r\n 134 | private def transform(in)\r\n                             ^\r\nError: cannot use 'in' as an argument name\r\nmake: *** [Makefile:110: .build/all_spec] Error 1\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9900","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9900/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9900/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9900/events","html_url":"https://github.com/crystal-lang/crystal/issues/9900","id":740632050,"node_id":"MDU6SXNzdWU3NDA2MzIwNTA=","number":9900,"title":"Unhandled exception: HTTP::Client::Response#body_io cannot be nil (NilAssertionError)","user":{"login":"arloan","id":1157026,"node_id":"MDQ6VXNlcjExNTcwMjY=","avatar_url":"https://avatars0.githubusercontent.com/u/1157026?v=4","gravatar_id":"","url":"https://api.github.com/users/arloan","html_url":"https://github.com/arloan","followers_url":"https://api.github.com/users/arloan/followers","following_url":"https://api.github.com/users/arloan/following{/other_user}","gists_url":"https://api.github.com/users/arloan/gists{/gist_id}","starred_url":"https://api.github.com/users/arloan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arloan/subscriptions","organizations_url":"https://api.github.com/users/arloan/orgs","repos_url":"https://api.github.com/users/arloan/repos","events_url":"https://api.github.com/users/arloan/events{/privacy}","received_events_url":"https://api.github.com/users/arloan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2020-11-11T09:58:03Z","updated_at":"2020-11-12T11:05:38Z","closed_at":"2020-11-12T01:28:44Z","author_association":"NONE","active_lock_reason":null,"body":"code:\r\n```crystal\r\nrequire \"log\"\r\nrequire \"http/client\"\r\n\r\nurl = \"https://www.apple.com/v/mac-mini/j/images/overview/hero__x8ruukomx2au_large.jpg\"\r\nr = HTTP::Client.get url\r\nif !r.success?\r\n  Log.error { \"Cannot retrieve image data: [%d] %s\" % [r.status_code, r.body] }\r\n  bytes = Bytes.empty\r\nelse\r\n  n = r.headers[\"Content-Length\"].to_i\r\n  Log.info { \"server responded with content of %d bytes\" % n }\r\n  bytes = Bytes.new(n)\r\n  Log.info { \"reading content to memory ...\" }\r\n  r.body_io.read_fully(bytes)\r\n  Log.info { \"#{bytes.size} bytes read.\" }\r\nend\r\nLog.info { bytes.inspect }\r\n```\r\n\r\nresult:\r\n```\r\n2020-11-11T09:53:24.177622Z   INFO - server responded with content of 77573 bytes\r\n2020-11-11T09:53:24.177765Z   INFO - reading content to memory ...\r\nUnhandled exception: HTTP::Client::Response#body_io cannot be nil (NilAssertionError)\r\n  from ../../../usr/share/crystal/src/http/client/response.cr:9:3 in 'body_io'\r\n  from main.cr:15:3 in '__crystal_main'\r\n  from ../../../usr/share/crystal/src/crystal/main.cr:105:5 in 'main_user_code'\r\n  from ../../../usr/share/crystal/src/crystal/main.cr:91:7 in 'main'\r\n  from ../../../usr/share/crystal/src/crystal/main.cr:114:3 in 'main'\r\n  from __libc_start_main\r\n  from _start\r\n  from ???\r\n```\r\n```\r\n> uname -a\r\nLinux 487e0793cd90 5.4.0-1019-gcp #19-Ubuntu SMP Tue Jun 23 15:46:40 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n> crystal -v\r\nCrystal 0.35.1 [5999ae29b] (2020-06-19)\r\n\r\nLLVM: 8.0.0\r\nDefault target: x86_64-unknown-linux-gnu\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9696","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9696/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9696/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9696/events","html_url":"https://github.com/crystal-lang/crystal/issues/9696","id":685699009,"node_id":"MDU6SXNzdWU2ODU2OTkwMDk=","number":9696,"title":"[feature] crystal doc should detect raises within methods and list them","user":{"login":"postmodern","id":12671,"node_id":"MDQ6VXNlcjEyNjcx","avatar_url":"https://avatars2.githubusercontent.com/u/12671?v=4","gravatar_id":"","url":"https://api.github.com/users/postmodern","html_url":"https://github.com/postmodern","followers_url":"https://api.github.com/users/postmodern/followers","following_url":"https://api.github.com/users/postmodern/following{/other_user}","gists_url":"https://api.github.com/users/postmodern/gists{/gist_id}","starred_url":"https://api.github.com/users/postmodern/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/postmodern/subscriptions","organizations_url":"https://api.github.com/users/postmodern/orgs","repos_url":"https://api.github.com/users/postmodern/repos","events_url":"https://api.github.com/users/postmodern/events{/privacy}","received_events_url":"https://api.github.com/users/postmodern/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-25T18:30:14Z","updated_at":"2020-11-02T00:19:04Z","closed_at":"2020-11-02T00:18:31Z","author_association":"NONE","active_lock_reason":null,"body":"I think it would be greatly beneficial if the `crystal doc` generator could scan the contents of methods, noting any `raise` statements, and then list all exception classes that the method raises. This would help other developers understand which types of exceptions a method raises, without the maintainer having to manually document each exception raised by a method.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9735","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9735/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9735/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9735/events","html_url":"https://github.com/crystal-lang/crystal/issues/9735","id":696074829,"node_id":"MDU6SXNzdWU2OTYwNzQ4Mjk=","number":9735,"title":"Formatter fails to format named arguments like `foo:bar`","user":{"login":"yujiri8","id":16864184,"node_id":"MDQ6VXNlcjE2ODY0MTg0","avatar_url":"https://avatars1.githubusercontent.com/u/16864184?v=4","gravatar_id":"","url":"https://api.github.com/users/yujiri8","html_url":"https://github.com/yujiri8","followers_url":"https://api.github.com/users/yujiri8/followers","following_url":"https://api.github.com/users/yujiri8/following{/other_user}","gists_url":"https://api.github.com/users/yujiri8/gists{/gist_id}","starred_url":"https://api.github.com/users/yujiri8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yujiri8/subscriptions","organizations_url":"https://api.github.com/users/yujiri8/orgs","repos_url":"https://api.github.com/users/yujiri8/repos","events_url":"https://api.github.com/users/yujiri8/events{/privacy}","received_events_url":"https://api.github.com/users/yujiri8/received_events","type":"User","site_admin":false},"labels":[{"id":20487867,"node_id":"MDU6TGFiZWwyMDQ4Nzg2Nw==","url":"https://api.github.com/repos/crystal-lang/crystal/labels/kind:bug","name":"kind:bug","color":"fc2929","default":false,"description":null},{"id":562537508,"node_id":"MDU6TGFiZWw1NjI1Mzc1MDg=","url":"https://api.github.com/repos/crystal-lang/crystal/labels/topic:compiler:parser","name":"topic:compiler:parser","color":"fef2c0","default":false,"description":""},{"id":273087516,"node_id":"MDU6TGFiZWwyNzMwODc1MTY=","url":"https://api.github.com/repos/crystal-lang/crystal/labels/topic:tools:formatter","name":"topic:tools:formatter","color":"d4c5f9","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-08T18:07:09Z","updated_at":"2020-09-11T11:44:37Z","closed_at":"2020-09-11T11:44:37Z","author_association":"NONE","active_lock_reason":null,"body":"`test.cr`:\r\n```\r\ndef func(param = false)\r\n  puts param\r\nend\r\n\r\nfunc(param:true)\r\n```\r\nWhen run with `crystal test.cr`, it prints `true`. But `crystal tool format --show-backtrace test.cr`:\r\n```\r\nexpecting :, not `SYMBOL, true`, at :5:11 (Exception)\r\n  from ???\r\n  from ???\r\n  from ???\r\n  from ???\r\n  from ???\r\n  from ???\r\n  from ???\r\n  from ???\r\n  from ???\r\n  from ???\r\n  from ???\r\n  from ???\r\n  from ???\r\n  from ???\r\n  from __crystal_main\r\n  from main\r\n  from __libc_start_main\r\n  from _start\r\n  from ???\r\n\r\ncouldn't format './test.cr', please report a bug including the contents of it: https://github.com/crystal-lang/crystal/issues\r\n```\r\nCrystal version: Built from master (52c750ece)\r\nOS: Artix Linux 5.8.6-artix1-1\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/maiha/memoized.cr/issues/4","repository_url":"https://api.github.com/repos/maiha/memoized.cr","labels_url":"https://api.github.com/repos/maiha/memoized.cr/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/maiha/memoized.cr/issues/4/comments","events_url":"https://api.github.com/repos/maiha/memoized.cr/issues/4/events","html_url":"https://github.com/maiha/memoized.cr/issues/4","id":652659084,"node_id":"MDU6SXNzdWU2NTI2NTkwODQ=","number":4,"title":"ci: Error: undefined local variable or method 'span' for Memoized::Finite.class","user":{"login":"maiha","id":12258,"node_id":"MDQ6VXNlcjEyMjU4","avatar_url":"https://avatars3.githubusercontent.com/u/12258?v=4","gravatar_id":"","url":"https://api.github.com/users/maiha","html_url":"https://github.com/maiha","followers_url":"https://api.github.com/users/maiha/followers","following_url":"https://api.github.com/users/maiha/following{/other_user}","gists_url":"https://api.github.com/users/maiha/gists{/gist_id}","starred_url":"https://api.github.com/users/maiha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maiha/subscriptions","organizations_url":"https://api.github.com/users/maiha/orgs","repos_url":"https://api.github.com/users/maiha/repos","events_url":"https://api.github.com/users/maiha/events{/privacy}","received_events_url":"https://api.github.com/users/maiha/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-07T21:25:16Z","updated_at":"2020-10-10T18:33:22Z","closed_at":"2020-10-10T18:33:22Z","author_association":"OWNER","active_lock_reason":null,"body":"```crystal\r\nIn src/memoized/policy.cr:13:63\r\n 13 | record Finite, span : Time::Span, max : Time = Pretty.now + span do\r\n                                                                  ^---\r\nError: undefined local variable or method 'span' for Memoized::Finite.class\r\n```\r\n\r\nIt appears to be just a regression in 0.35.0, so I think it will work in the next version.\r\nSee: https://github.com/crystal-lang/crystal/issues/9584\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9674","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9674/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9674/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9674/events","html_url":"https://github.com/crystal-lang/crystal/issues/9674","id":678835394,"node_id":"MDU6SXNzdWU2Nzg4MzUzOTQ=","number":9674,"title":"Remove `case ... in` in favor of `case! ... when`","user":{"login":"ALANVF","id":16247881,"node_id":"MDQ6VXNlcjE2MjQ3ODgx","avatar_url":"https://avatars2.githubusercontent.com/u/16247881?v=4","gravatar_id":"","url":"https://api.github.com/users/ALANVF","html_url":"https://github.com/ALANVF","followers_url":"https://api.github.com/users/ALANVF/followers","following_url":"https://api.github.com/users/ALANVF/following{/other_user}","gists_url":"https://api.github.com/users/ALANVF/gists{/gist_id}","starred_url":"https://api.github.com/users/ALANVF/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ALANVF/subscriptions","organizations_url":"https://api.github.com/users/ALANVF/orgs","repos_url":"https://api.github.com/users/ALANVF/repos","events_url":"https://api.github.com/users/ALANVF/events{/privacy}","received_events_url":"https://api.github.com/users/ALANVF/received_events","type":"User","site_admin":false},"labels":[{"id":20487868,"node_id":"MDU6TGFiZWwyMDQ4Nzg2OA==","url":"https://api.github.com/repos/crystal-lang/crystal/labels/status:duplicate","name":"status:duplicate","color":"cccccc","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-14T01:35:04Z","updated_at":"2020-11-02T00:54:43Z","closed_at":"2020-11-02T00:54:36Z","author_association":"NONE","active_lock_reason":null,"body":"Ruby has recently gotten pattern matching support, which uses `in` instead of `when`.\r\nSeeing #9258 get merged was very disappointing, because it not only interferes with the previously mentioned pattern matching syntax (which I would also love to see in Crystal), but it also just doesn't really make sense from a developer viewpoint. How should I be able to remember the difference between `in` and `when` if they have similar meanings in this context? Why make the syntax different for every single case instead of just one part of the entire construct itself?\r\nI would like to propose a change, which removes the need for `in`, and just uses `when` instead.\r\n\r\nNon-exhaustive match:\r\n```cr\r\n# Works\r\ncase 1 || \"a\"\r\nwhen Int32\r\nwhen String\r\nend\r\n\r\n# Also works\r\ncase 1 || \"a\"\r\nwhen Int32\r\nend\r\n```\r\n\r\nExhaustive match:\r\n```cr\r\n# Works\r\ncase! 1 || \"a\"\r\nwhen Int32\r\nwhen String\r\nend\r\n\r\n# Doesn't compile\r\ncase! 1 || \"a\"\r\nwhen Int32\r\nend\r\n```\r\n\r\nNot only only does the notation make sense (`!` signifies that the case is exhaustive), but it also opens the door to Ruby-like pattern matching syntax in the future since it removes the usage of the `in` keyword.\r\n\r\nI have not started a PR for this yet, but I can do so if others like this idea as well.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/lukesampson/scoop/issues/3775","repository_url":"https://api.github.com/repos/lukesampson/scoop","labels_url":"https://api.github.com/repos/lukesampson/scoop/issues/3775/labels{/name}","comments_url":"https://api.github.com/repos/lukesampson/scoop/issues/3775/comments","events_url":"https://api.github.com/repos/lukesampson/scoop/issues/3775/events","html_url":"https://github.com/lukesampson/scoop/issues/3775","id":530659500,"node_id":"MDU6SXNzdWU1MzA2NTk1MDA=","number":3775,"title":"Is Crystal lang available for install?","user":{"login":"luismateopineda","id":42021018,"node_id":"MDQ6VXNlcjQyMDIxMDE4","avatar_url":"https://avatars2.githubusercontent.com/u/42021018?v=4","gravatar_id":"","url":"https://api.github.com/users/luismateopineda","html_url":"https://github.com/luismateopineda","followers_url":"https://api.github.com/users/luismateopineda/followers","following_url":"https://api.github.com/users/luismateopineda/following{/other_user}","gists_url":"https://api.github.com/users/luismateopineda/gists{/gist_id}","starred_url":"https://api.github.com/users/luismateopineda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luismateopineda/subscriptions","organizations_url":"https://api.github.com/users/luismateopineda/orgs","repos_url":"https://api.github.com/users/luismateopineda/repos","events_url":"https://api.github.com/users/luismateopineda/events{/privacy}","received_events_url":"https://api.github.com/users/luismateopineda/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-12-01T02:39:33Z","updated_at":"2020-10-21T14:17:07Z","closed_at":"2020-10-20T20:31:26Z","author_association":"NONE","active_lock_reason":null,"body":"Chocolatey doesn't seem to have Crystal lang, I was wondering if you guys have it in your repos?\r\nAlso, there doesn't seem to be any way to search scoop without installing scoop, maybe a page on the website would be good for people looking for software.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9708","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9708/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9708/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9708/events","html_url":"https://github.com/crystal-lang/crystal/issues/9708","id":688318135,"node_id":"MDU6SXNzdWU2ODgzMTgxMzU=","number":9708,"title":"Self-referential type declaration causes \"Module validation failed:  Function return type does not match operand type of return inst!","user":{"login":"BrucePerens","id":1103471,"node_id":"MDQ6VXNlcjExMDM0NzE=","avatar_url":"https://avatars1.githubusercontent.com/u/1103471?v=4","gravatar_id":"","url":"https://api.github.com/users/BrucePerens","html_url":"https://github.com/BrucePerens","followers_url":"https://api.github.com/users/BrucePerens/followers","following_url":"https://api.github.com/users/BrucePerens/following{/other_user}","gists_url":"https://api.github.com/users/BrucePerens/gists{/gist_id}","starred_url":"https://api.github.com/users/BrucePerens/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BrucePerens/subscriptions","organizations_url":"https://api.github.com/users/BrucePerens/orgs","repos_url":"https://api.github.com/users/BrucePerens/repos","events_url":"https://api.github.com/users/BrucePerens/events{/privacy}","received_events_url":"https://api.github.com/users/BrucePerens/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-08-28T19:45:05Z","updated_at":"2020-08-28T20:22:57Z","closed_at":"2020-08-28T20:22:57Z","author_association":"NONE","active_lock_reason":null,"body":"I was experimenting with how to write an array type that can contain its own type, and hit an internal compiler bug check. Yes, I know this could never work.\r\n```crystal\r\nalias ArrayValue = Array(ArrayValue)\r\nclass MyArrayType < Array(ArrayValue)\r\nend\r\nx = MyArrayType.new\r\np x\r\nx << x\r\n```\r\nThe compiler emits:\r\n```\r\nModule validation failed: Function return type does not match operand type of return inst!\r\n  ret i32* %1, !dbg !11\r\n %\"Array(ArrayValue)\"* (Exception)\r\n  from ../../../../../crystal/src/int.cr:1091:11 in 'finish'\r\n  from ../../../../../crystal/src/compiler/crystal/codegen/codegen.cr:69:7 in 'codegen'\r\n  from ../../../../../crystal/src/compiler/crystal/compiler.cr:172:16 in 'compile'\r\n  from ../../../../../crystal/src/compiler/crystal/command.cr:295:3 in 'run'\r\n  from ../../../../../crystal/src/compiler/crystal.cr:11:1 in '__crystal_main'\r\n  from ../../../../../crystal/src/crystal/main.cr:105:5 in 'main'\r\n  from src/env/__libc_start_main.c:94:2 in 'libc_start_main_stage2'\r\nError: you've found a bug in the Crystal compiler. Please open an issue, including source code that will allow us to reproduce the bug: https://github.com/crystal-lang/crystal/issues\r\n```\r\nCrystal version:\r\n```\r\nCrystal 0.35.1 [5999ae29b] (2020-06-19)\r\n\r\nLLVM: 8.0.0\r\nDefault target: x86_64-unknown-linux-gnu\r\n```\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/Blacksmoke16/assert/issues/1","repository_url":"https://api.github.com/repos/Blacksmoke16/assert","labels_url":"https://api.github.com/repos/Blacksmoke16/assert/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/Blacksmoke16/assert/issues/1/comments","events_url":"https://api.github.com/repos/Blacksmoke16/assert/issues/1/events","html_url":"https://github.com/Blacksmoke16/assert/issues/1","id":484970862,"node_id":"MDU6SXNzdWU0ODQ5NzA4NjI=","number":1,"title":"Any/None/All assertions","user":{"login":"Blacksmoke16","id":12136995,"node_id":"MDQ6VXNlcjEyMTM2OTk1","avatar_url":"https://avatars1.githubusercontent.com/u/12136995?v=4","gravatar_id":"","url":"https://api.github.com/users/Blacksmoke16","html_url":"https://github.com/Blacksmoke16","followers_url":"https://api.github.com/users/Blacksmoke16/followers","following_url":"https://api.github.com/users/Blacksmoke16/following{/other_user}","gists_url":"https://api.github.com/users/Blacksmoke16/gists{/gist_id}","starred_url":"https://api.github.com/users/Blacksmoke16/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Blacksmoke16/subscriptions","organizations_url":"https://api.github.com/users/Blacksmoke16/orgs","repos_url":"https://api.github.com/users/Blacksmoke16/repos","events_url":"https://api.github.com/users/Blacksmoke16/events{/privacy}","received_events_url":"https://api.github.com/users/Blacksmoke16/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-04-01T19:06:25Z","updated_at":"2020-10-17T21:17:13Z","closed_at":"2020-10-17T21:17:13Z","author_association":"OWNER","active_lock_reason":null,"body":"Currently _ALL_ validations added to a property must be valid in order for the property to be considered valid.\r\n\r\nOne idea I had was to add a set of new annotations that would be considered valid if:\r\n* Any of the given assertions are valid\r\n* None of the given assertions are valid\r\n* All of the given assertions are valid (Default behavior, but could be useful for indexable collections, i.e. all strings in array are not blank and > 5 chars long).\r\n\r\nThis would ideally look like:\r\n```crystal\r\n@[Assert::Any(\r\n  Assert::NotBlank,\r\n  Assert::NotNil,\r\n  Assert::Size(range: 0_f64..10_f64)\r\n)]\r\n```\r\n\r\nI'd be interested in hearing if there would be some use cases that this would fulfill. ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/zyedidia/micro/issues/1809","repository_url":"https://api.github.com/repos/zyedidia/micro","labels_url":"https://api.github.com/repos/zyedidia/micro/issues/1809/labels{/name}","comments_url":"https://api.github.com/repos/zyedidia/micro/issues/1809/comments","events_url":"https://api.github.com/repos/zyedidia/micro/issues/1809/events","html_url":"https://github.com/zyedidia/micro/issues/1809","id":672763552,"node_id":"MDU6SXNzdWU2NzI3NjM1NTI=","number":1809,"title":"Can't find source code of downloaded version of Crystal plugin","user":{"login":"sirikon","id":1157382,"node_id":"MDQ6VXNlcjExNTczODI=","avatar_url":"https://avatars3.githubusercontent.com/u/1157382?v=4","gravatar_id":"","url":"https://api.github.com/users/sirikon","html_url":"https://github.com/sirikon","followers_url":"https://api.github.com/users/sirikon/followers","following_url":"https://api.github.com/users/sirikon/following{/other_user}","gists_url":"https://api.github.com/users/sirikon/gists{/gist_id}","starred_url":"https://api.github.com/users/sirikon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sirikon/subscriptions","organizations_url":"https://api.github.com/users/sirikon/orgs","repos_url":"https://api.github.com/users/sirikon/repos","events_url":"https://api.github.com/users/sirikon/events{/privacy}","received_events_url":"https://api.github.com/users/sirikon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-04T12:43:39Z","updated_at":"2020-08-04T20:18:28Z","closed_at":"2020-08-04T20:18:28Z","author_association":"NONE","active_lock_reason":null,"body":"## Description of the problem or steps to reproduce\r\n\r\nWhen installing the Crystal plugin with `plugin install crystal`, the version downloaded is the `1.1.0`. Can see the following `repo.json` file inside `.config/micro/plug/crystal`:\r\n\r\n```json\r\n[{\r\n  \"Name\": \"crystal\",\r\n  \"Description\": \"adds helpful crystal tools\",\r\n  \"Tags\": [\"crystal-lang\", \"crystal\"],\r\n  \"Website\": \"https://github.com/ColinRioux/micro-crystal\",\r\n  \"Versions\": [\r\n    {\r\n      \"Version\": \"1.1.0\",\r\n      \"Url\": \"https://github.com/ColinRioux/micro-crystal/archive/1.1.0.zip\",\r\n      \"Require\": {\r\n        \"micro\": \">=2.0.0-1\"\r\n      }\r\n    },\r\n    {\r\n      \"Version\": \"1.0.0\",\r\n      \"Url\": \"https://github.com/ColinRioux/micro-crystal/archive/1.0.0.zip\",\r\n      \"Require\": {\r\n        \"micro\": \">=1.0.3\"\r\n      }\r\n    }\r\n  ]\r\n}]\r\n```\r\nBut if I go to the original repository: https://github.com/ColinRioux/micro-crystal, the release `1.1.0` doesn't exist. Only the `1.0.0`. Here's the `repo.json` of the repository: https://github.com/ColinRioux/micro-crystal/blob/master/repo.json\r\n\r\nAm I missing something?\r\n\r\n## Specifications\r\n\r\nCommit hash: 60846f5\r\nOS: Linux (Ubuntu 20.04)\r\nTerminal: Gnome-Terminal\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang-tools/vscode-crystal-lang/issues/32","repository_url":"https://api.github.com/repos/crystal-lang-tools/vscode-crystal-lang","labels_url":"https://api.github.com/repos/crystal-lang-tools/vscode-crystal-lang/issues/32/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang-tools/vscode-crystal-lang/issues/32/comments","events_url":"https://api.github.com/repos/crystal-lang-tools/vscode-crystal-lang/issues/32/events","html_url":"https://github.com/crystal-lang-tools/vscode-crystal-lang/issues/32","id":269803402,"node_id":"MDU6SXNzdWUyNjk4MDM0MDI=","number":32,"title":"Highlight `?` in method definitions consistently","user":{"login":"faustinoaq","id":3067335,"node_id":"MDQ6VXNlcjMwNjczMzU=","avatar_url":"https://avatars2.githubusercontent.com/u/3067335?v=4","gravatar_id":"","url":"https://api.github.com/users/faustinoaq","html_url":"https://github.com/faustinoaq","followers_url":"https://api.github.com/users/faustinoaq/followers","following_url":"https://api.github.com/users/faustinoaq/following{/other_user}","gists_url":"https://api.github.com/users/faustinoaq/gists{/gist_id}","starred_url":"https://api.github.com/users/faustinoaq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/faustinoaq/subscriptions","organizations_url":"https://api.github.com/users/faustinoaq/orgs","repos_url":"https://api.github.com/users/faustinoaq/repos","events_url":"https://api.github.com/users/faustinoaq/events{/privacy}","received_events_url":"https://api.github.com/users/faustinoaq/received_events","type":"User","site_admin":false},"labels":[{"id":618255112,"node_id":"MDU6TGFiZWw2MTgyNTUxMTI=","url":"https://api.github.com/repos/crystal-lang-tools/vscode-crystal-lang/labels/bug","name":"bug","color":"ee0701","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-10-31T01:15:42Z","updated_at":"2020-09-30T11:24:46Z","closed_at":"2020-09-30T11:24:46Z","author_association":"MEMBER","active_lock_reason":null,"body":"![screenshot_20171030_201408](https://user-images.githubusercontent.com/3067335/32203047-e4606e24-bdae-11e7-958b-1fb7afd3f15c.png)\r\n\r\nsee: https://github.com/crystal-lang-tools/sublime-crystal/issues/29","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/jhass/crystal-gobject/issues/74","repository_url":"https://api.github.com/repos/jhass/crystal-gobject","labels_url":"https://api.github.com/repos/jhass/crystal-gobject/issues/74/labels{/name}","comments_url":"https://api.github.com/repos/jhass/crystal-gobject/issues/74/comments","events_url":"https://api.github.com/repos/jhass/crystal-gobject/issues/74/events","html_url":"https://github.com/jhass/crystal-gobject/issues/74","id":677937993,"node_id":"MDU6SXNzdWU2Nzc5Mzc5OTM=","number":74,"title":"gi-doc creates empty docs","user":{"login":"acoolstraw","id":45886986,"node_id":"MDQ6VXNlcjQ1ODg2OTg2","avatar_url":"https://avatars0.githubusercontent.com/u/45886986?v=4","gravatar_id":"","url":"https://api.github.com/users/acoolstraw","html_url":"https://github.com/acoolstraw","followers_url":"https://api.github.com/users/acoolstraw/followers","following_url":"https://api.github.com/users/acoolstraw/following{/other_user}","gists_url":"https://api.github.com/users/acoolstraw/gists{/gist_id}","starred_url":"https://api.github.com/users/acoolstraw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acoolstraw/subscriptions","organizations_url":"https://api.github.com/users/acoolstraw/orgs","repos_url":"https://api.github.com/users/acoolstraw/repos","events_url":"https://api.github.com/users/acoolstraw/events{/privacy}","received_events_url":"https://api.github.com/users/acoolstraw/received_events","type":"User","site_admin":false},"labels":[{"id":174565398,"node_id":"MDU6TGFiZWwxNzQ1NjUzOTg=","url":"https://api.github.com/repos/jhass/crystal-gobject/labels/bug","name":"bug","color":"fc2929","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-12T19:54:13Z","updated_at":"2020-08-17T12:41:02Z","closed_at":"2020-08-17T12:41:02Z","author_association":"NONE","active_lock_reason":null,"body":"I'm trying to generate documentation, but it's just a documentation template with an empty README:\r\n![image](https://files.gitter.im/5588134315522ed4b3e2629f/Cdal/image.png)\r\n\r\nMy distro is Debian 10.\r\n\r\nHow I set it up:\r\n\r\n- Installed both packages listed in crystal-gobject's README\r\n- Installed LLVM 8\r\n- `git clone https://github.com/crystal-lang/crystal`, `git checkout 0.34.0`, `make`, `export PATH=\"$(pwd)/bin:PATH\"`\r\n- Did the same for Shards, to `v0.11.0`\r\n\r\nBuilding:\r\n\r\n- Cloned crystal-gobject\r\n- `shards build gi-doc`\r\n- `bin/gi-doc Gtk`\r\n- Resulted in empty docs\r\n\r\nAlso tried:\r\n\r\n- `cd samples`\r\n- `crystal build lib/gobject/generator/doc.cr`\r\n- `./doc Gtk`\r\n- Again resulted in empty docs","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/crystal-lang/crystal/issues/9772","repository_url":"https://api.github.com/repos/crystal-lang/crystal","labels_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9772/labels{/name}","comments_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9772/comments","events_url":"https://api.github.com/repos/crystal-lang/crystal/issues/9772/events","html_url":"https://github.com/crystal-lang/crystal/issues/9772","id":707579523,"node_id":"MDU6SXNzdWU3MDc1Nzk1MjM=","number":9772,"title":"Issue about appending an element to an array that is the value of a hash","user":{"login":"zhangkaizhao","id":7512811,"node_id":"MDQ6VXNlcjc1MTI4MTE=","avatar_url":"https://avatars0.githubusercontent.com/u/7512811?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangkaizhao","html_url":"https://github.com/zhangkaizhao","followers_url":"https://api.github.com/users/zhangkaizhao/followers","following_url":"https://api.github.com/users/zhangkaizhao/following{/other_user}","gists_url":"https://api.github.com/users/zhangkaizhao/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangkaizhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangkaizhao/subscriptions","organizations_url":"https://api.github.com/users/zhangkaizhao/orgs","repos_url":"https://api.github.com/users/zhangkaizhao/repos","events_url":"https://api.github.com/users/zhangkaizhao/events{/privacy}","received_events_url":"https://api.github.com/users/zhangkaizhao/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-09-23T18:20:11Z","updated_at":"2020-09-24T10:59:32Z","closed_at":"2020-09-24T07:00:28Z","author_association":"NONE","active_lock_reason":null,"body":"Code:\r\n\r\n```crystal\r\n# not working\r\nh1 = {} of String => Array(String)\r\nh1[\"aa\"] = [\"11\"]\r\nh1[\"aa\"] << \"22\"\r\nh1[\"bb\"] << \"22\"\r\n# Unhandled exception: Missing hash key: \"bb\" (KeyError)\r\nputs h1\r\n\r\n# not working as expected\r\nh2 = Hash(String, Array(String)).new(Array(String).new)\r\nh2[\"aa\"] = [\"11\"]\r\nh2[\"aa\"] << \"22\"\r\nh2[\"bb\"] << \"22\"\r\nputs h2\r\n# {\"aa\" => [\"11\", \"22\"]}\r\n\r\n# working as expected but ugly\r\nh3 = {} of String => Array(String)\r\nh3[\"aa\"] = [\"11\"]\r\nh3[\"aa\"] << \"22\"\r\n_bb = h3[\"bb\"]? || [] of String\r\n_bb << \"22\"\r\nh3[\"bb\"] = _bb\r\nputs h3\r\n# {\"aa\" => [\"11\", \"22\"], \"bb\" => [\"22\"]}\r\n\r\n# working as expected but not so good\r\n# via https://forum.crystal-lang.org/t/how-to-append-to-array-that-is-the-value-of-a-hash-key/1217/4\r\nh4 = Hash(String, Array(String)).new(Array(String).new)\r\nh4[\"aa\"] = [\"11\"]\r\nh4[\"aa\"] << \"22\"\r\n# h4[\"bb\"] = [] of String\r\nh4[\"bb\"] = Array(String).new\r\nh4[\"bb\"] << \"22\"\r\nputs h4\r\n# {\"aa\" => [\"11\", \"22\"], \"bb\" => [\"22\"]}\r\n\r\n# working as expected but not so good\r\nh5 = {} of String => Array(String)\r\nh5[\"aa\"] = [\"11\"]\r\nh5[\"aa\"] << \"22\"\r\nh5[\"bb\"] = Array(String).new\r\nh5[\"bb\"] << \"22\"\r\nputs h5\r\n# {\"aa\" => [\"11\", \"22\"], \"bb\" => [\"22\"]}\r\n```\r\n\r\nCan we remove the line like `h4[\"bb\"] = Array(String).new` or `h5[\"bb\"] = Array(String).new` and get expected in the future?","performed_via_github_app":null,"score":1.0}]}
0

