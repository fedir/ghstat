HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sun, 13 May 2018 12:58:35 GMT
Link: <https://api.github.com/search/issues?q=repo%3Ahttp4k%2Fhttp4k+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Ahttp4k%2Fhttp4k+type%3Aissue+state%3Aclosed&page=2>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CAF8:4F40:25F84BE:572320C:5AF8367A
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 14
X-Ratelimit-Reset: 1526216318
X-Runtime-Rack: 0.474099
X-Xss-Protection: 1; mode=block

8000
{"total_count":55,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/http4k/http4k/issues/126","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/126/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/126/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/126/events","html_url":"https://github.com/http4k/http4k/issues/126","id":321174303,"number":126,"title":"ResourceLoadingHandler can expose mapped resources into the root","user":{"login":"dmcg","id":59501,"avatar_url":"https://avatars1.githubusercontent.com/u/59501?v=4","gravatar_id":"","url":"https://api.github.com/users/dmcg","html_url":"https://github.com/dmcg","followers_url":"https://api.github.com/users/dmcg/followers","following_url":"https://api.github.com/users/dmcg/following{/other_user}","gists_url":"https://api.github.com/users/dmcg/gists{/gist_id}","starred_url":"https://api.github.com/users/dmcg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dmcg/subscriptions","organizations_url":"https://api.github.com/users/dmcg/orgs","repos_url":"https://api.github.com/users/dmcg/repos","events_url":"https://api.github.com/users/dmcg/events{/privacy}","received_events_url":"https://api.github.com/users/dmcg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-08T12:54:51Z","updated_at":"2018-05-08T13:22:46Z","closed_at":"2018-05-08T13:19:09Z","author_association":"NONE","body":"If I run\r\n\r\n`fun main(args: Array<String>) {\r\n    routes(\r\n        \"/fred\" bind static(ResourceLoader.Classpath(\"/public\"))\r\n    ).asServer(Jetty(5000)).start()\r\n}`\r\n\r\nthen I can load say public/local.css as /fred/local.css\r\n\r\nbut I can also load it as /local.css\r\n\r\nThe problem seems to be caused by ResourceLoadingHandler::convertPath  ","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/125","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/125/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/125/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/125/events","html_url":"https://github.com/http4k/http4k/issues/125","id":318632924,"number":125,"title":"Apache Server never sets Content-Length","user":{"login":"daviddenton","id":1679649,"avatar_url":"https://avatars3.githubusercontent.com/u/1679649?v=4","gravatar_id":"","url":"https://api.github.com/users/daviddenton","html_url":"https://github.com/daviddenton","followers_url":"https://api.github.com/users/daviddenton/followers","following_url":"https://api.github.com/users/daviddenton/following{/other_user}","gists_url":"https://api.github.com/users/daviddenton/gists{/gist_id}","starred_url":"https://api.github.com/users/daviddenton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daviddenton/subscriptions","organizations_url":"https://api.github.com/users/daviddenton/orgs","repos_url":"https://api.github.com/users/daviddenton/repos","events_url":"https://api.github.com/users/daviddenton/events{/privacy}","received_events_url":"https://api.github.com/users/daviddenton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-04-28T12:38:59Z","updated_at":"2018-04-28T12:40:08Z","closed_at":"2018-04-28T12:40:08Z","author_association":"COLLABORATOR","body":"<!-- Love http4k? Please consider supporting our collective:\r\n👉  https://opencollective.com/http4k/donate -->\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/124","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/124/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/124/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/124/events","html_url":"https://github.com/http4k/http4k/issues/124","id":317703200,"number":124,"title":"Headers in Websocket Upgrade request incorrect","user":{"login":"kkopper","id":18163911,"avatar_url":"https://avatars3.githubusercontent.com/u/18163911?v=4","gravatar_id":"","url":"https://api.github.com/users/kkopper","html_url":"https://github.com/kkopper","followers_url":"https://api.github.com/users/kkopper/followers","following_url":"https://api.github.com/users/kkopper/following{/other_user}","gists_url":"https://api.github.com/users/kkopper/gists{/gist_id}","starred_url":"https://api.github.com/users/kkopper/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kkopper/subscriptions","organizations_url":"https://api.github.com/users/kkopper/orgs","repos_url":"https://api.github.com/users/kkopper/repos","events_url":"https://api.github.com/users/kkopper/events{/privacy}","received_events_url":"https://api.github.com/users/kkopper/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-25T16:29:34Z","updated_at":"2018-04-25T16:51:54Z","closed_at":"2018-04-25T16:45:29Z","author_association":"NONE","body":"For the creation of the upgrade request, the extension function [`Headers.combineToMap()`](https://github.com/http4k/http4k/blob/6a84b41d8cab531e5588b4edb481925cf7fefd9d/http4k-client-websocket/src/main/kotlin/org/http4k/client/WebsocketClient.kt#L104) is created:\r\n\r\n````kotlin\r\nprivate fun Headers.combineToMap() = this.groupBy { it.first }.mapValues { it.value.joinToString(\", \") }\r\n````\r\n\r\nSince `Headers` is a typealias for a list of pairs of strings, I would expect that the resulting map takes the header fields as keys and maps them to the headers value.\r\n\r\nIf I create a `Headers` list using the following code snippet\r\n````kotlin\r\nval headers: Headers = listOf(\r\n                \"Accept\" to \"text/html\",\r\n                \"Origin\" to \"https://mywebpage.com\"\r\n        )\r\n````\r\n\r\nthe map produced from the above method looks like this:\r\n<img width=\"570\" alt=\"debugger_map_is\" src=\"https://user-images.githubusercontent.com/18163911/39258917-6c380ece-48b5-11e8-8350-b821fcd72a8d.png\">\r\n\r\nThis is not what I expected. I would expect:\r\n<img width=\"514\" alt=\"debugger_map_expected\" src=\"https://user-images.githubusercontent.com/18163911/39258985-a1be003a-48b5-11e8-97e6-fd3ba16225d9.png\">\r\n\r\nThe problem in the current implementation seems to be that `it.value` in the `mapValues` block is a list of pairs of strings and not a list of strings.","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/123","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/123/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/123/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/123/events","html_url":"https://github.com/http4k/http4k/issues/123","id":316165174,"number":123,"title":"Multipart requests: Boundary not found error when request stream has been materialized","user":{"login":"karottenreibe","id":38839,"avatar_url":"https://avatars2.githubusercontent.com/u/38839?v=4","gravatar_id":"","url":"https://api.github.com/users/karottenreibe","html_url":"https://github.com/karottenreibe","followers_url":"https://api.github.com/users/karottenreibe/followers","following_url":"https://api.github.com/users/karottenreibe/following{/other_user}","gists_url":"https://api.github.com/users/karottenreibe/gists{/gist_id}","starred_url":"https://api.github.com/users/karottenreibe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karottenreibe/subscriptions","organizations_url":"https://api.github.com/users/karottenreibe/orgs","repos_url":"https://api.github.com/users/karottenreibe/repos","events_url":"https://api.github.com/users/karottenreibe/events{/privacy}","received_events_url":"https://api.github.com/users/karottenreibe/received_events","type":"User","site_admin":false},"labels":[{"id":567897074,"url":"https://api.github.com/repos/http4k/http4k/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-04-20T07:58:29Z","updated_at":"2018-04-28T11:14:36Z","closed_at":"2018-04-28T11:13:45Z","author_association":"NONE","body":"When running this program:\r\n\r\n```kotlin\r\nimport org.http4k.core.MultipartFormBody\r\nimport org.http4k.core.Request\r\nimport org.http4k.core.Response\r\nimport org.http4k.core.Status\r\nimport org.http4k.server.Jetty\r\nimport org.http4k.server.asServer\r\n\r\nfun main(args: Array<String>) {\r\n    val app = { request: Request ->\r\n        println(request)\r\n        println(MultipartFormBody.from(request).file(\"file\"))\r\n        Response(Status.OK)\r\n    }\r\n\r\n    app.asServer(Jetty(8000)).start()\r\n}\r\n```\r\n\r\nand uploading a file with curl to it: `curl http://localhost:8000 -Ffile=@foo.txt`\r\n\r\nI get this error:\r\n\r\n```\r\n2018-04-20 09:51:42 [WARN ] org.eclipse.jetty.server.HttpChannel - /\r\norg.http4k.multipart.ParseError: org.http4k.multipart.TokenNotFoundException: Boundary not found <<--------------------------44f349e8bc402dd4>>\r\n\tat org.http4k.multipart.StreamingMultipartFormParts$StreamingMulipartFormPartIterator.safelyParseNextPart(StreamingMultipartFormParts.kt:175) ~[http4k-multipart-3.24.0.jar:?]\r\n\tat org.http4k.multipart.StreamingMultipartFormParts$StreamingMulipartFormPartIterator.hasNext(StreamingMultipartFormParts.kt:142) ~[http4k-multipart-3.24.0.jar:?]\r\n\tat org.http4k.multipart.MultipartFormParser.formParts(MultipartFormParser.kt:42) ~[http4k-multipart-3.24.0.jar:?]\r\n\tat org.http4k.core.MultipartFormBody$Companion.from(MultipartFormBody.kt:64) ~[http4k-multipart-3.24.0.jar:?]\r\n\tat org.http4k.core.MultipartFormBody$Companion.from$default(MultipartFormBody.kt:59) ~[http4k-multipart-3.24.0.jar:?]\r\n\tat TestKt$main$app$1.invoke(Test.kt:11) ~[classes/:?]\r\n\tat TestKt$main$app$1.invoke(Test.kt) ~[classes/:?]\r\n\tat org.http4k.servlet.HttpHandlerServlet.service(servlet.kt:19) ~[http4k-core-3.24.0.jar:?]\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:791) ~[javax.servlet-api-4.0.0.jar:4.0.0]\r\n\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:841) ~[jetty-servlet-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:535) ~[jetty-servlet-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473) ~[jetty-servlet-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:561) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:334) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251) ~[jetty-server-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) ~[jetty-io-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:104) ~[jetty-io-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) ~[jetty-io-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) ~[jetty-util-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) ~[jetty-util-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:679) [jetty-util-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:597) [jetty-util-9.4.7.v20170914.jar:9.4.7.v20170914]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_162]\r\nCaused by: org.http4k.multipart.TokenNotFoundException: Boundary not found <<--------------------------44f349e8bc402dd4>>\r\n\tat org.http4k.multipart.StreamingMultipartFormParts.findBoundary(StreamingMultipartFormParts.kt:39) ~[http4k-multipart-3.24.0.jar:?]\r\n\tat org.http4k.multipart.StreamingMultipartFormParts.parseNextPart(StreamingMultipartFormParts.kt:61) ~[http4k-multipart-3.24.0.jar:?]\r\n\tat org.http4k.multipart.StreamingMultipartFormParts.access$parseNextPart(StreamingMultipartFormParts.kt:13) ~[http4k-multipart-3.24.0.jar:?]\r\n\tat org.http4k.multipart.StreamingMultipartFormParts$StreamingMulipartFormPartIterator.safelyParseNextPart(StreamingMultipartFormParts.kt:171) ~[http4k-multipart-3.24.0.jar:?]\r\n\t... 32 more\r\n```\r\n\r\nAfter some debugging, I understand that this happens because the MultipartFormBody tries to read from the request's input stream, which has already been depleted and materialized into a byte array due to logging the request in the line above.\r\n\r\nI would expect that in this case either\r\n\r\n- the MultipartFormBody would just read from the byte array if the stream is materialized\r\n- or alternatively, it at least outputs a more helpful error message\r\n\r\nThe current error message made me assume that something was wrong with the request that was being sent, sending me on a long goose chase to debug the actual request. An error message like \"Cannot read multipart data after stream has been materialized\" would be a little more helpful.\r\n\r\nReading from the materialized byte array is the best solution IMO, though. \r\n\r\nI understand that materializing the request comes with its own problems (e.g. if the requests are large), however, there are valid scenarios where one would want to do it anyways (e.g. during debugging) and then this error is not helpful, unfortunately.","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/116","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/116/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/116/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/116/events","html_url":"https://github.com/http4k/http4k/issues/116","id":311931111,"number":116,"title":"How to get more specific LensFailure messages?","user":{"login":"elifarley","id":519940,"avatar_url":"https://avatars2.githubusercontent.com/u/519940?v=4","gravatar_id":"","url":"https://api.github.com/users/elifarley","html_url":"https://github.com/elifarley","followers_url":"https://api.github.com/users/elifarley/followers","following_url":"https://api.github.com/users/elifarley/following{/other_user}","gists_url":"https://api.github.com/users/elifarley/gists{/gist_id}","starred_url":"https://api.github.com/users/elifarley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elifarley/subscriptions","organizations_url":"https://api.github.com/users/elifarley/orgs","repos_url":"https://api.github.com/users/elifarley/repos","events_url":"https://api.github.com/users/elifarley/events{/privacy}","received_events_url":"https://api.github.com/users/elifarley/received_events","type":"User","site_admin":false},"labels":[{"id":567897075,"url":"https://api.github.com/repos/http4k/http4k/labels/help%20wanted","name":"help wanted","color":"128A0C","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-04-06T10:48:58Z","updated_at":"2018-04-13T03:22:44Z","closed_at":"2018-04-06T19:24:41Z","author_association":"CONTRIBUTOR","body":"Situation: I get a `HTTP/1.1 400 body 'body' must be object` response with an empty body after sending a JSON string to an HttpHandler. I think this message is too generic. Ideally, it should be more specific (give more contextual information).\r\nI had to debug to find out the cause of this exception, which was:\r\n```\r\ncom.google.gson.JsonSyntaxException: java.lang.NumberFormatException: For input string: \"abc\"\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/115","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/115/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/115/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/115/events","html_url":"https://github.com/http4k/http4k/issues/115","id":311927166,"number":115,"title":"Changes with ApacheClient have side effect when using ClientFilters.AwsAuth","user":{"login":"egerogiokas-springer","id":8861805,"avatar_url":"https://avatars1.githubusercontent.com/u/8861805?v=4","gravatar_id":"","url":"https://api.github.com/users/egerogiokas-springer","html_url":"https://github.com/egerogiokas-springer","followers_url":"https://api.github.com/users/egerogiokas-springer/followers","following_url":"https://api.github.com/users/egerogiokas-springer/following{/other_user}","gists_url":"https://api.github.com/users/egerogiokas-springer/gists{/gist_id}","starred_url":"https://api.github.com/users/egerogiokas-springer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/egerogiokas-springer/subscriptions","organizations_url":"https://api.github.com/users/egerogiokas-springer/orgs","repos_url":"https://api.github.com/users/egerogiokas-springer/repos","events_url":"https://api.github.com/users/egerogiokas-springer/events{/privacy}","received_events_url":"https://api.github.com/users/egerogiokas-springer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-04-06T10:33:45Z","updated_at":"2018-04-06T13:12:39Z","closed_at":"2018-04-06T13:12:39Z","author_association":"NONE","body":"So from what I can tell, ApacheClient has been changed so now when a GET request is made, it creates a HttpGet, which doesn't have an entity. Before, when a GET request was made it would have an entity and if you specify content-length, you would see something like \"[Content-Length:0,Chunked:false]\"\r\nThis affects S3 calls because in awsExtension.kt line 26, content-length is set always and in ApacheClient, content-length is filtered. Since the AWS signature is created with content-length, and we don't send content-length, there is an issue, Signature doesn't match.\r\n\r\nSo either we don't set content length when it is 0 in ClientFilters.AwsAuth, or do something else (I don't really understand the craziness in ApacheClient but could not filter content-length? dunno the reason behind that).","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/112","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/112/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/112/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/112/events","html_url":"https://github.com/http4k/http4k/issues/112","id":308225401,"number":112,"title":"using apache client GET request fails against F5 due to 'Transfer-Encoding' header specified on request","user":{"login":"simojenki","id":4586,"avatar_url":"https://avatars1.githubusercontent.com/u/4586?v=4","gravatar_id":"","url":"https://api.github.com/users/simojenki","html_url":"https://github.com/simojenki","followers_url":"https://api.github.com/users/simojenki/followers","following_url":"https://api.github.com/users/simojenki/following{/other_user}","gists_url":"https://api.github.com/users/simojenki/gists{/gist_id}","starred_url":"https://api.github.com/users/simojenki/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simojenki/subscriptions","organizations_url":"https://api.github.com/users/simojenki/orgs","repos_url":"https://api.github.com/users/simojenki/repos","events_url":"https://api.github.com/users/simojenki/events{/privacy}","received_events_url":"https://api.github.com/users/simojenki/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-24T03:28:05Z","updated_at":"2018-03-27T11:52:45Z","closed_at":"2018-03-27T11:52:22Z","author_association":"NONE","body":"<!-- Love http4k? Please consider supporting our collective:\r\n👉  https://opencollective.com/http4k/donate -->\r\n\r\nSample app demonstrating issue;\r\nhttps://github.com/simojenki/http4k/blob/apacheclientfix/http4k-client-apache/src/test/kotlin/ApacheFundInfoApp.kt\r\n\r\nBasically it comes down to the body mode used in ApacheClient.  When set to 'Memory' GET works, when set to 'Stream' GET fails.  \r\n\r\nThis is because the apache http client is setting the 'Transfer-Encoding' header when it see's a content length of -1.  http4k specified a content-lenghth of -1 when using the Stream body mode.\r\n\r\nStream -> InputStreamEntity(request.body.stream, request.header(\"content-length\")?.toLong() ?: -1)\r\n\r\nThe apache class that is causing this is RequestContent, specifically lines 107->115 (httpcore/4.4.7).  It's likely however that the entire if statement lines 88->126 of RequestContent should not be executed at all when performing DELETE, HEAD, GET, OPTIONS, TRACE as the associated apache request classes do not implement HttpEntityEnclosingRequest.","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/109","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/109/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/109/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/109/events","html_url":"https://github.com/http4k/http4k/issues/109","id":305696087,"number":109,"title":"Jackson and Gson treat integer values inconsistently","user":{"login":"daviddenton","id":1679649,"avatar_url":"https://avatars3.githubusercontent.com/u/1679649?v=4","gravatar_id":"","url":"https://api.github.com/users/daviddenton","html_url":"https://github.com/daviddenton","followers_url":"https://api.github.com/users/daviddenton/followers","following_url":"https://api.github.com/users/daviddenton/following{/other_user}","gists_url":"https://api.github.com/users/daviddenton/gists{/gist_id}","starred_url":"https://api.github.com/users/daviddenton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daviddenton/subscriptions","organizations_url":"https://api.github.com/users/daviddenton/orgs","repos_url":"https://api.github.com/users/daviddenton/repos","events_url":"https://api.github.com/users/daviddenton/events{/privacy}","received_events_url":"https://api.github.com/users/daviddenton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-15T19:50:10Z","updated_at":"2018-03-15T19:58:39Z","closed_at":"2018-03-15T19:55:39Z","author_association":"COLLABORATOR","body":"There is different behaviour between Longs, BigInts and Integers. This leads to errors when using Hamkrest matchers for comparison because the types are different.\r\n\r\nFix is to make everything use BigInteger under the covers.\r\n\r\n<!-- Love http4k? Please consider supporting our collective:\r\n👉  https://opencollective.com/http4k/donate -->\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/107","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/107/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/107/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/107/events","html_url":"https://github.com/http4k/http4k/issues/107","id":305199086,"number":107,"title":"ReportHttpTransaction does not provide routingGroup for calls","user":{"login":"daviddenton","id":1679649,"avatar_url":"https://avatars3.githubusercontent.com/u/1679649?v=4","gravatar_id":"","url":"https://api.github.com/users/daviddenton","html_url":"https://github.com/daviddenton","followers_url":"https://api.github.com/users/daviddenton/followers","following_url":"https://api.github.com/users/daviddenton/following{/other_user}","gists_url":"https://api.github.com/users/daviddenton/gists{/gist_id}","starred_url":"https://api.github.com/users/daviddenton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daviddenton/subscriptions","organizations_url":"https://api.github.com/users/daviddenton/orgs","repos_url":"https://api.github.com/users/daviddenton/repos","events_url":"https://api.github.com/users/daviddenton/events{/privacy}","received_events_url":"https://api.github.com/users/daviddenton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-14T15:07:01Z","updated_at":"2018-03-14T15:11:26Z","closed_at":"2018-03-14T15:11:26Z","author_association":"COLLABORATOR","body":"Due to the way in which filters are composed, the routingGroup is currently never populated if you have a ReportHttpTransaction filter in the mix. \r\n\r\nWe have fixed this to completely remove the x-uri-template header and rely on another mechanism instead. This should be transparent to all users - apart from the removal of the header.\r\n\r\n<!-- Love http4k? Please consider supporting our collective:\r\n👉  https://opencollective.com/http4k/donate -->\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/105","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/105/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/105/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/105/events","html_url":"https://github.com/http4k/http4k/issues/105","id":303868358,"number":105,"title":"Swagger API json file: duplicate key in \"definitions\"","user":{"login":"elifarley","id":519940,"avatar_url":"https://avatars2.githubusercontent.com/u/519940?v=4","gravatar_id":"","url":"https://api.github.com/users/elifarley","html_url":"https://github.com/elifarley","followers_url":"https://api.github.com/users/elifarley/followers","following_url":"https://api.github.com/users/elifarley/following{/other_user}","gists_url":"https://api.github.com/users/elifarley/gists{/gist_id}","starred_url":"https://api.github.com/users/elifarley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elifarley/subscriptions","organizations_url":"https://api.github.com/users/elifarley/orgs","repos_url":"https://api.github.com/users/elifarley/repos","events_url":"https://api.github.com/users/elifarley/events{/privacy}","received_events_url":"https://api.github.com/users/elifarley/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-03-09T14:57:33Z","updated_at":"2018-03-10T11:22:55Z","closed_at":"2018-03-10T11:22:26Z","author_association":"CONTRIBUTOR","body":"I found a duplicate key in object *definitions*, found on the generated Swagger API documentation:\r\n\r\n```\r\n        \"object-1161328054\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {}\r\n        },\r\n        \"object158819726\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"id\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"attrs\": {\r\n                    \"$ref\": \"#/definitions/object-1161328054\"\r\n                },\r\n                \"created\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"updated\": {\r\n                    \"type\": \"string\"\r\n                }\r\n            }\r\n        },\r\n        \"object-1161328054\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {}\r\n        },\r\n```","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/98","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/98/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/98/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/98/events","html_url":"https://github.com/http4k/http4k/issues/98","id":298886320,"number":98,"title":"GSON does not fail when deserialise non-nullable fields correctly ","user":{"login":"daviddenton","id":1679649,"avatar_url":"https://avatars3.githubusercontent.com/u/1679649?v=4","gravatar_id":"","url":"https://api.github.com/users/daviddenton","html_url":"https://github.com/daviddenton","followers_url":"https://api.github.com/users/daviddenton/followers","following_url":"https://api.github.com/users/daviddenton/following{/other_user}","gists_url":"https://api.github.com/users/daviddenton/gists{/gist_id}","starred_url":"https://api.github.com/users/daviddenton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daviddenton/subscriptions","organizations_url":"https://api.github.com/users/daviddenton/orgs","repos_url":"https://api.github.com/users/daviddenton/repos","events_url":"https://api.github.com/users/daviddenton/events{/privacy}","received_events_url":"https://api.github.com/users/daviddenton/received_events","type":"User","site_admin":false},"labels":[{"id":567897078,"url":"https://api.github.com/repos/http4k/http4k/labels/wontfix","name":"wontfix","color":"ffffff","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-02-21T08:56:15Z","updated_at":"2018-02-21T08:57:15Z","closed_at":"2018-02-21T08:57:15Z","author_association":"COLLABORATOR","body":"We expect this to throw an exception.\r\n<!-- Love http4k? Please consider supporting our collective:\r\n👉  https://opencollective.com/http4k/donate -->\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/97","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/97/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/97/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/97/events","html_url":"https://github.com/http4k/http4k/issues/97","id":298884920,"number":97,"title":"Moshi does not fail when deserialise non-nullable fields correctly","user":{"login":"daviddenton","
8000
id":1679649,"avatar_url":"https://avatars3.githubusercontent.com/u/1679649?v=4","gravatar_id":"","url":"https://api.github.com/users/daviddenton","html_url":"https://github.com/daviddenton","followers_url":"https://api.github.com/users/daviddenton/followers","following_url":"https://api.github.com/users/daviddenton/following{/other_user}","gists_url":"https://api.github.com/users/daviddenton/gists{/gist_id}","starred_url":"https://api.github.com/users/daviddenton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daviddenton/subscriptions","organizations_url":"https://api.github.com/users/daviddenton/orgs","repos_url":"https://api.github.com/users/daviddenton/repos","events_url":"https://api.github.com/users/daviddenton/events{/privacy}","received_events_url":"https://api.github.com/users/daviddenton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-21T08:51:14Z","updated_at":"2018-02-21T08:54:38Z","closed_at":"2018-02-21T08:54:38Z","author_association":"COLLABORATOR","body":"We expect an exception to be thrown when attempting to auto marshall illegal JSON strings\r\n<!-- Love http4k? Please consider supporting our collective:\r\n👉  https://opencollective.com/http4k/donate -->\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/95","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/95/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/95/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/95/events","html_url":"https://github.com/http4k/http4k/issues/95","id":295047274,"number":95,"title":"Filters does not apply to \"Route not found\" responses","user":{"login":"s4nchez","id":29394,"avatar_url":"https://avatars2.githubusercontent.com/u/29394?v=4","gravatar_id":"","url":"https://api.github.com/users/s4nchez","html_url":"https://github.com/s4nchez","followers_url":"https://api.github.com/users/s4nchez/followers","following_url":"https://api.github.com/users/s4nchez/following{/other_user}","gists_url":"https://api.github.com/users/s4nchez/gists{/gist_id}","starred_url":"https://api.github.com/users/s4nchez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s4nchez/subscriptions","organizations_url":"https://api.github.com/users/s4nchez/orgs","repos_url":"https://api.github.com/users/s4nchez/repos","events_url":"https://api.github.com/users/s4nchez/events{/privacy}","received_events_url":"https://api.github.com/users/s4nchez/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-07T08:31:09Z","updated_at":"2018-02-07T13:17:52Z","closed_at":"2018-02-07T13:17:52Z","author_association":"COLLABORATOR","body":"When `RoutingHttpHandlers` has filters added to it, they will be invoked only when a route is found.\r\n\r\nThe example below shows that the behaviour is different if the `RoutingHttpHandler` is casted to a normal `HttpHandler`.\r\n\r\n```kotlin\r\nimport org.http4k.core.Filter\r\nimport org.http4k.core.HttpHandler\r\nimport org.http4k.core.Method\r\nimport org.http4k.core.Request\r\nimport org.http4k.core.Response\r\nimport org.http4k.core.Status\r\nimport org.http4k.core.then\r\nimport org.http4k.routing.bind\r\nimport org.http4k.routing.routes\r\n\r\nfun main(args: Array<String>) {\r\n    val loggingFilter = Filter { next -> { request: Request -> next(request).apply { println(\"Logged status ${this.status}\") } } }\r\n    val app = routes(\"/\" bind Method.GET to { Response(Status.OK).apply { println(\"handled request\") } })\r\n\r\n    val notFoundRequest = Request(Method.GET, \"/not-found\")\r\n\r\n    println(\"Filter to routing handler\")\r\n    loggingFilter.then(app)(notFoundRequest) // will not log\r\n\r\n    println(\"Filter + generic handler\")\r\n    loggingFilter.then(app as HttpHandler)(notFoundRequest) // will log\r\n}\r\n```\r\n\r\nThe behaviour for 404 should be the same for both `HttpHandler` and `RoutingHttpHandler`.","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/93","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/93/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/93/events","html_url":"https://github.com/http4k/http4k/issues/93","id":292118040,"number":93,"title":"Apache server blows up if transfer-encoding or content-length are set on http4k response","user":{"login":"daviddenton","id":1679649,"avatar_url":"https://avatars3.githubusercontent.com/u/1679649?v=4","gravatar_id":"","url":"https://api.github.com/users/daviddenton","html_url":"https://github.com/daviddenton","followers_url":"https://api.github.com/users/daviddenton/followers","following_url":"https://api.github.com/users/daviddenton/following{/other_user}","gists_url":"https://api.github.com/users/daviddenton/gists{/gist_id}","starred_url":"https://api.github.com/users/daviddenton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daviddenton/subscriptions","organizations_url":"https://api.github.com/users/daviddenton/orgs","repos_url":"https://api.github.com/users/daviddenton/repos","events_url":"https://api.github.com/users/daviddenton/events{/privacy}","received_events_url":"https://api.github.com/users/daviddenton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-01-27T12:30:30Z","updated_at":"2018-01-27T13:01:14Z","closed_at":"2018-01-27T12:31:50Z","author_association":"COLLABORATOR","body":".. due to an interceptor in the chain attempting to do it. This may be better served by building a custom interceptor chain, but for the moment we will fix this by removing those headers and letting apache  do it. \r\n<!-- Love http4k? Please consider supporting our collective:\r\n👉  https://opencollective.com/http4k/donate -->\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/92","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/92/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/92/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/92/events","html_url":"https://github.com/http4k/http4k/issues/92","id":291704643,"number":92,"title":"Cookie date format is taking Locale into account","user":{"login":"s4nchez","id":29394,"avatar_url":"https://avatars2.githubusercontent.com/u/29394?v=4","gravatar_id":"","url":"https://api.github.com/users/s4nchez","html_url":"https://github.com/s4nchez","followers_url":"https://api.github.com/users/s4nchez/followers","following_url":"https://api.github.com/users/s4nchez/following{/other_user}","gists_url":"https://api.github.com/users/s4nchez/gists{/gist_id}","starred_url":"https://api.github.com/users/s4nchez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/s4nchez/subscriptions","organizations_url":"https://api.github.com/users/s4nchez/orgs","repos_url":"https://api.github.com/users/s4nchez/repos","events_url":"https://api.github.com/users/s4nchez/events{/privacy}","received_events_url":"https://api.github.com/users/s4nchez/received_events","type":"User","site_admin":false},"labels":[{"id":567897072,"url":"https://api.github.com/repos/http4k/http4k/labels/bug","name":"bug","color":"ee0701","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-01-25T20:27:27Z","updated_at":"2018-01-26T08:17:14Z","closed_at":"2018-01-26T08:17:14Z","author_association":"COLLABORATOR","body":"```org.http4k.core.cookie.CookieTest > full cookie creation FAILED\r\n    java.lang.AssertionError: expected: a value that is equal to \"my-cookie=\\\"my-value\\\"; Max-Age=37; Expires=Sat, 11 Mar 2017 12:15:21 GMT; Domain=google.com; Path=/; secure; HttpOnly\"\r\n    but was: \"my-cookie=\\\"my-value\\\"; Max-Age=37; Expires=sam., 11 mars 2017 12:15:21 GMT; Domain=google.com; Path=/; secure; HttpOnly\"```","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/91","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/91/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/91/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/91/events","html_url":"https://github.com/http4k/http4k/issues/91","id":291683957,"number":91,"title":"Netty fails to send all of large response bodies","user":{"login":"daviddenton","id":1679649,"avatar_url":"https://avatars3.githubusercontent.com/u/1679649?v=4","gravatar_id":"","url":"https://api.github.com/users/daviddenton","html_url":"https://github.com/daviddenton","followers_url":"https://api.github.com/users/daviddenton/followers","following_url":"https://api.github.com/users/daviddenton/following{/other_user}","gists_url":"https://api.github.com/users/daviddenton/gists{/gist_id}","starred_url":"https://api.github.com/users/daviddenton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daviddenton/subscriptions","organizations_url":"https://api.github.com/users/daviddenton/orgs","repos_url":"https://api.github.com/users/daviddenton/repos","events_url":"https://api.github.com/users/daviddenton/events{/privacy}","received_events_url":"https://api.github.com/users/daviddenton/received_events","type":"User","site_admin":false},"labels":[{"id":567897072,"url":"https://api.github.com/repos/http4k/http4k/labels/bug","name":"bug","color":"ee0701","default":true}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-01-25T19:17:03Z","updated_at":"2018-01-25T21:01:47Z","closed_at":"2018-01-25T21:01:47Z","author_association":"COLLABORATOR","body":"When a response body is over a certain size, the Netty server implementation does not send all of the response bytes.\r\n\r\nFor this reason, we are obviously currently not recommending using this Netty server implementation, as this is a blocker.\r\n<!-- Love http4k? Please consider supporting our collective:\r\n👉  https://opencollective.com/http4k/donate -->\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/90","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/90/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/90/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/90/events","html_url":"https://github.com/http4k/http4k/issues/90","id":290467433,"number":90,"title":"Upgrade to Kotlin 1.2?","user":{"login":"ToastShaman","id":1027637,"avatar_url":"https://avatars0.githubusercontent.com/u/1027637?v=4","gravatar_id":"","url":"https://api.github.com/users/ToastShaman","html_url":"https://github.com/ToastShaman","followers_url":"https://api.github.com/users/ToastShaman/followers","following_url":"https://api.github.com/users/ToastShaman/following{/other_user}","gists_url":"https://api.github.com/users/ToastShaman/gists{/gist_id}","starred_url":"https://api.github.com/users/ToastShaman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ToastShaman/subscriptions","organizations_url":"https://api.github.com/users/ToastShaman/orgs","repos_url":"https://api.github.com/users/ToastShaman/repos","events_url":"https://api.github.com/users/ToastShaman/events{/privacy}","received_events_url":"https://api.github.com/users/ToastShaman/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-01-22T13:35:54Z","updated_at":"2018-01-22T18:58:43Z","closed_at":"2018-01-22T18:43:25Z","author_association":"NONE","body":"Hi,\r\n\r\nAre there any plans to upgrade to Kotlin v1.2?\r\n\r\nSome of the new features introduced with v1.2 can be found on Kotlin's [blog](https://blog.jetbrains.com/kotlin/2017/11/kotlin-1-2-released/). \r\n\r\n-Kevin","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/88","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/88/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/88/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/88/events","html_url":"https://github.com/http4k/http4k/issues/88","id":290041634,"number":88,"title":"Support for naming models in Swagger","user":{"login":"danschultz","id":37429,"avatar_url":"https://avatars3.githubusercontent.com/u/37429?v=4","gravatar_id":"","url":"https://api.github.com/users/danschultz","html_url":"https://github.com/danschultz","followers_url":"https://api.github.com/users/danschultz/followers","following_url":"https://api.github.com/users/danschultz/following{/other_user}","gists_url":"https://api.github.com/users/danschultz/gists{/gist_id}","starred_url":"https://api.github.com/users/danschultz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danschultz/subscriptions","organizations_url":"https://api.github.com/users/danschultz/orgs","repos_url":"https://api.github.com/users/danschultz/repos","events_url":"https://api.github.com/users/danschultz/events{/privacy}","received_events_url":"https://api.github.com/users/danschultz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2018-01-19T16:56:56Z","updated_at":"2018-01-30T07:46:09Z","closed_at":"2018-01-30T07:46:09Z","author_association":"CONTRIBUTOR","body":"I'm using the contracts library to generate Swagger definitions for my API, and then using `swagger-code-gen` to generate client libraries in different languages. Currently, the Swagger model definitions from Http4k look like:\r\n\r\n```json\r\n\"definitions\" : {\r\n  \"object-1918755743\" : {\r\n    \"type\" : \"object\",\r\n    \"properties\" : {\r\n      \"reason\" : {\r\n        \"type\" : \"string\"\r\n      }\r\n    }\r\n   },\r\n  \"object1265469862\" : {\r\n    \"type\" : \"object\",\r\n    \"properties\" : {\r\n      \"id\" : {\r\n        \"type\" : \"integer\"\r\n      },\r\n      \"title\" : {\r\n        \"type\" : \"string\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nInstead, I'd like to give these models a name, so they're named correctly in our generated Python library as well in our Swagger UI docs.","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/84","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/84/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/84/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/84/events","html_url":"https://github.com/http4k/http4k/issues/84","id":288715006,"number":84,"title":"Contract module does not match when sent OPTIONS requests for contract routes","user":{"login":"daviddenton","id":1679649,"avatar_url":"https://avatars3.githubusercontent.com/u/1679649?v=4","gravatar_id":"","url":"https://api.github.com/users/daviddenton","html_url":"https://github.com/daviddenton","followers_url":"https://api.github.com/users/daviddenton/followers","following_url":"https://api.github.com/users/daviddenton/following{/other_user}","gists_url":"https://api.github.com/users/daviddenton/gists{/gist_id}","starred_url":"https://api.github.com/users/daviddenton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daviddenton/subscriptions","organizations_url":"https://api.github.com/users/daviddenton/orgs","repos_url":"https://api.github.com/users/daviddenton/repos","events_url":"https://api.github.com/users/daviddenton/events{/privacy}","received_events_url":"https://api.github.com/users/daviddenton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-01-15T21:00:24Z","updated_at":"2018-01-15T22:10:00Z","closed_at":"2018-01-15T21:53:48Z","author_association":"COLLABORATOR","body":"When requested from an externally hosted Swagger UI, a pre-flight request is made for each contract route. This request is NOT matched correctly by the contract and a 404 is returned.\r\n\r\n<!-- Love http4k? Please consider supporting our collective:\r\n👉  https://opencollective.com/http4k/donate -->\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/83","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/83/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/83/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/83/events","html_url":"https://github.com/http4k/http4k/issues/83","id":288323477,"number":83,"title":"Does http4k have any benchmarks?","user":{"login":"adam-arold","id":1253248,"avatar_url":"https://avatars0.githubusercontent.com/u/1253248?v=4","gravatar_id":"","url":"https://api.github.com/users/adam-arold","html_url":"https://github.com/adam-arold","followers_url":"https://api.github.com/users/adam-arold/followers","following_url":"https://api.github.com/users/adam-arold/following{/other_user}","gists_url":"https://api.github.com/users/adam-arold/gists{/gist_id}","starred_url":"https://api.github.com/users/adam-arold/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adam-arold/subscriptions","organizations_url":"https://api.github.com/users/adam-arold/orgs","repos_url":"https://api.github.com/users/adam-arold/repos","events_url":"https://api.github.com/users/adam-arold/events{/privacy}","received_events_url":"https://api.github.com/users/adam-arold/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-01-13T11:58:47Z","updated_at":"2018-01-13T12:13:50Z","closed_at":"2018-01-13T12:12:45Z","author_association":"NONE","body":"I've written about Kotlin HTTP libraries on [my blog](http://the-cogitator.com/2018/01/06/going-beyond-android-kotlin-on-the-backend.html#comment-3704374708) and someone mentioned http4k.\r\nI looked at the [Techempower benchmarks](https://www.techempower.com/benchmarks/) but http4k was not present. Do you plan to write a benchmark for it or do you happen to have one now?\r\nI'd like to see how http4k performs because the lib itself looks promising.","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/79","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/79/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/79/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/79/events","html_url":"https://github.com/http4k/http4k/issues/79","id":285331729,"number":79,"title":"AWS calls result in invalid signature","user":{"login":"digitalsanctum","id":30923,"avatar_url":"https://avatars3.githubusercontent.com/u/30923?v=4","gravatar_id":"","url":"https://api.github.com/users/digitalsanctum","html_url":"https://github.com/digitalsanctum","followers_url":"https://api.github.com/users/digitalsanctum/followers","following_url":"https://api.github.com/users/digitalsanctum/following{/other_user}","gists_url":"https://api.github.com/users/digitalsanctum/gists{/gist_id}","starred_url":"https://api.github.com/users/digitalsanctum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/digitalsanctum/subscriptions","organizations_url":"https://api.github.com/users/digitalsanctum/orgs","repos_url":"https://api.github.com/users/digitalsanctum/repos","events_url":"https://api.github.com/users/digitalsanctum/events{/privacy}","received_events_url":"https://api.github.com/users/digitalsanctum/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-01-01T21:56:16Z","updated_at":"2018-01-02T07:38:43Z","closed_at":"2018-01-02T07:38:43Z","author_association":"NONE","body":"I tried http4k for the first time by following the AWS guide here: https://www.http4k.org/guide/modules/aws/\r\n\r\nUsing known good credentials I got an invalid signature error.\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/78","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/78/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/78/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/78/events","html_url":"https://github.com/http4k/http4k/issues/78","id":284303398,"number":78,"title":"Moshi support fails when serializing collections","user":{"login":"karottenreibe","id":38839,"avatar_url":"https://avatars2.githubusercontent.com/u/38839?v=4","gravatar_id":"","url":"https://api.github.com/users/karottenreibe","html_url":"https://github.com/karottenreibe","followers_url":"https://api.github.com/users/karottenreibe/followers","following_url":"https://api.github.com/users/karottenreibe/following{/other_user}","gists_url":"https://api.github.com/users/karottenreibe/gists{/gist_id}","starred_url":"https://api.github.com/users/karottenreibe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karottenreibe/subscriptions","organizations_url":"https://api.github.com/users/karottenreibe/orgs","repos_url":"https://api.github.com/users/karottenreibe/repos","events_url":"https://api.github.com/users/karottenreibe/events{/privacy}","received_events_url":"https://api.github.com/users/karottenreibe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-12-23T12:11:34Z","updated_at":"2017-12-28T11:38:37Z","closed_at":"2017-12-28T11:23:56Z","author_association":"NONE","body":"Example JUnit 5 Test that fails:\r\n\r\n```kotlin\r\nclass MoshiTest {\r\n\r\n    @Test\r\n    fun `will throw an exception`() {\r\n        val moshi = com.squareup.moshi.Moshi.Builder().build()\r\n        // this works and outputs [\"foo\"] as expected\r\n        println(moshi.adapter(List::class.java).failOnUnknown().toJson(listOf(\"foo\")))\r\n\r\n        // this fails\r\n        println(org.http4k.format.Moshi.asJsonString(listOf(\"foo\")))\r\n    }\r\n\r\n}\r\n```\r\n\r\nThe error message is `java.lang.IllegalArgumentException: Platform class java.util.Collections$SingletonList annotated [] requires explicit JsonAdapter to be registered`\r\n\r\nThe same exception is thrown when trying to use a Lens for a collection class\r\n\r\nThe same if you pass multiple list elements, except it will be ArrayList that it complains about. The root cause is that http4k's Moshi wrapper always passes an object's actual class to Moshi instead of the interface class (List in this case). Moshi, however, will not serialize implementations, it deliberately only serializes against the interface in order to avoid tieing us to one specific implementation on one specific JVM version.\r\n\r\nThis probably affects other collections like maps etc as well.\r\n\r\n__Expected__: http4k's Moshi adapter allows me to pass the desired interface, e.g. List::class, explicitly to properly serialize the collection.\r\n\r\n__Context__: http4k 3.6.0, Moshi 1.5.0","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/76","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/76/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/76/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/76/events","html_url":"https://github.com/http4k/http4k/issues/76","id":282025173,"number":76,"title":"Request path segments are encoded with URLEncoder","user":{"login":"daviddenton","id":1679649,"avatar_url":"https://avatars3.githubusercontent.com/u/1679649?v=4","gravatar_id":"","url":"https://api.github.com/users/daviddenton","html_url":"https://github.com/daviddenton","followers_url":"https://api.github.com/users/daviddenton/followers","following_url":"https://api.github.com/users/daviddenton/following{/other_user}","gists_url":"https://api.github.com/users/daviddenton/gists{/gist_id}","starred_url":"https://api.github.com/users/daviddenton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daviddenton/subscriptions","organizations_url":"https://api.github.com/users/daviddenton/orgs","repos_url":"https://api.github.com/users/daviddenton/repos","events_url":"https://api.github.com/users/daviddenton/events{/privacy}","received_events_url":"https://api.github.com/users/daviddenton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-12-14T08:57:19Z","updated_at":"2017-12-14T08:58:07Z","closed_at":"2017-12-14T08:58:07Z","author_association":"COLLABORATOR","body":"This is the encoder used for forms and not for path segments. eg. the correct encoding for a space in a path is %20 and not +\r\n\r\n<!-- Love http4k? Please consider supporting our collective:\r\n👉  https://opencollective.com/http4k/donate -->\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/74","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/74/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/74/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/74/events","html_url":"https://github.com/http4k/http4k/issues/74","id":281432421,"number":74,"title":"RequestTracing Filters are setting traces too early","user":{"login":"daviddenton","id":1679649,"avatar_url":"https://avatars3.githubusercontent.com/u/1679649?v=4","gravatar_id":"","url":"https://api.github.com/users/daviddenton","html_url":"https://github.com/daviddenton","followers_url":"https://api.github.com/users/daviddenton/followers","following_url":"https://api.github.com/users/daviddenton/following{/other_user}","gists_url":"https://api.github.com/users/daviddenton/gists{/gist_id}","starred_url":"https://api.github.com/users/daviddenton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daviddenton/subscriptions","organizations_url":"https://api.github.com/users/daviddenton/orgs","repos_url":"https://api.github.com/users/daviddenton/repos","events_url":"https://api.github.com/users/daviddenton/events{/privacy}","received_events_url":"https://api.github.com/users/daviddenton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-12-12T15:46:30Z","updated_at":"2017-12-12T15:47:28Z","closed_at":"2017-12-12T15:47:28Z","author_association":"COLLABORATOR","body":"The ServerFilter.RequestTracing should copy the existing (or new) traces onto the request and NOT assign a new spanId/parentSpanId combo. Currently the modification is done in the Server and not done during the ClientFilters.RequestTracing, which means that outgoing requests all receive the same span/parentSpan combo. Change the update to happen in the ClientFilter instead which will assign a new combo to each outgoing request.\r\n\r\n<!-- Love http4k? Please consider supporting our collective:\r\n👉  https://opencollective.com/http4k/donate -->\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/68","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/68/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/68/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/68/events","html_url":"https://github.com/http4k/http4k/issues/68","id":278172866,"number":68,"title":"Misleading argument name \"request\" because the function is also used for responses.","user":{"login":"dkandalov","id":28375,"avatar_url":"https://avatars0.githubusercontent.com/u/28375?v=4","gravatar_id":"","url":"https://api.github.com/users/dkandalov","html_url":"https://github.com/dkandalov","followers_url":"https://api.github.com/users/dkandalov/followers","following_url":"https://api.github.com/users/dkandalov/following{/other_user}","gists_url":"https://api.github.com/users/dkandalov/gists{/gist_id}","starred_url":"https://api.github.com/users/dkandalov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkandalov/subscriptions","organizations_url":"https://api.github.com/users/dkandalov/orgs","repos_url":"https://api.github.com/users/dkandalov/repos","events_url":"https://api.github.com/users/dkandalov/events{/privacy}","received_events_url":"https://api.github.com/users/dkandalov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-11-30T15:57:51Z","updated_at":"2017-11-30T16:16:09Z","closed_at":"2017-11-30T16:16:09Z","author_association":"CONTRIBUTOR","body":"https://github.com/http4k/http4k/blob/2772e2085037f358e80d786f731d1565b0e915cd/http4k-core/src/main/kotlin/org/http4k/core/parser.kt#L21","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/65","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/65/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/65/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/65/events","html_url":"https://github.com/http4k/http4k/issues/65","id":276247879,"number":65,"title":"Prometheus Monitoring","user":{"login":"tobad357","id":608607,"avatar_url":"https://avatars3.githubusercontent.com/u/608607?v=4","gravatar_id":"","url":"https://api.github.com/users/tobad357","html_url":"https://github.com/tobad357","followers_url":"https://api.github.com/users/tobad357/followers","following_url":"https://api.github.com/users/tobad357/following{/other_user}","gists_url":"https://api.github.com/users/tobad357/gists{/gist_id}","starred_url":"https://api.github.com/users/tobad357/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tobad357/subscriptions","organizations_url":"https://api.github.com/users/tobad357/orgs","repos_url":"https://api.github.com/users/tobad357/repos","events_url":"https://api.github.com/users/tobad357/events{/privacy}","received_events_url":"https://api.github.com/users/tobad357/received_events","type":"User","site_admin":false},"labels":[{"id":758868625,"url":"https://api.github.com/repos/http4k/http4k/labels/feature%20request","name":"feature request","color":"f742a3","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-11-23T01:47:58Z","updated_at":"2018-01-17T10:35:33Z","closed_at":"2018-01-17T10:33:00Z","author_association":"NONE","body":"Is there any plans to develop a Prometheus module\r\nthat would expose relevant statistics automatically?\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/63","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/63/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/63/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/63/events","html_url":"https://github.com/http4k/http4k/issues/63","id":274535133,"number":63,"title":"Apache Client does not properly handle Connect Timeout","user":{"login":"daviddenton","id":1679649,"avatar_url":"https://avatars3.githubusercontent.com/u/1679649?v=4","gravatar_id":"","url
22d3
":"https://api.github.com/users/daviddenton","html_url":"https://github.com/daviddenton","followers_url":"https://api.github.com/users/daviddenton/followers","following_url":"https://api.github.com/users/daviddenton/following{/other_user}","gists_url":"https://api.github.com/users/daviddenton/gists{/gist_id}","starred_url":"https://api.github.com/users/daviddenton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daviddenton/subscriptions","organizations_url":"https://api.github.com/users/daviddenton/orgs","repos_url":"https://api.github.com/users/daviddenton/repos","events_url":"https://api.github.com/users/daviddenton/events{/privacy}","received_events_url":"https://api.github.com/users/daviddenton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-11-16T14:29:32Z","updated_at":"2017-11-16T14:33:28Z","closed_at":"2017-11-16T14:33:28Z","author_association":"COLLABORATOR","body":"As is consistent with other timeout scenarios, this should return a GATEWAY_TIMEOUT status response\r\n\r\n<!-- Love http4k? Please consider supporting our collective:\r\n👉  https://opencollective.com/http4k/donate -->\r\n","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/62","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/62/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/62/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/62/events","html_url":"https://github.com/http4k/http4k/issues/62","id":272820220,"number":62,"title":"Publish 2.37.0","user":{"login":"loganlinn","id":207988,"avatar_url":"https://avatars0.githubusercontent.com/u/207988?v=4","gravatar_id":"","url":"https://api.github.com/users/loganlinn","html_url":"https://github.com/loganlinn","followers_url":"https://api.github.com/users/loganlinn/followers","following_url":"https://api.github.com/users/loganlinn/following{/other_user}","gists_url":"https://api.github.com/users/loganlinn/gists{/gist_id}","starred_url":"https://api.github.com/users/loganlinn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loganlinn/subscriptions","organizations_url":"https://api.github.com/users/loganlinn/orgs","repos_url":"https://api.github.com/users/loganlinn/repos","events_url":"https://api.github.com/users/loganlinn/events{/privacy}","received_events_url":"https://api.github.com/users/loganlinn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-11-10T05:01:04Z","updated_at":"2017-11-10T10:07:53Z","closed_at":"2017-11-10T10:07:53Z","author_association":"NONE","body":"Documentation refers to version 2.37.0, but that doesn't appear to be available on Maven Central","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/60","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/60/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/60/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/60/events","html_url":"https://github.com/http4k/http4k/issues/60","id":272278857,"number":60,"title":"Don't restrict Undertow server to localhost","user":{"login":"michaelhixson","id":297150,"avatar_url":"https://avatars3.githubusercontent.com/u/297150?v=4","gravatar_id":"","url":"https://api.github.com/users/michaelhixson","html_url":"https://github.com/michaelhixson","followers_url":"https://api.github.com/users/michaelhixson/followers","following_url":"https://api.github.com/users/michaelhixson/following{/other_user}","gists_url":"https://api.github.com/users/michaelhixson/gists{/gist_id}","starred_url":"https://api.github.com/users/michaelhixson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/michaelhixson/subscriptions","organizations_url":"https://api.github.com/users/michaelhixson/orgs","repos_url":"https://api.github.com/users/michaelhixson/repos","events_url":"https://api.github.com/users/michaelhixson/events{/privacy}","received_events_url":"https://api.github.com/users/michaelhixson/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-11-08T17:14:55Z","updated_at":"2017-11-08T17:27:35Z","closed_at":"2017-11-08T17:27:35Z","author_association":"NONE","body":"The use of `\"localhost\"` here means the server won't accept requests from other machines:  https://github.com/http4k/http4k/blob/d2e2b84f4acc859ef55fc6d3d731f64431b486e8/http4k-server-undertow/src/main/kotlin/org/http4k/server/Undertow.kt#L43-L45\r\n\r\nThis causes the `http4k-undertow` test in the TechEmpower Framework Benchmarks to fail, as the load-generating client is on a different machine than the application server.\r\n\r\nUsing `\"0.0.0.0\"` or `\"::\"` instead of `\"localhost\"` should fix that particular issue.","score":1.0},{"url":"https://api.github.com/repos/http4k/http4k/issues/57","repository_url":"https://api.github.com/repos/http4k/http4k","labels_url":"https://api.github.com/repos/http4k/http4k/issues/57/labels{/name}","comments_url":"https://api.github.com/repos/http4k/http4k/issues/57/comments","events_url":"https://api.github.com/repos/http4k/http4k/issues/57/events","html_url":"https://github.com/http4k/http4k/issues/57","id":267133280,"number":57,"title":"Unexpected behaviour combining `path bind staticPath` and `path bind GET to staticPath` routes","user":{"login":"dkandalov","id":28375,"avatar_url":"https://avatars0.githubusercontent.com/u/28375?v=4","gravatar_id":"","url":"https://api.github.com/users/dkandalov","html_url":"https://github.com/dkandalov","followers_url":"https://api.github.com/users/dkandalov/followers","following_url":"https://api.github.com/users/dkandalov/following{/other_user}","gists_url":"https://api.github.com/users/dkandalov/gists{/gist_id}","starred_url":"https://api.github.com/users/dkandalov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkandalov/subscriptions","organizations_url":"https://api.github.com/users/dkandalov/orgs","repos_url":"https://api.github.com/users/dkandalov/repos","events_url":"https://api.github.com/users/dkandalov/events{/privacy}","received_events_url":"https://api.github.com/users/dkandalov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-10-20T10:32:53Z","updated_at":"2017-10-21T13:52:20Z","closed_at":"2017-10-21T13:51:13Z","author_association":"CONTRIBUTOR","body":"E.g. the following test should have no 404 results given that all files exist:\r\n```\r\nclass ATest {\r\n   private val resourceLoader = Directory(“/some/local/directory/“)\r\n\r\n   @Test\r\n   fun `a`() {\r\n       val routes = routes(\r\n           “/path1” bind static(resourceLoader),\r\n           “/path2\" bind static(resourceLoader)\r\n       )\r\n       val response1 = routes(Request(GET, “/path1/index.html”))\r\n       val response2 = routes(Request(GET, “/path2/index.html”))\r\n       assertThat(“${response1.status.code} ${response2.status.code}“, equalTo(“200 200”))\r\n   }\r\n\r\n   @Test\r\n   fun `b`() {\r\n       val routes = routes(\r\n           “/path1\" bind GET to static(resourceLoader),\r\n           “/path2” bind static(resourceLoader)\r\n       )\r\n       val response1 = routes(Request(GET, “/path1/index.html”))\r\n       val response2 = routes(Request(GET, “/path2/index.html”))\r\n       assertThat(“${response1.status.code} ${response2.status.code}“, equalTo(“200 404”))\r\n   }\r\n\r\n   @Test\r\n   fun `c`() {\r\n       val routes = routes(\r\n           “/path1\" bind static(resourceLoader),\r\n           “/path2” bind GET to static(resourceLoader)\r\n       )\r\n       val response1 = routes(Request(GET, “/path1/index.html”))\r\n       val response2 = routes(Request(GET, “/path2/index.html”))\r\n       assertThat(“${response1.status.code} ${response2.status.code}“, equalTo(“404 200”))\r\n   }\r\n\r\n   @Test\r\n   fun `d`() {\r\n       val routes = routes(\r\n           “/path1\" bind GET to static(resourceLoader),\r\n           “/path2” bind GET to static(resourceLoader)\r\n       )\r\n       val response1 = routes(Request(GET, “/path1/index.html”))\r\n       val response2 = routes(Request(GET, “/path2/index.html”))\r\n       assertThat(“${response1.status.code} ${response2.status.code}“, equalTo(“404 404”))\r\n   }\r\n}\r\n```","score":1.0}]}
0

