HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 09 Jun 2018 08:10:02 GMT
Link: <https://api.github.com/search/issues?q=repo%3Aipkn%2Fcrow+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Aipkn%2Fcrow+type%3Aissue+state%3Aclosed&page=3>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CCFB:57C3:1EE394B:44F9334:5B1B8B59
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 20
X-Ratelimit-Reset: 1528531855
X-Runtime-Rack: 0.391063
X-Xss-Protection: 1; mode=block

8000
{"total_count":79,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/ipkn/crow/issues/300","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/300/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/300/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/300/events","html_url":"https://github.com/ipkn/crow/issues/300","id":311204309,"node_id":"MDU6SXNzdWUzMTEyMDQzMDk=","number":300,"title":"can i use async response using crow internal io_service like nodejs express?","user":{"login":"legokichi","id":2429307,"node_id":"MDQ6VXNlcjI0MjkzMDc=","avatar_url":"https://avatars0.githubusercontent.com/u/2429307?v=4","gravatar_id":"","url":"https://api.github.com/users/legokichi","html_url":"https://github.com/legokichi","followers_url":"https://api.github.com/users/legokichi/followers","following_url":"https://api.github.com/users/legokichi/following{/other_user}","gists_url":"https://api.github.com/users/legokichi/gists{/gist_id}","starred_url":"https://api.github.com/users/legokichi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/legokichi/subscriptions","organizations_url":"https://api.github.com/users/legokichi/orgs","repos_url":"https://api.github.com/users/legokichi/repos","events_url":"https://api.github.com/users/legokichi/events{/privacy}","received_events_url":"https://api.github.com/users/legokichi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-04T12:14:26Z","updated_at":"2018-04-05T12:40:14Z","closed_at":"2018-04-05T12:40:14Z","author_association":"NONE","body":"e.g.\r\n\r\n```cpp\r\nCROW_ROUTE(app, \"/foo\")\r\n([&app](const crow::request& req, crow::response& res){\r\n    auto ios = app->server_.get_io_service();\r\n    auto timer = boost::asio::deadline_timer{*ios};\r\n    timer.expires_from_now(boost::posix_time::seconds(1));\r\n    timer.async_wait([&res](auto ec){\r\n        res.write(\"hello\");\r\n        res.end();\r\n    });\r\n});\r\n```","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/299","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/299/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/299/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/299/events","html_url":"https://github.com/ipkn/crow/issues/299","id":310469385,"node_id":"MDU6SXNzdWUzMTA0NjkzODU=","number":299,"title":"Fetch non-int (string) url resource-id","user":{"login":"parthasarathyprsd","id":21074134,"node_id":"MDQ6VXNlcjIxMDc0MTM0","avatar_url":"https://avatars2.githubusercontent.com/u/21074134?v=4","gravatar_id":"","url":"https://api.github.com/users/parthasarathyprsd","html_url":"https://github.com/parthasarathyprsd","followers_url":"https://api.github.com/users/parthasarathyprsd/followers","following_url":"https://api.github.com/users/parthasarathyprsd/following{/other_user}","gists_url":"https://api.github.com/users/parthasarathyprsd/gists{/gist_id}","starred_url":"https://api.github.com/users/parthasarathyprsd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/parthasarathyprsd/subscriptions","organizations_url":"https://api.github.com/users/parthasarathyprsd/orgs","repos_url":"https://api.github.com/users/parthasarathyprsd/repos","events_url":"https://api.github.com/users/parthasarathyprsd/events{/privacy}","received_events_url":"https://api.github.com/users/parthasarathyprsd/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-04-02T12:09:36Z","updated_at":"2018-04-24T16:23:21Z","closed_at":"2018-04-24T16:23:21Z","author_association":"NONE","body":"How to get a non-int resource-id. I cannot add a route\r\n``CROW_ROUTE(app, \"/uid/<std::string>\")`` or ``CROW_ROUTE(app, \"/uid/<char*>\")`` as it ( correctly )  fails to compile. The [examples](https://github.com/ipkn/crow/tree/master/examples) donot have such a case. I have tried \r\n\r\n    int main() {\r\n        crow::SimpleApp app;\r\n        CROW_ROUTE(app, \"/uid/*\").methods(\"GET\"_method)\r\n        ([](const crow::request& req){\r\n            return \"hello\";\r\n            });\r\n\r\n        CROW_ROUTE(app, \"/uid/<int>\").methods(\"GET\"_method)\r\n        ([](const crow::request& req, int id){\r\n            return std::to_string(id);\r\n            });\r\n        app.port(8888).run();\r\n    }\r\n\r\nBut neither of them ( though correctly ) intercept ``GET /uid/uid_123 HTTP/1.1`` ( with resource being a string ``\"uid_123\"`` )\r\n\r\nFor below python code, I want to acheive it in c++ crow library\r\n\r\n    from flask import Flask\r\n    app = Flask(__name__)\r\n    @app.route(\"/uid/<path:path>\")\r\n    def hello1(path):\r\n        print (\"it is path is \", path)\r\n        return \"user id is -\" + path\r\n\r\n    if __name__ == \"__main__\":\r\n        app.run(host=\"0.0.0.0\", port=8888)\r\n\r\n Is there any workaround for the above?","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/293","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/293/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/293/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/293/events","html_url":"https://github.com/ipkn/crow/issues/293","id":301819799,"node_id":"MDU6SXNzdWUzMDE4MTk3OTk=","number":293,"title":"pointer reference dies..","user":{"login":"CraigglesO","id":5249140,"node_id":"MDQ6VXNlcjUyNDkxNDA=","avatar_url":"https://avatars1.githubusercontent.com/u/5249140?v=4","gravatar_id":"","url":"https://api.github.com/users/CraigglesO","html_url":"https://github.com/CraigglesO","followers_url":"https://api.github.com/users/CraigglesO/followers","following_url":"https://api.github.com/users/CraigglesO/following{/other_user}","gists_url":"https://api.github.com/users/CraigglesO/gists{/gist_id}","starred_url":"https://api.github.com/users/CraigglesO/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CraigglesO/subscriptions","organizations_url":"https://api.github.com/users/CraigglesO/orgs","repos_url":"https://api.github.com/users/CraigglesO/repos","events_url":"https://api.github.com/users/CraigglesO/events{/privacy}","received_events_url":"https://api.github.com/users/CraigglesO/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-03-02T16:13:39Z","updated_at":"2018-03-17T11:59:59Z","closed_at":"2018-03-17T11:59:59Z","author_association":"NONE","body":"I couldn't find an answer in your other issues so here it goes:\r\n\r\n```\r\n#include \"crow_all.h\"\r\n#include \"server.h\"\r\n\r\nclass Server {\r\n  public:\r\n    Server(std::string input_folder) {\r\n      // acquire the protobuf file\r\n      rtree = getRtree(input_folder);\r\n\r\n      // reverseGeocode\r\n      CROW_ROUTE(app, \"/reverse\")\r\n      .methods(\"POST\"_method)\r\n      ([this](const crow::request& req) {\r\n        auto coord = crow::json::load(req.body);\r\n        if (!coord)\r\n          return crow::response(400);\r\n        double lon = coord[\"lon\"].d();\r\n        double lat = coord[\"lat\"].d();\r\n        std::string res = rtree->nearestSingle(lon, lat, 180);\r\n        std::ostringstream os;\r\n        os << res;\r\n        return crow::response{os.str()};\r\n      });\r\n    }\r\n    // create server & rtree\r\n    crow::SimpleApp     app;\r\n    Rtree<std::string>* rtree;\r\n};\r\n\r\nint main(int argc, char* argv[]) {\r\n  std::string input_folder;\r\n  if (argc != 2) {\r\n    input_folder = \"./\";\r\n  }\r\n\r\n  Server server(input_folder);\r\n\r\n  server.app.port(18080).multithreaded().run();\r\n}\r\n\r\n```\r\n\r\ngives me the proper response the first time, but the `this` pointer does after one use!\r\n\r\nSorry for my ignorance, can you explain a work around?\r\n\r\nThanks,\r\nCraig.","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/287","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/287/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/287/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/287/events","html_url":"https://github.com/ipkn/crow/issues/287","id":299105592,"node_id":"MDU6SXNzdWUyOTkxMDU1OTI=","number":287,"title":"Troubles while compiling on linux","user":{"login":"orzel1244","id":8932578,"node_id":"MDQ6VXNlcjg5MzI1Nzg=","avatar_url":"https://avatars2.githubusercontent.com/u/8932578?v=4","gravatar_id":"","url":"https://api.github.com/users/orzel1244","html_url":"https://github.com/orzel1244","followers_url":"https://api.github.com/users/orzel1244/followers","following_url":"https://api.github.com/users/orzel1244/following{/other_user}","gists_url":"https://api.github.com/users/orzel1244/gists{/gist_id}","starred_url":"https://api.github.com/users/orzel1244/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/orzel1244/subscriptions","organizations_url":"https://api.github.com/users/orzel1244/orgs","repos_url":"https://api.github.com/users/orzel1244/repos","events_url":"https://api.github.com/users/orzel1244/events{/privacy}","received_events_url":"https://api.github.com/users/orzel1244/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-02-21T19:53:14Z","updated_at":"2018-02-22T18:26:51Z","closed_at":"2018-02-22T18:26:32Z","author_association":"NONE","body":"Hello, I tried to compile the lib on my ubuntu 17.04 by following step from readme, I got some errors:\r\nAfter \"cmake ..\" https://pastebin.com/uBxT278T\r\nCMakeOutput - https://pastebin.com/5dtgPmbG\r\nCMakeError - https://pastebin.com/5dza5CV8\r\n\r\nCmake version: 3.10.2\r\n\r\nI'm sorry because some parts of logs may be in Polish, I hope I'll get help, it could be great if you would provide precompiled libs","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/276","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/276/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/276/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/276/events","html_url":"https://github.com/ipkn/crow/issues/276","id":286038503,"node_id":"MDU6SXNzdWUyODYwMzg1MDM=","number":276,"title":"Sorry for a noob question","user":{"login":"pgamaster","id":15028396,"node_id":"MDQ6VXNlcjE1MDI4Mzk2","avatar_url":"https://avatars3.githubusercontent.com/u/15028396?v=4","gravatar_id":"","url":"https://api.github.com/users/pgamaster","html_url":"https://github.com/pgamaster","followers_url":"https://api.github.com/users/pgamaster/followers","following_url":"https://api.github.com/users/pgamaster/following{/other_user}","gists_url":"https://api.github.com/users/pgamaster/gists{/gist_id}","starred_url":"https://api.github.com/users/pgamaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgamaster/subscriptions","organizations_url":"https://api.github.com/users/pgamaster/orgs","repos_url":"https://api.github.com/users/pgamaster/repos","events_url":"https://api.github.com/users/pgamaster/events{/privacy}","received_events_url":"https://api.github.com/users/pgamaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-01-04T16:22:52Z","updated_at":"2018-02-21T14:44:56Z","closed_at":"2018-02-21T14:44:56Z","author_association":"NONE","body":"g++  -std=c++11 main.cpp -o main\r\nIn file included from crow.h:7:0,\r\n                 from main.cpp:1:\r\ncrow/socket_adaptors.h:6:27: fatal error: crow/settings.h: No such file or directory\r\n #include \"crow/settings.h\"\r\n                           ^\r\ncompilation terminated.\r\n\r\n-------\r\nJust wanted to test it's speed\r\n\r\nHow can I properly compile this?\r\n\r\n\r\n  ","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/271","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/271/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/271/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/271/events","html_url":"https://github.com/ipkn/crow/issues/271","id":283214763,"node_id":"MDU6SXNzdWUyODMyMTQ3NjM=","number":271,"title":"Null Pointer Dereference from processing Query String","user":{"login":"xsscx","id":10790582,"node_id":"MDQ6VXNlcjEwNzkwNTgy","avatar_url":"https://avatars3.githubusercontent.com/u/10790582?v=4","gravatar_id":"","url":"https://api.github.com/users/xsscx","html_url":"https://github.com/xsscx","followers_url":"https://api.github.com/users/xsscx/followers","following_url":"https://api.github.com/users/xsscx/following{/other_user}","gists_url":"https://api.github.com/users/xsscx/gists{/gist_id}","starred_url":"https://api.github.com/users/xsscx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xsscx/subscriptions","organizations_url":"https://api.github.com/users/xsscx/orgs","repos_url":"https://api.github.com/users/xsscx/repos","events_url":"https://api.github.com/users/xsscx/events{/privacy}","received_events_url":"https://api.github.com/users/xsscx/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-12-19T12:40:42Z","updated_at":"2017-12-20T03:25:15Z","closed_at":"2017-12-20T03:25:14Z","author_association":"NONE","body":"Hello and Good Day-\r\n\r\nThe Code for xmrblocks (https://github.com/moneroexamples/onion-monero-blockchain-explorer) uses crow as its HTTP Server. \r\n\r\nI've found a Null Pointer Dereference, which looks to be hitting in crow. It would be helpful to have an ASAN Build Option in crow to help further identify the offending line of code.\r\n\r\nThe Null Pointer issue arises due to a Malicious Query String being processed...  eg: localhost/?value=malicious_poc\r\n\r\nI prefer not to dump PoC Code into a Public Ticket, but the Bug is Trivial for anyone with a security background to identify and confirm.\r\n\r\n=========================================\r\n\r\nDarwin server.local 17.3.0 Darwin Kernel Version 17.3.0: Thu Nov  9 18:09:22 PST 2017; root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n\r\nlldb\r\n\r\ntarget create --no-dependents xmrblocks\r\n\r\nprocess launch --environment MallocStackLogging=1 --environment MallocScribble=1 --environment MALLOC_PERMIT_INSANE_REQUESTS=22\r\n\r\nProcess 95780 stopped\r\n* thread #2, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\r\n    frame #0: 0x00007fff7ed3d432 libsystem_c.dylib`strlen + 18\r\nlibsystem_c.dylib`strlen:\r\n->  0x7fff7ed3d432 <+18>: pcmpeqb (%rdi), %xmm0\r\n    0x7fff7ed3d436 <+22>: pmovmskb %xmm0, %esi\r\n    0x7fff7ed3d43a <+26>: andq   $0xf, %rcx\r\n    0x7fff7ed3d43e <+30>: orq    $-0x1, %rax\r\nTarget 0: (xmrblocks) stopped.\r\n(lldb) bt\r\n* thread #2, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\r\n  * frame #0: 0x00007fff7ed3d432 libsystem_c.dylib`strlen + 18\r\n    frame #1: 0x0000000100046145 xmrblocks`std::__1::char_traits<char>::length(char const*) + 21\r\n    frame #2: 0x0000000100247677 xmrblocks`main::$_16::operator()(crow::request const&) const + 375\r\n    frame #3: 0x0000000100247452 xmrblocks`std::__1::enable_if<(!(black_magic::CallHelper<main::$_16, crow::black_magic::S<> >::value)) && (black_magic::CallHelper<main::$_16, crow::black_magic::S<crow::request> >::value), void>::type crow::TaggedRule<>::operator()<main::$_16>(main::$_16&&)::'lambda'(crow::request const&, crow::response&)::operator()(crow::request const&, crow::response&) const + 82\r\n    frame #4: 0x00000001002473ed xmrblocks`void std::__1::__invoke_void_return_wrapper<void>::__call<std::__1::enable_if<(!(black_magic::CallHelper<main::$_16, crow::black_magic::S<> >::value)) && (black_magic::CallHelper<main::$_16, crow::black_magic::S<crow::request> >::value), void>::type crow::TaggedRule<>::operator()<main::$_16>(main::$_16&&)::'lambda'(crow::request const&, crow::response&)&, crow::request const&, crow::response&>(std::__1::enable_if<(!(black_magic::CallHelper<main::$_16, crow::black_magic::S<> >::value)) && (black_magic::CallHelper<main::$_16, crow::black_magic::S<crow::request> >::value), void>::type crow::TaggedRule<>::operator()<main::$_16>(main::$_16&&)::'lambda'(crow::request const&, crow::response&)&&&, crow::request const&&&, crow::response&&&) + 109\r\n    frame #5: 0x00000001002472c9 xmrblocks`std::__1::__function::__func<std::__1::enable_if<(!(black_magic::CallHelper<main::$_16, crow::black_magic::S<> >::value)) && (black_magic::CallHelper<main::$_16, crow::black_magic::S<crow::request> >::value), void>::type crow::TaggedRule<>::operator()<main::$_16>(main::$_16&&)::'lambda'(crow::request const&, crow::response&), std::__1::allocator<std::__1::enable_if<(!(black_magic::CallHelper<main::$_16, crow::black_magic::S<> >::value)) && (black_magic::CallHelper<main::$_16, crow::black_magic::S<crow::request> >::value), void>::type crow::TaggedRule<>::operator()<main::$_16>(main::$_16&&)::'lambda'(crow::request const&, crow::response&)>, void (crow::request const&, crow::response&)>::operator()(crow::request const&, crow::response&) + 73\r\n    frame #6: 0x00000001000c61d2 xmrblocks`std::__1::function<void (crow::request const&, crow::response&)>::operator()(crow::request const&, crow::response&) const + 178\r\n    frame #7: 0x00000001000c6110 xmrblocks`crow::detail::routing_handler_call_helper::call<crow::detail::routing_handler_call_helper::call_params<std::__1::function<void (crow::request const&, crow::response&)> >, 0, 0, 0, 0, crow::black_magic::S<>, crow::black_magic::S<> >::operator()(crow::detail::routing_handler_call_helper::call_params<std::__1::function<void (crow::request const&, crow::response&)> >) + 32\r\n    frame #8: 0x00000001000c5a9e xmrblocks`crow::TaggedRule<>::handle(crow::request const&, crow::response&, crow::routing_params const&) + 110\r\n    frame #9: 0x0000000100318a1b xmrblocks`crow::Router::handle(crow::request const&, crow::response&) + 6699\r\n    frame #10: 0x00000001002fa374 xmrblocks`crow::Crow<>::handle(crow::request const&, crow::response&) + 52\r\n    frame #11: 0x0000000100334d51 xmrblocks`crow::Connection<crow::SocketAdaptor, crow::Crow<> >::handle() + 5105\r\n    frame #12: 0x000000010033394c xmrblocks`crow::HTTPParser<crow::Connection<crow::SocketAdaptor, crow::Crow<> > >::process_message() + 28\r\n    frame #13: 0x0000000100330c17 xmrblocks`crow::HTTPParser<crow::Connection<crow::SocketAdaptor, crow::Crow<> > >::on_message_complete(http_parser*) + 2071\r\n    frame #14: 0x00000001002eb562 xmrblocks`http_parser_execute + 15986\r\n    frame #15: 0x000000010032f461 xmrblocks`crow::HTTPParser<crow::Connection<crow::SocketAdaptor, crow::Crow<> > >::feed(char const*, int) + 49\r\n    frame #16: 0x000000010032f1cb xmrblocks`crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long)::operator()(boost::system::error_code const&, unsigned long) const + 123\r\n    frame #17: 0x000000010032f143 xmrblocks`boost::asio::detail::binder2<crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long), boost::system::error_code, unsigned long>::operator()() + 35\r\n    frame #18: 0x000000010032f115 xmrblocks`void boost::asio::asio_handler_invoke<boost::asio::detail::binder2<crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long), boost::system::error_code, unsigned long> >(boost::asio::detail::binder2<crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long), boost::system::error_code, unsigned long>&, ...) + 21\r\n    frame #19: 0x000000010032f067 xmrblocks`void boost_asio_handler_invoke_helpers::invoke<boost::asio::detail::binder2<crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long), boost::system::error_code, unsigned long>, crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long)>(boost::asio::detail::binder2<crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long), boost::system::error_code, unsigned long>&, crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long)&) + 39\r\n    frame #20: 0x000000010032ef34 xmrblocks`boost::asio::detail::reactive_socket_recv_op<boost::asio::mutable_buffers_1, crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long)>::do_complete(boost::asio::detail::task_io_service*, boost::asio::detail::task_io_service_operation*, boost::system::error_code const&, unsigned long) + 196\r\n    frame #21: 0x00000001002d0dd7 xmrblocks`boost::asio::detail::task_io_service_operation::complete(boost::asio::detail::task_io_service&, boost::system::error_code const&, unsigned long) + 71\r\n    frame #22: 0x00000001002d0334 xmrblocks`boost::asio::detail::task_io_service::do_run_one(boost::asio::detail::scoped_lock<boost::asio::detail::posix_mutex>&, boost::asio::detail::task_io_service_thread_info&, boost::system::error_code const&) + 500\r\n    frame #23: 0x00000001002cff74 xmrblocks`boost::asio::detail::task_io_service::run(boost::system::error_code&) + 372\r\n    frame #24: 0x00000001002c28f1 xmrblocks`boost::asio::io_service::run() + 49\r\n    frame #25: 0x000000010032677c xmrblocks`crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()::operator()() const + 1452\r\n    frame #26: 0x00000001003261bd xmrblocks`void std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()>::__execute<>(std::__1::__tuple_indices<>) + 61\r\n    frame #27: 0x0000000100326175 xmrblocks`std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()>::operator()() + 21\r\n    frame #28: 0x00000001003260c5 xmrblocks`std::__1::__async_assoc_state<void, std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()> >::__execute() + 37\r\n    frame #29: 0x000000010032a62f xmrblocks`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (std::__1::__async_assoc_state<void, std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()> >::*)(), std::__1::__async_assoc_state<void, std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()> >*> >(void*) + 687\r\n    frame #30: 0x00007fff7ef786c1 libsystem_pthread.dylib`_pthread_body + 340\r\n    frame #31: 0x00007fff7ef7856d libsystem_pthread.dylib`_pthread_start + 377\r\n    frame #32: 0x00007fff7ef77c5d libsystem_pthread.dylib`thread_start + 13\r\n\r\n\r\n\r\n\r\n\r\n(lldb) register read\r\nGeneral Purpose Registers:\r\n       rax = 0x0000000000000000\r\n       rbx = 0x0000001062945000\r\n       rcx = 0x0000000000000000\r\n       rdx = 0x0000000000000000\r\n       rdi = 0x0000000000000000\r\n       rsi = 0x00000010a68c7f68\r\n       rbp = 0x00000010629415b0\r\n       rsp = 0x00000010629415b0\r\n        r8 = 0x0000000000000002\r\n        r9 = 0x000000010074379f  \"value\"\r\n       r10 = 0x0000000000000000\r\n       r11 = 0x0000000f621fdea2\r\n       r12 = 0x000000010032a380  xmrblocks`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (std::__1::__async_assoc_state<void, std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()> >::*)(), std::__1::__async_assoc_state<void, std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()> >*> >(void*)\r\n       r13 = 0x0000000000000000\r\n       r14 = 0x0000001062945000\r\n       r15 = 0x0000000000000000\r\n       rip = 0x00007fff7ed3d432  libsystem_c.dylib`strlen + 18\r\n    rflags = 0x0000000000010246\r\n        cs = 0x000000000000002b\r\n        fs = 0x0000000000000000\r\n        gs = 0x0000000000000000\r\n\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/270","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/270/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/270/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/270/events","html_url":"https://github.com/ipkn/crow/issues/270","id":281737605,"node_id":"MDU6SXNzdWUyODE3Mzc2MDU=","number":270,"title":"crow does not compile with latest Visual C++ Compiler","user":{"login":"maxbrueckl","id":3920477,"node_id":"MDQ6VXNlcjM5MjA0Nzc=","avatar_url":"https://avatars1.githubusercontent.com/u/3920477?v=4","gravatar_id":"","url":"https://api.github.com/users/maxbrueckl","html_url":"https://github.com/maxbrueckl","followers_url":"https://api.github.com/users/maxbrueckl/followers","following_url":"https://api.github.com/users/maxbrueckl/following{/other_user}","gists_url":"https://api.github.com/users/maxbrueckl/gists{/gist_id}","starred_url":"https://api.github.com/users/maxbrueckl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maxbrueckl/subscriptions","organizations_url":"https://api.github.com/users/maxbrueckl/orgs","repos_url":"https://api.github.com/users/maxbrueckl/repos","events_url":"https://api.github.com/users/maxbrueckl/events{/privacy}","received_events_url":"https://api.github.com/users/maxbrueckl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-12-13T12:48:03Z","updated_at":"2018-03-16T06:43:21Z","closed_at":"2018-03-16T06:43:20Z","author_association":"NONE","body":"After latest Visual Studio update (15.5.1), crow does not compile for me anymore.\r\n\r\nThe Visual C++ compiler (14.12.25827) crashes hard at\r\nhttps://github.com/ipkn/crow/blob/7f3f72441c242836d00ab2109a83baef89c08aaa/include/crow/routing.h#L150\r\n\r\nIt looks like the compiler cannot handle the amount of black magic that is involved here :smile: \r\nI assume, this is more likely a compiler bug than a bug in crow.","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/264","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/264/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/264/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/264/events","html_url":"https://github.com/ipkn/crow/issues/264","id":275450000,"node_id":"MDU6SXNzdWUyNzU0NTAwMDA=","number":264,"title":"kept receiving a 404 while trying to access a basic crow server from a js fetch request","user":{"login":"percyteng","id":10775435,"node_id":"MDQ6VXNlcjEwNzc1NDM1","avatar_url":"https://avatars2.githubusercontent.com/u/10775435?v=4","gravatar_id":"","url":"https://api.github.com/users/percyteng","html_url":"https://github.com/percyteng","followers_url":"https://api.github.com/users/percyteng/followers","following_url":"https://api.github.com/users/percyteng/following{/other_user}","gists_url":"https://api.github.com/users/percyteng/gists{/gist_id}","starred_url":"https://api.github.com/users/percyteng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/percyteng/subscriptions","organizations_url":"https://api.github.com/users/percyteng/orgs","repos_url":"https://api.github.com/users/percyteng/repos","events_url":"https://api.github.com/users/percyteng/events{/privacy}","received_events_url":"https://api.github.com/users/percyteng/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2017-11-20T18:14:05Z","updated_at":"2017-11-20T20:10:26Z","closed_at":"2017-11-20T19:48:37Z","author_association":"NONE","body":"Here is my basic crow server\r\n\r\ncrow::SimpleApp app;\r\n\r\n    CROW_ROUTE(app, \"/\")\r\n    .methods(\"GET\"_method)\r\n\t([](){\r\n    \t\tcrow::json::wvalue x;\r\n    \t    x[\"message\"] = \"Hello, World!\";\r\n    \t    return x;\r\n    });\r\n    CROW_ROUTE(app, \"/api\")([](){\r\n\t\tcrow::json::wvalue x;\r\n\t\tx[\"message\"] = \"Hello, World!\";\r\n\t\treturn x;\r\n\t});\r\n\r\n    app.port(4500).multithreaded().run();\r\n\r\nI was trying to send a standard fetch request from Javascript, however, I kept receiving a 404 request from it.\r\nWhen I tried to access the crow server on both browser and postman, they work! \r\nSo I am not sure if there is something wrong with my js fetch or just crow itself. Here is my fetch\r\n\r\nreturn fetch('http://localhost:4500', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        }\r\n      })\r\n      .then((response) => {\r\n        console.log(response)\r\n        if (response.status != 200){\r\n          console.log('errors')\r\n          return\r\n        }\r\n        else{\r\n          return response.json()\r\n        }\r\n      })\r\n      .then((responseJson)=>{\r\n        console.log(responseJson)\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/263","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/263/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/263/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/263/events","html_url":"https://github.com/ipkn/crow/issues/263","id":274043435,"node_id":"MDU6SXNzdWUyNzQwNDM0MzU=","number":263,"title":"Return json in response of apis ?","user":{"login":"Shravan40","id":1205111,"node_id":"MDQ6VXNlcjEyMDUxMTE=","avatar_url":"https://avatars3.githubusercontent.com/u/1205111?v=4","gravatar_id":"","url":"https://api.github.com/users/Shravan40","html_url":"https://github.com/Shravan40","followers_url":"https://api.github.com/users/Shravan40/followers","following_url":"https://api.github.com/users/Shravan40/following{/other_user}","gists_url":"https://api.github.com/users/Shravan40/gists{/gist_id}","starred_url":"https://api.github.com/users/Shravan40/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shravan40/subscriptions","organizations_url":"https://api.github.com/users/Shravan40/orgs","repos_url":"https://api.github.com/users/Shravan40/repos","events_url":"https://api.github.com/users/Shravan40/events{/privacy}","received_events_url":"https://api.github.com/users/Shravan40/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-11-15T05:56:41Z","updated_at":"2018-05-21T07:40:34Z","closed_at":"2018-05-21T07:40:34Z","author_association":"NONE","body":"I am using [nlohmann json library](https://github.com/nlohmann/json) in my crow project. Below is my sample POST method.\r\n```\r\n// Add two numbers\r\n    \r\n    CROW_ROUTE(app,\"/add\")\r\n            .methods(\"POST\"_method)\r\n    ([](const crow::request& req) {\r\n        auto x = json::parse(req.body);\r\n        if (x == nullptr)\r\n            return crow::response(400);\r\n        auto sum = x[\"a\"].get<long double>() + x[\"b\"].get<long double>();\r\n        bool status = true;\r\n        string message = \"It doesn't matter, right ?\";\r\n        json return_json = {\r\n            {\"status\", status},\r\n            {\"message\", message},\r\n            {\"sum\", sum},\r\n        };\r\n        return crow::response(return_json);\r\n    });\r\n```\r\n2
8000
nd last line of my code produces error because error: call of overloaded ‘response(json&)’ is ambiguous.\r\n\r\nWhen I replace it with `return crow::response(return_json.dump());` it works perfectly, because this converts the json to string type. I would like to know, how can I return the actual json in response of my apis.","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/257","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/257/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/257/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/257/events","html_url":"https://github.com/ipkn/crow/issues/257","id":267606884,"node_id":"MDU6SXNzdWUyNjc2MDY4ODQ=","number":257,"title":"should change #include \"crow/http_connection.h\" to #include \"http_connection.h\" in crow/*.h?","user":{"login":"aijciheng","id":5163614,"node_id":"MDQ6VXNlcjUxNjM2MTQ=","avatar_url":"https://avatars1.githubusercontent.com/u/5163614?v=4","gravatar_id":"","url":"https://api.github.com/users/aijciheng","html_url":"https://github.com/aijciheng","followers_url":"https://api.github.com/users/aijciheng/followers","following_url":"https://api.github.com/users/aijciheng/following{/other_user}","gists_url":"https://api.github.com/users/aijciheng/gists{/gist_id}","starred_url":"https://api.github.com/users/aijciheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aijciheng/subscriptions","organizations_url":"https://api.github.com/users/aijciheng/orgs","repos_url":"https://api.github.com/users/aijciheng/repos","events_url":"https://api.github.com/users/aijciheng/events{/privacy}","received_events_url":"https://api.github.com/users/aijciheng/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-10-23T09:53:35Z","updated_at":"2017-10-23T10:05:17Z","closed_at":"2017-10-23T10:05:17Z","author_association":"NONE","body":"your dir:\r\ncrow_dir/include/crow.h\r\ncrow_dir/include/crow/http_connection.h\r\n\r\nmy use:\r\ndeps:\r\ndeps/crow/ --link to--> crow_dir/include\r\ndeps/cppjieba/\r\n\r\nsrc:\r\nsrc/main.cpp\r\nmain.cpp:code\r\n#include \"crow/crow.h\"\r\ng++ -I deps/ ? and then can not compiled?","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/249","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/249/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/249/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/249/events","html_url":"https://github.com/ipkn/crow/issues/249","id":259219360,"node_id":"MDU6SXNzdWUyNTkyMTkzNjA=","number":249,"title":"Design document for Crow","user":{"login":"abhishekbsharma","id":6824871,"node_id":"MDQ6VXNlcjY4MjQ4NzE=","avatar_url":"https://avatars3.githubusercontent.com/u/6824871?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekbsharma","html_url":"https://github.com/abhishekbsharma","followers_url":"https://api.github.com/users/abhishekbsharma/followers","following_url":"https://api.github.com/users/abhishekbsharma/following{/other_user}","gists_url":"https://api.github.com/users/abhishekbsharma/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekbsharma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekbsharma/subscriptions","organizations_url":"https://api.github.com/users/abhishekbsharma/orgs","repos_url":"https://api.github.com/users/abhishekbsharma/repos","events_url":"https://api.github.com/users/abhishekbsharma/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekbsharma/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-09-20T16:08:06Z","updated_at":"2017-09-24T01:44:48Z","closed_at":"2017-09-24T01:44:48Z","author_association":"NONE","body":"@ipkn - I just recently started looking into and using crow. I think it is a really neat micro-framework that you have setup to develop web-services in C++. Although, I was looking a design document or some slide deck that describes the design at a high-level and how you have structure. Otherwise it is hard to navigate through the code. Just wondering if you have design document of such a nature in english. ","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/248","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/248/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/248/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/248/events","html_url":"https://github.com/ipkn/crow/issues/248","id":258877964,"node_id":"MDU6SXNzdWUyNTg4Nzc5NjQ=","number":248,"title":"How to manage session in Crow","user":{"login":"bnlambert","id":4788731,"node_id":"MDQ6VXNlcjQ3ODg3MzE=","avatar_url":"https://avatars1.githubusercontent.com/u/4788731?v=4","gravatar_id":"","url":"https://api.github.com/users/bnlambert","html_url":"https://github.com/bnlambert","followers_url":"https://api.github.com/users/bnlambert/followers","following_url":"https://api.github.com/users/bnlambert/following{/other_user}","gists_url":"https://api.github.com/users/bnlambert/gists{/gist_id}","starred_url":"https://api.github.com/users/bnlambert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bnlambert/subscriptions","organizations_url":"https://api.github.com/users/bnlambert/orgs","repos_url":"https://api.github.com/users/bnlambert/repos","events_url":"https://api.github.com/users/bnlambert/events{/privacy}","received_events_url":"https://api.github.com/users/bnlambert/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-09-19T16:08:33Z","updated_at":"2017-09-20T10:55:22Z","closed_at":"2017-09-20T10:55:22Z","author_association":"NONE","body":"Hi\r\nI wish to know if Crow supports session handling out of the box, or how it could be be done.\r\n\r\nThanks","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/245","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/245/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/245/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/245/events","html_url":"https://github.com/ipkn/crow/issues/245","id":258093872,"node_id":"MDU6SXNzdWUyNTgwOTM4NzI=","number":245,"title":"Recovering from Worker Crash?","user":{"login":"jamiebullock","id":579188,"node_id":"MDQ6VXNlcjU3OTE4OA==","avatar_url":"https://avatars1.githubusercontent.com/u/579188?v=4","gravatar_id":"","url":"https://api.github.com/users/jamiebullock","html_url":"https://github.com/jamiebullock","followers_url":"https://api.github.com/users/jamiebullock/followers","following_url":"https://api.github.com/users/jamiebullock/following{/other_user}","gists_url":"https://api.github.com/users/jamiebullock/gists{/gist_id}","starred_url":"https://api.github.com/users/jamiebullock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamiebullock/subscriptions","organizations_url":"https://api.github.com/users/jamiebullock/orgs","repos_url":"https://api.github.com/users/jamiebullock/repos","events_url":"https://api.github.com/users/jamiebullock/events{/privacy}","received_events_url":"https://api.github.com/users/jamiebullock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-09-15T16:20:41Z","updated_at":"2017-09-17T03:50:43Z","closed_at":"2017-09-17T03:50:43Z","author_association":"CONTRIBUTOR","body":"This is related to #209 \r\n\r\nIf a Worker Crash occurs, my server just stop serving requests. Is there a way to recover from this?","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/244","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/244/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/244/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/244/events","html_url":"https://github.com/ipkn/crow/issues/244","id":258030282,"node_id":"MDU6SXNzdWUyNTgwMzAyODI=","number":244,"title":"Understanding the crow threading model","user":{"login":"jamiebullock","id":579188,"node_id":"MDQ6VXNlcjU3OTE4OA==","avatar_url":"https://avatars1.githubusercontent.com/u/579188?v=4","gravatar_id":"","url":"https://api.github.com/users/jamiebullock","html_url":"https://github.com/jamiebullock","followers_url":"https://api.github.com/users/jamiebullock/followers","following_url":"https://api.github.com/users/jamiebullock/following{/other_user}","gists_url":"https://api.github.com/users/jamiebullock/gists{/gist_id}","starred_url":"https://api.github.com/users/jamiebullock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamiebullock/subscriptions","organizations_url":"https://api.github.com/users/jamiebullock/orgs","repos_url":"https://api.github.com/users/jamiebullock/repos","events_url":"https://api.github.com/users/jamiebullock/events{/privacy}","received_events_url":"https://api.github.com/users/jamiebullock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-09-15T12:55:43Z","updated_at":"2017-09-18T09:51:59Z","closed_at":"2017-09-18T09:51:59Z","author_association":"CONTRIBUTOR","body":"I'm trying to understand the crow threading model. Can someone confirm if the following is correct:\r\n\r\n```\r\nCROW_ROUTE(app, \"/\")([](){\r\n        return foo();\r\n    });\r\n\r\n    app.port(18080).run();\r\n```\r\n\r\nIf I use the above, then `concurrency_` will be set to `1` (the default) and `foo()` will only ever be called from a single thread at any given time. Therefore `foo()` does not need to be reentrant.\r\n\r\nWhereas... If I call `app.port(18080).multithreaded().run()` then I crow will use the value returned by `std::thread::hardware_concurrency()` to set the number of concurrent threads to be used for routing requests and therefore `foo()` could be called from 1 or more threads concurrently and needs to be reentrant.\r\n\r\nIs this correct?\r\n\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/241","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/241/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/241/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/241/events","html_url":"https://github.com/ipkn/crow/issues/241","id":255065536,"node_id":"MDU6SXNzdWUyNTUwNjU1MzY=","number":241,"title":"Merged crow_all.h doesn't match checked in crow_all.h","user":{"login":"jamiebullock","id":579188,"node_id":"MDQ6VXNlcjU3OTE4OA==","avatar_url":"https://avatars1.githubusercontent.com/u/579188?v=4","gravatar_id":"","url":"https://api.github.com/users/jamiebullock","html_url":"https://github.com/jamiebullock","followers_url":"https://api.github.com/users/jamiebullock/followers","following_url":"https://api.github.com/users/jamiebullock/following{/other_user}","gists_url":"https://api.github.com/users/jamiebullock/gists{/gist_id}","starred_url":"https://api.github.com/users/jamiebullock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamiebullock/subscriptions","organizations_url":"https://api.github.com/users/jamiebullock/orgs","repos_url":"https://api.github.com/users/jamiebullock/repos","events_url":"https://api.github.com/users/jamiebullock/events{/privacy}","received_events_url":"https://api.github.com/users/jamiebullock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-09-04T14:59:05Z","updated_at":"2017-09-18T09:26:56Z","closed_at":"2017-09-18T09:26:56Z","author_association":"CONTRIBUTOR","body":"Running merge_all.py doesn't produce a file identical to the checked in crow_all.h\r\n\r\nThere are significant diffs\r\n\r\nShould I submit a PR with the updated crow_all.h produced by merge_all.py?","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/240","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/240/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/240/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/240/events","html_url":"https://github.com/ipkn/crow/issues/240","id":252362543,"node_id":"MDU6SXNzdWUyNTIzNjI1NDM=","number":240,"title":"How to access middleware context in CROW_ROUTE","user":{"login":"biot023","id":193397,"node_id":"MDQ6VXNlcjE5MzM5Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/193397?v=4","gravatar_id":"","url":"https://api.github.com/users/biot023","html_url":"https://github.com/biot023","followers_url":"https://api.github.com/users/biot023/followers","following_url":"https://api.github.com/users/biot023/following{/other_user}","gists_url":"https://api.github.com/users/biot023/gists{/gist_id}","starred_url":"https://api.github.com/users/biot023/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/biot023/subscriptions","organizations_url":"https://api.github.com/users/biot023/orgs","repos_url":"https://api.github.com/users/biot023/repos","events_url":"https://api.github.com/users/biot023/events{/privacy}","received_events_url":"https://api.github.com/users/biot023/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-08-23T17:43:34Z","updated_at":"2017-12-14T02:26:40Z","closed_at":"2017-09-07T07:17:56Z","author_association":"NONE","body":"Hello -- I have a bit of middleware that stores an object (a struct representing a user) in the middleware's context.\r\nI now need to be able to access that user object from the context for this request in a CROW_ROUTE.\r\nI've tried something like this:\r\n\r\n    CROW_ROUTE(...) {\r\n        const UserModel & user = app.get_middleware<MyMiddleware<UserModel>>()::context.get_user();\r\n    }\r\n\r\nBut obviously that doesn't work, and even if it did it wouldn't be the context specific to the current request that I need.\r\nCould anyone advise me as to how to access the middleware context for the current request?\r\nThanks for any and all assistance,\r\n   Doug.","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/239","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/239/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/239/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/239/events","html_url":"https://github.com/ipkn/crow/issues/239","id":251231979,"node_id":"MDU6SXNzdWUyNTEyMzE5Nzk=","number":239,"title":"Handling database connection and operation in crow","user":{"login":"bnlambert","id":4788731,"node_id":"MDQ6VXNlcjQ3ODg3MzE=","avatar_url":"https://avatars1.githubusercontent.com/u/4788731?v=4","gravatar_id":"","url":"https://api.github.com/users/bnlambert","html_url":"https://github.com/bnlambert","followers_url":"https://api.github.com/users/bnlambert/followers","following_url":"https://api.github.com/users/bnlambert/following{/other_user}","gists_url":"https://api.github.com/users/bnlambert/gists{/gist_id}","starred_url":"https://api.github.com/users/bnlambert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bnlambert/subscriptions","organizations_url":"https://api.github.com/users/bnlambert/orgs","repos_url":"https://api.github.com/users/bnlambert/repos","events_url":"https://api.github.com/users/bnlambert/events{/privacy}","received_events_url":"https://api.github.com/users/bnlambert/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-08-18T12:34:49Z","updated_at":"2017-09-18T00:47:08Z","closed_at":"2017-09-18T00:47:08Z","author_association":"NONE","body":"Crow is a great project. \r\nI wish to know how database connection and operations  are in Crow apps. Is it done asynchronously or using an ORM?\r\nI need recommendations and examples.\r\n\r\nAlso I will to know if there are tools to document REST APIs in Crow.\r\nHow can we communicate with third party API in Crow app.\r\n\r\nThe section on middleware is still blank, How can we secure REST APIs in Crow?\r\n\r\nThanks  ","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/236","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/236/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/236/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/236/events","html_url":"https://github.com/ipkn/crow/issues/236","id":250079037,"node_id":"MDU6SXNzdWUyNTAwNzkwMzc=","number":236,"title":"Catchall / wildcard for routes?","user":{"login":"jamiebullock","id":579188,"node_id":"MDQ6VXNlcjU3OTE4OA==","avatar_url":"https://avatars1.githubusercontent.com/u/579188?v=4","gravatar_id":"","url":"https://api.github.com/users/jamiebullock","html_url":"https://github.com/jamiebullock","followers_url":"https://api.github.com/users/jamiebullock/followers","following_url":"https://api.github.com/users/jamiebullock/following{/other_user}","gists_url":"https://api.github.com/users/jamiebullock/gists{/gist_id}","starred_url":"https://api.github.com/users/jamiebullock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamiebullock/subscriptions","organizations_url":"https://api.github.com/users/jamiebullock/orgs","repos_url":"https://api.github.com/users/jamiebullock/repos","events_url":"https://api.github.com/users/jamiebullock/events{/privacy}","received_events_url":"https://api.github.com/users/jamiebullock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-08-14T16:10:23Z","updated_at":"2017-09-06T07:58:55Z","closed_at":"2017-09-06T07:58:55Z","author_association":"CONTRIBUTOR","body":"\r\nDoes Crow support any other kinds of substitutions or wildcards?\r\n\r\nIt would be really useful to do things like:\r\n\r\n    CROW_ROUTE(app, \"/foo/*\")\r\n\r\nMatches /foo/bar but not /foo/bar/baz\r\n\r\n    CROW_ROUTE(app, \"/foo/**\")\r\n\r\nMatches /foo/bar and /foo/bar/baz recursively\r\n\r\n\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/234","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/234/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/234/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/234/events","html_url":"https://github.com/ipkn/crow/issues/234","id":242793995,"node_id":"MDU6SXNzdWUyNDI3OTM5OTU=","number":234,"title":"Is ERROR defined somehwere?","user":{"login":"p-groarke","id":156883,"node_id":"MDQ6VXNlcjE1Njg4Mw==","avatar_url":"https://avatars3.githubusercontent.com/u/156883?v=4","gravatar_id":"","url":"https://api.github.com/users/p-groarke","html_url":"https://github.com/p-groarke","followers_url":"https://api.github.com/users/p-groarke/followers","following_url":"https://api.github.com/users/p-groarke/following{/other_user}","gists_url":"https://api.github.com/users/p-groarke/gists{/gist_id}","starred_url":"https://api.github.com/users/p-groarke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/p-groarke/subscriptions","organizations_url":"https://api.github.com/users/p-groarke/orgs","repos_url":"https://api.github.com/users/p-groarke/repos","events_url":"https://api.github.com/users/p-groarke/events{/privacy}","received_events_url":"https://api.github.com/users/p-groarke/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-07-13T18:43:08Z","updated_at":"2018-05-02T14:53:51Z","closed_at":"2018-05-02T14:53:51Z","author_association":"NONE","body":"I'm porting to VS 2017, and pretty much everything is fixed except for the crow::LogLevel enum class (logging.h, line 16). For some reason ERROR is defined, but I can't find any references to it (for ex. in settings.h). Any other idea where it might be defined, or is this a MSVC platform problem?","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/220","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/220/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/220/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/220/events","html_url":"https://github.com/ipkn/crow/issues/220","id":211264795,"node_id":"MDU6SXNzdWUyMTEyNjQ3OTU=","number":220,"title":"Is crow thread safe? ","user":{"login":"moneroexamples","id":15305358,"node_id":"MDQ6VXNlcjE1MzA1MzU4","avatar_url":"https://avatars1.githubusercontent.com/u/15305358?v=4","gravatar_id":"","url":"https://api.github.com/users/moneroexamples","html_url":"https://github.com/moneroexamples","followers_url":"https://api.github.com/users/moneroexamples/followers","following_url":"https://api.github.com/users/moneroexamples/following{/other_user}","gists_url":"https://api.github.com/users/moneroexamples/gists{/gist_id}","starred_url":"https://api.github.com/users/moneroexamples/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moneroexamples/subscriptions","organizations_url":"https://api.github.com/users/moneroexamples/orgs","repos_url":"https://api.github.com/users/moneroexamples/repos","events_url":"https://api.github.com/users/moneroexamples/events{/privacy}","received_events_url":"https://api.github.com/users/moneroexamples/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-03-02T01:46:40Z","updated_at":"2017-03-03T04:56:07Z","closed_at":"2017-03-03T04:56:07Z","author_association":"NONE","body":"What I mean, are the requests handled in a FIFO style, so that a new request is not processed until the current one finishes? \r\n\r\nOr maybe, its asynchronous, crow processes several requests in parallel and serves them without specific order?","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/217","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/217/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/217/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/217/events","html_url":"https://github.com/ipkn/crow/issues/217","id":210285036,"node_id":"MDU6SXNzdWUyMTAyODUwMzY=","number":217,"title":"How to set headers to reponse to server in Crow ? ","user":{"login":"GuacheSuede","id":5565823,"node_id":"MDQ6VXNlcjU1NjU4MjM=","avatar_url":"https://avatars3.githubusercontent.com/u/5565823?v=4","gravatar_id":"","url":"https://api.github.com/users/GuacheSuede","html_url":"https://github.com/GuacheSuede","followers_url":"https://api.github.com/users/GuacheSuede/followers","following_url":"https://api.github.com/users/GuacheSuede/following{/other_user}","gists_url":"https://api.github.com/users/GuacheSuede/gists{/gist_id}","starred_url":"https://api.github.com/users/GuacheSuede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GuacheSuede/subscriptions","organizations_url":"https://api.github.com/users/GuacheSuede/orgs","repos_url":"https://api.github.com/users/GuacheSuede/repos","events_url":"https://api.github.com/users/GuacheSuede/events{/privacy}","received_events_url":"https://api.github.com/users/GuacheSuede/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-02-26T04:48:26Z","updated_at":"2017-03-02T10:03:06Z","closed_at":"2017-03-02T10:03:06Z","author_association":"NONE","body":"Setting headers like Allow-Cross-Origin ? How does one do it in Crow, setting headers ? Thanks","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/214","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/214/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/214/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/214/events","html_url":"https://github.com/ipkn/crow/issues/214","id":202403870,"node_id":"MDU6SXNzdWUyMDI0MDM4NzA=","number":214,"title":"Suitable server for production enviroment  (apache/nginx) ?","user":{"login":"Shravan40","id":1205111,"node_id":"MDQ6VXNlcjEyMDUxMTE=","avatar_url":"https://avatars3.githubusercontent.com/u/1205111?v=4","gravatar_id":"","url":"https://api.github.com/users/Shravan40","html_url":"https://github.com/Shravan40","followers_url":"https://api.github.com/users/Shravan40/followers","following_url":"https://api.github.com/users/Shravan40/following{/other_user}","gists_url":"https://api.github.com/users/Shravan40/gists{/gist_id}","starred_url":"https://api.github.com/users/Shravan40/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shravan40/subscriptions","organizations_url":"https://api.github.com/users/Shravan40/orgs","repos_url":"https://api.github.com/users/Shravan40/repos","events_url":"https://api.github.com/users/Shravan40/events{/privacy}","received_events_url":"https://api.github.com/users/Shravan40/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-01-22T19:30:32Z","updated_at":"2017-11-08T10:09:03Z","closed_at":"2017-11-08T10:09:03Z","author_association":"NONE","body":"I have written my APIs using crow, and for testing purpose i run the server using `./a.out`. But server gets closed whenever any exceptions occurs. Since my code is all set to go into production, I would like to keep running my server irrespective of exception. Please suggest me a way, how to combine it with server like apache, nginx e.t.c ","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/211","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/211/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/211/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/211/events","html_url":"https://github.com/ipkn/crow/issues/211","id":199420114,"node_id":"MDU6SXNzdWUxOTk0MjAxMTQ=","number":211,"title":"Error when trying to compile: no matching function for call to 'crow::response::response(crow::mustache::template_t)'","user":{"login":"biot023","id":193397,"node_id":"MDQ6VXNlcjE5MzM5Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/193397?v=4","gravatar_id":"","url":"https://api.github.com/users/biot023","html_url":"https://github.com/biot023","followers_url":"https://api.github.com/users/biot023/followers","following_url":"https://api.github.com/users/biot023/following{/other_user}","gists_url":"https://api.github.com/users/biot023/gists{/gist_id}","starred_url":"https://api.github.com/users/biot023/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/biot023/subscriptions","organizations_url":"https://api.github.com/users/biot023/orgs","repos_url":"https://api.github.com/users/biot023/repos","events_url":"https://api.github.com/users/biot023/events{/privacy}","received_events_url":"https://api.github.com/users/biot023/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-01-08T12:51:30Z","updated_at":"2017-01-10T16:50:50Z","closed_at":"2017-01-10T16:50:50Z","author_association":"NONE","body":"Hi -- I'm just trying to get to grips with Crow, but am having an issue when trying to build the project.\r\nI've added Crow as a GIT submodule, but I get the same error when I include the project by including `crow_all.h`.\r\nI should point out that I'm very new to CMake, so probably this is an error with my understanding of how to include Crow using that -- my apologies if it is.\r\n\r\nThe error I'm getting in full is this:\r\n\r\n    make\r\n    [ 50%] Building CXX object CMakeFiles/webapp.dir/main.cpp.o\r\n    In file included from /home/deploy/app/vendor/crow/include/crow.h:19:0,\r\n                     from /home/deploy/app/main.cpp:1:\r\n    /home/deploy/app/vendor/crow/include/crow/routing.h: In instantiation of 'crow::TaggedRule<Args>::operator()(Func&&)::<lambda(const crow::request&, crow::response&, Args ...)> [with Func = main(int, char**)::<lambda()>; Args = {}]':\r\n    /home/deploy/app/vendor/crow/include/crow/routing.h:459:44:   required from 'struct crow::TaggedRule<Args>::operator()(Func&&) [with Func = main(int, char**)::<lambda()>; Args = {}; typename std::enable_if<crow::black_magic::CallHelper<Func, crow::black_magic::S<Args ...> >::value, void>::type = void]::<lambda(const struct crow::request&, struct crow::response&)>'\r\n    /home/deploy/app/vendor/crow/include/crow/routing.h:459:26:   required from 'typename std::enable_if<crow::black_magic::CallHelper<Func, crow::black_magic::S<Args ...> >::value, void>::type crow::TaggedRule<Args>::operator()(Func&&) [with Func = main(int, char**)::<lambda()>; Args = {}; typename std::enable_if<crow::black_magic::CallHelper<Func, crow::black_magic::S<Args ...> >::value, void>::type = void]'\r\n    /home/deploy/app/main.cpp:19:6:   required from here\r\n    /home/deploy/app/vendor/crow/include/crow/routing.h:460:27: error: no matching function for call to 'crow::response::response(crow::mustache::template_t)'\r\n                         res = response(f(args...));\r\n                               ^~~~~~~~~~~~~~~~~~~~\r\n    In file included from /home/deploy/app/vendor/crow/include/crow.h:17:0,\r\n                     from /home/deploy/app/main.cpp:1:\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:58:9: note: candidate: crow::response::response(crow::response&&)\r\n             response(response&& r)\r\n             ^~~~~~~~\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:58:9: note:   no known conversion for argument 1 from 'crow::mustache::template_t' to 'crow::response&&'\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:53:9: note: candidate: crow::response::response(int, const crow::json::wvalue&)\r\n             response(int code, const json::wvalue& json_value) : code(code), body(json::dump(json_value))\r\n             ^~~~~~~~\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:53:9: note:   candidate expects 2 arguments, 1 provided\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:49:9: note: candidate: crow::response::response(const crow::json::wvalue&)\r\n             response(const json::wvalue& json_value) : body(json::dump(json_value))\r\n             ^~~~~~~~\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:49:9: note:   no known conversion for argument 1 from 'crow::mustache::template_t' to 'const crow::json::wvalue&'\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:48:9: note: candidate: crow::response::response(int, std::__cxx11::string)\r\n             response(int code, std::string body) : code(code), body(std::move(body)) {}\r\n             ^~~~~~~~\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:48:9: note:   candidate expects 2 arguments, 1 provided\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:44:9: note: candidate: crow::response::response(crow::json::wvalue&&)\r\n             response(json::wvalue&& json_value) : jso
4d7a
n_value(std::move(json_value))\r\n             ^~~~~~~~\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:44:9: note:   no known conversion for argument 1 from 'crow::mustache::template_t' to 'crow::json::wvalue&&'\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:43:9: note: candidate: crow::response::response(std::__cxx11::string)\r\n             response(std::string body) : body(std::move(body)) {}\r\n             ^~~~~~~~\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:43:9: note:   no known conversion for argument 1 from 'crow::mustache::template_t' to 'std::__cxx11::string {aka std::__cxx11::basic_string<char>}'\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:42:18: note: candidate: crow::response::response(int)\r\n             explicit response(int code) : code(code) {}\r\n                      ^~~~~~~~\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:42:18: note:   no known conversion for argument 1 from 'crow::mustache::template_t' to 'int'\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:41:9: note: candidate: crow::response::response()\r\n             response() {}\r\n             ^~~~~~~~\r\n    /home/deploy/app/vendor/crow/include/crow/http_response.h:41:9: note:   candidate expects 0 arguments, 1 provided\r\n    In file included from /usr/local/include/boost/functional/hash/hash.hpp:20:0,\r\n                     from /usr/local/include/boost/functional/hash.hpp:6,\r\n                     from /home/deploy/app/vendor/crow/include/crow/ci_map.h:4,\r\n                     from /home/deploy/app/vendor/crow/include/crow.h:4,\r\n                     from /home/deploy/app/main.cpp:1:\r\n    /usr/local/include/c++/6.3.0/functional:1990:2: error: 'std::function<_Res(_ArgTypes ...)>::_Requires<std::function<_Res(_ArgTypes ...)>::_Callable<typename std::decay<_Functor>::type>, std::function<_Res(_ArgTypes ...)>&> std::function<_Res(_ArgTypes ...)>::operator=(_Functor&&) [with _Functor = crow::TaggedRule<Args>::operator()(Func&&) [with Func = main(int, char**)::<lambda()>; Args = {}; typename std::enable_if<crow::black_magic::CallHelper<Func, crow::black_magic::S<Args ...> >::value, void>::type = void]::<lambda(const crow::request&, crow::response&)>; _Res = void; _ArgTypes = {const crow::request&, crow::response&}; std::function<_Res(_ArgTypes ...)>::_Requires<std::function<_Res(_ArgTypes ...)>::_Callable<typename std::decay<_Functor>::type>, std::function<_Res(_ArgTypes ...)>&> = std::function<void(const crow::request&, crow::response&)>&]', declared using local type 'crow::TaggedRule<Args>::operator()(Func&&) [with Func = main(int, char**)::<lambda()>; Args = {}; typename std::enable_if<crow::black_magic::CallHelper<Func, crow::black_magic::S<Args ...> >::value, void>::type = void]::<lambda(const crow::request&, crow::response&)>', is used but never defined [-fpermissive]\r\n      operator=(_Functor&& __f)\r\n      ^~~~~~~~\r\n    CMakeFiles/webapp.dir/build.make:62: recipe for target 'CMakeFiles/webapp.dir/main.cpp.o' failed\r\n    make[2]: *** [CMakeFiles/webapp.dir/main.cpp.o] Error 1\r\n    CMakeFiles/Makefile2:67: recipe for target 'CMakeFiles/webapp.dir/all' failed\r\n    make[1]: *** [CMakeFiles/webapp.dir/all] Error 2\r\n    Makefile:83: recipe for target 'all' failed\r\n    make: *** [all] Error 2\r\n\r\nFor reference, this is how my CMakeLists.txt file currently looks: \r\n\r\n> cmake_minimum_required(VERSION 3.7.1 FATAL_ERROR)\r\n> \r\n> project(\"Test crow webdev\")\r\n> \r\n> set(warnings \"-Wall -Wextra -Werror\")\r\n> \r\n> find_package(Boost 1.63 REQUIRED COMPONENTS program_options system)\r\n> include_directories(SYSTEM ${Boost_INCLUDE_DIRS})\r\n> include_directories(vendor/crow/include)\r\n> \r\n> add_executable(webapp main.cpp)\r\n> target_link_libraries(webapp -lpthread ${Boost_LIBRARIES})\r\n\r\nCould anyone offer me any advice on what I'm getting wrong, here?\r\nThanks,\r\n   Doug.","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/201","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/201/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/201/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/201/events","html_url":"https://github.com/ipkn/crow/issues/201","id":193751002,"node_id":"MDU6SXNzdWUxOTM3NTEwMDI=","number":201,"title":"CORS header 'Access-Control-Allow-Origin' missing ?","user":{"login":"Shravan40","id":1205111,"node_id":"MDQ6VXNlcjEyMDUxMTE=","avatar_url":"https://avatars3.githubusercontent.com/u/1205111?v=4","gravatar_id":"","url":"https://api.github.com/users/Shravan40","html_url":"https://github.com/Shravan40","followers_url":"https://api.github.com/users/Shravan40/followers","following_url":"https://api.github.com/users/Shravan40/following{/other_user}","gists_url":"https://api.github.com/users/Shravan40/gists{/gist_id}","starred_url":"https://api.github.com/users/Shravan40/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shravan40/subscriptions","organizations_url":"https://api.github.com/users/Shravan40/orgs","repos_url":"https://api.github.com/users/Shravan40/repos","events_url":"https://api.github.com/users/Shravan40/events{/privacy}","received_events_url":"https://api.github.com/users/Shravan40/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-12-06T11:41:27Z","updated_at":"2017-11-20T18:31:12Z","closed_at":"2017-11-20T18:31:12Z","author_association":"NONE","body":"While calling the apis using javascript i am getting different errors in different browser.\r\n\r\nHere is the error i am getting in firefox.\r\n```\r\nCross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at http://192.168.100.14:18080/riskProfilingQuestions. (Reason: CORS header 'Access-Control-Allow-Origin' missing).\r\n```\r\nHere is the error i am getting in Chrome\r\n```\r\nNo 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:63342' is therefore not allowed access.\r\nThe response had HTTP status code 500\r\n```\r\n\r\nBut i am able to call apis using `Curl` and `postman`.","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/192","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/192/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/192/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/192/events","html_url":"https://github.com/ipkn/crow/issues/192","id":188562242,"node_id":"MDU6SXNzdWUxODg1NjIyNDI=","number":192,"title":"How to return STL containers ?","user":{"login":"Shravan40","id":1205111,"node_id":"MDQ6VXNlcjEyMDUxMTE=","avatar_url":"https://avatars3.githubusercontent.com/u/1205111?v=4","gravatar_id":"","url":"https://api.github.com/users/Shravan40","html_url":"https://github.com/Shravan40","followers_url":"https://api.github.com/users/Shravan40/followers","following_url":"https://api.github.com/users/Shravan40/following{/other_user}","gists_url":"https://api.github.com/users/Shravan40/gists{/gist_id}","starred_url":"https://api.github.com/users/Shravan40/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shravan40/subscriptions","organizations_url":"https://api.github.com/users/Shravan40/orgs","repos_url":"https://api.github.com/users/Shravan40/repos","events_url":"https://api.github.com/users/Shravan40/events{/privacy}","received_events_url":"https://api.github.com/users/Shravan40/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-11-10T16:56:59Z","updated_at":"2016-11-21T06:05:40Z","closed_at":"2016-11-21T06:05:40Z","author_association":"NONE","body":"How can we return STL containers such as `std::vector`, `std::map`,`std::list` as API response?","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/181","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/181/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/181/events","html_url":"https://github.com/ipkn/crow/issues/181","id":183724688,"node_id":"MDU6SXNzdWUxODM3MjQ2ODg=","number":181,"title":"const class crow::json::rvalue’ has no member named ‘date’","user":{"login":"Shravan40","id":1205111,"node_id":"MDQ6VXNlcjEyMDUxMTE=","avatar_url":"https://avatars3.githubusercontent.com/u/1205111?v=4","gravatar_id":"","url":"https://api.github.com/users/Shravan40","html_url":"https://github.com/Shravan40","followers_url":"https://api.github.com/users/Shravan40/followers","following_url":"https://api.github.com/users/Shravan40/following{/other_user}","gists_url":"https://api.github.com/users/Shravan40/gists{/gist_id}","starred_url":"https://api.github.com/users/Shravan40/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shravan40/subscriptions","organizations_url":"https://api.github.com/users/Shravan40/orgs","repos_url":"https://api.github.com/users/Shravan40/repos","events_url":"https://api.github.com/users/Shravan40/events{/privacy}","received_events_url":"https://api.github.com/users/Shravan40/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-10-18T15:41:16Z","updated_at":"2016-10-20T20:46:02Z","closed_at":"2016-10-20T20:46:02Z","author_association":"NONE","body":"I am using  Howard Hinnant's date library and sqlpp11 for db connection. How can i parse json and convert it to of type `year_month_date` ?\n\n`year_month_day dob = x[\"dob\"].year_month_day();` \n`year_month_day dob = x[\"dob\"].date();`  \n\nI tried above two option and both produces the error `error: ‘const class crow::json::rvalue’ has no member named ‘year_month_day’ or 'date``.\n","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/170","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/170/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/170/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/170/events","html_url":"https://github.com/ipkn/crow/issues/170","id":179442926,"node_id":"MDU6SXNzdWUxNzk0NDI5MjY=","number":170,"title":"How to access POST data?","user":{"login":"moneroexamples","id":15305358,"node_id":"MDQ6VXNlcjE1MzA1MzU4","avatar_url":"https://avatars1.githubusercontent.com/u/15305358?v=4","gravatar_id":"","url":"https://api.github.com/users/moneroexamples","html_url":"https://github.com/moneroexamples","followers_url":"https://api.github.com/users/moneroexamples/followers","following_url":"https://api.github.com/users/moneroexamples/following{/other_user}","gists_url":"https://api.github.com/users/moneroexamples/gists{/gist_id}","starred_url":"https://api.github.com/users/moneroexamples/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moneroexamples/subscriptions","organizations_url":"https://api.github.com/users/moneroexamples/orgs","repos_url":"https://api.github.com/users/moneroexamples/repos","events_url":"https://api.github.com/users/moneroexamples/events{/privacy}","received_events_url":"https://api.github.com/users/moneroexamples/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-09-27T09:35:11Z","updated_at":"2017-03-25T05:46:46Z","closed_at":"2016-09-30T01:14:15Z","author_association":"NONE","body":"I have a form that is submited using POST. How do I get values of inidiviudal form fileds in Crow. `req.body` returns everything, in an unparsed form. Is there a way of accessing POST data, which is similar to GET data, i.e., `req.url_params.get(\"txhash\")`?\n","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/166","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/166/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/166/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/166/events","html_url":"https://github.com/ipkn/crow/issues/166","id":178891867,"node_id":"MDU6SXNzdWUxNzg4OTE4Njc=","number":166,"title":"How can I get the value of an array?","user":{"login":"cateof","id":126623,"node_id":"MDQ6VXNlcjEyNjYyMw==","avatar_url":"https://avatars1.githubusercontent.com/u/126623?v=4","gravatar_id":"","url":"https://api.github.com/users/cateof","html_url":"https://github.com/cateof","followers_url":"https://api.github.com/users/cateof/followers","following_url":"https://api.github.com/users/cateof/following{/other_user}","gists_url":"https://api.github.com/users/cateof/gists{/gist_id}","starred_url":"https://api.github.com/users/cateof/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cateof/subscriptions","organizations_url":"https://api.github.com/users/cateof/orgs","repos_url":"https://api.github.com/users/cateof/repos","events_url":"https://api.github.com/users/cateof/events{/privacy}","received_events_url":"https://api.github.com/users/cateof/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-09-23T14:27:23Z","updated_at":"2016-12-16T09:36:22Z","closed_at":"2016-09-26T16:15:29Z","author_association":"NONE","body":"I used the .i() or .s() to take the integer or string value from a field. How can I get the value of an array?\n\nFor example from this json request {\"name\": \"crow\"} using x[\"name\"].s() I can convert the value to string. Is it possible to get the value of an array?\n\nexample: \"tiers\": [   {\"id\": 2, \"maxValue\": 123213},   {\"id\": 3, \"maxValue\": 33} ]\n\nCan I load the tiers field in a C++ object easily? \n","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/165","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/165/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/165/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/165/events","html_url":"https://github.com/ipkn/crow/issues/165","id":178601715,"node_id":"MDU6SXNzdWUxNzg2MDE3MTU=","number":165,"title":"How can I return crow::json::wvalue from a function?","user":{"login":"cateof","id":126623,"node_id":"MDQ6VXNlcjEyNjYyMw==","avatar_url":"https://avatars1.githubusercontent.com/u/126623?v=4","gravatar_id":"","url":"https://api.github.com/users/cateof","html_url":"https://github.com/cateof","followers_url":"https://api.github.com/users/cateof/followers","following_url":"https://api.github.com/users/cateof/following{/other_user}","gists_url":"https://api.github.com/users/cateof/gists{/gist_id}","starred_url":"https://api.github.com/users/cateof/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cateof/subscriptions","organizations_url":"https://api.github.com/users/cateof/orgs","repos_url":"https://api.github.com/users/cateof/repos","events_url":"https://api.github.com/users/cateof/events{/privacy}","received_events_url":"https://api.github.com/users/cateof/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-09-22T12:52:18Z","updated_at":"2016-09-23T07:27:21Z","closed_at":"2016-09-23T07:27:21Z","author_association":"NONE","body":"My code is below. I just want to make my code more readable and modular, so I tried to return \ncrow::json::wvalue from a fuction (testApi1). My server will only return json, so I would like to have the CROW_ROUTE(s) in a setup function, ie setupHandler, and request from another method to create the json. When I am trying to compile I am getting errors during compile time. \n\n```\nint Handler::setupHandler(crow::SimpleApp& app) {\n\n        CROW_ROUTE(app, \"/add_json\")\n    ([](const crow::request& req){\n        crow::json::wvalue res = testApi1();\n        return  crow::response{res};\n    });\n\n}\n\ncrow::json::wvalue Handler::testApi1() {\n\n        crow::json::wvalue r;\n        r[\"message\"] = \"Hello World\";\n        r[\"text\"] = 1;\n\n        return r;\n}\n```\n\nWhat is the problem? How can I do this?\n\n```\nerror: ‘this’ was not captured for this lambda function\n  crow::json::wvalue res = testApi1();\n                                    ^\n/home/administrator/lef/betDataGen/JsonHandler.cpp:16:36: error: cannot call member function ‘crow::json::wvalue JsonHandler::testApi1()’ without object\n```\n","score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/161","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/161/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/161/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/161/events","html_url":"https://github.com/ipkn/crow/issues/161","id":177423725,"node_id":"MDU6SXNzdWUxNzc0MjM3MjU=","number":161,"title":"how to read and write a JSON with nested objects","user":{"login":"cateof","id":126623,"node_id":"MDQ6VXNlcjEyNjYyMw==","avatar_url":"https://avatars1.githubusercontent.com/u/126623?v=4","gravatar_id":"","url":"https://api.github.com/users/cateof","html_url":"https://github.com/cateof","followers_url":"https://api.github.com/users/cateof/followers","following_url":"https://api.github.com/users/cateof/following{/other_user}","gists_url":"https://api.github.com/users/cateof/gists{/gist_id}","starred_url":"https://api.github.com/users/cateof/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cateof/subscriptions","organizations_url":"https://api.github.com/users/cateof/orgs","repos_url":"https://api.github.com/users/cateof/repos","events_url":"https://api.github.com/users/cateof/events{/privacy}","received_events_url":"https://api.github.com/users/cateof/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-16T13:19:55Z","updated_at":"2016-09-17T09:37:57Z","closed_at":"2016-09-17T09:37:57Z","author_association":"NONE","body":"I am sure that for the experienced crow:: users this is a simple question but this is my first \"hello world\" project and I want to learn how to read or write nested objects or lists.\n\nFor example\n\n```\n{\n  \"id\": 0,\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"string\"\n  },\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"available\"\n}\n```\n\ncrow::json::wvalue x;\nx[\"status\"] = \"available\" //this will work for status, ie a string\n\nBut how do we read/write a list of objects, like tag or an object like category?\n\nList seem to work like this:\n\ncrow::json::wvalue x;\n for(int i=0; i < 5; i++) {\n    x[\"message\"][i] = i*2;\n }\n return x;\n\nthis will return {\"message\":[0,2,4,6,8]}\n\nBut still the question remains for objects. How do I nest an object in the response? \n\nThanks for your answer in advance,\nCat\n","score":1.0}]}
0

