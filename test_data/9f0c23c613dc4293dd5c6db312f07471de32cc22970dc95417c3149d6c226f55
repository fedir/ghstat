HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:10:24 GMT
Link: <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fgotham-rs%2Fgotham+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fgotham-rs%2Fgotham+type%3Aissue+state%3Aclosed&page=3>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: D29D:5C52:203CF44:251808F:5FB01D8F
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 24
X-Ratelimit-Reset: 1605377483
X-Ratelimit-Used: 6
X-Xss-Protection: 1; mode=block

1bc4c
{"total_count":72,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/msrd0/gotham_formdata/issues/1","repository_url":"https://api.github.com/repos/msrd0/gotham_formdata","labels_url":"https://api.github.com/repos/msrd0/gotham_formdata/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/msrd0/gotham_formdata/issues/1/comments","events_url":"https://api.github.com/repos/msrd0/gotham_formdata/issues/1/events","html_url":"https://github.com/msrd0/gotham_formdata/issues/1","id":738089698,"node_id":"MDU6SXNzdWU3MzgwODk2OTg=","number":1,"title":"Form Data Validation","user":{"login":"msrd0","id":7853372,"node_id":"MDQ6VXNlcjc4NTMzNzI=","avatar_url":"https://avatars1.githubusercontent.com/u/7853372?v=4","gravatar_id":"","url":"https://api.github.com/users/msrd0","html_url":"https://github.com/msrd0","followers_url":"https://api.github.com/users/msrd0/followers","following_url":"https://api.github.com/users/msrd0/following{/other_user}","gists_url":"https://api.github.com/users/msrd0/gists{/gist_id}","starred_url":"https://api.github.com/users/msrd0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msrd0/subscriptions","organizations_url":"https://api.github.com/users/msrd0/orgs","repos_url":"https://api.github.com/users/msrd0/repos","events_url":"https://api.github.com/users/msrd0/events{/privacy}","received_events_url":"https://api.github.com/users/msrd0/received_events","type":"User","site_admin":false},"labels":[{"id":2459990236,"node_id":"MDU6TGFiZWwyNDU5OTkwMjM2","url":"https://api.github.com/repos/msrd0/gotham_formdata/labels/feature","name":"feature","color":"37cc7a","default":false,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-06T22:57:32Z","updated_at":"2020-11-10T23:50:10Z","closed_at":"2020-11-10T23:50:10Z","author_association":"OWNER","active_lock_reason":null,"body":"Could look something like proposed here: https://github.com/gotham-rs/gotham/issues/11#issuecomment-373565350\r\n\r\n## Progress\r\n\r\n - [x] Implement initial validation (#2)\r\n - [x] Implement some common validators\r\n   - [x] `min_length`, `max_length` for string types (#5)\r\n   - [x] `min`, `max` for integer types (#6)\r\n   - [x] `regex` for string types (#8)\r\n   - [x] ~`uppercase_only`, `lowercase_only`, `trimmed` and similar for string types~ can be done with `regex`\r\n   - [x] `expected` for all types that implement `PartialEq` (#9)\r\n - [x] Allow specifying custom error messages (#11)\r\n - [x] Allow multiple validators to be combined (#12)","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ZenGo-X/thresh-sig-js/issues/18","repository_url":"https://api.github.com/repos/ZenGo-X/thresh-sig-js","labels_url":"https://api.github.com/repos/ZenGo-X/thresh-sig-js/issues/18/labels{/name}","comments_url":"https://api.github.com/repos/ZenGo-X/thresh-sig-js/issues/18/comments","events_url":"https://api.github.com/repos/ZenGo-X/thresh-sig-js/issues/18/events","html_url":"https://github.com/ZenGo-X/thresh-sig-js/issues/18","id":679657706,"node_id":"MDU6SXNzdWU2Nzk2NTc3MDY=","number":18,"title":"fatal runtime error: failed to initiate panic, error 5","user":{"login":"dolcalmi","id":2079600,"node_id":"MDQ6VXNlcjIwNzk2MDA=","avatar_url":"https://avatars2.githubusercontent.com/u/2079600?v=4","gravatar_id":"","url":"https://api.github.com/users/dolcalmi","html_url":"https://github.com/dolcalmi","followers_url":"https://api.github.com/users/dolcalmi/followers","following_url":"https://api.github.com/users/dolcalmi/following{/other_user}","gists_url":"https://api.github.com/users/dolcalmi/gists{/gist_id}","starred_url":"https://api.github.com/users/dolcalmi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dolcalmi/subscriptions","organizations_url":"https://api.github.com/users/dolcalmi/orgs","repos_url":"https://api.github.com/users/dolcalmi/repos","events_url":"https://api.github.com/users/dolcalmi/events{/privacy}","received_events_url":"https://api.github.com/users/dolcalmi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"oleiba","id":16321515,"node_id":"MDQ6VXNlcjE2MzIxNTE1","avatar_url":"https://avatars1.githubusercontent.com/u/16321515?v=4","gravatar_id":"","url":"https://api.github.com/users/oleiba","html_url":"https://github.com/oleiba","followers_url":"https://api.github.com/users/oleiba/followers","following_url":"https://api.github.com/users/oleiba/following{/other_user}","gists_url":"https://api.github.com/users/oleiba/gists{/gist_id}","starred_url":"https://api.github.com/users/oleiba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oleiba/subscriptions","organizations_url":"https://api.github.com/users/oleiba/orgs","repos_url":"https://api.github.com/users/oleiba/repos","events_url":"https://api.github.com/users/oleiba/events{/privacy}","received_events_url":"https://api.github.com/users/oleiba/received_events","type":"User","site_admin":false},"assignees":[{"login":"oleiba","id":16321515,"node_id":"MDQ6VXNlcjE2MzIxNTE1","avatar_url":"https://avatars1.githubusercontent.com/u/16321515?v=4","gravatar_id":"","url":"https://api.github.com/users/oleiba","html_url":"https://github.com/oleiba","followers_url":"https://api.github.com/users/oleiba/followers","following_url":"https://api.github.com/users/oleiba/following{/other_user}","gists_url":"https://api.github.com/users/oleiba/gists{/gist_id}","starred_url":"https://api.github.com/users/oleiba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oleiba/subscriptions","organizations_url":"https://api.github.com/users/oleiba/orgs","repos_url":"https://api.github.com/users/oleiba/repos","events_url":"https://api.github.com/users/oleiba/events{/privacy}","received_events_url":"https://api.github.com/users/oleiba/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2020-08-15T23:20:33Z","updated_at":"2020-08-24T15:16:24Z","closed_at":"2020-08-17T20:12:45Z","author_association":"NONE","active_lock_reason":null,"body":"ClientShim initialization is failing with \"fatal runtime error: failed to initiate panic, error 5\" (command: node ./demo/ecdsa-party2.js)\r\n\r\nI debug it and the line that throws the fatal runtime error is https://github.com/KZen-networks/thresh-sig-js/blob/master/native/src/party2/ecdsa.rs#L99 ( I tested directly downloading the repo and with terra-thresh-wallet repo)\r\n\r\nMy Environment:\r\n\r\n- OS: Ubuntu 18.04.5 LTS\r\n- Node version: v10.19.0\r\n- Rust version: rustc 1.38.0-nightly (0b680cfce 2019-07-09)\r\n\r\nOther considerations:\r\n\r\n- The server is running successfully (command: node ./demo/party1.js)\r\n- I tested updating gotham-city to v0.1.3 but still got the same error\r\n\r\n\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/376","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/376/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/376/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/376/events","html_url":"https://github.com/gotham-rs/gotham/issues/376","id":526916799,"node_id":"MDU6SXNzdWU1MjY5MTY3OTk=","number":376,"title":"Failed to build example(s)","user":{"login":"vitali2y","id":1330551,"node_id":"MDQ6VXNlcjEzMzA1NTE=","avatar_url":"https://avatars1.githubusercontent.com/u/1330551?v=4","gravatar_id":"","url":"https://api.github.com/users/vitali2y","html_url":"https://github.com/vitali2y","followers_url":"https://api.github.com/users/vitali2y/followers","following_url":"https://api.github.com/users/vitali2y/following{/other_user}","gists_url":"https://api.github.com/users/vitali2y/gists{/gist_id}","starred_url":"https://api.github.com/users/vitali2y/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitali2y/subscriptions","organizations_url":"https://api.github.com/users/vitali2y/orgs","repos_url":"https://api.github.com/users/vitali2y/repos","events_url":"https://api.github.com/users/vitali2y/events{/privacy}","received_events_url":"https://api.github.com/users/vitali2y/received_events","type":"User","site_admin":false},"labels":[{"id":2302769918,"node_id":"MDU6TGFiZWwyMzAyNzY5OTE4","url":"https://api.github.com/repos/gotham-rs/gotham/labels/needs-more-info","name":"needs-more-info","color":"ead569","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-11-22T00:26:45Z","updated_at":"2020-09-11T12:27:32Z","closed_at":"2020-09-11T09:13:51Z","author_association":"NONE","active_lock_reason":null,"body":"No way to build all or single example unless to do `cargo build`:\r\n```\r\nvit@evergreen ~/prjs $ git clone https://github.com/gotham-rs/gotham.git\r\n~...~\r\nvit@evergreen ~/prjs $ cd ./gotham\r\nvit@evergreen ~/prjs/gotham $ cargo build --examples\r\n    Updating crates.io index\r\n    Finished dev [unoptimized + debuginfo] target(s) in 2.58s\r\nvit@evergreen ~/prjs/gotham $ ls -la ./target/debug/examples/\r\ntotal 8\r\ndrwxrwxr-x 2 vit vit 4096 Nov 22 02:11 .\r\ndrwxrwxr-x 7 vit vit 4096 Nov 22 02:11 ..\r\nvit@evergreen ~/prjs/gotham $ cargo build --example websocket\r\nerror: no example target named `websocket`\r\nvit@evergreen ~/prjs/gotham $\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/359","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/359/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/359/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/359/events","html_url":"https://github.com/gotham-rs/gotham/issues/359","id":502341980,"node_id":"MDU6SXNzdWU1MDIzNDE5ODA=","number":359,"title":"HandlerError::into_response doesn't log cause","user":{"login":"fpgaminer","id":1585817,"node_id":"MDQ6VXNlcjE1ODU4MTc=","avatar_url":"https://avatars1.githubusercontent.com/u/1585817?v=4","gravatar_id":"","url":"https://api.github.com/users/fpgaminer","html_url":"https://github.com/fpgaminer","followers_url":"https://api.github.com/users/fpgaminer/followers","following_url":"https://api.github.com/users/fpgaminer/following{/other_user}","gists_url":"https://api.github.com/users/fpgaminer/gists{/gist_id}","starred_url":"https://api.github.com/users/fpgaminer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpgaminer/subscriptions","organizations_url":"https://api.github.com/users/fpgaminer/orgs","repos_url":"https://api.github.com/users/fpgaminer/repos","events_url":"https://api.github.com/users/fpgaminer/events{/privacy}","received_events_url":"https://api.github.com/users/fpgaminer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-10-03T23:08:02Z","updated_at":"2020-08-28T15:37:44Z","closed_at":"2020-08-28T15:37:43Z","author_association":"NONE","active_lock_reason":null,"body":"It looks like the code for `HandlerError::into_response` is supposed to log the cause of the error:\r\n\r\nhttps://github.com/gotham-rs/gotham/blob/154034fbe92b5a7ff1b1732b6ddcdf4fb82b31ec/gotham/src/handler/error.rs#L140\r\n\r\nHowever, that doesn't seem to work; on 0.4.0 my logs just show None where the cause description should be.\r\n\r\nAs far as I can tell it's because that line is calling `self.source()`, but `HandlerError` only implements `cause`, not `source`:\r\n\r\nhttps://github.com/gotham-rs/gotham/blob/154034fbe92b5a7ff1b1732b6ddcdf4fb82b31ec/gotham/src/handler/error.rs#L79-L87\r\n\r\nAnd checking `Error`'s default implementation, `source` will indeed return `None` by default.\r\n\r\nThough, I haven't tested a patch to be sure that my theory is correct.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/365","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/365/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/365/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/365/events","html_url":"https://github.com/gotham-rs/gotham/issues/365","id":509978544,"node_id":"MDU6SXNzdWU1MDk5Nzg1NDQ=","number":365,"title":"Make TLS optional","user":{"login":"msrd0","id":7853372,"node_id":"MDQ6VXNlcjc4NTMzNzI=","avatar_url":"https://avatars1.githubusercontent.com/u/7853372?v=4","gravatar_id":"","url":"https://api.github.com/users/msrd0","html_url":"https://github.com/msrd0","followers_url":"https://api.github.com/users/msrd0/followers","following_url":"https://api.github.com/users/msrd0/following{/other_user}","gists_url":"https://api.github.com/users/msrd0/gists{/gist_id}","starred_url":"https://api.github.com/users/msrd0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msrd0/subscriptions","organizations_url":"https://api.github.com/users/msrd0/orgs","repos_url":"https://api.github.com/users/msrd0/repos","events_url":"https://api.github.com/users/msrd0/events{/privacy}","received_events_url":"https://api.github.com/users/msrd0/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-10-21T13:53:07Z","updated_at":"2020-08-28T15:05:04Z","closed_at":"2020-08-28T15:05:04Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"Currently, gotham requires an outdated version of `tokio-rustls` by default, which can't be updated due to version conflicts of `ring` with `jsonwebtoken` (when using the middleware).\r\n\r\nHowever, these version conflicts can also occur in the binary that's using gotham. Therefore I think it would be a good idea to make gotham's tls feature optional. This would be sufficient in my use case since my server is behind a reverse proxy anyways, and doesn't use the jwt middleware. I can't speak for other use cases though.\r\n\r\nSee also https://github.com/gotham-rs/gotham/pull/344 and [the `ring` version conflict](https://travis-ci.org/gotham-rs/gotham/jobs/570756164#L490).","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/111","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/111/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/111/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/111/events","html_url":"https://github.com/gotham-rs/gotham/issues/111","id":290807953,"node_id":"MDU6SXNzdWUyOTA4MDc5NTM=","number":111,"title":"Create multi pipeline example","user":{"login":"bradleybeddoes","id":86558,"node_id":"MDQ6VXNlcjg2NTU4","avatar_url":"https://avatars0.githubusercontent.com/u/86558?v=4","gravatar_id":"","url":"https://api.github.com/users/bradleybeddoes","html_url":"https://github.com/bradleybeddoes","followers_url":"https://api.github.com/users/bradleybeddoes/followers","following_url":"https://api.github.com/users/bradleybeddoes/following{/other_user}","gists_url":"https://api.github.com/users/bradleybeddoes/gists{/gist_id}","starred_url":"https://api.github.com/users/bradleybeddoes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bradleybeddoes/subscriptions","organizations_url":"https://api.github.com/users/bradleybeddoes/orgs","repos_url":"https://api.github.com/users/bradleybeddoes/repos","events_url":"https://api.github.com/users/bradleybeddoes/events{/privacy}","received_events_url":"https://api.github.com/users/bradleybeddoes/received_events","type":"User","site_admin":false},"labels":[{"id":813730960,"node_id":"MDU6TGFiZWw4MTM3MzA5NjA=","url":"https://api.github.com/repos/gotham-rs/gotham/labels/example","name":"example","color":"161f82","default":false,"description":null},{"id":1075834626,"node_id":"MDU6TGFiZWwxMDc1ODM0NjI2","url":"https://api.github.com/repos/gotham-rs/gotham/labels/hacktoberfest","name":"hacktoberfest","color":"d93f0b","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-01-23T11:50:08Z","updated_at":"2020-09-11T09:39:03Z","closed_at":"2020-09-11T09:39:03Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/408","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/408/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/408/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/408/events","html_url":"https://github.com/gotham-rs/gotham/issues/408","id":569333316,"node_id":"MDU6SXNzdWU1NjkzMzMzMTY=","number":408,"title":"Getting full path in handler","user":{"login":"AngelicosPhosphoros","id":13154246,"node_id":"MDQ6VXNlcjEzMTU0MjQ2","avatar_url":"https://avatars2.githubusercontent.com/u/13154246?v=4","gravatar_id":"","url":"https://api.github.com/users/AngelicosPhosphoros","html_url":"https://github.com/AngelicosPhosphoros","followers_url":"https://api.github.com/users/AngelicosPhosphoros/followers","following_url":"https://api.github.com/users/AngelicosPhosphoros/following{/other_user}","gists_url":"https://api.github.com/users/AngelicosPhosphoros/gists{/gist_id}","starred_url":"https://api.github.com/users/AngelicosPhosphoros/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AngelicosPhosphoros/subscriptions","organizations_url":"https://api.github.com/users/AngelicosPhosphoros/orgs","repos_url":"https://api.github.com/users/AngelicosPhosphoros/repos","events_url":"https://api.github.com/users/AngelicosPhosphoros/events{/privacy}","received_events_url":"https://api.github.com/users/AngelicosPhosphoros/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-02-22T13:14:29Z","updated_at":"2020-08-26T14:24:55Z","closed_at":"2020-08-26T14:24:55Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi, guys.\r\n\r\nI want to create multilingual site with path-based language handling.\r\n\r\nConsider we have 3 paths:\r\n`/docs/published/`\r\n`/en/docs/published/`\r\n`/ru/docs/published/`\r\n\r\nRequest with first uri must be redirected to one of other variants, and it is easy to implement.\r\n\r\nBut the other thing that I want the button for language switch on page and hints for search engines about localized version. So in english page must be link to russian version and vice versa. \r\nSo I need to get extra part of the any page after `/en` и `/ru`.\r\n\r\nHow it can be made? I tried borrow `helpers::http::request::path::RequestPathSegments` from state, but all it's getter methods are inaccessible :(","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/288","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/288/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/288/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/288/events","html_url":"https://github.com/gotham-rs/gotham/issues/288","id":379244419,"node_id":"MDU6SXNzdWUzNzkyNDQ0MTk=","number":288,"title":"Can't draw options route correctly by PathExtractor","user":{"login":"frokaikan","id":20294535,"node_id":"MDQ6VXNlcjIwMjk0NTM1","avatar_url":"https://avatars2.githubusercontent.com/u/20294535?v=4","gravatar_id":"","url":"https://api.github.com/users/frokaikan","html_url":"https://github.com/frokaikan","followers_url":"https://api.github.com/users/frokaikan/followers","following_url":"https://api.github.com/users/frokaikan/following{/other_user}","gists_url":"https://api.github.com/users/frokaikan/gists{/gist_id}","starred_url":"https://api.github.com/users/frokaikan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/frokaikan/subscriptions","organizations_url":"https://api.github.com/users/frokaikan/orgs","repos_url":"https://api.github.com/users/frokaikan/repos","events_url":"https://api.github.com/users/frokaikan/events{/privacy}","received_events_url":"https://api.github.com/users/frokaikan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-11-09T17:03:22Z","updated_at":"2020-09-02T17:21:57Z","closed_at":"2020-09-02T17:21:57Z","author_association":"NONE","active_lock_reason":null,"body":"My server needs to support CORS, so I write the following code:\r\n```\r\n#[derive(Clone, NewMiddleware)]\r\npub struct CORSMiddle;\r\n\r\nimpl Middleware for CORSMiddle\r\n{\r\n    fn call<Chain>(self, s : State, chain : Chain) -> Box<HandlerFuture>\r\n    where\r\n        Chain : FnOnce(State) -> Box<HandlerFuture>,\r\n    {\r\n        let f = chain(s).and_then( move |(s, mut res)|\r\n        {\r\n            {\r\n                let headers = res.headers_mut();\r\n                headers.insert(\"Access-Control-Allow-Origin\", \"*\".parse().unwrap());\r\n                headers.insert(\"Access-Control-Allow-Methods\", \"POST, OPTIONS\".parse().unwrap());\r\n                headers.insert(\"Access-Control-Allow-Headers\", \"Content-Type, X-token, X-op, X-cnt, X-logx\".parse().unwrap());\r\n            }\r\n            future::ok((s, res))\r\n        });\r\n        Box::new(f)\r\n    }\r\n}\r\n\r\n#[derive(Deserialize, Serialize, StateData, StaticResponseExtender)]\r\npub struct CORSHelper \r\n{\r\n    #[serde(rename = \"*\")]\r\n    xapi : Vec<String>,\r\n}\r\n\r\npub fn CORS(s : State) -> Box<HandlerFuture>\r\n{\r\n    // let _t = CORSHelper::borrow_from(&s);\r\n    let res = create_empty_response(&s, StatusCode::OK);\r\n    Box::new(future::ok((s, res)))\r\n}\r\n\r\npub fn router() -> Router {\r\n    let CHKMiddle = StateMiddleware::new(checker::new());\r\n    let SEEDMiddle = StateMiddleware::new(seeder::new());\r\n    let LOGMiddle = StateMiddleware::new(logger::new());\r\n    let (chain, pipelines) = single_pipeline(new_pipeline().add(CORSMiddle).add(CHKMiddle).add(SEEDMiddle)/*.add(LOGMiddle)*/.build());\r\n    build_router(chain, pipelines, |route| {\r\n        route.options(\"/api/*\").with_path_extractor::<CORSHelper>().to(CORS);\r\n    })\r\n}\r\n\r\nfn main() {\r\n    let addr = \"127.0.0.1:8080\";\r\n    gotham::start(addr, upper_api::router());\r\n}\r\n\r\n\r\n```\r\nBut when I want to send an options to 127.0.0.1:8080/api/xx, I got a 405 : method not allowed.\r\nIs there anywhere I wrote wrong?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/431","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/431/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/431/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/431/events","html_url":"https://github.com/gotham-rs/gotham/issues/431","id":619511091,"node_id":"MDU6SXNzdWU2MTk1MTEwOTE=","number":431,"title":"Allow ? in routes","user":{"login":"sinistersnare","id":2153833,"node_id":"MDQ6VXNlcjIxNTM4MzM=","avatar_url":"https://avatars1.githubusercontent.com/u/2153833?v=4","gravatar_id":"","url":"https://api.github.com/users/sinistersnare","html_url":"https://github.com/sinistersnare","followers_url":"https://api.github.com/users/sinistersnare/followers","following_url":"https://api.github.com/users/sinistersnare/following{/other_user}","gists_url":"https://api.github.com/users/sinistersnare/gists{/gist_id}","starred_url":"https://api.github.com/users/sinistersnare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sinistersnare/subscriptions","organizations_url":"https://api.github.com/users/sinistersnare/orgs","repos_url":"https://api.github.com/users/sinistersnare/repos","events_url":"https://api.github.com/users/sinistersnare/events{/privacy}","received_events_url":"https://api.github.com/users/sinistersnare/received_events","type":"User","site_admin":false},"labels":[{"id":671377685,"node_id":"MDU6TGFiZWw2NzEzNzc2ODU=","url":"https://api.github.com/repos/gotham-rs/gotham/labels/discussion","name":"discussion","color":"cb4164","default":false,"description":null},{"id":653399737,"node_id":"MDU6TGFiZWw2NTMzOTk3Mzc=","url":"https://api.github.com/repos/gotham-rs/gotham/labels/specification","name":"specification","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/gotham-rs/gotham/milestones/9","html_url":"https://github.com/gotham-rs/gotham/milestone/9","labels_url":"https://api.github.com/repos/gotham-rs/gotham/milestones/9/labels","id":5146489,"node_id":"MDk6TWlsZXN0b25lNTE0NjQ4OQ==","number":9,"title":"0.5","description":"","creator":{"login":"colinbankier","id":806356,"node_id":"MDQ6VXNlcjgwNjM1Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/806356?v=4","gravatar_id":"","url":"https://api.github.com/users/colinbankier","html_url":"https://github.com/colinbankier","followers_url":"https://api.github.com/users/colinbankier/followers","following_url":"https://api.github.com/users/colinbankier/following{/other_user}","gists_url":"https://api.github.com/users/colinbankier/gists{/gist_id}","starred_url":"https://api.github.com/users/colinbankier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colinbankier/subscriptions","organizations_url":"https://api.github.com/users/colinbankier/orgs","repos_url":"https://api.github.com/users/colinbankier/repos","events_url":"https://api.github.com/users/colinbankier/events{/privacy}","received_events_url":"https://api.github.com/users/colinbankier/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":26,"state":"closed","created_at":"2020-02-27T12:41:17Z","updated_at":"2020-09-06T09:36:33Z","due_on":null,"closed_at":"2020-09-05T23:49:50Z"},"comments":11,"created_at":"2020-05-16T16:37:14Z","updated_at":"2020-09-05T23:23:48Z","closed_at":"2020-09-05T23:23:48Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, I want to write code like this: \r\n\r\n```rust\r\nfn homepage(state: State) -> search::Result<(State, Response<Body>)> {\r\n    let a = expr()?\r\n    return (state, a);\r\n}\r\n\r\nfn make_router() -> search::Result<Router> {\r\n    let state = IndexState::new()?;\r\n    let middleware = StateMiddleware::new(state);\r\n    let pipeline = single_middleware(middleware);\r\n    let (chain, pipelines) = single_pipeline(pipeline);\r\n    Ok(build_router(chain, pipelines, |route| {\r\n        route.get(\"/\").to(homepage); // FIXME! doesnt work!\r\n    }))\r\n}\r\n```\r\n\r\nBut the `IntoHandlerFuture` trait does not get auto-impld for `homepage`. Therefore, I cant use `?` in my function body.\r\n\r\nI tried adding the following into gotham:\r\n\r\n```\r\nimpl<T: IntoHandlerFuture, E: IntoHandlerFuture> IntoHandlerFuture for std::result::Result<T, E> {\r\n    fn into_handler_future(self) -> Pin<Box<HandlerFuture>> {\r\n        match self {\r\n            Ok(hf) => hf.into_handler_future(),\r\n            Err(hf) => hf.into_handler_future(),\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nBut I cant `impl IntoHandlerFuture` for my Error type:\r\n\r\n```\r\nimpl IntoHandlerFuture for Error {\r\n    fn into_handler_future(self) -> Pin<Box<HandlerFuture>> {\r\n        future::ok((NO_STATE_AVAILABLE_HERE, response)).boxed()\r\n    }\r\n}\r\n```\r\n\r\nBut there was no way to get the state to return in `into_handler_future`. \r\n\r\nSo I ask, can the API be changed to allow such code? Thank you.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/210","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/210/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/210/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/210/events","html_url":"https://github.com/gotham-rs/gotham/issues/210","id":314313725,"node_id":"MDU6SXNzdWUzMTQzMTM3MjU=","number":210,"title":"State of the Diesel middleware","user":{"login":"ChristophWurst","id":1374172,"node_id":"MDQ6VXNlcjEzNzQxNzI=","avatar_url":"https://avatars3.githubusercontent.com/u/1374172?v=4","gravatar_id":"","url":"https://api.github.com/users/ChristophWurst","html_url":"https://github.com/ChristophWurst","followers_url":"https://api.github.com/users/ChristophWurst/followers","following_url":"https://api.github.com/users/ChristophWurst/following{/other_user}","gists_url":"https://api.github.com/users/ChristophWurst/gists{/gist_id}","starred_url":"https://api.github.com/users/ChristophWurst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChristophWurst/subscriptions","organizations_url":"https://api.github.com/users/ChristophWurst/orgs","repos_url":"https://api.github.com/users/ChristophWurst/repos","events_url":"https://api.github.com/users/ChristophWurst/events{/privacy}","received_events_url":"https://api.github.com/users/ChristophWurst/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2018-04-14T09:15:45Z","updated_at":"2020-08-27T10:15:03Z","closed_at":"2020-08-27T10:15:03Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hello,\r\n\r\nsince the Diesel middleware has been integrated into this [single repository](https://github.com/gotham-rs/gotham/issues/76), it can be found in the *middleware/under_development* folder. Is there anything holding back from publishing an early `0.x` version on crates.io so that people can start experimenting with the middleware and report any missing features or bugs? Did anyone create a backup of the old repo's issues?\r\n\r\nPersonally, I'd like to use the middleware for a few experiments and it's cumbersome to use right now because it's not available on crates.io and the git version depends on Gotham 0.3 (master). I've manually changed to require Gotham 0.2 and it seems to work just fine.\r\n\r\nThanks","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/353","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/353/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/353/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/353/events","html_url":"https://github.com/gotham-rs/gotham/issues/353","id":487928990,"node_id":"MDU6SXNzdWU0ODc5Mjg5OTA=","number":353,"title":"WebSocket","user":{"login":"dns2utf8","id":739070,"node_id":"MDQ6VXNlcjczOTA3MA==","avatar_url":"https://avatars0.githubusercontent.com/u/739070?v=4","gravatar_id":"","url":"https://api.github.com/users/dns2utf8","html_url":"https://github.com/dns2utf8","followers_url":"https://api.github.com/users/dns2utf8/followers","following_url":"https://api.github.com/users/dns2utf8/following{/other_user}","gists_url":"https://api.github.com/users/dns2utf8/gists{/gist_id}","starred_url":"https://api.github.com/users/dns2utf8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dns2utf8/subscriptions","organizations_url":"https://api.github.com/users/dns2utf8/orgs","repos_url":"https://api.github.com/users/dns2utf8/repos","events_url":"https://api.github.com/users/dns2utf8/events{/privacy}","received_events_url":"https://api.github.com/users/dns2utf8/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-09-01T20:42:04Z","updated_at":"2020-06-04T00:23:18Z","closed_at":"2020-06-04T00:23:18Z","author_association":"NONE","active_lock_reason":null,"body":"Hi all\r\n\r\nIs it possible to use a WebSocket with gotham?\r\n\r\nCheers,\r\nStefan","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ZenGo-X/JugglingSwap/issues/1","repository_url":"https://api.github.com/repos/ZenGo-X/JugglingSwap","labels_url":"https://api.github.com/repos/ZenGo-X/JugglingSwap/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/ZenGo-X/JugglingSwap/issues/1/comments","events_url":"https://api.github.com/repos/ZenGo-X/JugglingSwap/issues/1/events","html_url":"https://github.com/ZenGo-X/JugglingSwap/issues/1","id":677895042,"node_id":"MDU6SXNzdWU2Nzc4OTUwNDI=","number":1,"title":"Installation Progress","user":{"login":"dendisuhubdy","id":4477337,"node_id":"MDQ6VXNlcjQ0NzczMzc=","avatar_url":"https://avatars0.githubusercontent.com/u/4477337?v=4","gravatar_id":"","url":"https://api.github.com/users/dendisuhubdy","html_url":"https://github.com/dendisuhubdy","followers_url":"https://api.github.com/users/dendisuhubdy/followers","following_url":"https://api.github.com/users/dendisuhubdy/following{/other_user}","gists_url":"https://api.github.com/users/dendisuhubdy/gists{/gist_id}","starred_url":"https://api.github.com/users/dendisuhubdy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dendisuhubdy/subscriptions","organizations_url":"https://api.github.com/users/dendisuhubdy/orgs","repos_url":"https://api.github.com/users/dendisuhubdy/repos","events_url":"https://api.github.com/users/dendisuhubdy/events{/privacy}","received_events_url":"https://api.github.com/users/dendisuhubdy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-12T18:34:50Z","updated_at":"2020-08-13T02:23:16Z","closed_at":"2020-08-13T02:23:16Z","author_association":"NONE","active_lock_reason":null,"body":"I tried doing `yarn install` and thrown this error\r\n\r\n```\r\n╰─ yarn install                                                                                                                                                                                              ─╯\r\nyarn install v1.22.4\r\n[1/4] 🔍  Resolving packages...\r\n[2/4] 🚚  Fetching packages...\r\n[3/4] 🔗  Linking dependencies...\r\n[4/4] 🔨  Building fresh packages...\r\n[6/11] ⠄ @kzen-networks/thresh-sig\r\n[-/11] ⠄ waiting...\r\n[3/11] ⠄ dlog-verifiable-enc\r\n[-/11] ⠄ waiting...\r\nerror /Users/dendisuhubdy/github/bitwyre/JugglingSwap/node_modules/@kzen-networks/thresh-sig: Command failed.\r\nExit code: 1\r\nCommand: npm run build-rust\r\nArguments:\r\nDirectory: /Users/dendisuhubdy/github/bitwyre/JugglingSwap/node_modules/@kzen-networks/thresh-sig\r\nOutput:\r\nnpm WARN lifecycle The node binary used for scripts is /var/folders/vp/n_ls06695rnd_jn99t8_8lxc0000gn/T/yarn--1597256473295-0.5741766364922438/node but npm is using /Users/dendisuhubdy/.nvm/versions/node/v10.16.0/bin/node itself. Use the `--scripts-prepend-node-path` option to include the path for the node binary npm was executed with.\r\n\r\n> @kzen-networks/thresh-sig@0.4.0 build-rust /Users/dendisuhubdy/github/bitwyre/JugglingSwap/node_modules/@kzen-networks/thresh-sig\r\n> neon build -r\r\n\r\nneon info forcing rebuild for new build settings\r\nneon info running cargo\r\n    Blocking waiting for file lock on package cache\r\n    Updating git repository `https://github.com/KZen-networks/gotham-city`\r\n    Updating git repository `https://github.com/KZen-networks/kms-secp256k1.git`\r\n    Updating git repository `https://github.com/KZen-networks/rust-electrumx-client`\r\n    Updating git repository `https://github.com/KZen-networks/multi-party-ecdsa`\r\n    Updating git repository `https://github.com/KZen-networks/multi-party-eddsa`\r\n    Updating git repository `https://github.com/KZen-networks/multi-party-schnorr`\r\n    Updating git repository `https://github.com/KZen-networks/zk-paillier`\r\n    Updating git repository `https://github.com/KZen-networks/serde_dynamodb`\r\n    Updating git repository `https://github.com/KZen-networks/rust-paillier`\r\n    Blocking waiting for file lock on package cache\r\n Downloading crates ...\r\n  Downloaded core-foundation-sys v0.6.2\r\n  Downloaded ansi_term v0.11.0\r\n  Downloaded futures-cpupool v0.1.8\r\n  Downloaded httparse v1.3.4\r\n  Downloaded error-chain v0.12.1\r\n  Downloaded miniz_oxide v0.3.2\r\n  Downloaded num-integer v0.1.41\r\n  Downloaded parking_lot_core v0.4.0\r\n  Downloaded nodrop v0.1.13\r\n  Downloaded http-body v0.1.0\r\n  Downloaded byte-tools v0.2.0\r\n  Downloaded iovec v0.1.2\r\n  Downloaded arrayvec v0.4.11\r\n  Downloaded proc-macro2 v0.4.30\r\n  Downloaded generic-array v0.9.0\r\n  Downloaded security-framework-sys v0.3.1\r\n  Downloaded scopeguard v0.3.3\r\n  Downloaded stable_deref_trait v1.1.1\r\n  Downloaded serde v0.8.23\r\n  Downloaded memoffset v0.5.1\r\n  Downloaded fnv v1.0.6\r\n  Downloaded digest v0.7.6\r\n  Downloaded lazy_static v0.2.11\r\n  Downloaded block-padding v0.1.4\r\n  Downloaded regex v1.3.1\r\n  Downloaded tokio-fs v0.1.6\r\n  Downloaded strsim v0.8.0\r\n  Downloaded toml v0.4.10\r\n  Downloaded version_check v0.9.1\r\n  Downloaded crypto-mac v0.5.2\r\n  Downloaded tokio-tcp v0.1.3\r\n  Downloaded crossbeam-epoch v0.7.2\r\n  Downloaded unicase v2.5.1\r\n  Downloaded crossbeam-utils v0.6.6\r\n  Downloaded percent-encoding v2.1.0\r\n  Downloaded rustc_version v0.2.3\r\n  Downloaded lock_api v0.1.5\r\n  Downloaded rand_core v0.5.1\r\n  Downloaded bitflags v1.1.0\r\n  Downloaded c2-chacha v0.2.2\r\n  Downloaded mio v0.6.19\r\n  Downloaded spin v0.5.2\r\n  Downloaded scopeguard v1.0.0\r\n  Downloaded reqwest v0.9.20\r\n  Downloaded hashbrown v0.1.8\r\n  Downloaded bindgen v0.47.3\r\n  Downloaded typeable v0.1.2\r\n  Downloaded version_check v0.1.5\r\n  Downloaded untrusted v0.6.2\r\n  Downloaded tokio-current-thread v0.1.6\r\n  Downloaded tokio-threadpool v0.1.15\r\n  Downloaded uuid v0.7.4\r\n  Downloaded want v0.2.0\r\n  Downloaded yaml-rust v0.3.5\r\n  Downloaded cookie_store v0.7.0\r\n  Downloaded walkdir v2.2.9\r\n  Downloaded devise_codegen v0.2.0\r\n  Downloaded core-foundation v0.6.4\r\n  Downloaded yansi v0.5.0\r\n  Downloaded autocfg v0.1.6\r\n  Downloaded config v0.9.3\r\n  Downloaded cfg-if v0.1.9\r\n  Downloaded arrayref v0.3.5\r\n  Downloaded crossbeam-deque v0.7.1\r\n  Downloaded dtoa v0.4.4\r\n  Downloaded env_logger v0.6.2\r\n  Downloaded xml-rs v0.7.0\r\n  Downloaded tokio-buf v0.1.1\r\n  Downloaded tokio-codec v0.1.1\r\n  Downloaded subtle v2.1.1\r\n  Downloaded ryu v1.0.0\r\n  Downloaded synstructure v0.10.2\r\n  Downloaded textwrap v0.11.0\r\n  Downloaded slab v0.4.2\r\n  Downloaded rand_chacha v0.2.1\r\n  Downloaded humantime v1.3.0\r\n  Downloaded failure v0.1.5\r\n  Downloaded itoa v0.4.4\r\n  Downloaded unicode-normalization v0.1.8\r\n  Downloaded serde_json v1.0.40\r\n  Downloaded crossbeam-queue v0.1.2\r\n  Downloaded indexmap v1.2.0\r\n  Downloaded tokio-reactor v0.1.9\r\n  Downloaded traitobject v0.1.0\r\n  Downloaded tokio-executor v0.1.8\r\n  Downloaded url v2.1.0\r\n  Downloaded tokio-timer v0.2.11\r\n  Downloaded smallvec v0.6.10\r\n  Downloaded sha2 v0.7.1\r\n  Downloaded mime_guess v2.0.1\r\n  Downloaded mio-uds v0.6.7\r\n  Downloaded log v0.3.9\r\n  Downloaded unicode-bidi v0.3.4\r\n  Downloaded tokio v0.1.22\r\n  Downloaded time v0.1.42\r\n  Downloaded num_cpus v1.10.1\r\n  Downloaded percent-encoding v1.0.1\r\n  Downloaded parking_lot v0.7.1\r\n  Downloaded quote v0.6.13\r\n  Downloaded quote v1.0.2\r\n  Downloaded rand v0.3.23\r\n  Downloaded peeking_take_while v0.1.2\r\n  Downloaded mime v0.3.14\r\n  Downloaded yaml-rust v0.4.3\r\n  Downloaded pear_codegen v0.1.2\r\n  Downloaded owning_ref v0.4.0\r\n  Downloaded pear v0.1.2\r\n  Downloaded termcolor v1.0.5\r\n  Downloaded num-traits v0.1.43\r\n  Downloaded mime v0.2.6\r\n  Downloaded rayon-core v1.6.0\r\n  Downloaded yansi v0.4.0\r\n  Downloaded try_from v0.3.2\r\n  Downloaded rocket_contrib v0.4.2\r\n  Downloaded regex-syntax v0.6.12\r\n  Downloaded serde_urlencoded v0.5.5\r\n  Downloaded string v0.2.1\r\n  Downloaded safemem v0.3.2\r\n  Downloaded serde_test v0.8.23\r\n  Downloaded sha2 v0.8.0\r\n  Downloaded serde_derive v1.0.101\r\n  Downloaded devise_core v0.2.0\r\n  Downloaded fsevent v0.4.0\r\n  Downloaded hyper-tls v0.3.2\r\n  Downloaded glob v0.2.11\r\n  Downloaded failure_derive v0.1.5\r\n  Downloaded remove_dir_all v0.5.2\r\n  Downloaded time-test v0.2.1\r\n  Downloaded dirs v1.0.5\r\n  Downloaded rustc-demangle v0.1.16\r\n  Downloaded constant_time_eq v0.1.4\r\n  Downloaded cookie v0.11.1\r\n  Downloaded state v0.4.1\r\n  Downloaded serde-hjson v0.8.2\r\n  Downloaded crc32fast v1.2.0\r\n  Downloaded byteorder v1.3.2\r\n  Downloaded aho-corasick v0.7.6\r\n  Downloaded bytes v0.4.12\r\n  Downloaded rand v0.7.1\r\n  Downloaded blake2b_simd v0.5.8\r\n  Downloaded rusoto_core v0.36.0\r\n  Downloaded getrandom v0.1.12\r\n  Downloaded same-file v1.0.5\r\n  Downloaded hyper v0.10.16\r\n  Downloaded hyper v0.12.35\r\n  Downloaded base64 v0.10.1\r\n  Downloaded security-framework v0.3.1\r\n  Downloaded syn v0.15.44\r\n  Downloaded itertools v0.8.0\r\n  Downloaded http v0.1.18\r\n  Downloaded rust-gmp v0.5.0\r\n  Downloaded notify v4.0.13\r\n  Downloaded bech32 v0.7.1\r\n  Downloaded base64 v0.9.3\r\n  Downloaded tokio-sync v0.1.6\r\n  Downloaded proc-macro2 v1.0.3\r\n  Downloaded ucd-util v0.1.5\r\n  Downloaded quick-error v1.2.2\r\n  Downloaded publicsuffix v1.5.3\r\n  Downloaded ppv-lite86 v0.2.5\r\n  Downloaded rust-ini v0.13.0\r\n  Downloaded bit-vec v0.6.1\r\n  Downloaded rocket_http v0.4.2\r\n  Downloaded rustc-serialize v0.3.24\r\n  Downloaded fsevent-sys v2.0.1\r\n  Downloaded nom v4.2.3\r\n  Downloaded num-traits v0.2.8\r\n  Downloaded net2 v0.2.33\r\n  Downloaded rand v0.4.6\r\n  Downloaded native-tls v0.2.3\r\n  Downloaded filetime v0.2.7\r\n  Downloaded memchr v2.2.1\r\n  Downloaded typenum v1.11.2\r\n  Downloaded vec_map v0.8.1\r\n  Downloaded which v2.0.1\r\n  Downloaded unicase v1.4.2\r\n  Downloaded rusoto_credential v0.15.0\r\n  Downloaded bitcoin_hashes v0.7.1\r\n  Downloaded rocksdb v0.10.1\r\n  Downloaded rocket_codegen v0.4.2\r\n  Downloaded tokio-io v0.1.12\r\n  Downloaded unicode-xid v0.1.0\r\n  Downloaded serde v1.0.101\r\n  Downloaded clap v2.33.0\r\n  Downloaded futures v0.1.29\r\n  Downloaded tempfile v3.1.0\r\n  Downloaded rocket v0.4.2\r\n  Downloaded cryptoxide v0.1.2\r\n  Downloaded flate2 v1.0.11\r\n  Downloaded chrono v0.4.9\r\n  Downloaded url v1.7.2\r\n  Downloaded rusoto_dynamodb v0.36.0\r\n  Downloaded backtrace v0.3.37\r\n  Downloaded h2 v0.1.26\r\n  Downloaded idna v0.1.5\r\n  Downloaded clang-sys v0.26.4\r\n  Downloaded linked-hash-map v0.5.2\r\n  Downloaded matches v0.1.8\r\n  Downloaded language-tags v0.2.2\r\n  Downloaded tokio-udp v0.1.5\r\n  Downloaded log v0.4.8\r\n  Downloaded linked-hash-map v0.3.0\r\n  Downloaded jsonwebtoken v6.0.1\r\n  Downloaded syn v1.0.5\r\n  Downloaded rand v0.5.6\r\n  Downloaded rayon v1.2.0\r\n  Downloaded idna v0.2.0\r\n  Downloaded libloading v0.5.2\r\n  Downloaded hmac v0.5.0\r\n  Downloaded cookie v0.12.0\r\n  Downloaded bitcoin v0.20.0\r\n  Downloaded devise v0.2.0\r\n  Downloaded adler32 v1.0.3\r\n  Downloaded cexpr v0.3.5\r\n  Downloaded atty v0.2.13\r\n  Downloaded unicode-width v0.1.6\r\n  Downloaded tokio-uds v0.2.5\r\n  Downloaded try-lock v0.2.2\r\n  Downloaded block-buffer v0.3.3\r\n  Downloaded md5 v0.3.8\r\n  Downloaded libc v0.2.62\r\n  Downloaded backtrace-sys v0.1.31\r\n  Downloaded merkle-sha3 v0.1.0\r\n  Downloaded rust-crypto v0.2.36\r\n  Downloaded encoding_rs v0.8.19\r\n  Downloaded ring v0.14.6\r\n  Downloaded librocksdb-sys v5.18.3\r\n   Compiling libc v0.2.62\r\n   Compiling cfg-if v0.1.9\r\n   Compiling lazy_static v1.4.0\r\n   Compiling semver-parser v0.7.0\r\n   Compiling either v1.5.3\r\n   Compiling arrayvec v0.4.11\r\n   Compiling nodrop v0.1.13\r\n   Compiling byteorder v1.3.2\r\n   Compiling autocfg v0.1.6\r\n   Compiling scopeguard v1.0.0\r\n   Compiling rayon-core v1.6.0\r\n   Compiling rand_core v0.4.2\r\n   Compiling proc-macro2 v1.0.3\r\n   Compiling unicode-xid v0.2.0\r\n   Compiling syn v1.0.5\r\n   Compiling serde v1.0.101\r\n   Compiling log v0.4.8\r\n   Compiling typenum v1.11.2\r\n   Compiling version_check v0.1.5\r\n   Compiling itoa v0.4.4\r\n   Compiling memchr v2.2.1\r\n   Compiling ryu v1.0.0\r\n   Compiling smallvec v0.6.10\r\n   Compiling gcc v0.3.55\r\n   Compiling futures v0.1.29\r\n   Compiling proc-macro2 v0.4.30\r\n   Compiling unicode-xid v0.1.0\r\n   Compiling syn v0.15.44\r\n   Compiling constant_time_eq v0.1.4\r\n   Compiling arrayref v0.3.5\r\n   Compiling byte-tools v0.3.1\r\n   Compiling hex v0.3.2\r\n   Compiling bitflags v1.1.0\r\n   Compiling scopeguard v0.3.3\r\n   Compiling opaque-debug v0.2.3\r\n   Compiling matches v0.1.8\r\n   Compiling slab v0.4.2\r\n   Compiling rustc-serialize v0.3.24\r\n   Compiling keccak v0.1.0\r\n   Compiling zeroize v0.10.1\r\n   Compiling regex-syntax v0.6.12\r\n   Compiling fnv v1.0.6\r\n   Compiling stable_deref_trait v1.1.1\r\n   Compiling percent-encoding v1.0.1\r\n   Compiling httparse v1.3.4\r\n   Compiling getrandom v0.1.12\r\n   Compiling indexmap v1.2.0\r\n   Compiling fake-simd v0.1.2\r\n   Compiling rustc-demangle v0.1.16\r\n   Compiling core-foundation-sys v0.6.2\r\n   Compiling failure_derive v0.1.5\r\n   Compiling ppv-lite86 v0.2.5\r\n   Compiling safemem v0.3.2\r\n   Compiling try-lock v0.2.2\r\n   Compiling yansi v0.4.0\r\n   Compiling remove_dir_all v0.5.2\r\n   Compiling yansi v0.5.0\r\n   Compiling version_check v0.9.1\r\n   Compiling native-tls v0.2.3\r\n   Compiling subtle v1.0.0\r\n   Compiling unicode-width v0.1.6\r\n   Compiling glob v0.2.11\r\n   Compiling vec_map v0.8.1\r\n   Compiling typeable v0.1.2\r\n   Compiling yaml-rust v0.3.5\r\n   Compiling traitobject v0.1.0\r\n   Compiling ansi_term v0.11.0\r\n   Compiling language-tags v0.2.2\r\n   Compiling strsim v0.8.0\r\n   Compiling percent-encoding v2.1.0\r\n   Compiling quick-error v1.2.2\r\n   Compiling ucd-util v0.1.5\r\n   Compiling regex v0.2.11\r\n   Compiling bit-vec v0.6.1\r\n   Compiling state v0.4.1\r\n   Compiling crc32fast v1.2.0\r\n   Compiling adler32 v1.0.3\r\n   Compiling encoding_rs v0.8.19\r\n   Compiling utf8-ranges v1.0.4\r\n   Compiling bindgen v0.47.3\r\n   Compiling same-file v1.0.5\r\n   Compiling termcolor v1.0.5\r\n   Compiling subtle v2.1.1\r\nerror: the legacy LLVM-style asm! syntax is no longer supported\r\n   --> /Users/dendisuhubdy/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.1.1/src/lib.rs:151:14\r\n    |\r\n151 |     unsafe { asm!(\"\" :: \"r\"(&input) :: \"volatile\") }\r\n    |              ----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    |              |\r\n    |              help: replace with: `llvm_asm!`\r\n    |\r\n    = note: consider migrating to the new asm! syntax specified in RFC 2873\r\n    = note: alternatively, switch to llvm_asm! to keep your code working as it is\r\n\r\nerror[E0554]: `#![feature]` may not be used on the stable release channel\r\n  --> /Users/dendisuhubdy/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.1.1/src/lib.rs:12:34\r\n   |\r\n12 | #![cfg_attr(feature = \"nightly\", feature(asm))]\r\n   |                                  ^^^^^^^^^^^^\r\n\r\nerror[E0554]: `#![feature]` may not be used on the stable release channel\r\n  --> /Users/dendisuhubdy/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.1.1/src/lib.rs:13:34\r\n   |\r\n13 | #![cfg_attr(feature = \"nightly\", feature(external_doc))]\r\n   |                                  ^^^^^^^^^^^^^^^^^^^^^\r\n\r\n   Compiling serde v0.8.23\r\nerror: aborting due to 3 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0554`.\r\nerror: could not compile `subtle`.\r\n\r\nTo learn more, run the command again with --verbose.\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: build failed\r\nneon ERR! cargo build failed\r\n\r\nError: cargo build failed\r\n    at Target.<anonymous> (/Users/dendisuhubdy/github/bitwyre/JugglingSwap/node_modules/neon-cli/lib/target.js:121:35)\r\n    at step (/Users/dendisuhubdy/github/bitwyre/JugglingSwap/node_modules/neon-cli/lib/target.js:32:23)\r\n    at Object.next (/Users/dendisuhubdy/github/bitwyre/JugglingSwap/node_modules/neon-cli/lib/target.js:13:53)\r\n    at fulfilled (/Users/dendisuhubdy/github/bitwyre/JugglingSwap/node_modules/neon-cli/lib/target.js:4:58)\r\n    at process._tickCallback (internal/process/next_tick.js:68:7)\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! @kzen-networks/thresh-sig@0.4.0 build-rust: `neon build -r`\r\nnpm ERR! Exit status 1\r\nnpm ERR!\r\nnpm ERR! Failed at the @kzen-networks/thresh-sig@0.4.0 build-rust script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/260","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/260/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/260/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/260/events","html_url":"https://github.com/gotham-rs/gotham/issues/260","id":343401772,"node_id":"MDU6SXNzdWUzNDM0MDE3NzI=","number":260,"title":"Add an example of how to customize error responses with a finalizer.","user":{"login":"colinbankier","id":806356,"node_id":"MDQ6VXNlcjgwNjM1Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/806356?v=4","gravatar_id":"","url":"https://api.github.com/users/colinbankier","html_url":"https://github.com/colinbankier","followers_url":"https://api.github.com/users/colinbankier/followers","following_url":"https://api.github.com/users/colinbankier/following{/other_user}","gists_url":"https://api.github.com/users/colinbankier/gists{/gist_id}","starred_url":"https://api.github.com/users/colinbankier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colinbankier/subscriptions","organizations_url":"https://api.github.com/users/colinbankier/orgs","repos_url":"https://api.github.com/users/colinbankier/repos","events_url":"https://api.github.com/users/colinbankier/events{/privacy}","received_events_url":"https://api.github.com/users/colinbankier/received_events","type":"User","site_admin":false},"labels":[{"id":813730960,"node_id":"MDU6TGFiZWw4MTM3MzA5NjA=","url":"https://api.github.com/repos/gotham-rs/gotham/labels/example","name":"example","color":"161f82","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-07-22T12:20:51Z","updated_at":"2020-03-05T03:33:44Z","closed_at":"2020-03-05T03:33:44Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"There currently seems to be no example of how to customize the response for 404, 500 etc.\r\nFinalizers exist for this purpose, https://github.com/gotham-rs/gotham/blob/master/gotham/src/router/response/finalizer.rs.\r\n\r\nThis issue is to add an example of how to use them.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/hibernate/hibernate-reactive/issues/279","repository_url":"https://api.github.com/repos/hibernate/hibernate-reactive","labels_url":"https://api.github.com/repos/hibernate/hibernate-reactive/issues/279/labels{/name}","comments_url":"https://api.github.com/repos/hibernate/hibernate-reactive/issues/279/comments","events_url":"https://api.github.com/repos/hibernate/hibernate-reactive/issues/279/events","html_url":"https://github.com/hibernate/hibernate-reactive/issues/279","id":653838686,"node_id":"MDU6SXNzdWU2NTM4Mzg2ODY=","number":279,"title":"Support for custom UserTypes","user":{"login":"akoufa","id":4354310,"node_id":"MDQ6VXNlcjQzNTQzMTA=","avatar_url":"https://avatars3.githubusercontent.com/u/4354310?v=4","gravatar_id":"","url":"https://api.github.com/users/akoufa","html_url":"https://github.com/akoufa","followers_url":"https://api.github.com/users/akoufa/followers","following_url":"https://api.github.com/users/akoufa/following{/other_user}","gists_url":"https://api.github.com/users/akoufa/gists{/gist_id}","starred_url":"https://api.github.com/users/akoufa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akoufa/subscriptions","organizations_url":"https://api.github.com/users/akoufa/orgs","repos_url":"https://api.github.com/users/akoufa/repos","events_url":"https://api.github.com/users/akoufa/events{/privacy}","received_events_url":"https://api.github.com/users/akoufa/received_events","type":"User","site_admin":false},"labels":[{"id":1801558367,"node_id":"MDU6TGFiZWwxODAxNTU4MzY3","url":"https://api.github.com/repos/hibernate/hibernate-reactive/labels/design","name":"design","color":"006b75","default":false,"description":"A design or implementation issue"}],"state":"closed","locked":false,"assignee":{"login":"DavideD","id":559221,"node_id":"MDQ6VXNlcjU1OTIyMQ==","avatar_url":"https://avatars1.githubusercontent.com/u/559221?v=4","gravatar_id":"","url":"https://api.github.com/users/DavideD","html_url":"https://github.com/DavideD","followers_url":"https://api.github.com/users/DavideD/followers","following_url":"https://api.github.com/users/DavideD/following{/other_user}","gists_url":"https://api.github.com/users/DavideD/gists{/gist_id}","starred_url":"https://api.github.com/users/DavideD/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DavideD/subscriptions","organizations_url":"https://api.github.com/users/DavideD/orgs","repos_url":"https://api.github.com/users/DavideD/repos","events_url":"https://api.github.com/users/DavideD/events{/privacy}","received_events_url":"https://api.github.com/users/DavideD/received_events","type":"User","site_admin":false},"assignees":[{"login":"DavideD","id":559221,"node_id":"MDQ6VXNlcjU1OTIyMQ==","avatar_url":"https://avatars1.githubusercontent.com/u/559221?v=4","gravatar_id":"","url":"https://api.github.com/users/DavideD","html_url":"https://github.com/DavideD","followers_url":"https://api.github.com/users/DavideD/followers","following_url":"https://api.github.com/users/DavideD/following{/other_user}","gists_url":"https://api.github.com/users/DavideD/gists{/gist_id}","starred_url":"https://api.github.com/users/DavideD/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DavideD/subscriptions","organizations_url":"https://api.github.com/users/DavideD/orgs","repos_url":"https://api.github.com/users/DavideD/repos","events_url":"https://api.github.com/users/DavideD/events{/privacy}","received_events_url":"https://api.github.com/users/DavideD/received_events","type":"User","site_admin":false},{"login":"gavinking","id":579974,"node_id":"MDQ6VXNlcjU3OTk3NA==","avatar_url":"https://avatars2.githubusercontent.com/u/579974?v=4","gravatar_id":"","url":"https://api.github.com/users/gavinking","html_url":"https://github.com/gavinking","followers_url":"https://api.github.com/users/gavinking/followers","following_url":"https://api.github.com/users/gavinking/following{/other_user}","gists_url":"https://api.github.com/users/gavinking/gists{/gist_id}","starred_url":"https://api.github.com/users/gavinking/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gavinking/subscriptions","organizations_url":"https://api.github.com/users/gavinking/orgs","repos_url":"https://api.github.com/users/gavinking/repos","events_url":"https://api.github.com/users/gavinking/events{/privacy}","received_events_url":"https://api.github.com/users/gavinking/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/hibernate/hibernate-reactive/milestones/1","html_url":"https://github.com/hibernate/hibernate-reactive/milestone/1","labels_url":"https://api.github.com/repos/hibernate/hibernate-reactive/milestones/1/labels","id":5004620,"node_id":"MDk6TWlsZXN0b25lNTAwNDYyMA==","number":1,"title":"FIRST CUT","description":"","creator":{"login":"gavinking","id":579974,"node_id":"MDQ6VXNlcjU3OTk3NA==","avatar_url":"https://avatars2.githubusercontent.com/u/579974?v=4","gravatar_id":"","url":"https://api.github.com/users/gavinking","html_url":"https://github.com/gavinking","followers_url":"https://api.github.com/users/gavinking/followers","following_url":"https://api.github.com/users/gavinking/following{/other_user}","gists_url":"https://api.github.com/users/gavinking/gists{/gist_id}","starred_url":"https://api.github.com/users/gavinking/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gavinking/subscriptions","organizations_url":"https://api.github.com/users/gavinking/orgs","repos_url":"https://api.github.com/users/gavinking/repos","events_url":"https://api.github.com/users/gavinking/events{/privacy}","received_events_url":"https://api.github.com/users/gavinking/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":147,"state":"open","created_at":"2020-01-14T19:07:52Z","updated_at":"2020-10-26T10:06:35Z","due_on":null,"closed_at":null},"comments":28,"created_at":"2020-07-09T07:41:10Z","updated_at":"2020-07-30T10:46:56Z","closed_at":"2020-07-30T10:45:08Z","author_association":"NONE","active_lock_reason":null,"body":"Hello to all. Does Hibernate Reactive support custom UserTypes? I want to use Postgres JSONB Type and for that I was using the following library https://github.com/vladmihalcea/hibernate-types which builds it's custom types based on Hibernate's[AbstractSingleColumnStandardBasicType](https://docs.jboss.org/hibernate/orm/5.4/javadocs/org/hibernate/type/AbstractSingleColumnStandardBasicType.html). Unfortunately just moving from Hibernate to Hibernate Reactive the columns that use these types are always null in the entities. As an alternative I found this [article](https://thorben-janssen.com/persist-postgresqls-jsonb-data-type-hibernate/) which builds it's JSONB Postgres support on the Hibernate's [UserType](https://docs.jboss.org/hibernate/orm/5.4/javadocs/org/hibernate/usertype/UserType.html). Is there any known limitation around defining custom types and using Hibernate Reactive at the moment ?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/routerify/routerify/issues/17","repository_url":"https://api.github.com/repos/routerify/routerify","labels_url":"https://api.github.com/repos/routerify/routerify/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/routerify/routerify/issues/17/comments","events_url":"https://api.github.com/repos/routerify/routerify/issues/17/events","html_url":"https://github.com/routerify/routerify/issues/17","id":627629660,"node_id":"MDU6SXNzdWU2Mjc2Mjk2NjA=","number":17,"title":"Separate data for scoped sub-routers?","user":{"login":"seanpianka","id":15352684,"node_id":"MDQ6VXNlcjE1MzUyNjg0","avatar_url":"https://avatars3.githubusercontent.com/u/15352684?v=4","gravatar_id":"","url":"https://api.github.com/users/seanpianka","html_url":"https://github.com/seanpianka","followers_url":"https://api.github.com/users/seanpianka/followers","following_url":"https://api.github.com/users/seanpianka/following{/other_user}","gists_url":"https://api.github.com/users/seanpianka/gists{/gist_id}","starred_url":"https://api.github.com/users/seanpianka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/seanpianka/subscriptions","organizations_url":"https://api.github.com/users/seanpianka/orgs","repos_url":"https://api.github.com/users/seanpianka/repos","events_url":"https://api.github.com/users/seanpianka/events{/privacy}","received_events_url":"https://api.github.com/users/seanpianka/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":20,"created_at":"2020-05-30T02:07:47Z","updated_at":"2020-05-30T21:41:06Z","closed_at":"2020-05-30T21:39:47Z","author_association":"NONE","active_lock_reason":null,"body":"Thanks for the update to add state to routers! It's an absolutely major feature that, in combination with the support for middleware and scopes, sets this crate apart from others. However, I'm running into unexpected behavior with setting data/state on scoped routers.\r\n\r\n# Summary\r\n`.data` can only be called on the top-most router. Any `.data` calls on scoped routers will not be set correctly, such that attempts to access via `req.data::<T>().unwrap()` will always return `None`.\r\n\r\n# Expected Behavior\r\n\r\nWhen I create a sub-router and add it as a scope within a parent router via `Router::builder().scope(...)`, the router passed into `scope(...)` should support having its own data.\r\n\r\nIn the below code example, I expect `GET /v1/users` to return `20` when the server below is being run. However, it panics when attempting to unwrap the data within the handler.\r\n\r\n## Full Code Example\r\n\r\n```rust\r\nuse hyper::{Body, Request, Response, Server};\r\n// Import the routerify prelude traits.\r\nuse routerify::prelude::*;\r\nuse routerify::{Router, RouterService};\r\nuse std::io;\r\nuse std::net::SocketAddr;\r\nuse std::sync::{Arc, Mutex};\r\n\r\nmod users {\r\n    use super::*;\r\n\r\n    struct State {\r\n        count: Arc<Mutex<u8>>,\r\n    }\r\n\r\n    async fn list(req: Request<Body>) -> Result<Response<Body>, io::Error> {\r\n        let count = req.data::<State>().unwrap().count.lock().unwrap();\r\n        Ok(Response::new(Body::from(format!(\"Suppliers: {}\", count))))\r\n    }\r\n\r\n    pub fn router() -> Router<Body, io::Error> {\r\n        let state = State {\r\n            count: Arc::new(Mutex::new(20)),\r\n        };\r\n        Router::builder()\r\n            .data(state)\r\n            .get(\"/\", list)\r\n            .build()\r\n            .unwrap()\r\n    }\r\n}\r\n\r\nmod offers {\r\n    use super::*;\r\n\r\n    struct State {\r\n        count: Arc<Mutex<u8>>,\r\n    }\r\n\r\n    async fn list(req: Request<Body>) -> Result<Response<Body>, io::Error> {\r\n        let count = req.data::<State>().unwrap().count.lock().unwrap();\r\n        Ok(Response::new(Body::from(format!(\"Suppliers: {}\", count))))\r\n    }\r\n\r\n    pub fn router() -> Router<Body, io::Error> {\r\n        let state = State {\r\n            count: Arc::new(Mutex::new(100)),\r\n        };\r\n        Router::builder()\r\n            .data(state)\r\n            .get(\"/\", list)\r\n            .build()\r\n            .unwrap()\r\n    }\r\n}\r\n\r\n#[tokio::main]\r\nasync fn main() {\r\n    let scopes = Router::builder()\r\n        .scope(\"/offers\", offers::router())\r\n        .scope(\"/users\", users::router())\r\n        .build()\r\n        .unwrap();\r\n    let router = Router::builder().scope(\"/v1\", scopes).build().unwrap();\r\n    // API Tree:\r\n    //   /v1/users/ -> users::list   // returns 20\r\n    //   /v1/offers/ -> offers::list // returns 100\r\n    let service = RouterService::new(router).unwrap();\r\n    let addr = SocketAddr::from(([127, 0, 0, 1], 3001));\r\n    let server = Server::bind(&addr).serve(service);\r\n    println!(\"App is running on: {}\", addr);\r\n    if let Err(err) = server.await {\r\n        eprintln!(\"Server error: {}\", err);\r\n    }\r\n}\r\n```\r\n\r\n# Output\r\n\r\nThe above code panics when making a request with this message:\r\n\r\n```\r\nthread 'tokio-runtime-worker' panicked at 'called `Option::unwrap()` on a `None` value', src/main.rs:40:21\r\n```\r\n\r\nWhich is thrown from this line in the `offers::list` handler:\r\n\r\n```\r\nlet count = req.data::<State>().unwrap().count.lock().unwrap();\r\n```\r\n\r\n# Solution\r\n\r\nThe solution here is to call `.data` on the top-most/parent router with the state required by all scopes. \r\n\r\nIt would be nice if we could customize what `State` struct definition we use for each individual scope, since not all scopes require the same state.\r\n\r\n## Full Code Example\r\n\r\n```rust\r\nuse hyper::{Body, Request, Response, Server};\r\n// Import the routerify prelude traits.\r\nuse routerify::prelude::*;\r\nuse routerify::{Router, RouterService};\r\nuse std::io;\r\nuse std::net::SocketAddr;\r\nuse std::sync::{Arc, Mutex};\r\n\r\nmod users {\r\n    use super::*;\r\n\r\n    async fn list(req: Request<Body>) -> Result<Response<Body>, io::Error> {\r\n        let count = req.data::<State>().unwrap().users_count.lock().unwrap();\r\n        Ok(Response::new(Body::from(format!(\"Suppliers: {}\", count))))\r\n    }\r\n\r\n    pub fn router() -> Router<Body, io::Error> {\r\n        Router::builder().get(\"/\", list).build().unwrap()\r\n    }\r\n}\r\n\r\nmod offers {\r\n    use super::*;\r\n\r\n    async fn list(req: Request<Body>) -> Result<Response<Body>, io::Error> {\r\n        let count = req.data::<State>().unwrap().offers_count.lock().unwrap();\r\n        Ok(Response::new(Body::from(format!(\"Suppliers: {}\", count))))\r\n    }\r\n\r\n    pub fn router() -> Router<Body, io::Error> {\r\n        Router::builder().get(\"/\", list).build().unwrap()\r\n    }\r\n}\r\n\r\nstruct State {\r\n    offers_count: Arc<Mutex<u8>>,\r\n    users_count: Arc<Mutex<u8>>,\r\n}\r\n\r\n#[tokio::main]\r\nasync fn main() {\r\n    let state = State {\r\n        offers_count: Arc::new(Mutex::new(100)),\r\n        users_count: Arc::new(Mutex::new(20)),\r\n    };\r\n    let scopes = Router::builder()\r\n        .scope(\"/offers\", offers::router())\r\n        .scope(\"/users\", users::router())\r\n        .build()\r\n        .unwrap();\r\n    let router = Router::builder()\r\n        .data(state)\r\n        .scope(\"/v1\", scopes)\r\n        .build()\r\n        .unwrap();\r\n    // API Tree:\r\n    //   /v1/users/ -> users::list   // returns 20\r\n    //   /v1/offers/ -> offers::list // returns 100\r\n    let service = RouterService::new(router).unwrap();\r\n    let addr = SocketAddr::from(([127, 0, 0, 1], 3001));\r\n    let server = Server::bind(&addr).serve(service);\r\n    println!(\"App is running on: {}\", addr);\r\n    if let Err(err) = server.await {\r\n        eprintln!(\"Server error: {}\", err);\r\n    }\r\n}\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/385","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/385/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/385/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/385/events","html_url":"https://github.com/gotham-rs/gotham/issues/385","id":543984330,"node_id":"MDU6SXNzdWU1NDM5ODQzMzA=","number":385,"title":"hyper should be re-exported by gotham","user":{"login":"pksunkara","id":174703,"node_id":"MDQ6VXNlcjE3NDcwMw==","avatar_url":"https://avatars0.githubusercontent.com/u/174703?v=4","gravatar_id":"","url":"https://api.github.com/users/pksunkara","html_url":"https://github.com/pksunkara","followers_url":"https://api.github.com/users/pksunkara/followers","following_url":"https://api.github.com/users/pksunkara/following{/other_user}","gists_url":"https://api.github.com/users/pksunkara/gists{/gist_id}","starred_url":"https://api.github.com/users/pksunkara/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pksunkara/subscriptions","organizations_url":"https://api.github.com/users/pksunkara/orgs","repos_url":"https://api.github.com/users/pksunkara/repos","events_url":"https://api.github.com/users/pksunkara/events{/privacy}","received_events_url":"https://api.github.com/users/pksunkara/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2019-12-30T19:20:44Z","updated_at":"2020-01-21T00:53:56Z","closed_at":"2020-01-21T00:53:56Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Since it is pretty much bound to our handlers, we should just re-export `hyper` and update examples and docs to use `gotham::hyper`","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/hyperium/hyper/issues/2006","repository_url":"https://api.github.com/repos/hyperium/hyper","labels_url":"https://api.github.com/repos/hyperium/hyper/issues/2006/labels{/name}","comments_url":"https://api.github.com/repos/hyperium/hyper/issues/2006/comments","events_url":"https://api.github.com/repos/hyperium/hyper/issues/2006/events","html_url":"https://github.com/hyperium/hyper/issues/2006","id":520006613,"node_id":"MDU6SXNzdWU1MjAwMDY2MTM=","number":2006,"title":"upgrade expected but low level API in use when using gotham w/ websocket","user":{"login":"SchrodingerZhu","id":20108837,"node_id":"MDQ6VXNlcjIwMTA4ODM3","avatar_url":"https://avatars1.githubusercontent.com/u/20108837?v=4","gravatar_id":"","url":"https://api.github.com/users/SchrodingerZhu","html_url":"https://github.com/SchrodingerZhu","followers_url":"https://api.github.com/users/SchrodingerZhu/followers","following_url":"https://api.github.com/users/SchrodingerZhu/following{/other_user}","gists_url":"https://api.github.com/users/SchrodingerZhu/gists{/gist_id}","starred_url":"https://api.github.com/users/SchrodingerZhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SchrodingerZhu/subscriptions","organizations_url":"https://api.github.com/users/SchrodingerZhu/orgs","repos_url":"https://api.github.com/users/SchrodingerZhu/repos","events_url":"https://api.github.com/users/SchrodingerZhu/events{/privacy}","received_events_url":"https://api.github.com/users/SchrodingerZhu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-11-08T13:10:57Z","updated_at":"2019-12-04T19:56:53Z","closed_at":"2019-12-04T19:56:52Z","author_association":"NONE","active_lock_reason":null,"body":"Gotham's example of websocket is broken on my computer. Its hyper keeps complaining \"upgrade expected but low level API in use\".\r\n\r\nhttps://github.com/gotham-rs/gotham/tree/master/examples/websocket","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/371","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/371/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/371/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/371/events","html_url":"https://github.com/gotham-rs/gotham/issues/371","id":520800749,"node_id":"MDU6SXNzdWU1MjA4MDA3NDk=","number":371,"title":"What means blockchain keyword on crates.io?","user":{"login":"AngelicosPhosphoros","id":13154246,"node_id":"MDQ6VXNlcjEzMTU0MjQ2","avatar_url":"https://avatars2.githubusercontent.com/u/13154246?v=4","gravatar_id":"","url":"https://api.github.com/users/AngelicosPhosphoros","html_url":"https://github.com/AngelicosPhosphoros","followers_url":"https://api.github.com/users/AngelicosPhosphoros/followers","following_url":"https://api.github.com/users/AngelicosPhosphoros/following{/other_user}","gists_url":"https://api.github.com/users/AngelicosPhosphoros/gists{/gist_id}","starred_url":"https://api.github.com/users/AngelicosPhosphoros/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AngelicosPhosphoros/subscriptions","organizations_url":"https://api.github.com/users/AngelicosPhosphoros/orgs","repos_url":"https://api.github.com/users/AngelicosPhosphoros/repos","events_url":"https://api.github.com/users/AngelicosPhosphoros/events{/privacy}","received_events_url":"https://api.github.com/users/AngelicosPhosphoros/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-11-11T08:09:34Z","updated_at":"2019-11-14T06:56:57Z","closed_at":"2019-11-14T06:56:57Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"You are the web-framework, am I right?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/rust-lang/rust-mode/issues/302","repository_url":"https://api.github.com/repos/rust-lang/rust-mode","labels_url":"https://api.github.com/repos/rust-lang/rust-mode/issues/302/labels{/name}","comments_url":"https://api.github.com/repos/rust-lang/rust-mode/issues/302/comments","events_url":"https://api.github.com/repos/rust-lang/rust-mode/issues/302/events","html_url":"https://github.com/rust-lang/rust-mode/issues/302","id":427121800,"node_id":"MDU6SXNzdWU0MjcxMjE4MDA=","number":302,"title":"Rustc error containing dash doesn't match `compilation-mode` regexp","user":{"login":"snizovtsev","id":207892,"node_id":"MDQ6VXNlcjIwNzg5Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/207892?v=4","gravatar_id":"","url":"https://api.github.com/users/snizovtsev","html_url":"https://github.com/snizovtsev","followers_url":"https://api.github.com/users/snizovtsev/followers","following_url":"https://api.github.com/users/snizovtsev/following{/other_user}","gists_url":"https://api.github.com/users/snizovtsev/gists{/gist_id}","starred_url":"https://api.github.com/users/snizovtsev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/snizovtsev/subscriptions","organizations_url":"https://api.github.com/users/snizovtsev/orgs","repos_url":"https://api.github.com/users/snizovtsev/repos","events_url":"https://api.github.com/users/snizovtsev/events{/privacy}","received_events_url":"https://api.github.com/users/snizovtsev/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-29T18:24:26Z","updated_at":"2019-11-04T11:03:23Z","closed_at":"2019-11-04T11:03:23Z","author_association":"NONE","active_lock_reason":null,"body":"`compile.el` regexps fails to highlight link to the source code if error message contains dash.\r\nThis happens because `rust-mode` wrongly assumes that there is no dashes before `-->` marker:\r\n\r\nhttps://github.com/rust-lang/rust-mode/blob/a871d108c745276e93ff1dec7c65e2e5a57e6d8c/rust-mode.el#L1609-L1616\r\n\r\nSo in this `compilation-mode` buffer hyperlink to the `main.rs` is broken:\r\n```\r\nerror[E0277]: expected a `std::ops::Fn<()>` closure, found `std::result::Result<fn(gotham::state::State) -> (gotham::state::State, &'static str) {say_hello}, _>`\r\n  --> src/main.rs:12:5\r\n   |\r\n12 |     gotham::start(bind_addr, Ok(say_hello));\r\n   |     ^^^^^^^^^^^^^ expected an `Fn<()>` closure, found `std::result::Result<fn(gotham::state::State) -> (gotham::state::State, &'static str) {say_hello}, _>`\r\n   |\r\n   = help: the trait `std::ops::Fn<()>` is not implemented for `std::result::Result<fn(gotham::state::State) -> (gotham::state::State, &'static str) {say_hello}, _>`\r\n   = note: wrap the `std::result::Result<fn(gotham::state::State) -> (gotham::state::State, &'static str) {say_hello}, _>` in a closure with no arguments: `|| { /* code */ }\r\n   = note: required because of the requirements on the impl of `gotham::handler::NewHandler` for `std::result::Result<fn(gotham::state::State) -> (gotham::state::State, &'static str) {say_hello}, _>`\r\n   = note: required by `gotham::start`\r\n```\r\nWe can explore `compilation-debug` text property with `M-x describe-text-property` and see that built-in [gnu rule](https://github.com/emacs-mirror/emacs/blob/273d7b3ee0f4841c7f3f112aeb2e29db51a642e7/lisp/progmodes/compile.el#L253) matches.\r\n\r\nIdeally, as Emacs code says, all registered regexps should be tested together to avoid conflicts:\r\n```elisp\r\n;; If you make any changes to `compilation-error-regexp-alist-alist',\r\n;; be sure to run the ERT test in test/lisp/progmodes/compile-tests.el.\r\n;; emacs -batch -l compile-tests.el -f ert-run-tests-batch-and-exit\r\n(defvar compilation-error-regexp-alist-alist\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/servo/rust-url/issues/566","repository_url":"https://api.github.com/repos/servo/rust-url","labels_url":"https://api.github.com/repos/servo/rust-url/issues/566/labels{/name}","comments_url":"https://api.github.com/repos/servo/rust-url/issues/566/comments","events_url":"https://api.github.com/repos/servo/rust-url/issues/566/events","html_url":"https://github.com/servo/rust-url/issues/566","id":528350061,"node_id":"MDU6SXNzdWU1MjgzNTAwNjE=","number":566,"title":"Minimum supported Rust version v.s. SemVer","user":{"login":"rjloura","id":2086393,"node_id":"MDQ6VXNlcjIwODYzOTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2086393?v=4","gravatar_id":"","url":"https://api.github.com/users/rjloura","html_url":"https://github.com/rjloura","followers_url":"https://api.github.com/users/rjloura/followers","following_url":"https://api.github.com/users/rjloura/following{/other_user}","gists_url":"https://api.github.com/users/rjloura/gists{/gist_id}","starred_url":"https://api.github.com/users/rjloura/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rjloura/subscriptions","organizations_url":"https://api.github.com/users/rjloura/orgs","repos_url":"https://api.github.com/users/rjloura/repos","events_url":"https://api.github.com/users/rjloura/events{/privacy}","received_events_url":"https://api.github.com/users/rjloura/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":30,"created_at":"2019-11-25T21:34:45Z","updated_at":"2020-01-07T10:59:48Z","closed_at":"2020-01-07T10:59:48Z","author_association":"NONE","active_lock_reason":null,"body":"When running clippy on rust 1.35 I encounter the following error:\r\n```\r\nerror[E0658]: use of unstable library feature 'alloc': this library is unlikely to be stabilized in its current form or name (see issue #27783)\r\n  --> /home/rui/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.0.0/lib.rs:38:1\r\n   |\r\n38 | extern crate alloc;\r\n   | ^^^^^^^^^^^^^^^^^^^\r\n\r\n```\r\n\r\nFor my project the url crate is pulled in by gotham, but this occurs when I run clippy on `rust-url` by itself.  The tree is:\r\n```\r\n$ cargo tree\r\nurl v2.1.0 (/home/rui/git/rust-url)\r\n├── idna v0.2.0 (/home/rui/git/rust-url/idna)\r\n│   ├── matches v0.1.8\r\n│   ├── unicode-bidi v0.3.4\r\n│   │   └── matches v0.1.8 (*)\r\n│   └── unicode-normalization v0.1.11\r\n│       └── smallvec v1.0.0 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\r\n├── matches v0.1.8 (*)\r\n└── percent-encoding v2.1.0 (/home/rui/git/rust-url/percent_encoding)\r\nSNIP!\r\n```\r\n\r\nWhat I don't understand is how this tree was built.  `idna` is currently at version `0.2.0` and it specifies `unicode-normalization` version of `0.1.5` (https://github.com/servo/rust-url/blob/master/idna/Cargo.toml).\r\n\r\nThe only thing I did notice was that unicode-normalization was bumped to it's new version 3 days ago and that brought in the `smallvec v1.0.0` dependency. (https://github.com/unicode-rs/unicode-normalization/blame/master/Cargo.toml)\r\n\r\nFor this project I need to stay on rust 1.35.  I am not sure why the dependency tree changed without the `rust-url` version changing.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/358","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/358/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/358/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/358/events","html_url":"https://github.com/gotham-rs/gotham/issues/358","id":498055411,"node_id":"MDU6SXNzdWU0OTgwNTU0MTE=","number":358,"title":"Nightly CI breakage in gotham/src/middleware/session/mod.rs","user":{"login":"o01eg","id":397177,"node_id":"MDQ6VXNlcjM5NzE3Nw==","avatar_url":"https://avatars2.githubusercontent.com/u/397177?v=4","gravatar_id":"","url":"https://api.github.com/users/o01eg","html_url":"https://github.com/o01eg","followers_url":"https://api.github.com/users/o01eg/followers","following_url":"https://api.github.com/users/o01eg/following{/other_user}","gists_url":"https://api.github.com/users/o01eg/gists{/gist_id}","starred_url":"https://api.github.com/users/o01eg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/o01eg/subscriptions","organizations_url":"https://api.github.com/users/o01eg/orgs","repos_url":"https://api.github.com/users/o01eg/repos","events_url":"https://api.github.com/users/o01eg/events{/privacy}","received_events_url":"https://api.github.com/users/o01eg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-09-25T05:25:08Z","updated_at":"2019-10-08T22:24:33Z","closed_at":"2019-10-08T22:24:33Z","author_association":"NONE","active_lock_reason":null,"body":"After merging https://github.com/rust-lang/rust/pull/63565 in rustc, doctest in `gotham/src/middleware/session/mod.rs` had started to fail.\r\n\r\nSoon it will became a beta and will break CI.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http-rs/tide/issues/8","repository_url":"https://api.github.com/repos/http-rs/tide","labels_url":"https://api.github.com/repos/http-rs/tide/issues/8/labels{/name}","comments_url":"https://api.github.com/repos/http-rs/tide/issues/8/comments","events_url":"https://api.github.com/repos/http-rs/tide/issues/8/events","html_url":"https://github.com/http-rs/tide/issues/8","id":378578987,"node_id":"MDU6SXNzdWUzNzg1Nzg5ODc=","number":8,"title":"Logging middleware","user":{"login":"aturon","id":709807,"node_id":"MDQ6VXNlcjcwOTgwNw==","avatar_url":"https://avatars2.githubusercontent.com/u/709807?v=4","gravatar_id":"","url":"https://api.github.com/users/aturon","html_url":"https://github.com/aturon","followers_url":"https://api.github.com/users/aturon/followers","following_url":"https://api.github.com/users/aturon/following{/other_user}","gists_url":"https://api.github.com/users/aturon/gists{/gist_id}","starred_url":"https://api.github.com/users/aturon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aturon/subscriptions","organizations_url":"https://api.github.com/users/aturon/orgs","repos_url":"https://api.github.com/users/aturon/repos","events_url":"https://api.github.com/users/aturon/events{/privacy}","received_events_url":"https://api.github.com/users/aturon/received_events","type":"User","site_admin":false},"labels":[{"id":1120161577,"node_id":"MDU6TGFiZWwxMTIwMTYxNTc3","url":"https://api.github.com/repos/http-rs/tide/labels/feature","name":"feature","color":"dd80c1","default":false,"description":"A feature that's ready for implementation"},{"id":1018455865,"node_id":"MDU6TGFiZWwxMDE4NDU1ODY1","url":"https://api.github.com/repos/http-rs/tide/labels/good%20first%20issue","name":"good first issue","color":"7057ff","default":true,"description":"Good for newcomers"}],"state":"closed","locked":false,"assignee":{"login":"bIgBV","id":5019938,"node_id":"MDQ6VXNlcjUwMTk5Mzg=","avatar_url":"https://avatars1.githubusercontent.com/u/5019938?v=4","gravatar_id":"","url":"https://api.github.com/users/bIgBV","html_url":"https://github.com/bIgBV","followers_url":"https://api.github.com/users/bIgBV/followers","following_url":"https://api.github.com/users/bIgBV/following{/other_user}","gists_url":"https://api.github.com/users/bIgBV/gists{/gist_id}","starred_url":"https://api.github.com/users/bIgBV/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bIgBV/subscriptions","organizations_url":"https://api.github.com/users/bIgBV/orgs","repos_url":"https://api.github.com/users/bIgBV/repos","events_url":"https://api.github.com/users/bIgBV/events{/privacy}","received_events_url":"https://api.github.com/users/bIgBV/received_events","type":"User","site_admin":false},"assignees":[{"login":"bIgBV","id":5019938,"node_id":"MDQ6VXNlcjUwMTk5Mzg=","avatar_url":"https://avatars1.githubusercontent.com/u/5019938?v=4","gravatar_id":"","url":"https://api.github.com/users/bIgBV","html_url":"https://github.com/bIgBV","followers_url":"https://api.github.com/users/bIgBV/followers","following_url":"https://api.github.com/users/bIgBV/following{/other_user}","gists_url":"https://api.github.com/users/bIgBV/gists{/gist_id}","starred_url":"https://api.github.com/users/bIgBV/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bIgBV/subscriptions","organizations_url":"https://api.github.com/users/bIgBV/orgs","repos_url":"https://api.github.com/users/bIgBV/repos","events_url":"https://api.github.com/users/bIgBV/events{/privacy}","received_events_url":"https://api.github.com/users/bIgBV/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/http-rs/tide/milestones/1","html_url":"https://github.com/http-rs/tide/milestone/1","labels_url":"https://api.github.com/repos/http-rs/tide/milestones/1/labels","id":3845959,"node_id":"MDk6TWlsZXN0b25lMzg0NTk1OQ==","number":1,"title":"0.1 Release","description":"Our initial release on crates.io. **NOT** aiming for production-readiness, but want to have enough of the framework in place to be genuinely useful, reasonably well-documented, and equipped with some solid examples.","creator":{"login":"aturon","id":709807,"node_id":"MDQ6VXNlcjcwOTgwNw==","avatar_url":"https://avatars2.githubusercontent.com/u/709807?v=4","gravatar_id":"","url":"https://api.github.com/users/aturon","html_url":"https://github.com/aturon","followers_url":"https://api.github.com/users/aturon/followers","following_url":"https://api.github.com/users/aturon/following{/other_user}","gists_url":"https://api.github.com/users/aturon/gists{/gist_id}","starred_url":"https://api.github.com/users/aturon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aturon/subscriptions","organizations_url":"https://api.github.com/users/aturon/orgs","repos_url":"https://api.github.com/users/aturon/repos","events_url":"https://api.github.com/users/aturon/events{/privacy}","received_events_url":"https://api.github.com/users/aturon/received_events","type":"User","site_admin":false},"open_issues":1,"closed_issues":8,"state":"closed","created_at":"2018-11-25T16:33:09Z","updated_at":"2020-09-18T17:41:16Z","due_on":null,"closed_at":"2019-05-09T17:31:31Z"},"comments":33,"created_at":"2018-11-08T04:54:24Z","updated_at":"2020-04-22T08:24:35Z","closed_at":"2020-04-22T08:24:35Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"Design and implement middleware for logging, drawing inspiration from (or even re-using) that from existing Rust web frameworks.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ZenGo-X/gotham-city/issues/24","repository_url":"https://api.github.com/repos/ZenGo-X/gotham-city","labels_url":"https://api.github.com/repos/ZenGo-X/gotham-city/issues/24/labels{/name}","comments_url":"https://api.github.com/repos/ZenGo-X/gotham-city/issues/24/comments","events_url":"https://api.github.com/repos/ZenGo-X/gotham-city/issues/24/events","html_url":"https://github.com/ZenGo-X/gotham-city/issues/24","id":445363390,"node_id":"MDU6SXNzdWU0NDUzNjMzOTA=","number":24,"title":"Could not send, \"Negative output\"","user":{"login":"vuminhquang","id":20512463,"node_id":"MDQ6VXNlcjIwNTEyNDYz","avatar_url":"https://avatars3.githubusercontent.com/u/20512463?v=4","gravatar_id":"","url":"https://api.github.com/users/vuminhquang","html_url":"https://github.com/vuminhquang","followers_url":"https://api.github.com/users/vuminhquang/followers","following_url":"https://api.github.com/users/vuminhquang/following{/other_user}","gists_url":"https://api.github.com/users/vuminhquang/gists{/gist_id}","starred_url":"https://api.github.com/users/vuminhquang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vuminhquang/subscriptions","organizations_url":"https://api.github.com/users/vuminhquang/orgs","repos_url":"https://api.github.com/users/vuminhquang/repos","events_url":"https://api.github.com/users/vuminhquang/events{/privacy}","received_events_url":"https://api.github.com/users/vuminhquang/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":24,"created_at":"2019-05-17T10:00:21Z","updated_at":"2019-10-06T09:10:37Z","closed_at":"2019-10-06T09:10:37Z","author_association":"NONE","active_lock_reason":null,"body":"Hello KZen people,\r\nI've have a wallet with 2 derivative addresses. When I do the transaction within these 2 addresses, there are no error.\r\nHowever when I try to transfer BTC to **an outside address**, I got this error:\r\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error(\"missing field `result`\", line: 1, column: 122)', src/libcore/result.rs:xxx:xx\r\nThe command is: \r\n![image](https://user-images.githubusercontent.com/20512463/57920262-d55bd800-78c4-11e9-8cd3-2760581e3593.png)\r\n\r\nTried to take the raw transaction out and send it manually through https://testnet.smartbit.com.au/txs/pushtx, I got this error\r\nPUSH TRANSACTION ERROR: 16: BAD-TXNS-VOUT-NEGATIVE\r\nAfter decode the transaction, I found this in the output\r\n       {\r\n            \"addresses\": null, \r\n            \"script\": \"001429dd1071596903f049574e8e1f8529e14a4a4737\", \r\n            \"script_type\": \"pay-to-witness-pubkey-hash\", \r\n            \"value\": -10000\r\n        }\r\nThe whole raw is\r\n_000000000001011c65b37fa305ef8b4c4ccb9731c2b14aa7dc933acbf08e0dc845c5148c7ea8180000000000ffffffff02e8030000000000001976a91452db02dda5c812097c67307ee63c23c22ea955e288acf0d8ffffffffffff16001429dd1071596903f049574e8e1f8529e14a4a473702473044022065ef7a2f120198f4acb7048edf90d070622583149eeb38c5fecb9f669e669b6202200532d8662932be31ae2586364f8fb7862ac93d0464eb07599e518eb468f0f0830121036b3a6ead2e7617c155f39f2f1b9a8ec963c0fb0b3c46154ea1074fe14d4221bb00000000_\r\n\r\nHope to hear from you soon :)\r\n\r\nThank you\r\n\r\n\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/rust-lang/rust/issues/66244","repository_url":"https://api.github.com/repos/rust-lang/rust","labels_url":"https://api.github.com/repos/rust-lang/rust/issues/66244/labels{/name}","comments_url":"https://api.github.com/repos/rust-lang/rust/issues/66244/comments","events_url":"https://api.github.com/repos/rust-lang/rust/issues/66244/events","html_url":"https://github.com/rust-lang/rust/issues/66244","id":520362053,"node_id":"MDU6SXNzdWU1MjAzNjIwNTM=","number":66244,"title":"Crater runs for Rust 1.40.0","user":{"login":"pietroalbini","id":2299951,"node_id":"MDQ6VXNlcjIyOTk5NTE=","avatar_url":"https://avatars3.githubusercontent.com/u/2299951?v=4","gravatar_id":"","url":"https://api.github.com/users/pietroalbini","html_url":"https://github.com/pietroalbini","followers_url":"https://api.github.com/users/pietroalbini/followers","following_url":"https://api.github.com/users/pietroalbini/following{/other_user}","gists_url":"https://api.github.com/users/pietroalbini/gists{/gist_id}","starred_url":"https://api.github.com/users/pietroalbini/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pietroalbini/subscriptions","organizations_url":"https://api.github.com/users/pietroalbini/orgs","repos_url":"https://api.github.com/users/pietroalbini/repos","events_url":"https://api.github.com/users/pietroalbini/events{/privacy}","received_events_url":"https://api.github.com/users/pietroalbini/received_events","type":"User","site_admin":false},"labels":[{"id":583426710,"node_id":"MDU6TGFiZWw1ODM0MjY3MTA=","url":"https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review","name":"S-waiting-on-review","color":"d3dddd","default":false,"description":"Status: Awaiting review from the assignee but also interested parties."}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":26,"created_at":"2019-11-09T08:55:14Z","updated_at":"2020-02-06T16:04:44Z","closed_at":"2020-02-06T16:04:44Z","author_association":"MEMBER","active_lock_reason":null,"body":"cc @rust-lang/release ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/interledger-rs/interledger-rs/issues/146","repository_url":"https://api.github.com/repos/interledger-rs/interledger-rs","labels_url":"https://api.github.com/repos/interledger-rs/interledger-rs/issues/146/labels{/name}","comments_url":"https://api.github.com/repos/interledger-rs/interledger-rs/issues/146/comments","events_url":"https://api.github.com/repos/interledger-rs/interledger-rs/issues/146/events","html_url":"https://github.com/interledger-rs/interledger-rs/issues/146","id":470121042,"node_id":"MDU6SXNzdWU0NzAxMjEwNDI=","number":146,"title":"Considering alternatives to tower-web","user":{"login":"bstrie","id":865233,"node_id":"MDQ6VXNlcjg2NTIzMw==","avatar_url":"https://avatars2.githubusercontent.com/u/865233?v=4","gravatar_id":"","url":"https://api.github.com/users/bstrie","html_url":"https://github.com/bstrie","followers_url":"https://api.github.com/users/bstrie/followers","following_url":"https://api.github.com/users/bstrie/following{/other_user}","gists_url":"https://api.github.com/users/bstrie/gists{/gist_id}","starred_url":"https://api.github.com/users/bstrie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bstrie/subscriptions","organizations_url":"https://api.github.com/users/bstrie/orgs","repos_url":"https://api.github.com/users/bstrie/repos","events_url":"https://api.github.com/users/bstrie/events{/privacy}","received_events_url":"https://api.github.com/users/bstrie/received_events","type":"User","site_admin":false},"labels":[{"id":1459102510,"node_id":"MDU6TGFiZWwxNDU5MTAyNTEw","url":"https://api.github.com/repos/interledger-rs/interledger-rs/labels/dependencies","name":"dependencies","color":"10a6b7","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"emschwartz","id":3262610,"node_id":"MDQ6VXNlcjMyNjI2MTA=","avatar_url":"https://avatars3.githubusercontent.com/u/3262610?v=4","gravatar_id":"","url":"https://api.github.com/users/emschwartz","html_url":"https://github.com/emschwartz","followers_url":"https://api.github.com/users/emschwartz/followers","following_url":"https://api.github.com/users/emschwartz/following{/other_user}","gists_url":"https://api.github.com/users/emschwartz/gists{/gist_id}","starred_url":"https://api.github.com/users/emschwartz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emschwartz/subscriptions","organizations_url":"https://api.github.com/users/emschwartz/orgs","repos_url":"https://api.github.com/users/emschwartz/repos","events_url":"https://api.github.com/users/emschwartz/events{/privacy}","received_events_url":"https://api.github.com/users/emschwartz/received_events","type":"User","site_admin":false},"assignees":[{"login":"emschwartz","id":3262610,"node_id":"MDQ6VXNlcjMyNjI2MTA=","avatar_url":"https://avatars3.githubusercontent.com/u/3262610?v=4","gravatar_id":"","url":"https://api.github.com/users/emschwartz","html_url":"https://github.com/emschwartz","followers_url":"https://api.github.com/users/emschwartz/followers","following_url":"https://api.github.com/users/emschwartz/following{/other_user}","gists_url":"https://api.github.com/users/emschwartz/gists{/gist_id}","starred_url":"https://api.github.com/users/emschwartz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emschwartz/subscriptions","organizations_url":"https://api.github.com/users/emschwartz/orgs","repos_url":"https://api.github.com/users/emschwartz/repos","events_url":"https://api.github.com/users/emschwartz/events{/privacy}","received_events_url":"https://api.github.com/users/emschwartz/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2019-07-19T03:33:49Z","updated_at":"2019-09-25T03:03:34Z","closed_at":"2019-09-25T03:03:34Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"While it seems clear that much of the Rust networking ecosystem intends to standardize around the `Service` trait provided by tower, it's unclear what the future will be like for tower-web itself, which may potentially find itself relegated to a lightly-developed proof of concept for tower. Unfortunately this is one of those areas where the Rust ecosystem has plenty of promising projects but no clear and unequivocal winners, and things aren't likely to settle down in the near term as the async/await MVPs approach stability. So for now this is just something to keep in the back of our minds, while using this issue to keep track of any hard requirements that we come up with, such as #39.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/114","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/114/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/114/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/114/events","html_url":"https://github.com/gotham-rs/gotham/issues/114","id":290808781,"node_id":"MDU6SXNzdWUyOTA4MDg3ODE=","number":114,"title":"Create Post example (multipart/form-data)","user":{"login":"bradleybeddoes","id":86558,"node_id":"MDQ6VXNlcjg2NTU4","avatar_url":"https://avatars0.githubusercontent.com/u/86558?v=4","gravatar_id":"","url":"https://api.github.com/users/bradleybeddoes","html_url":"https://github.com/bradleybeddoes","followers_url":"https://api.github.com/users/bradleybeddoes/followers","following_url":"https://api.github.com/users/bradleybeddoes/following{/other_user}","gists_url":"https://api.github.com/users/bradleybeddoes/gists{/gist_id}","starred_url":"https://api.github.com/users/bradleybeddoes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bradleybeddoes/subscriptions","organizations_url":"https://api.github.com/users/bradleybeddoes/orgs","repos_url":"https://api.github.com/users/bradleybeddoes/repos","events_url":"https://api.github.com/users/bradleybeddoes/events{/privacy}","received_events_url":"https://api.github.com/users/bradleybeddoes/received_events","type":"User","site_admin":false},"labels":[{"id":813730960,"node_id":"MDU6TGFiZWw4MTM3MzA5NjA=","url":"https://api.github.com/repos/gotham-rs/gotham/labels/example","name":"example","color":"161f82","default":false,"description":null},{"id":1075834626,"node_id":"MDU6TGFiZWwxMDc1ODM0NjI2","url":"https://api.github.com/repos/gotham-rs/gotham/labels/hacktoberfest","name":"hacktoberfest","color":"d93f0b","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-01-23T11:53:14Z","updated_at":"2019-08-29T15:54:40Z","closed_at":"2019-08-29T10:44:19Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/339","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/339/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/339/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/339/events","html_url":"https://github.com/gotham-rs/gotham/issues/339","id":476433361,"node_id":"MDU6SXNzdWU0NzY0MzMzNjE=","number":339,"title":"How to get request path in middleware","user":{"login":"PrivateRookie","id":21262091,"node_id":"MDQ6VXNlcjIxMjYyMDkx","avatar_url":"https://avatars1.githubusercontent.com/u/21262091?v=4","gravatar_id":"","url":"https://api.github.com/users/PrivateRookie","html_url":"https://github.com/PrivateRookie","followers_url":"https://api.github.com/users/PrivateRookie/followers","following_url":"https://api.github.com/users/PrivateRookie/following{/other_user}","gists_url":"https://api.github.com/users/PrivateRookie/gists{/gist_id}","starred_url":"https://api.github.com/users/PrivateRookie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PrivateRookie/subscriptions","organizations_url":"https://api.github.com/users/PrivateRookie/orgs","repos_url":"https://api.github.com/users/PrivateRookie/repos","events_url":"https://api.github.com/users/PrivateRookie/events{/privacy}","received_events_url":"https://api.github.com/users/PrivateRookie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-08-03T09:21:15Z","updated_at":"2019-08-03T13:06:52Z","closed_at":"2019-08-03T13:06:52Z","author_association":"NONE","active_lock_reason":null,"body":"I am trying write a middleware which is scoped by request path, but I stuck in getting request path from state, is there any doc about getting request info from state?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/336","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/336/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/336/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/336/events","html_url":"https://github.com/gotham-rs/gotham/issues/336","id":473577983,"node_id":"MDU6SXNzdWU0NzM1Nzc5ODM=","number":336,"title":"How to extract data from a POST body","user":{"login":"8176135","id":11830488,"node_id":"MDQ6VXNlcjExODMwNDg4","avatar_url":"https://avatars1.githubusercontent.com/u/11830488?v=4","gravatar_id":"","url":"https://api.github.com/users/8176135","html_url":"https://github.com/8176135","followers_url":"https://api.github.com/users/8176135/followers","following_url":"https://api.github.com/users/8176135/following{/other_user}","gists_url":"https://api.github.com/users/8176135/gists{/gist_id}","starred_url":"https://api.github.com/users/8176135/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/8176135/subscriptions","organizations_url":"https://api.github.com/users/8176135/orgs","repos_url":"https://api.github.com/users/8176135/repos","events_url":"https://api.github.com/users/8176135/events{/privacy}","received_events_url":"https://api.github.com/users/8176135/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-07-27T00:29:14Z","updated_at":"2019-07-27T21:40:30Z","closed_at":"2019-07-27T21:40:29Z","author_association":"NONE","active_lock_reason":null,"body":"Can someone give me a basic example of getting body data out of state? (i.e. as a `Vec<u8>` or similar)\r\n\r\nThe POST example issue #114 doesn't seem to have had any updates for a year.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/rust-rocksdb/rust-rocksdb/issues/286","repository_url":"https://api.github.com/repos/rust-rocksdb/rust-rocksdb","labels_url":"https://api.github.com/repos/rust-rocksdb/rust-rocksdb/issues/286/labels{/name}","comments_url":"https://api.github.com/repos/rust-rocksdb/rust-rocksdb/issues/286/comments","events_url":"https://api.github.com/repos/rust-rocksdb/rust-rocksdb/issues/286/events","html_url":"https://github.com/rust-rocksdb/rust-rocksdb/issues/286","id":422561261,"node_id":"MDU6SXNzdWU0MjI1NjEyNjE=","number":286,"title":"error: failed to run custom build command for `librocksdb-sys v5.17.2`","user":{"login":"freehere107","id":7080674,"node_id":"MDQ6VXNlcjcwODA2NzQ=","avatar_url":"https://avatars2.githubusercontent.com/u/7080674?v=4","gravatar_id":"","url":"https://api.github.com/users/freehere107","html_url":"https://github.com/freehere107","followers_url":"https://api.github.com/users/freehere107/followers","following_url":"https://api.github.com/users/freehere107/following{/other_user}","gists_url":"https://api.github.com/users/freehere107/gists{/gist_id}","starred_url":"https://api.github.com/users/freehere107/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/freehere107/subscriptions","organizations_url":"https://api.github.com/users/freehere107/orgs","repos_url":"https://api.github.com/users/freehere107/repos","events_url":"https://api.github.com/users/freehere107/events{/privacy}","received_events_url":"https://api.github.com/users/freehere107/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2019-03-19T06:16:31Z","updated_at":"2019-08-09T08:44:39Z","closed_at":"2019-03-29T11:55:26Z","author_association":"NONE","active_lock_reason":null,"body":"## mac version\r\n\r\nmac mojave 10.14.3\r\n\r\n## Got error\r\nerror: failed to run custom build command for `librocksdb-sys v5.17.2`\r\nprocess didn't exit successfully: `/gotham-city/gotham-server/target/debug/build/librocksdb-sys-531f568e71a25329/build-script-build` (exit code: 101)\r\n--- stdout\r\ncargo:rerun-if-changed=build.rs\r\ncargo:rerun-if-changed=rocksdb/\r\ncargo:rerun-if-changed=snappy/\r\ncargo:rerun-if-changed=lz4/\r\ncargo:rerun-if-changed=zstd/\r\ncargo:rerun-if-changed=zlib/\r\ncargo:rerun-if-changed=bzip2/\r\n\r\n--- stderr\r\nlibclang: crash detected during parsing: {\r\n  'source_filename' : ''\r\n  'command_line_args' : ['--target=x86_64-apple-darwin', '-isystem', '/usr/local/include', '-isystem', '/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/10.0.0/include', '-isystem', '/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include', '-isystem', '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include', '-isystem', '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/System/Library/Frameworks', 'rocksdb/include/rocksdb/c.h'],\r\n  'unsaved_files' : [],\r\n  'options' : 1,\r\n}\r\nthread 'main' panicked at 'libclang error; possible causes include:\r\n- Invalid flag syntax\r\n- Unrecognized flags\r\n- Invalid flag arguments\r\n- File I/O errors\r\nIf you encounter an error missing from this list, please file an issue or a PR!', src/libcore/option.rs:1034:5\r\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\n\r\n## my clang version\r\n\r\nApple LLVM version 10.0.0 (clang-1000.11.45.5)\r\nTarget: x86_64-apple-darwin18.2.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n\r\n## rust version\r\nrustc 1.33.0 (2aa4c46cf 2019-02-28)\r\n\r\n## cargo version\r\ncargo 1.33.0 (f099fe94b 2019-02-12)\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/gotham-rs/gotham/issues/309","repository_url":"https://api.github.com/repos/gotham-rs/gotham","labels_url":"https://api.github.com/repos/gotham-rs/gotham/issues/309/labels{/name}","comments_url":"https://api.github.com/repos/gotham-rs/gotham/issues/309/comments","events_url":"https://api.github.com/repos/gotham-rs/gotham/issues/309/events","html_url":"https://github.com/gotham-rs/gotham/issues/309","id":425792748,"node_id":"MDU6SXNzdWU0MjU3OTI3NDg=","number":309,"title":"Async Diesel middleware and example","user":{"login":"colinbankier","id":806356,"node_id":"MDQ6VXNlcjgwNjM1Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/806356?v=4","gravatar_id":"","url":"https://api.github.com/users/colinbankier","html_url":"https://github.com/colinbankier","followers_url":"https://api.github.com/users/colinbankier/followers","following_url":"https://api.github.com/users/colinbankier/following{/other_user}","gists_url":"https://api.github.com/users/colinbankier/gists{/gist_id}","starred_url":"https://api.github.com/users/colinbankier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colinbankier/subscriptions","organizations_url":"https://api.github.com/users/colinbankier/orgs","repos_url":"https://api.github.com/users/colinbankier/repos","events_url":"https://api.github.com/users/colinbankier/events{/privacy}","received_events_url":"https://api.github.com/users/colinbankier/received_events","type":"User","site_admin":false},"labels":[{"id":655923278,"node_id":"MDU6TGFiZWw2NTU5MjMyNzg=","url":"https://api.github.com/repos/gotham-rs/gotham/labels/feature","name":"feature","color":"0e8a16","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"colinbankier","id":806356,"node_id":"MDQ6VXNlcjgwNjM1Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/806356?v=4","gravatar_id":"","url":"https://api.github.com/users/colinbankier","html_url":"https://github.com/colinbankier","followers_url":"https://api.github.com/users/colinbankier/followers","following_url":"https://api.github.com/users/colinbankier/following{/other_user}","gists_url":"https://api.github.com/users/colinbankier/gists{/gist_id}","starred_url":"https://api.github.com/users/colinbankier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colinbankier/subscriptions","organizations_url":"https://api.github.com/users/colinbankier/orgs","repos_url":"https://api.github.com/users/colinbankier/repos","events_url":"https://api.github.com/users/colinbankier/events{/privacy}","received_events_url":"https://api.github.com/users/colinbankier/received_events","type":"User","site_admin":false},"assignees":[{"login":"colinbankier","id":806356,"node_id":"MDQ6VXNlcjgwNjM1Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/806356?v=4","gravatar_id":"","url":"https://api.github.com/users/colinbankier","html_url":"https://github.com/colinbankier","followers_url":"https://api.github.com/users/colinbankier/followers","following_url":"https://api.github.com/users/colinbankier/following{/other_user}","gists_url":"https://api.github.com/users/colinbankier/gists{/gist_id}","starred_url":"https://api.github.com/users/colinbankier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colinbankier/subscriptions","organizations_url":"https://api.github.com/users/colinbankier/orgs","repos_url":"https://api.github.com/users/colinbankier/repos","events_url":"https://api.github.com/users/colinbankier/events{/privacy}","received_events_url":"https://api.github.com/users/colinbankier/received_events","type":"User","site_admin":false}],"milestone":null,"comments":11,"created_at":"2019-03-27T06:53:25Z","updated_at":"2019-05-31T17:05:47Z","closed_at":"2019-05-31T17:05:47Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"The current \"under development\" Diesel middleware provides a \"blocking\" api to use Diesel.\r\nSome previous work was done (and abandoned) to provide a worker `CpuPool` middleware to allow not blocking request handling when using diesel.\r\n\r\nI have been experimenting with continuing this, but with a different approach. Although Diesel doesn't directly support async, we can still build an async application around it using `tokio_threadpool::blocking`. This removes the need to explicitly manage a separate `CpuPool`, and looks like it will be a simpler implementation and api.\r\n\r\nI'm opening this issue to solicit discussion around this approach and coordinate efforts in pushing Diesel support forward.\r\nThe new experimental api so far provides a `repo` abstraction that handles the DB connection pool and wraps `tokio_threadpool::blocking`. Usage looks something like:\r\n\r\n```rust    \r\n    let repo = Repo::borrow_from(&state);\r\n    let user = .....;\r\n    // Returns a future able to be chained into a `HandlerFuture`\r\n    repo.run(move |conn| {\r\n        diesel::insert_into(users::table)\r\n            .values(&user)\r\n            .get_result(&conn)\r\n    }) \r\n```\r\n\r\nPrevious work this would supersede includes:\r\nhttps://github.com/gotham-rs/gotham/pull/227\r\nhttps://github.com/gotham-rs/gotham/issues/77\r\nhttps://github.com/gotham-rs/gotham/pull/126","performed_via_github_app":null,"score":1.0}]}
0

