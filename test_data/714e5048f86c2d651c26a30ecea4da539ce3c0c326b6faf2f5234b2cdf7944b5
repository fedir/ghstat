HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sun, 08 Apr 2018 22:37:04 GMT
Link: <https://api.github.com/search/issues?q=repo%3Ajuxt%2Fyada+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Ajuxt%2Fyada+type%3Aissue+state%3Aclosed&page=3>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CC92:54B9:144A72E:28CAFA9:5ACA998F
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 4
X-Ratelimit-Reset: 1523227064
X-Runtime-Rack: 0.392537
X-Xss-Protection: 1; mode=block

8000
{"total_count":61,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/juxt/yada/issues/187","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/187/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/187/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/187/events","html_url":"https://github.com/juxt/yada/issues/187","id":243963670,"number":187,"title":"Interceptor manipulation functions","user":{"login":"danielcompton","id":811954,"avatar_url":"https://avatars2.githubusercontent.com/u/811954?v=4","gravatar_id":"","url":"https://api.github.com/users/danielcompton","html_url":"https://github.com/danielcompton","followers_url":"https://api.github.com/users/danielcompton/followers","following_url":"https://api.github.com/users/danielcompton/following{/other_user}","gists_url":"https://api.github.com/users/danielcompton/gists{/gist_id}","starred_url":"https://api.github.com/users/danielcompton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielcompton/subscriptions","organizations_url":"https://api.github.com/users/danielcompton/orgs","repos_url":"https://api.github.com/users/danielcompton/repos","events_url":"https://api.github.com/users/danielcompton/events{/privacy}","received_events_url":"https://api.github.com/users/danielcompton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-07-19T08:36:37Z","updated_at":"2017-07-19T09:21:53Z","closed_at":"2017-07-19T09:21:53Z","author_association":"CONTRIBUTOR","body":"Pedestal has a suite of functions for manipulating and injecting interceptors. This isn't quite as important in Yada, but it would often be handy to be able to manipulate the existing interceptor chain, instead of creating your own one, with a custom interceptor added. I don't think Yada has anything like this?","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/180","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/180/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/180/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/180/events","html_url":"https://github.com/juxt/yada/issues/180","id":238473563,"number":180,"title":"Decoding bug in Yada (or referenced library)","user":{"login":"ivarref","id":74075,"avatar_url":"https://avatars1.githubusercontent.com/u/74075?v=4","gravatar_id":"","url":"https://api.github.com/users/ivarref","html_url":"https://github.com/ivarref","followers_url":"https://api.github.com/users/ivarref/followers","following_url":"https://api.github.com/users/ivarref/following{/other_user}","gists_url":"https://api.github.com/users/ivarref/gists{/gist_id}","starred_url":"https://api.github.com/users/ivarref/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivarref/subscriptions","organizations_url":"https://api.github.com/users/ivarref/orgs","repos_url":"https://api.github.com/users/ivarref/repos","events_url":"https://api.github.com/users/ivarref/events{/privacy}","received_events_url":"https://api.github.com/users/ivarref/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2017-06-26T08:30:45Z","updated_at":"2018-01-28T10:04:07Z","closed_at":"2018-01-28T10:04:07Z","author_association":"CONTRIBUTOR","body":"Hi, and thanks for a fine library.\r\n\r\nMy co-worker @xfsnowind encountered a strange encoding bug.\r\nI've reproduced it [here](https://github.com/ivarref/edge/commit/3ddf42a95f533b57d34f7ae93c3ce5f621521fa8#diff-904cd5ab4c87911ea95d4053ad149fdfR38) based on the edge project.\r\n\r\nSteps to reproduce is included in the commit, but basically is:\r\n\r\n```\r\ngit clone https://github.com/ivarref/edge.git\r\n\r\ncd edge\r\n\r\nboot dev\r\n\r\n# In new terminal\r\n\r\ncurl -H \"Content-Type: application/json\" -d @payload.json \"localhost:3000/hello-post\"\r\n```\r\n\r\nOutput from this curl command should be \r\n```\r\nauthor is Statistisk sentralbyr�� (two garbled characters, unexpected)\r\nproducer is Statistisk sentralbyrå (Norwegian character \"å\", as expected)\r\n```\r\n\r\nThe `author` from `payload.json` shows correctly in all editors I've tried it in, and I've also verified that the binary content is identical.\r\n\r\nI have not tried to locate the exact origin of the problem --- and it may not be in Yada itself, but it does however affect Yada.\r\n\r\nThanks\r\nKind regards","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/168","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/168/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/168/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/168/events","html_url":"https://github.com/juxt/yada/issues/168","id":223874611,"number":168,"title":"ClassPathResource: java.lang.ClassCastException: java.io.File cannot be cast to java.net.URL","user":{"login":"borkdude","id":284934,"avatar_url":"https://avatars1.githubusercontent.com/u/284934?v=4","gravatar_id":"","url":"https://api.github.com/users/borkdude","html_url":"https://github.com/borkdude","followers_url":"https://api.github.com/users/borkdude/followers","following_url":"https://api.github.com/users/borkdude/following{/other_user}","gists_url":"https://api.github.com/users/borkdude/gists{/gist_id}","starred_url":"https://api.github.com/users/borkdude/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/borkdude/subscriptions","organizations_url":"https://api.github.com/users/borkdude/orgs","repos_url":"https://api.github.com/users/borkdude/repos","events_url":"https://api.github.com/users/borkdude/events{/privacy}","received_events_url":"https://api.github.com/users/borkdude/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-04-24T16:19:11Z","updated_at":"2017-04-25T06:39:59Z","closed_at":"2017-04-25T05:25:38Z","author_association":"CONTRIBUTOR","body":"Fixed in https://github.com/juxt/yada/pull/167","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/159","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/159/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/159/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/159/events","html_url":"https://github.com/juxt/yada/issues/159","id":216545852,"number":159,"title":"Can't use yada/swagger because of LGPL transitive dependency","user":{"login":"kenrestivo-stem","id":26154869,"avatar_url":"https://avatars0.githubusercontent.com/u/26154869?v=4","gravatar_id":"","url":"https://api.github.com/users/kenrestivo-stem","html_url":"https://github.com/kenrestivo-stem","followers_url":"https://api.github.com/users/kenrestivo-stem/followers","following_url":"https://api.github.com/users/kenrestivo-stem/following{/other_user}","gists_url":"https://api.github.com/users/kenrestivo-stem/gists{/gist_id}","starred_url":"https://api.github.com/users/kenrestivo-stem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenrestivo-stem/subscriptions","organizations_url":"https://api.github.com/users/kenrestivo-stem/orgs","repos_url":"https://api.github.com/users/kenrestivo-stem/repos","events_url":"https://api.github.com/users/kenrestivo-stem/events{/privacy}","received_events_url":"https://api.github.com/users/kenrestivo-stem/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-03-23T19:28:59Z","updated_at":"2017-10-11T20:07:08Z","closed_at":"2017-10-11T20:06:34Z","author_association":"NONE","body":"We were going to use yada/swagger at work, but can't now, because a search of the transitive depencies shows it depends on scjsv, which depends on json-schema-validator, which is LGPL, and LGPL is not allowed.\r\n\r\nLein tree shows:\r\n```clojure\r\n   [yada/swagger \"1.2.1\"]\r\n     [metosin/ring-swagger \"0.22.12\" :exclusions [[org.clojure/clojure]]]\r\n       [frankiesardo/linked \"1.2.9\"]\r\n       [metosin/ring-http-response \"0.8.0\"]\r\n       [metosin/schema-tools \"0.9.0\"]\r\n       [metosin/scjsv \"0.4.0\"]\r\n         [com.github.fge/json-schema-validator \"2.2.6\"]\r\n           [com.github.fge/json-schema-core \"1.2.5\"]\r\n             [com.github.fge/jackson-coreutils \"1.8\"]\r\n             [com.github.fge/uri-template \"0.9\"]\r\n               [com.github.fge/msg-simple \"1.1\"]\r\n                 [com.github.fge/btf \"1.2\"]\r\n```\r\n\r\nIt seems, per lein-licenses, like all the fge libraries are LGPL:\r\n```\r\ncom.github.fge/json-schema-core - 1.2.5 - Lesser General Public License, version 3 or greater\r\ncom.github.fge/msg-simple - 1.1 - Lesser General Public License, version 3 or greater\r\ncom.github.fge/jackson-coreutils - 1.8 - Lesser General Public License, version 3 or greater\r\ncom.github.fge/uri-template - 0.9 - Lesser General Public License, version 3 or greater\r\ncom.github.fge/btf - 1.2 - Lesser General Public License, version 3 or greater\r\ncom.github.fge/json-schema-validator - 2.2.6 - Lesser General Public License, version 3 or greater\r\n```","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/156","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/156/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/156/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/156/events","html_url":"https://github.com/juxt/yada/issues/156","id":214268528,"number":156,"title":"Old core.async violates new spec in Clojure 1.9.0-alpha15","user":{"login":"ykomatsu","id":277653,"avatar_url":"https://avatars3.githubusercontent.com/u/277653?v=4","gravatar_id":"","url":"https://api.github.com/users/ykomatsu","html_url":"https://github.com/ykomatsu","followers_url":"https://api.github.com/users/ykomatsu/followers","following_url":"https://api.github.com/users/ykomatsu/following{/other_user}","gists_url":"https://api.github.com/users/ykomatsu/gists{/gist_id}","starred_url":"https://api.github.com/users/ykomatsu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ykomatsu/subscriptions","organizations_url":"https://api.github.com/users/ykomatsu/orgs","repos_url":"https://api.github.com/users/ykomatsu/repos","events_url":"https://api.github.com/users/ykomatsu/events{/privacy}","received_events_url":"https://api.github.com/users/ykomatsu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-03-15T03:00:52Z","updated_at":"2017-04-17T02:45:32Z","closed_at":"2017-04-17T02:45:32Z","author_association":"CONTRIBUTOR","body":"```\r\nboot.user=> (require 'yada.yada)\r\n             clojure.lang.ExceptionInfo: Call to clojure.core/refer-clojure did not conform to spec:\r\n                                         In: [2] val: (quote :as) fails at: [:args :exclude :op :spec] predicate: #{:exclude}\r\n                                         In: [2 1] val: :as fails at: [:args :exclude :op :quoted-spec :spec] predicate: #{:exclude}\r\n                                         In: [2] val: (quote :as) fails at: [:args :only :op :spec] predicate: #{:only}\r\n                                         In: [2 1] val: :as fails at: [:args :only :op :quoted-spec :spec] predicate: #{:only}\r\n                                         In: [2] val: (quote :as) fails at: [:args :rename :op :spec] predicate: #{:rename}\r\n                                         In: [2 1] val: :as fails at: [:args :rename :op :quoted-spec :spec] predicate: #{:rename}\r\n                                         :clojure.spec/args  ((quote :exclude) (quote [reduce transduce into merge map take partition partition-by bounded-count]) (quote :as) (quote core))\r\nclojure.lang.Compiler$CompilerException: clojure.lang.ExceptionInfo: Call to clojure.core/refer-clojure did not conform to spec:\r\n                                         In: [2] val: (quote :as) fails at: [:args :exclude :op :spec] predicate: #{:exclude}\r\n                                         In: [2 1] val: :as fails at: [:args :exclude :op :quoted-spec :spec] predicate: #{:exclude}\r\n                                         In: [2] val: (quote :as) fails at: [:args :only :op :spec] predicate: #{:only}\r\n                                         In: [2 1] val: :as fails at: [:args :only :op :quoted-spec :spec] predicate: #{:only}\r\n                                         In: [2] val: (quote :as) fails at: [:args :rename :op :spec] predicate: #{:rename}\r\n                                         In: [2 1] val: :as fails at: [:args :rename :op :quoted-spec :spec] predicate: #{:rename}\r\n                                         :clojure.spec/args  ((quote :exclude) (quote [reduce transduce into merge map take partition partition-by bounded-count]) (quote :as) (quote core))\r\n                                          #:clojure.spec{:problems ({:path [:args :exclude :op :spec], :pred #{:exclude}, :val (quote :as), :via [], :in [2]} {:path [:args :exclude :op :quoted-spec :spec], :pred #{:exclude}, :val :as, :via [], :in [2 1]} {:path [:args :only :op :spec], :pred #{:only}, :val (quote :as), :via [], :in [2]} {:path [:args :only :op :quoted-spec :spec], :pred #{:only}, :val :as, :via [], :in [2 1]} {:path [:args :rename :op :spec], :pred #{:rename}, :val (quote :as), :via [], :in [2]} {:path [:args :rename :op :quoted-spec :spec], :pred #{:rename}, :val :as, :via [], :in [2 1]}), :args ((quote :exclude) (quote [reduce transduce into merge map take partition partition-by bounded-count]) (quote :as) (quote core))}, compiling:(clojure/core/async.clj:9:1)\r\n```\r\n\r\n[ANN] Clojure 1.9.0-alpha15 is now available\r\nhttps://groups.google.com/d/msg/clojure/7ZqGTjJoQEQ/RkUYCCbeAwAJ\r\n\r\nI think that we should update core.async version to 0.3.442 released 2017-03-14.\r\nhttps://github.com/clojure/core.async","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/146","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/146/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/146/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/146/events","html_url":"https://github.com/juxt/yada/issues/146","id":199085025,"number":146,"title":"Keeping a changelog?","user":{"login":"danielcompton","id":811954,"avatar_url":"https://avatars2.githubusercontent.com/u/811954?v=4","gravatar_id":"","url":"https://api.github.com/users/danielcompton","html_url":"https://github.com/danielcompton","followers_url":"https://api.github.com/users/danielcompton/followers","following_url":"https://api.github.com/users/danielcompton/following{/other_user}","gists_url":"https://api.github.com/users/danielcompton/gists{/gist_id}","starred_url":"https://api.github.com/users/danielcompton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielcompton/subscriptions","organizations_url":"https://api.github.com/users/danielcompton/orgs","repos_url":"https://api.github.com/users/danielcompton/repos","events_url":"https://api.github.com/users/danielcompton/events{/privacy}","received_events_url":"https://api.github.com/users/danielcompton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-01-05T23:17:56Z","updated_at":"2017-01-06T18:03:50Z","closed_at":"2017-01-06T09:18:48Z","author_association":"CONTRIBUTOR","body":"It could be helpful to see what has changed when upgrading Yada to new versions. Is this something you'd consider doing? I'm partial to http://keepachangelog.com/en/0.3.0/, but don't really mind otherwise.","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/140","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/140/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/140/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/140/events","html_url":"https://github.com/juxt/yada/issues/140","id":197495377,"number":140,"title":"response body not set with custom error response throwing ex-info with :body","user":{"login":"naartjie","id":514563,"avatar_url":"https://avatars0.githubusercontent.com/u/514563?v=4","gravatar_id":"","url":"https://api.github.com/users/naartjie","html_url":"https://github.com/naartjie","followers_url":"https://api.github.com/users/naartjie/followers","following_url":"https://api.github.com/users/naartjie/following{/other_user}","gists_url":"https://api.github.com/users/naartjie/gists{/gist_id}","starred_url":"https://api.github.com/users/naartjie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naartjie/subscriptions","organizations_url":"https://api.github.com/users/naartjie/orgs","repos_url":"https://api.github.com/users/naartjie/repos","events_url":"https://api.github.com/users/naartjie/events{/privacy}","received_events_url":"https://api.github.com/users/naartjie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-12-25T10:18:48Z","updated_at":"2017-01-02T09:45:57Z","closed_at":"2017-01-02T09:45:57Z","author_association":"CONTRIBUTOR","body":"Throwing ex-info from handler respects the `:status` but `:body` gets lost:\r\n\r\nhander fn:\r\n```clojure\r\n(fn [ctx]\r\n  (throw (ex-info \"oops\" {:status 400 :body \"error message\"})))\r\n```\r\n\r\nThe response has a zero length body:\r\n\r\n<img width=\"304\" alt=\"screen shot 2016-12-25 at 12 16 30\" src=\"https://cloud.githubusercontent.com/assets/514563/21470681/090b2e96-ca9c-11e6-8208-ed63cc32cf50.png\">\r\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/136","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/136/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/136/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/136/events","html_url":"https://github.com/juxt/yada/issues/136","id":191266304,"number":136,"title":"CompilerException in REPL","user":{"login":"emiln","id":1078925,"avatar_url":"https://avatars3.githubusercontent.com/u/1078925?v=4","gravatar_id":"","url":"https://api.github.com/users/emiln","html_url":"https://github.com/emiln","followers_url":"https://api.github.com/users/emiln/followers","following_url":"https://api.github.com/users/emiln/following{/other_user}","gists_url":"https://api.github.com/users/emiln/gists{/gist_id}","starred_url":"https://api.github.com/users/emiln/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emiln/subscriptions","organizations_url":"https://api.github.com/users/emiln/orgs","repos_url":"https://api.github.com/users/emiln/repos","events_url":"https://api.github.com/users/emiln/events{/privacy}","received_events_url":"https://api.github.com/users/emiln/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-11-23T13:09:18Z","updated_at":"2016-11-23T14:39:54Z","closed_at":"2016-11-23T14:39:54Z","author_association":"NONE","body":"If I run `boot repl` and attempt to require `yada.yada`, I get a compiler exception. I really have no idea what's going on here, except it seems to be an issue with compiling whatever's in `yada.yada`.\r\n\r\nIs this reproducible for anyone else?\r\n\r\n```\r\n$ boot repl\r\nnREPL server started on port 44169 on host 127.0.0.1 - nrepl://127.0.0.1:44169\r\nREPL-y 0.3.7, nREPL 0.2.12\r\nClojure 1.9.0-alpha14\r\nOpenJDK 64-Bit Server VM 1.8.0_111-8u111-b14-2ubuntu0.16.04.2-b14\r\n        Exit: Control+D or (exit) or (quit)\r\n    Commands: (user/help)\r\n        Docs: (doc function-name-here)\r\n              (find-doc \"part-of-name-here\")\r\nFind by Name: (find-name \"part-of-name-here\")\r\n      Source: (source function-name-here)\r\n     Javadoc: (javadoc java-object-or-class-here)\r\n    Examples from clojuredocs.org: [clojuredocs or cdoc]\r\n              (user/clojuredocs name-here)\r\n              (user/clojuredocs \"ns-here\" \"name-here\")\r\nboot.user=> *boot-version*\r\n\"2.6.0\"\r\nboot.user=> *clojure-version*\r\n{:major 1, :minor 9, :incremental 0, :qualifier \"alpha14\"}\r\nboot.user=> (require '[yada.yada :as yada])\r\n\r\nboot.user=> clojure.lang.Compiler$CompilerException: clojure.lang.ExceptionInfo: Call to clojure.core/defn did not conform to spec:\r\n                                         In: [2 0] val: ({:keys [name content mime-type charset transfer-encoding], :or {:transfer-encoding :quoted-printable}}) fails spec: :clojure.core.specs/arg-list at: [:args :bs :arity-1 :args] predicate: (cat :args (* :clojure.core.specs/binding-form) :varargs (? (cat :amp #{(quote &)} :form :clojure.core.specs/binding-form))),  Extra input\r\n                                         In: [2 0] val: {:keys [name content mime-type charset transfer-encoding], :or {:transfer-encoding :quoted-printable}} fails spec: :clojure.core.specs/arg-list at: [:args :bs :arity-n :bodies :args] predicate: vector?\r\n                                         :clojure.spec/args  (populate-part \"Generates a part map of the appropriate format\" [{:keys [name content mime-type charset transfer-encoding], :or {:transfer-encoding :quoted-printable}}] (let [mt (or mime-type (when (instance? File content) (URLConnection/guessContentTypeFromName (.getName content))))] {:name name, :content (bs/to-byte-buffer content), :mime-type (mime-type-descriptor mt charset), :transfer-encoding transfer-encoding}))\r\n                                          #:clojure.spec{:problems ({:path [:args :bs :arity-1 :args], :reason \"Extra input\", :pred (cat :args (* :clojure.core.specs/binding-form) :varargs (? (cat :amp #{(quote &)} :form :clojure.core.specs/binding-form))), :val ({:keys [name content mime-type charset transfer-encoding], :or {:transfer-encoding :quoted-printable}}), :via [:clojure.core.specs/defn-args :clojure.core.specs/args+body :clojure.core.specs/arg-list :clojure.core.specs/arg-list], :in [2 0]} {:path [:args :bs :arity-n :bodies :args], :pred vector?, :val {:keys [name content mime-type charset transfer-encoding], :or {:transfer-encoding :quoted-printable}}, :via [:clojure.core.specs/defn-args :clojure.core.specs/args+body :clojure.core.specs/args+body :clojure.core.specs/args+body :clojure.core.specs/arg-list :clojure.core.specs/arg-list], :in [2 0]}), :args (populate-part \"Generates a part map of the appropriate format\" [{:keys [name content mime-type charset transfer-encoding], :or {:transfer-encoding :quoted-printable}}] (let [mt (or mime-type (when (instance? File content) (URLConnection/guessContentTypeFromName (.getName content))))] {:name name, :content (bs/to-byte-buffer content), :mime-type (mime-type-descriptor mt charset), :transfer-encoding transfer-encoding}))}, compiling:(aleph/http/multipart.clj:30:1)\r\n             clojure.lang.ExceptionInfo: Call to clojure.core/defn did not conform to spec:\r\n                                         In: [2 0] val: ({:keys [name content mime-type charset transfer-encoding], :or {:transfer-encoding :quoted-printable}}) fails spec: :clojure.core.specs/arg-list at: [:args :bs :arity-1 :args] predicate: (cat :args (* :clojure.core.specs/binding-form) :varargs (? (cat :amp #{(quote &)} :form :clojure.core.specs/binding-form))),  Extra input\r\n                                         In: [2 0] val: {:keys [name content mime-type charset transfer-encoding], :or {:transfer-encoding :quoted-printable}} fails spec: :clojure.core.specs/arg-list at: [:args :bs :arity-n :bodies :args] predicate: vector?\r\n                                         :clojure.spec/args  (populate-part \"Generates a part map of the appropriate format\" [{:keys [name content mime-type charset transfer-encoding], :or {:transfer-encoding :quoted-printable}}] (let [mt (or mime-type (when (instance? File content) (URLConnection/guessContentTypeFromName (.getName content))))] {:name name, :content (bs/to-byte-buffer content), :mime-type (mime-type-descriptor mt charset), :transfer-encoding transfer-encoding}))\r\n                                         \r\n```","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/132","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/132/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/132/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/132/events","html_url":"https://github.com/juxt/yada/issues/132","id":186547487,"number":132,"title":"Accept-Charset still leading to errors","user":{"login":"mishok13","id":548482,"avatar_url":"https://avatars0.githubusercontent.com/u/548482?v=4","gravatar_id":"","url":"https://api.github.com/users/mishok13","html_url":"https://github.com/mishok13","followers_url":"https://api.github.com/users/mishok13/followers","following_url":"https://api.github.com/users/mishok13/following{/other_user}","gists_url":"https://api.github.com/users/mishok13/gists{/gist_id}","starred_url":"https://api.github.com/users/mishok13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mishok13/subscriptions","organizations_url":"https://api.github.com/users/mishok13/orgs","repos_url":"https://api.github.com/users/mishok13/repos","events_url":"https://api.github.com/users/mishok13/events{/privacy}","received_events_url":"https://api.github.com/users/mishok13/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-11-01T14:28:24Z","updated_at":"2016-12-04T00:51:01Z","closed_at":"2016-12-04T00:51:01Z","author_association":"NONE","body":"As an original reporter of #126 I should have taken a bit more time to help out and confirm that the fix submitted actually helped resolve the issue. In fact, I don't think the fix actually works.\r\n\r\nI've extracted the minimal (or close to that) [reproducible example](https://gist.github.com/mishok13/eff5dc7defaac5f44a52a9b6632453aa). Basically, it's a swaggerized bogus API that only has one endpoint, `/foo` with a non-optional query parameter `b`. I've tested this with `yada` versions `1.1.39`, `1.1.40` and `1.1.41` and can confirm that none actually works. Now, here are couple of examples of how this setup leads to `500` status with nasty stacktraces in situations where you'd expect `200` or `400`:\r\n\r\n#### Sending well-formed request, expected status code `200` and empty body, got `500`\r\n```\r\ncurl -gv localhost:3232/foo?b=a -H \"accept-charset: utf-8\"\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n\r\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 127.0.0.1...\r\n* Connected to localhost (127.0.0.1) port 3232 (#0)\r\n> GET /foo?b=a HTTP/1.1\r\n> Host: localhost:3232\r\n> User-Agent: curl/7.47.0\r\n> Accept: */*\r\n> accept-charset: utf-8\r\n> \r\n< HTTP/1.1 500 Internal Server Error\r\n< Content-Type: text/plain\r\n< Server: Aleph/0.4.1\r\n< Connection: Keep-Alive\r\n< Date: Tue, 01 Nov 2016 14:26:27 GMT\r\n< content-length: 1282\r\n< \r\n{ [1282 bytes data]\r\n\r\n100  1282  100  1282    0     0   6571      0 --:--:-- --:--:-- --:--:--  6574\r\n* Connection #0 to host localhost left intact\r\ncom.fasterxml.jackson.core.JsonGenerationException: Cannot JSON encode object of class: class java.lang.IllegalArgumentException: java.lang.IllegalArgumentException: No implementation of method: :charset of protocol: #'yada.charset/Charset found for class: java.lang.String\r\n\tat cheshire.generate$generate.invoke(generate.clj:154)\r\n\tat cheshire.generate$generate.invoke(generate.clj:124)\r\n\tat cheshire.core$generate_string.invoke(core.clj:73)\r\n\tat yada.body$eval22229$fn__22230.invoke(body.clj:166)\r\n\tat clojure.lang.MultiFn.invoke(MultiFn.java:233)\r\n\tat yada.body$eval22209$fn__22210.invoke(body.clj:89)\r\n\tat yada.body$eval22073$fn__22074$G__22062__22081.invoke(body.clj:34)\r\n\tat yada.handler$standard_error.invoke(handler.clj:73)\r\n\tat yada.handler$handle_request_with_maybe_subresources$fn__24797.invoke(handler.clj:150)\r\n\tat manifold.deferred$catch_SINGLEQUOTE_$fn__8010.invoke(deferred.clj:962)\r\n\tat manifold.deferred.Listener.onError(deferred.clj:220)\r\n\tat manifold.deferred.Deferred$fn__7783$fn__7784.invoke(deferred.clj:399)\r\n\tat clojure.lang.AFn.run(AFn.java:22)\r\n\tat io.aleph.dirigiste.Executor$Worker$1.run(Executor.java:62)\r\n\tat manifold.executor$thread_factory$reify__7168$f__7169.invoke(executor.clj:44)\r\n\tat clojure.lang.AFn.run(AFn.java:22)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\n#### Skip sending query parameter, expected status code `400`, got `500`\r\n```\r\ncurl -gv localhost:3232/foo -H \"accept-charset: utf-8\"\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n\r\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 127.0.0.1...\r\n* Connected to localhost (127.0.0.1) port 3232 (#0)\r\n> GET /foo HTTP/1.1\r\n> Host: localhost:3232\r\n> User-Agent: curl/7.47.0\r\n> Accept: */*\r\n> accept-charset: utf-8\r\n> \r\n< HTTP/1.1 500 Internal Server Error\r\n< Content-Type: text/plain\r\n< Server: Aleph/0.4.1\r\n< Connection: Keep-Alive\r\n< Date: Tue, 01 Nov 2016 14:24:32 GMT\r\n< content-length: 2851\r\n< \r\n{ [2851 bytes data]\r\n\r\n100  2851  100  2851    0     0  14168      0 --:--:-- --:--:-- --:--:-- 14113\r\n100  2851  100  2851    0     0  14122      0 --:--:-- --:--:-- --:--:-- 14113\r\n* Connection #0 to host localhost left intact\r\njava.lang.IllegalArgumentException: No implementation of method: :charset of protocol: #'yada.charset/Charset found for class: java.lang.String\r\n\tat clojure.core$_cache_protocol_fn.invoke(core_deftype.clj:554)\r\n\tat yada.charset$eval21872$fn__21895$G__21859__21900.invoke(charset.clj:31)\r\n\tat yada.representation$charset_acceptable_QMARK_.invoke(representation.clj:96)\r\n\tat clojure.core$partial$fn__4527.invoke(core.clj:2493)\r\n\tat clojure.core$map$fn__4553.invoke(core.clj:2622)\r\n\tat clojure.lang.LazySeq.sval(LazySeq.java:40)\r\n\tat clojure.lang.LazySeq.seq(LazySeq.java:49)\r\n\tat clojure.lang.RT.seq(RT.java:507)\r\n\tat clojure.core$seq__4128.invoke(core.clj:137)\r\n\tat clojure.core.protocols$seq_reduce.invoke(protocols.clj:26)\r\n\tat clojure.core.protocols$fn__6506.invoke(protocols.clj:100)\r\n\tat clojure.core.protocols$fn__6452$G__6447__6465.invoke(protocols.clj:13)\r\n\tat clojure.core$reduce.invoke(core.clj:6515)\r\n\tat yada.util$best.invoke(util.clj:89)\r\n\tat yada.util$best.invoke(util.clj:87)\r\n\tat yada.representation$highest_charset_quality$fn__23834.invoke(representation.clj:119)\r\n\tat yada.representation$wrap_quality_assessor$fn__23811.invoke(representation.clj:33)\r\n\tat yada.representation$skip_rejected$fn__23808.invoke(representation.clj:26)\r\n\tat clojure.core$comp$fn__4495.invoke(core.clj:2438)\r\n\tat clojure.core$comp$fn__4495.invoke(core.clj:2438)\r\n\tat clojure.core$map$fn__4553.invoke(core.clj:2622)\r\n\tat clojure.lang.LazySeq.sval(LazySeq.java:40)\r\n\tat clojure.lang.LazySeq.seq(LazySeq.java:49)\r\n\tat clojure.lang.RT.seq(RT.java:507)\r\n\tat clojure.core$seq__4128.invoke(core.clj:137)\r\n\tat clojure.core$filter$fn__4580.invoke(core.clj:2679)\r\n\tat clojure.lang.LazySeq.sval(LazySeq.java:40)\r\n\tat clojure.lang.LazySeq.seq(LazySeq.java:49)\r\n\tat clojure.lang.RT.se
8000
q(RT.java:507)\r\n\tat clojure.core$seq__4128.invoke(core.clj:137)\r\n\tat clojure.core.protocols$seq_reduce.invoke(protocols.clj:30)\r\n\tat clojure.core.protocols$fn__6506.invoke(protocols.clj:101)\r\n\tat clojure.core.protocols$fn__6452$G__6447__6465.invoke(protocols.clj:13)\r\n\tat clojure.core$reduce.invoke(core.clj:6519)\r\n\tat yada.util$best_by.invoke(util.clj:106)\r\n\tat yada.util$best_by.invoke(util.clj:103)\r\n\tat yada.representation$select_best_representation.invoke(representation.clj:306)\r\n\tat yada.representation$select_best_representation.invoke(representation.clj:300)\r\n\tat yada.handler$handle_request_with_maybe_subresources$fn__24797.invoke(handler.clj:130)\r\n\tat manifold.deferred$catch_SINGLEQUOTE_$fn__8010.invoke(deferred.clj:962)\r\n\tat manifold.deferred.Listener.onError(deferred.clj:220)\r\n\tat manifold.deferred.Deferred$fn__7783$fn__7784.invoke(deferred.clj:399)\r\n\tat clojure.lang.AFn.run(AFn.java:22)\r\n\tat io.aleph.dirigiste.Executor$Worker$1.run(Executor.java:62)\r\n\tat manifold.executor$thread_factory$reify__7168$f__7169.invoke(executor.clj:44)\r\n\tat clojure.lang.AFn.run(AFn.java:22)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/130","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/130/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/130/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/130/events","html_url":"https://github.com/juxt/yada/issues/130","id":182455861,"number":130,"title":"Doc: links to parameters section are incorrect","user":{"login":"jeroenvandijk","id":27645,"avatar_url":"https://avatars1.githubusercontent.com/u/27645?v=4","gravatar_id":"","url":"https://api.github.com/users/jeroenvandijk","html_url":"https://github.com/jeroenvandijk","followers_url":"https://api.github.com/users/jeroenvandijk/followers","following_url":"https://api.github.com/users/jeroenvandijk/following{/other_user}","gists_url":"https://api.github.com/users/jeroenvandijk/gists{/gist_id}","starred_url":"https://api.github.com/users/jeroenvandijk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeroenvandijk/subscriptions","organizations_url":"https://api.github.com/users/jeroenvandijk/orgs","repos_url":"https://api.github.com/users/jeroenvandijk/repos","events_url":"https://api.github.com/users/jeroenvandijk/events{/privacy}","received_events_url":"https://api.github.com/users/jeroenvandijk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-10-12T07:38:19Z","updated_at":"2017-02-24T15:23:33Z","closed_at":"2017-02-24T15:23:33Z","author_association":"NONE","body":"(I'm not familiar with asciidoc yet, so I'll just report the issue without fixing it)\n\nThis line has a link to a parameters section but it is dead:\nhttps://github.com/juxt/yada/blame/47feba3feeff9fe47cb09dbdfed7daf199f43ca1/doc/hello.adoc#L490\n\nShould probably be section \"6 Parameters\", unfortunately i cannot link to 6 either because the link in the left hand side menu conflicts with section 3.1 it seems: https://juxt.pro/yada/manual/index.html#parameters\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/127","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/127/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/127/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/127/events","html_url":"https://github.com/juxt/yada/issues/127","id":181773946,"number":127,"title":"Test issue","user":{"login":"malcolmsparks","id":163131,"avatar_url":"https://avatars2.githubusercontent.com/u/163131?v=4","gravatar_id":"","url":"https://api.github.com/users/malcolmsparks","html_url":"https://github.com/malcolmsparks","followers_url":"https://api.github.com/users/malcolmsparks/followers","following_url":"https://api.github.com/users/malcolmsparks/following{/other_user}","gists_url":"https://api.github.com/users/malcolmsparks/gists{/gist_id}","starred_url":"https://api.github.com/users/malcolmsparks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malcolmsparks/subscriptions","organizations_url":"https://api.github.com/users/malcolmsparks/orgs","repos_url":"https://api.github.com/users/malcolmsparks/repos","events_url":"https://api.github.com/users/malcolmsparks/events{/privacy}","received_events_url":"https://api.github.com/users/malcolmsparks/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-10-07T21:43:51Z","updated_at":"2016-10-07T21:43:56Z","closed_at":"2016-10-07T21:43:56Z","author_association":"CONTRIBUTOR","body":"","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/126","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/126/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/126/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/126/events","html_url":"https://github.com/juxt/yada/issues/126","id":181651193,"number":126,"title":"Setting `Accept-Charset` header leads to an exception","user":{"login":"mishok13","id":548482,"avatar_url":"https://avatars0.githubusercontent.com/u/548482?v=4","gravatar_id":"","url":"https://api.github.com/users/mishok13","html_url":"https://github.com/mishok13","followers_url":"https://api.github.com/users/mishok13/followers","following_url":"https://api.github.com/users/mishok13/following{/other_user}","gists_url":"https://api.github.com/users/mishok13/gists{/gist_id}","starred_url":"https://api.github.com/users/mishok13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mishok13/subscriptions","organizations_url":"https://api.github.com/users/mishok13/orgs","repos_url":"https://api.github.com/users/mishok13/repos","events_url":"https://api.github.com/users/mishok13/events{/privacy}","received_events_url":"https://api.github.com/users/mishok13/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-10-07T11:59:06Z","updated_at":"2016-10-07T21:38:14Z","closed_at":"2016-10-07T21:38:14Z","author_association":"NONE","body":"When trying to access `yada` powered service with the following resource (edited for brevity):\n\n``` clojure\n(yada/resource {:id :com.autheos.event.resources/event\n                  :methods\n                  {:get\n                   {:produces #{\"application/json;q=0.9\"\n                                \"application/edn;q=0.1\"}\n                    :consumes #{\"*/*\"}\n                    :response (fn [ctx] \"\")}}})\n```\n\nproduces the following when `Accept-Charset` header is passed:\n\n```\n$ curl -gv 'localhost:5000/event' -H 'Accept-Charset: *'                                                                                                                                          \n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 5000 (#0)\n> GET /event HTTP/1.1\n> Host: localhost:5000\n> User-Agent: curl/7.47.0\n> Accept: */*\n> Accept-Charset: *\n>\n< HTTP/1.1 500 Internal Server Error\n< Content-Type: text/plain\n< Server: Aleph/0.4.1\n< Connection: Keep-Alive\n< Date: Fri, 07 Oct 2016 11:52:10 GMT\n< content-length: 1165\n< \ncom.fasterxml.jackson.core.JsonGenerationException: Cannot JSON encode object of class: class java.lang.NullPointerException: java.lang.NullPointerException\n        at cheshire.generate$generate.invoke(generate.clj:154)\n        at cheshire.generate$generate.invoke(generate.clj:124)\n        at cheshire.core$generate_string.invoke(core.clj:73)\n        at yada.body$eval20657$fn__20658.invoke(body.clj:166)\n        at clojure.lang.MultiFn.invoke(MultiFn.java:233)\n        at yada.body$eval20637$fn__20638.invoke(body.clj:89)\n        at yada.body$eval20501$fn__20502$G__20490__20509.invoke(body.clj:34)\n        at yada.handler$standard_error.invoke(handler.clj:73)\n        at yada.handler$handle_request_with_maybe_subresources$fn__24625.invoke(handler.clj:150)\n        at manifold.deferred$catch_SINGLEQUOTE_$fn__7283.invoke(deferred.clj:964)\n        at manifold.deferred.Listener.onError(deferred.clj:220)\n        at manifold.deferred.Deferred$fn__7056$fn__7057.invoke(deferred.clj:400)\n        at clojure.lang.AFn.run(AFn.java:22)\n        at io.aleph.dirigiste.Executor$Worker$1.run(Executor.java:62)\n        at manifold.executor$thread_factory$reify__6441$f__6442.invoke(executor.clj:44)\n        at clojure.lang.AFn.run(AFn.java:22)\n        at java.lang.Thread.run(Thread.java:745)\n```\n\nNote that passing other valid charset name in the value of the header, such as `utf-8` will lead to slightly different exception:\n\n```\n$ curl -gv 'localhost:5000/event' -H 'Accept-Charset: utf-8'\n[snipped]\ncom.fasterxml.jackson.core.JsonGenerationException: Cannot JSON encode object of class: class java.lang.IllegalArgumentException: java.lang.IllegalArgumentException: No implementation of method: :charset of protocol: #'yada.charset/Charset found for class: nil\n        at cheshire.generate$generate.invoke(generate.clj:154)\n        at cheshire.generate$generate.invoke(generate.clj:124)\n        at cheshire.core$generate_string.invoke(core.clj:73)\n        at yada.body$eval20657$fn__20658.invoke(body.clj:166)\n        at clojure.lang.MultiFn.invoke(MultiFn.java:233)\n        at yada.body$eval20637$fn__20638.invoke(body.clj:89)\n        at yada.body$eval20501$fn__20502$G__20490__20509.invoke(body.clj:34)\n        at yada.handler$standard_error.invoke(handler.clj:73)\n        at yada.handler$handle_request_with_maybe_subresources$fn__24625.invoke(handler.clj:150)\n        at manifold.deferred$catch_SINGLEQUOTE_$fn__7283.invoke(deferred.clj:964)\n        at manifold.deferred.Listener.onError(deferred.clj:220)\n        at manifold.deferred.Deferred$fn__7056$fn__7057.invoke(deferred.clj:400)\n        at clojure.lang.AFn.run(AFn.java:22)\n        at io.aleph.dirigiste.Executor$Worker$1.run(Executor.java:62)\n        at manifold.executor$thread_factory$reify__6441$f__6442.invoke(executor.clj:44)\n        at clojure.lang.AFn.run(AFn.java:22)\n        at java.lang.Thread.run(Thread.java:745)\n```\n\nAnd yet another exception if a bogus charset value is provided:\n\n```\n$ curl -gv 'localhost:5000/event' -H 'Accept-Charset: BOGUS@' \n[snipped]\njava.lang.IllegalArgumentException: No implementation of method: :charset of protocol: #'yada.charset/Charset found for class: nil\n        at clojure.core$_cache_protocol_fn.invoke(core_deftype.clj:554)\n        at yada.charset$eval17790$fn__17813$G__17777__17818.invoke(charset.clj:31)\n        at yada.representation$charset_acceptable_QMARK_.invoke(representation.clj:92)\n        at clojure.core$partial$fn__4527.invoke(core.clj:2493)\n        at clojure.core$map$fn__4553.invoke(core.clj:2622)\n        at clojure.lang.LazySeq.sval(LazySeq.java:40)\n        at clojure.lang.LazySeq.seq(LazySeq.java:49)\n        at clojure.lang.RT.seq(RT.java:507)\n        at clojure.core$seq__4128.invoke(core.clj:137)\n        at clojure.core.protocols$seq_reduce.invoke(protocols.clj:26)\n        at clojure.core.protocols$fn__6506.invoke(protocols.clj:100)\n        at clojure.core.protocols$fn__6452$G__6447__6465.invoke(protocols.clj:13)\n        at clojure.core$reduce.invoke(core.clj:6515)\n        at yada.util$best.invoke(util.clj:89)\n        at yada.util$best.invoke(util.clj:87)\n        at yada.representation$highest_charset_quality$fn__17995.invoke(representation.clj:119)\n        at yada.representation$wrap_quality_assessor$fn__17972.invoke(representation.clj:33)\n        at yada.representation$skip_rejected$fn__17969.invoke(representation.clj:26)\n        at clojure.core$comp$fn__4495.invoke(core.clj:2438)\n        at clojure.core$comp$fn__4495.invoke(core.clj:2438)\n        at clojure.core$map$fn__4553.invoke(core.clj:2622)\n        at clojure.lang.LazySeq.sval(LazySeq.java:40)\n        at clojure.lang.LazySeq.seq(LazySeq.java:49)\n        at clojure.lang.RT.seq(RT.java:507)\n        at clojure.core$seq__4128.invoke(core.clj:137)\n        at clojure.core$filter$fn__4580.invoke(core.clj:2679)\n        at clojure.lang.LazySeq.sval(LazySeq.java:40)\n        at clojure.lang.LazySeq.seq(LazySeq.java:49)\n        at clojure.lang.RT.seq(RT.java:507)\n        at clojure.core$seq__4128.invoke(core.clj:137)\n        at clojure.core.protocols$seq_reduce.invoke(protocols.clj:30)\n        at clojure.core.protocols$fn__6506.invoke(protocols.clj:101)\n        at clojure.core.protocols$fn__6452$G__6447__6465.invoke(protocols.clj:13)\n        at clojure.core$reduce.invoke(core.clj:6519)\n        at yada.util$best_by.invoke(util.clj:106)\n        at yada.util$best_by.invoke(util.clj:103)\n        at yada.representation$select_best_representation.invoke(representation.clj:306)\n        at yada.representation$select_best_representation.invoke(representation.clj:300)\n        at yada.handler$handle_request_with_maybe_subresources$fn__24625.invoke(handler.clj:130)\n        at manifold.deferred$catch_SINGLEQUOTE_$fn__7283.invoke(deferred.clj:964)\n        at manifold.deferred.Listener.onError(deferred.clj:220)\n        at manifold.deferred.Deferred$fn__7056$fn__7057.invoke(deferred.clj:400)\n        at clojure.lang.AFn.run(AFn.java:22)\n        at io.aleph.dirigiste.Executor$Worker$1.run(Executor.java:62)\n        at manifold.executor$thread_factory$reify__6441$f__6442.invoke(executor.clj:44)\n        at clojure.lang.AFn.run(AFn.java:22)\n        at java.lang.Thread.run(Thread.java:745)\n```\n\nReproduced on `yada` versions `1.1.35` and `1.1.37`.\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/120","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/120/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/120/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/120/events","html_url":"https://github.com/juxt/yada/issues/120","id":174618254,"number":120,"title":"string->media-type crashes on \"*\"","user":{"login":"grav","id":119222,"avatar_url":"https://avatars3.githubusercontent.com/u/119222?v=4","gravatar_id":"","url":"https://api.github.com/users/grav","html_url":"https://github.com/grav","followers_url":"https://api.github.com/users/grav/followers","following_url":"https://api.github.com/users/grav/following{/other_user}","gists_url":"https://api.github.com/users/grav/gists{/gist_id}","starred_url":"https://api.github.com/users/grav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/grav/subscriptions","organizations_url":"https://api.github.com/users/grav/orgs","repos_url":"https://api.github.com/users/grav/repos","events_url":"https://api.github.com/users/grav/events{/privacy}","received_events_url":"https://api.github.com/users/grav/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-01T20:29:52Z","updated_at":"2016-09-02T05:57:37Z","closed_at":"2016-09-02T05:57:37Z","author_association":"CONTRIBUTOR","body":"If I issue a request like\n\n```\ncurl -H \"accept: *;\" ...\n```\n\nI get a nullpointer exception in `string->media-type` even before my routes are matched:\n\n```\n$ curl -H \"accept: *\" \"http://localhost:8080/foo\" \njava.lang.NullPointerException\n    at java.util.regex.Matcher.getTextLength(Matcher.java:1283)\n    at java.util.regex.Matcher.reset(Matcher.java:309)\n    at java.util.regex.Matcher.<init>(Matcher.java:229)\n    at java.util.regex.Pattern.matcher(Pattern.java:1093)\n    at clojure.core$re_matcher.invokeStatic(core.clj:4674)\n    at clojure.core$re_seq.invokeStatic(core.clj:4692)\n    at clojure.core$re_seq.invoke(core.clj:4692)\n    at yada.media_type$eval18765$string__GT_media_type__18766.invoke(media_type.clj:33)\n...\n```\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/119","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/119/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/119/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/119/events","html_url":"https://github.com/juxt/yada/issues/119","id":174444500,"number":119,"title":"Incorrect use of memoize in yada.media-type","user":{"login":"imrekoszo","id":1116295,"avatar_url":"https://avatars0.githubusercontent.com/u/1116295?v=4","gravatar_id":"","url":"https://api.github.com/users/imrekoszo","html_url":"https://github.com/imrekoszo","followers_url":"https://api.github.com/users/imrekoszo/followers","following_url":"https://api.github.com/users/imrekoszo/following{/other_user}","gists_url":"https://api.github.com/users/imrekoszo/gists{/gist_id}","starred_url":"https://api.github.com/users/imrekoszo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imrekoszo/subscriptions","organizations_url":"https://api.github.com/users/imrekoszo/orgs","repos_url":"https://api.github.com/users/imrekoszo/repos","events_url":"https://api.github.com/users/imrekoszo/events{/privacy}","received_events_url":"https://api.github.com/users/imrekoszo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-01T06:13:56Z","updated_at":"2016-09-02T06:53:58Z","closed_at":"2016-09-02T06:53:58Z","author_association":"CONTRIBUTOR","body":"At https://github.com/juxt/yada/blob/master/src/yada/media_type.clj#L29 and https://github.com/juxt/yada/blob/master/src/yada/media_type.clj#L48 I believe memoize is used incorrectly resulting in no actual memoization happening when those functions are called. Given the comments pointing out the possibility of a memory exhaustion attack, this might actually be a good thing.\n\nFrom https://clojuredocs.org/clojure.core/memoize : \n\n> Returns a memoized version of a referentially transparent function (...)\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/115","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/115/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/115/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/115/events","html_url":"https://github.com/juxt/yada/issues/115","id":170775957,"number":115,"title":"yada.aleph/listener should return wait-for-close","user":{"login":"Frozenlock","id":1152041,"avatar_url":"https://avatars1.githubusercontent.com/u/1152041?v=4","gravatar_id":"","url":"https://api.github.com/users/Frozenlock","html_url":"https://github.com/Frozenlock","followers_url":"https://api.github.com/users/Frozenlock/followers","following_url":"https://api.github.com/users/Frozenlock/following{/other_user}","gists_url":"https://api.github.com/users/Frozenlock/gists{/gist_id}","starred_url":"https://api.github.com/users/Frozenlock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frozenlock/subscriptions","organizations_url":"https://api.github.com/users/Frozenlock/orgs","repos_url":"https://api.github.com/users/Frozenlock/repos","events_url":"https://api.github.com/users/Frozenlock/events{/privacy}","received_events_url":"https://api.github.com/users/Frozenlock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-08-12T00:19:31Z","updated_at":"2016-08-12T13:24:41Z","closed_at":"2016-08-12T07:47:29Z","author_association":"CONTRIBUTOR","body":"While `yada.aleph/listener` already returns a closing function and the port via `:close` and `:port`, one should still be able to either get their hands on the `server` object, or a `:wait-for-close` function.\n\n`wait-for-close` is necessary to prevent the jar from silently exiting.\n(See https://github.com/ztellman/aleph/issues/265)\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/113","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/113/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/113/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/113/events","html_url":"https://github.com/juxt/yada/issues/113","id":168479726,"number":113,"title":"Support proxy headers","user":{"login":"malcolmsparks","id":163131,"avatar_url":"https://avatars2.githubusercontent.com/u/163131?v=4","gravatar_id":"","url":"https://api.github.com/users/malcolmsparks","html_url":"https://github.com/malcolmsparks","followers_url":"https://api.github.com/users/malcolmsparks/followers","following_url":"https://api.github.com/users/malcolmsparks/following{/other_user}","gists_url":"https://api.github.com/users/malcolmsparks/gists{/gist_id}","starred_url":"https://api.github.com/users/malcolmsparks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malcolmsparks/subscriptions","organizations_url":"https://api.github.com/users/malcolmsparks/orgs","repos_url":"https://api.github.com/users/malcolmsparks/repos","events_url":"https://api.github.com/users/malcolmsparks/events{/privacy}","received_events_url":"https://api.github.com/users/malcolmsparks/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-07-30T18:10:38Z","updated_at":"2016-08-12T07:47:53Z","closed_at":"2016-08-12T07:47:53Z","author_association":"CONTRIBUTOR","body":"@malcolmsparks: I think yada should use the X_FORWARDED_PROTO http header defined in this rfc:\nhttps://tools.ietf.org/html/rfc7239\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/111","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/111/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/111/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/111/events","html_url":"https://github.com/juxt/yada/issues/111","id":166643354,"number":111,"title":"java.lang.ClassNotFoundException: ring.util.time","user":{"login":"neverfox","id":3344033,"avatar_url":"https://avatars1.githubusercontent.com/u/3344033?v=4","gravatar_id":"","url":"https://api.github.com/users/neverfox","html_url":"https://github.com/neverfox","followers_url":"https://api.github.com/users/neverfox/followers","following_url":"https://api.github.com/users/neverfox/following{/other_user}","gists_url":"https://api.github.com/users/neverfox/gists{/gist_id}","starred_url":"https://api.github.com/users/neverfox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neverfox/subscriptions","organizations_url":"https://api.github.com/users/neverfox/orgs","repos_url":"https://api.github.com/users/neverfox/repos","events_url":"https://api.github.com/users/neverfox/events{/privacy}","received_events_url":"https://api.github.com/users/neverfox/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-07-20T17:59:03Z","updated_at":"2016-07-21T09:59:24Z","closed_at":"2016-07-21T09:57:22Z","author_association":"NONE","body":"I constantly get this error when trying to use `refresh` in the Clojure REPL:\n\n`java.lang.ClassNotFoundException: ring.util.time, compiling:(yada/interceptors.clj:226:14)`\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/108","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/108/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/108/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/108/events","html_url":"https://github.com/juxt/yada/issues/108","id":161000923,"number":108,"title":"Site/Docs page gives stack trace","user":{"login":"staypufd","id":10730,"avatar_url":"https://avatars1.githubusercontent.com/u/10730?v=4","gravatar_id":"","url":"https://api.github.com/users/staypufd","html_url":"https://github.com/staypufd","followers_url":"https://api.github.com/users/staypufd/followers","following_url":"https://api.github.com/users/staypufd/following{/other_user}","gists_url":"https://api.github.com/users/staypufd/gists{/gist_id}","starred_url":"https://api.github.com/users/staypufd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/staypufd/subscriptions","organizations_url":"https://api.github.com/users/staypufd/orgs","repos_url":"https://api.github.com/users/staypufd/repos","events_url":"https://api.github.com/users/staypufd/events{/privacy}","received_events_url":"https://api.github.com/users/staypufd/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-06-18T01:42:40Z","updated_at":"2016-06-18T10:54:32Z","closed_at":"2016-06-18T10:54:31Z","author_association":"NONE","body":"Going to https://juxt.pro/yada gives stack trace.\n\n404: Not Found\n\nThe requested resource could not be found but may be available again in the future.\n\nclojure.lang.ExceptionInfo:  {:status 404}\n    at clojure.core$ex_info.invoke(core.clj:4593)\n    at yada.resource$eval30592$fn__30593$fn__30594.invoke(resource.clj:113)\n    at manifold.deferred$eval14998$chain___15019.invoke(deferred.clj:860)\n    at manifold.deferred$chain.invoke(deferred.clj:929)\n    at clojure.lang.AFn.applyToHelper(AFn.java:156)\n    at clojure.lang.RestFn.applyTo(RestFn.java:132)\n    at clojure.core$apply.invoke(core.clj:632)\n    at yada.handler$handle_request_with_maybe_subresources.invoke(handler.clj:121)\n    at yada.handler$handle_request.invoke(handler.clj:169)\n    at yada.handler.Handler.request(handler.clj:224)\n    at bidi.vhosts$make_handler$fn__4623.invoke(vhosts.clj:160)\n    at aleph.http.server$handle_request$fn__25185$f__14319__auto____25186.invoke(server.clj:154)\n    at clojure.lang.AFn.run(AFn.java:22)\n    at io.aleph.dirigiste.Executor$Worker$1.run(Executor.java:62)\n    at manifold.executor$thread_factory$reify__14201$f__14202.invoke(executor.clj:36)\n    at clojure.lang.AFn.run(AFn.java:22)\n    at java.lang.Thread.run(Thread.java:745)\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/99","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/99/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/99/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/99/events","html_url":"https://github.com/juxt/yada/issues/99","id":157409282,"number":99,"title":"Wrong swagger-ui version hardcoded for the index.html","user":{"login":"Frozenlock","id":1152041,"avatar_url":"https://avatars1.githubusercontent.com/u/1152041?v=4","gravatar_id":"","url":"https://api.github.com/users/Frozenlock","html_url":"https://github.com/Frozenlock","followers_url":"https://api.github.com/users/Frozenlock/followers","following_url":"https://api.github.com/users/Frozenlock/following{/other_user}","gists_url":"https://api.github.com/users/Frozenlock/gists{/gist_id}","starred_url":"https://api.github.com/users/Frozenlock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frozenlock/subscriptions","organizations_url":"https://api.github.com/users/Frozenlock/orgs","repos_url":"https://api.github.com/users/Frozenlock/repos","events_url":"https://api.github.com/users/Frozenlock/events{/privacy}","received_events_url":"https://api.github.com/users/Frozenlock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-05-29T22:19:47Z","updated_at":"2016-06-08T17:26:44Z","closed_at":"2016-06-08T17:26:44Z","author_association":"CONTRIBUTOR","body":"Yada is currently relying on swagger-ui 2.1.4 in `project.clj`, but is using 2.1.3 in the code.\n\n``` clj\n(defn swaggered [routes & [template]]\n  (let [spec (swagger-spec routes (or template {}))]\n    (map->Swaggered\n     {:spec spec\n      :routes routes\n      :swagger-ui (handler (new-classpath-resource \"META-INF/resources/webjars/swagger-ui/2.1.3\"))\n      :spec-handlers\n      (into {}\n            (for [ct [\"application/edn\" \"application/json\" \"text/html\"]]\n              [ct (handler (swagger-spec-resource spec ct))]))})))\n```\n\nhttps://github.com/juxt/yada/blob/9896735fe98a5a339061429c23a2123513486a5e/src/yada/swagger.clj#L225\n\nThis causes a `404 not found` when a request is made to get the `index.html`.\n\nA temporary fix is to add `[org.webjars/swagger-ui \"2.1.3\"]` in your project dependency.\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/95","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/95/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/95/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/95/events","html_url":"https://github.com/juxt/yada/issues/95","id":156309521,"number":95,"title":"gzip request bodies on POST","user":{"login":"malcolmsparks","id":163131,"avatar_url":"https://avatars2.githubusercontent.com/u/163131?v=4","gravatar_id":"","url":"https://api.github.com/users/malcolmsparks","html_url":"https://github.com/malcolmsparks","followers_url":"https://api.github.com/users/malcolmsparks/followers","following_url":"https://api.github.com/users/malcolmsparks/following{/other_user}","gists_url":"https://api.github.com/users/malcolmsparks/gists{/gist_id}","starred_url":"https://api.github.com/users/malcolmsparks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malcolmsparks/subscriptions","organizations_url":"https://api.github.com/users/malcolmsparks/orgs","repos_url":"https://api.github.com/users/malcolmsparks/repos","events_url":"https://api.github.com/users/malcolmsparks/events{/privacy}","received_events_url":"https://api.github.com/users/malcolmsparks/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-05-23T16:16:18Z","updated_at":"2016-11-25T14:37:57Z","closed_at":"2016-11-25T14:37:57Z","author_association":"CONTRIBUTOR","body":"","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/88","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/88/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/88/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/88/events","html_url":"https://github.com/juxt/yada/issues/88","id":147933976,"number":88,"title":"yada doesn't accept \"application/transit+json; charset=utf-8\"","user":{"login":"Frozenlock","id":1152041,"avatar_url":"https://avatars1.githubusercontent.com/u/1152041?v=4","gravatar_id":"","url":"https://api.github.com/users/Frozenlock","html_url":"https://github.com/Frozenlock","followers_url":"https://api.github.com/users/Frozenlock/followers","following_url":"https://api.github.com/users/Frozenlock/following{/other_user}","gists_url":"https://api.github.com/users/Frozenlock/gists{/gist_id}","starred_url":"https://api.github.com/users/Frozenlock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frozenlock/subscriptions","organizations_url":"https://api.github.com/users/Frozenlock/orgs","repos_url":"https://api.github.com/users/Frozenlock/repos","events_url":"https://api.github.com/users/Frozenlock/events{/privacy}","received_events_url":"https://api.github.com/users/Frozenlock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-04-13T03:08:52Z","updated_at":"2016-04-21T15:36:44Z","cl
7a6e
osed_at":"2016-04-21T15:36:44Z","author_association":"CONTRIBUTOR","body":"[cljs-ajax](https://github.com/JulianBirch/cljs-ajax) automatically adds `; charset=utf-8` to the accept header when using the transit format.\n\nThis causes Yada to return a 406 (not acceptable).\n\nA quick read of #56 left me with the impression that Yada is still supposed to return application/transit+json and drop the charset argument.\n\nIs this a bug? Perhaps there's some configuration one needs to add to be able to accept the `application/transit+json; charset=utf-8`?\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/87","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/87/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/87/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/87/events","html_url":"https://github.com/juxt/yada/issues/87","id":147019476,"number":87,"title":"manifold on-closed event for server-sent events","user":{"login":"nha","id":1968291,"avatar_url":"https://avatars3.githubusercontent.com/u/1968291?v=4","gravatar_id":"","url":"https://api.github.com/users/nha","html_url":"https://github.com/nha","followers_url":"https://api.github.com/users/nha/followers","following_url":"https://api.github.com/users/nha/following{/other_user}","gists_url":"https://api.github.com/users/nha/gists{/gist_id}","starred_url":"https://api.github.com/users/nha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nha/subscriptions","organizations_url":"https://api.github.com/users/nha/orgs","repos_url":"https://api.github.com/users/nha/repos","events_url":"https://api.github.com/users/nha/events{/privacy}","received_events_url":"https://api.github.com/users/nha/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-08T19:38:20Z","updated_at":"2016-04-09T00:45:26Z","closed_at":"2016-04-09T00:45:26Z","author_association":"CONTRIBUTOR","body":"It seems that the `on-closed` handler does not work with server-sent events ?\n\nI tested from yada `1.1.2` to `1.1.5` with the following resource : \n\n```\n(def get-stream\n  (yada (yada/resource {:access-control {:allow-origin \"*\"\n                                       :allow-headers \"*\"\n                                       :allow-credentials true}\n                        :produces [{:media-type #{\"text/event-stream\"\n                                                  \"application/edn;q=0.9\"\n                                                  \"application/json;q=0.8\"}\n                                    :charset \"UTF-8\"}]\n                        :methods\n                        {:get {\n                               :response (fn [ctx]\n​\n                                           (let [c   (async/chan)\n                                                 sse (s/->source c)]\n​\n                         ;; push some data to the channel  \n                                             (async/go-loop [cnt 10\n                                                             i 0]\n                                               (if (< i cnt)\n                                                 (do (async/<!   (async/timeout 1000))\n                                                     (async/>! c (str \"Hello there \" i \"\\n\"))\n                                                     (recur cnt  (inc i)))\n                                                 (async/close! c)))\n​\n                                             ;; on-closed doesn't work\n                                             ;; (s/on-closed sse (fn []\n                                             ;;                    (info \"SSE CLOSE \")))\n​\n                                             ;; 500: Internal Server Error\n​\n                                             ;; There was an internal server error.\n​\n                                             ;; clojure.lang.ExceptionInfo: Error on GET {:response #yada.context.Response{:headers {\"www-authenticate\" [\"\"]}, :vary #{:media-type}, :produces {:media-type #yada.media_type.MediaTypeMap{:name \"text/event-stream\", :type \"text\", :subtype \"event-stream\", :parameters {}, :quality 1.0}, :charset #yada.charset.CharsetMap{:alias \"UTF-8\", :quality 1.0}}}, :resource clojure.lang.PersistentArrayMap, :error #error {\n                                             ;;                                                                                                                                                                                                                                                                                                                                                                                                                         :cause \"manifold.stream.async.CoreAsyncSource cannot be cast to manifold.stream.core.IEventSink\"\n                                             ;;\n​\n​\n                                             (-> (:response ctx)\n                                                 (assoc :status 200)\n                                                 (assoc :headers {\"content-type\" \"text/event-stream\"})\n                                                 (assoc :body sse))))}}})))\n```\n\nNote : it may very well be a misunderstanding on my end - I assumed this should work since it does with websockets. If there is a different way I would be happy to know it (and then it could maybe be added to the documentation).\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/76","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/76/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/76/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/76/events","html_url":"https://github.com/juxt/yada/issues/76","id":142085582,"number":76,"title":"support schema Any","user":{"login":"nha","id":1968291,"avatar_url":"https://avatars3.githubusercontent.com/u/1968291?v=4","gravatar_id":"","url":"https://api.github.com/users/nha","html_url":"https://github.com/nha","followers_url":"https://api.github.com/users/nha/followers","following_url":"https://api.github.com/users/nha/following{/other_user}","gists_url":"https://api.github.com/users/nha/gists{/gist_id}","starred_url":"https://api.github.com/users/nha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nha/subscriptions","organizations_url":"https://api.github.com/users/nha/orgs","repos_url":"https://api.github.com/users/nha/repos","events_url":"https://api.github.com/users/nha/events{/privacy}","received_events_url":"https://api.github.com/users/nha/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-03-19T17:42:52Z","updated_at":"2016-04-06T16:49:41Z","closed_at":"2016-04-06T16:49:41Z","author_association":"CONTRIBUTOR","body":"When using prismatic/schema `Any`  `yada.coerce` throws an error : \n\nFor instance : \n`:parameters {:query { (sch/optional-key sch/Any) sch/Any}}` will throw : \n\n```\njava.lang.IllegalArgumentException: No implementation of method: :to-key of protocol: #'yada.coerce/ParameterKey found for class: schema.core.AnythingSchema\n```\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/75","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/75/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/75/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/75/events","html_url":"https://github.com/juxt/yada/issues/75","id":141755426,"number":75,"title":"Direct memory exhaustion large multipart upload","user":{"login":"mfikes","id":1723464,"avatar_url":"https://avatars1.githubusercontent.com/u/1723464?v=4","gravatar_id":"","url":"https://api.github.com/users/mfikes","html_url":"https://github.com/mfikes","followers_url":"https://api.github.com/users/mfikes/followers","following_url":"https://api.github.com/users/mfikes/following{/other_user}","gists_url":"https://api.github.com/users/mfikes/gists{/gist_id}","starred_url":"https://api.github.com/users/mfikes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mfikes/subscriptions","organizations_url":"https://api.github.com/users/mfikes/orgs","repos_url":"https://api.github.com/users/mfikes/repos","events_url":"https://api.github.com/users/mfikes/events{/privacy}","received_events_url":"https://api.github.com/users/mfikes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2016-03-18T02:19:30Z","updated_at":"2016-08-13T13:53:55Z","closed_at":"2016-08-13T13:53:55Z","author_association":"NONE","body":"If you do a large multipart upload with your own `Partial` and `PartConsumer` implementations (which could stream to storage, but instead simply discard the uploaded data), then the system will exhaust direct memory within a few minutes.\n\nTo reproduce, first do `lein new foo` to create a blank project and add the following to the `:dependencies` vector in `project.clj`:\n\n```\n[aleph \"0.4.1-beta5\"]\n[bidi \"2.0.1\"]\n[yada \"1.1.2\"]\n```\n\nthen, start a REPL in that project and issue the following forms in the REPL:\n\n```\n(require '[aleph.http :refer [start-server]]\n         '[yada.yada :refer [resource]]\n         '[yada.aleph :refer [listener]]\n         '[yada.request-body :as request-body])\n\n(import (yada.multipart Partial PartConsumer))\n\n(defrecord MyPartial []\n  Partial\n  (continue [this _] (prn (java.util.Date.)) this)\n  (complete [_ state _] state))\n\n(defrecord MyPartConsumer []\n  PartConsumer\n  (consume-part [_ _ _])\n  (start-partial [_ _] (->MyPartial))\n  (part-coercion-matcher [_] {}))\n\n;; Hook in our own part consumer\n(let [original-impl (get-method request-body/process-request-body \"multipart/form-data\")]\n  (defmethod request-body/process-request-body \"multipart/form-data\"\n    [ctx body-stream media-type & args]\n    (let [new-ctx (assoc-in ctx [:options :part-consumer] (->MyPartConsumer))]\n      (apply original-impl new-ctx body-stream media-type args))))\n\n(listener\n  [\"/upload\"\n   (resource\n     {:methods\n      {:post\n       {:consumes \"multipart/form-data\"\n        :response (constantly nil)}}})]\n  {:port 3000})\n```\n\n(Note that the `process-request-body` multimethod is modified in lieu of `:options` setting.)\n\nNow, make a large file:\n\n```\ndd if=/dev/zero of=file.txt count=10240000 bs=1024\n```\n\nand upload it to the server started in the REPL:\n\n```\ncurl -F file=@file.txt http://localhost:3000/upload\n```\n\nTimestamps will be displayed in the REPL as chunks come in:\n\n```\n#inst \"2016-03-18T02:03:40.141-00:00\"\n#inst \"2016-03-18T02:03:40.188-00:00\"\n```\n\nafter a few minutes things will fail. On Linux, the exception will look like the following:\n\n```\n#\n# There is insufficient memory for the Java Runtime Environment to continue.\n# Native memory allocation (mmap) failed to map 3653632 bytes for committing reserved memory.\nJava HotSpot(TM) 64-Bit Server VM warning: INFO: os::commit_memory(0x00000000ff815000, 3653632, 0) failed; error='Cannot allocate memory' (errno=12)\n# An error report file with more information is saved as:\n# /home/vagrant/yada-dm/hs_err_pid3621.log\nException in thread \"Thread-3\" clojure.lang.ExceptionInfo: Subprocess failed {:exit-code 1}\n    at clojure.core$ex_info.invokeStatic(core.clj:4617)\n    at clojure.core$ex_info.invoke(core.clj:4617)\n    at leiningen.core.eval$fn__5625.invokeStatic(eval.clj:271)\n    at leiningen.core.eval$fn__5625.invoke(eval.clj:267)\n    at clojure.lang.MultiFn.invoke(MultiFn.java:233)\n    at leiningen.core.eval$eval_in_project.invokeStatic(eval.clj:373)\n    at leiningen.core.eval$eval_in_project.invoke(eval.clj:363)\n    at leiningen.repl$server$fn__11767.invoke(repl.clj:243)\n    at clojure.lang.AFn.applyToHelper(AFn.java:152)\n    at clojure.lang.AFn.applyTo(AFn.java:144)\n    at clojure.core$apply.invokeStatic(core.clj:646)\n    at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1881)\n    at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1881)\n    at clojure.lang.RestFn.invoke(RestFn.java:425)\n    at clojure.lang.AFn.applyToHelper(AFn.java:156)\n    at clojure.lang.RestFn.applyTo(RestFn.java:132)\n    at clojure.core$apply.invokeStatic(core.clj:650)\n    at clojure.core$bound_fn_STAR_$fn__4671.doInvoke(core.clj:1911)\n    at clojure.lang.RestFn.invoke(RestFn.java:397)\n    at clojure.lang.AFn.run(AFn.java:22)\n    at java.lang.Thread.run(Thread.java:745)\n\nSocketException The transport's socket appears to have lost its connection to the nREPL server\n    clojure.tools.nrepl.transport/bencode/fn--10128/fn--10129 (transport.clj:95)\n    clojure.tools.nrepl.transport/bencode/fn--10128 (transport.clj:95)\n    clojure.tools.nrepl.transport/fn-transport/fn--10100 (transport.clj:42)\n    clojure.core/binding-conveyor-fn/fn--4676 (core.clj:1938)\n    java.util.concurrent.FutureTask.run (FutureTask.java:266)\n    java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\n    java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\n    java.lang.Thread.run (Thread.java:745)\n```\n\nAnd on OS X you will see:\n\n```\nMar 17, 2016 6:46:51 PM clojure.tools.logging$eval420$fn__424 invoke\nWARNING: error in HTTP server\njava.lang.OutOfMemoryError: Direct buffer memory\n    at java.nio.Bits.reserveMemory(Bits.java:693)\n    at java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:123)\n    at java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:311)\n    at io.netty.buffer.PoolArena$DirectArena.newChunk(PoolArena.java:645)\n    at io.netty.buffer.PoolArena.allocateNormal(PoolArena.java:229)\n    at io.netty.buffer.PoolArena.allocate(PoolArena.java:213)\n    at io.netty.buffer.PoolArena.allocate(PoolArena.java:133)\n    at io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:262)\n    at io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:179)\n    at io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:170)\n    at io.netty.buffer.AbstractByteBufAllocator.ioBuffer(AbstractByteBufAllocator.java:131)\n    at io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate(DefaultMaxMessagesRecvByteBufAllocator.java:73)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:111)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:510)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:467)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:381)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:353)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:742)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\n```\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/74","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/74/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/74/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/74/events","html_url":"https://github.com/juxt/yada/issues/74","id":140344360,"number":74,"title":"NPE handling large multipart upload","user":{"login":"mfikes","id":1723464,"avatar_url":"https://avatars1.githubusercontent.com/u/1723464?v=4","gravatar_id":"","url":"https://api.github.com/users/mfikes","html_url":"https://github.com/mfikes","followers_url":"https://api.github.com/users/mfikes/followers","following_url":"https://api.github.com/users/mfikes/following{/other_user}","gists_url":"https://api.github.com/users/mfikes/gists{/gist_id}","starred_url":"https://api.github.com/users/mfikes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mfikes/subscriptions","organizations_url":"https://api.github.com/users/mfikes/orgs","repos_url":"https://api.github.com/users/mfikes/repos","events_url":"https://api.github.com/users/mfikes/events{/privacy}","received_events_url":"https://api.github.com/users/mfikes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-03-12T04:04:13Z","updated_at":"2016-03-20T21:34:56Z","closed_at":"2016-03-20T21:34:56Z","author_association":"NONE","body":"An NPE will occur in `yada.multipart/finish-up` if you upload a large file to a Yada-based server.\n\nTo repro on OS X, clone the `yada` repo and start up `lein repl` in its top level directory. Then\n\n``` clojure\n(require '[aleph.http :refer [start-server]]\n         '[bidi.ring :refer [make-handler]]\n         '[yada.yada :refer [resource]])\n```\n\nand\n\n```\n(start-server\n  (make-handler\n    [\"/upload\"\n     (resource\n       {:methods\n        {:post\n         {:consumes \"multipart/form-data\"\n          :response (constantly nil)}}})])\n  {:port 3000})\n```\n\nThen create a large file:\n\n```\ndd if=/dev/zero of=file.txt count=1024 bs=1024\n```\n\nand use cURL to upload the file to the server:\n\n```\ncurl -F file=@file.txt http://localhost:3000/upload\n```\n\nYou should get an error:\n\n```\n20:02:42.021 [manifold-pool-2-7] ERROR yada.multipart - Failed: null\njava.lang.NullPointerException: null\n    at clojure.lang.Numbers.ops(Numbers.java:1013)\n    at clojure.lang.Numbers.add(Numbers.java:128)\n    at yada.multipart$finish_up.invoke(multipart.clj:313)\n    at yada.multipart$process_chunk.invoke(multipart.clj:334)\n    at yada.multipart$parse_multipart$this__2646__auto____24204$fn__24205$fn__24206.invoke(multipart.clj:420)\n    at manifold.deferred$eval2555$chain___2576.invoke(deferred.clj:860)\n    at yada.multipart$parse_multipart$this__2646__auto____24204$fn__24205.invoke(multipart.clj:414)\n    at yada.multipart$parse_multipart$this__2646__auto____24204.invoke(multipart.clj:402)\n    at clojure.lang.AFn.applyToHelper(AFn.java:156)\n    at clojure.lang.AFn.applyTo(AFn.java:144)\n    at clojure.core$apply.invoke(core.clj:632)\n    at yada.multipart$parse_multipart$this__2646__auto____24204$fn__24232.invoke(multipart.clj:402)\n    at manifold.deferred.Listener.onSuccess(deferred.clj:219)\n    at manifold.deferred.Deferred$fn__2357$fn__2358.invoke(deferred.clj:396)\n    at clojure.lang.AFn.run(AFn.java:22)\n    at io.aleph.dirigiste.Executor$Worker$1.run(Executor.java:62)\n    at manifold.executor$thread_factory$reify__1758$f__1759.invoke(executor.clj:36)\n    at clojure.lang.AFn.run(AFn.java:22)\n    at java.lang.Thread.run(Thread.java:745)\n```\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/68","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/68/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/68/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/68/events","html_url":"https://github.com/juxt/yada/issues/68","id":137359305,"number":68,"title":"Typo in project.clj","user":{"login":"Malabarba","id":453029,"avatar_url":"https://avatars3.githubusercontent.com/u/453029?v=4","gravatar_id":"","url":"https://api.github.com/users/Malabarba","html_url":"https://github.com/Malabarba","followers_url":"https://api.github.com/users/Malabarba/followers","following_url":"https://api.github.com/users/Malabarba/following{/other_user}","gists_url":"https://api.github.com/users/Malabarba/gists{/gist_id}","starred_url":"https://api.github.com/users/Malabarba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Malabarba/subscriptions","organizations_url":"https://api.github.com/users/Malabarba/orgs","repos_url":"https://api.github.com/users/Malabarba/repos","events_url":"https://api.github.com/users/Malabarba/events{/privacy}","received_events_url":"https://api.github.com/users/Malabarba/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-02-29T20:14:24Z","updated_at":"2016-03-07T12:04:51Z","closed_at":"2016-03-07T12:04:51Z","author_association":"NONE","body":"On this line: https://github.com/juxt/yada/blob/master/project.clj#L23\nIt looks like :exclusions is miss-typed.\n\nCheers\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/64","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/64/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/64/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/64/events","html_url":"https://github.com/juxt/yada/issues/64","id":135624546,"number":64,"title":"Testing function `response-for` doesn't accept map responses","user":{"login":"Frozenlock","id":1152041,"avatar_url":"https://avatars1.githubusercontent.com/u/1152041?v=4","gravatar_id":"","url":"https://api.github.com/users/Frozenlock","html_url":"https://github.com/Frozenlock","followers_url":"https://api.github.com/users/Frozenlock/followers","following_url":"https://api.github.com/users/Frozenlock/following{/other_user}","gists_url":"https://api.github.com/users/Frozenlock/gists{/gist_id}","starred_url":"https://api.github.com/users/Frozenlock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frozenlock/subscriptions","organizations_url":"https://api.github.com/users/Frozenlock/orgs","repos_url":"https://api.github.com/users/Frozenlock/repos","events_url":"https://api.github.com/users/Frozenlock/events{/privacy}","received_events_url":"https://api.github.com/users/Frozenlock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-02-23T03:55:31Z","updated_at":"2016-02-24T15:16:02Z","closed_at":"2016-02-23T05:50:24Z","author_association":"CONTRIBUTOR","body":"The testing function `response-for` (as described in the [manual](http://yada.juxt.pro/manual/235_testing.md)) chokes on maps:\n\n```\nIllegalArgumentException Don't know how to convert class clojure.lang.PersistentArrayMap into class java.lang.String  byte-streams/convert (byte_streams.clj:196)\n```\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/61","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/61/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/61/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/61/events","html_url":"https://github.com/juxt/yada/issues/61","id":134916432,"number":61,"title":"Content Security problems with the yada website","user":{"login":"Frozenlock","id":1152041,"avatar_url":"https://avatars1.githubusercontent.com/u/1152041?v=4","gravatar_id":"","url":"https://api.github.com/users/Frozenlock","html_url":"https://github.com/Frozenlock","followers_url":"https://api.github.com/users/Frozenlock/followers","following_url":"https://api.github.com/users/Frozenlock/following{/other_user}","gists_url":"https://api.github.com/users/Frozenlock/gists{/gist_id}","starred_url":"https://api.github.com/users/Frozenlock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frozenlock/subscriptions","organizations_url":"https://api.github.com/users/Frozenlock/orgs","repos_url":"https://api.github.com/users/Frozenlock/repos","events_url":"https://api.github.com/users/Frozenlock/events{/privacy}","received_events_url":"https://api.github.com/users/Frozenlock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-02-19T16:59:52Z","updated_at":"2016-09-07T13:06:11Z","closed_at":"2016-09-07T13:06:11Z","author_association":"CONTRIBUTOR","body":"Both Chromium and Firefox refuses to load a bunch of resources because of this.\n\nExample error message from the console:\n\n> Refused to load the stylesheet 'http://yada.juxt.pro/bootstrap/css/bootstrap.min.css' because it violates the following Content Security Policy directive: \"default-src https: data: 'unsafe-inline' 'unsafe-eval'\". Note that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/58","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/58/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/58/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/58/events","html_url":"https://github.com/juxt/yada/issues/58","id":132835705,"number":58,"title":"Swagger seems to fail with the new version","user":{"login":"timur-han","id":4758965,"avatar_url":"https://avatars0.githubusercontent.com/u/4758965?v=4","gravatar_id":"","url":"https://api.github.com/users/timur-han","html_url":"https://github.com/timur-han","followers_url":"https://api.github.com/users/timur-han/followers","following_url":"https://api.github.com/users/timur-han/following{/other_user}","gists_url":"https://api.github.com/users/timur-han/gists{/gist_id}","starred_url":"https://api.github.com/users/timur-han/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/timur-han/subscriptions","organizations_url":"https://api.github.com/users/timur-han/orgs","repos_url":"https://api.github.com/users/timur-han/repos","events_url":"https://api.github.com/users/timur-han/events{/privacy}","received_events_url":"https://api.github.com/users/timur-han/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-10T22:33:48Z","updated_at":"2016-02-24T16:41:56Z","closed_at":"2016-02-24T16:41:56Z","author_association":"NONE","body":"With yada:\n[yada \"1.1.0-20160210.093249-22\"]\n\nThe following example from the tutorial results in an exception:\n[\"/api\"\n (swaggered\n  {:info {:title \"Hello World!\"\n          :version \"1.0\"\n          :description \"A greetings service\"}\n   :basePath \"/api\"}\n  [\"/greetings\"\n   [\n    [\"/hello\" (yada \"Hello World!\\n\")]\n    [\"/goodbye\" (yada \"Goodbye!\\n\")]\n    ]\n   ])]\n\nException:\n\n```\n               RT.java:  947  clojure.lang.RT/nthFrom\n               RT.java:  897  clojure.lang.RT/nth\n             bidi.cljc:  387  bidi.bidi$route_seq/invokeStatic\n             bidi.cljc:  387  bidi.bidi$route_seq/invoke\n             bidi.cljc:  391  bidi.bidi$route_seq/invokeStatic\n             bidi.cljc:  387  bidi.bidi$route_seq/invoke\n           swagger.clj:   89  yada.swagger/swagger-spec\n           swagger.clj:   87  yada.swagger/swagger-spec\n           RestFn.java:  425  clojure.lang.RestFn/invoke\n           swagger.clj:  172  yada.swagger/swaggered\n           swagger.clj:  171  yada.swagger/swaggered\n           RestFn.java:  423  clojure.lang.RestFn/invoke\n```\n","score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/56","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/56/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/56/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/56/events","html_url":"https://github.com/juxt/yada/issues/56","id":131963699,"number":56,"title":"Produces doesn't result in charset in content type","user":{"login":"mdaley","id":856081,"avatar_url":"https://avatars2.githubusercontent.com/u/856081?v=4","gravatar_id":"","url":"https://api.github.com/users/mdaley","html_url":"https://github.com/mdaley","followers_url":"https://api.github.com/users/mdaley/followers","following_url":"https://api.github.com/users/mdaley/following{/other_user}","gists_url":"https://api.github.com/users/mdaley/gists{/gist_id}","starred_url":"https://api.github.com/users/mdaley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdaley/subscriptions","organizations_url":"https://api.github.com/users/mdaley/orgs","repos_url":"https://api.github.com/users/mdaley/repos","events_url":"https://api.github.com/users/mdaley/events{/privacy}","received_events_url":"https://api.github.com/users/mdaley/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-02-07T12:32:09Z","updated_at":"2016-04-15T07:44:34Z","closed_at":"2016-04-15T07:44:34Z","author_association":"NONE","body":"Hello, I can't say I'm certain about this, but I'm wondering why, when I specify a charset in produces for a resource, the response doesn't include the charset in the content type of the response?  My example is this (probably not the best place for it, but it shows the problem):\n\nI changed the hello-world example to have a new resource:\n\n``` clojure\n...\n(defn say-hello-json [ctx]\n  {:say \"hello\" :p (get-in ctx [:parameters :query :p])})\n....\n(defn hello-json []\n  (yada\n   (resource\n    {:methods\n     {:get\n      {:parameters {:query {:p String}}\n       :produces [{:media-type \"application/json\"\n                   :charset \"utf-8\"}]\n       :response say-hello-json}}}))) \n...\n(routes\n   ...\n   [\"hello-json\" (tag (hello-json) ::hello-json)]\n   ...\n)\n```\n\nand I created a new test in `helloworld_test.clj` like this:\n\n``` clojure\n(deftest json-test\n  (let [resource (hello/hello-json)\n        response @(resource (request :get \"/?p=bob\"))\n        headers (:headers response)]\n    (is (= 200 (:status response)))\n    (is (= (to-string (:body response)) \"{\\\"say\\\":\\\"hello\\\",\\\"p\\\":\\\"bob\\\"}\"))\n    (is (= (get-in response [:headers \"content-type\"]) \"application/json;charset=utf-8\"))))\n```\n\nMy thinking is that, as I specified the resource to have `:produces` with `:charset \"utf-8`, the response should have a content-type of `application/json;charset-utf-8`.  However the response only has the content-type `application/json`.\n\nAnd my question is: is this a bug?  Or not?\n\nAlso, another point, I wonder why the actual body has a trailing `\\n`?\n\nIf you look at my branch https://github.com/mdaley/yada you'll be able to see my check-in.\n\nIf this is a problem, if you give me some pointers, I'd be more than willing to be involved in fixing it.\n","score":1.0}]}
0

