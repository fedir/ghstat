HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:01:42 GMT
Link: <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Ftwitter%2Ffinatra+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Ftwitter%2Ffinatra+type%3Aissue+state%3Aclosed&page=5>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CE44:072E:3B51AA7:4467B8B:5FB01B85
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 0
X-Ratelimit-Reset: 1605376942
X-Ratelimit-Used: 32
X-Xss-Protection: 1; mode=block

26e0d
{"total_count":123,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/AbsaOSS/spline/issues/740","repository_url":"https://api.github.com/repos/AbsaOSS/spline","labels_url":"https://api.github.com/repos/AbsaOSS/spline/issues/740/labels{/name}","comments_url":"https://api.github.com/repos/AbsaOSS/spline/issues/740/comments","events_url":"https://api.github.com/repos/AbsaOSS/spline/issues/740/events","html_url":"https://github.com/AbsaOSS/spline/issues/740","id":645545705,"node_id":"MDU6SXNzdWU2NDU1NDU3MDU=","number":740,"title":"Migrator stalls at a certain record number","user":{"login":"wajda","id":795479,"node_id":"MDQ6VXNlcjc5NTQ3OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/795479?v=4","gravatar_id":"","url":"https://api.github.com/users/wajda","html_url":"https://github.com/wajda","followers_url":"https://api.github.com/users/wajda/followers","following_url":"https://api.github.com/users/wajda/following{/other_user}","gists_url":"https://api.github.com/users/wajda/gists{/gist_id}","starred_url":"https://api.github.com/users/wajda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wajda/subscriptions","organizations_url":"https://api.github.com/users/wajda/orgs","repos_url":"https://api.github.com/users/wajda/repos","events_url":"https://api.github.com/users/wajda/events{/privacy}","received_events_url":"https://api.github.com/users/wajda/received_events","type":"User","site_admin":false},"labels":[{"id":615869446,"node_id":"MDU6TGFiZWw2MTU4Njk0NDY=","url":"https://api.github.com/repos/AbsaOSS/spline/labels/bug","name":"bug","color":"ee0701","default":true,"description":null},{"id":1633258683,"node_id":"MDU6TGFiZWwxNjMzMjU4Njgz","url":"https://api.github.com/repos/AbsaOSS/spline/labels/component:%20Migrator%20CLI","name":"component: Migrator CLI","color":"ffffff","default":false,"description":""},{"id":615869452,"node_id":"MDU6TGFiZWw2MTU4Njk0NTI=","url":"https://api.github.com/repos/AbsaOSS/spline/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":null}],"state":"closed","locked":false,"assignee":{"login":"cerveada","id":5530211,"node_id":"MDQ6VXNlcjU1MzAyMTE=","avatar_url":"https://avatars0.githubusercontent.com/u/5530211?v=4","gravatar_id":"","url":"https://api.github.com/users/cerveada","html_url":"https://github.com/cerveada","followers_url":"https://api.github.com/users/cerveada/followers","following_url":"https://api.github.com/users/cerveada/following{/other_user}","gists_url":"https://api.github.com/users/cerveada/gists{/gist_id}","starred_url":"https://api.github.com/users/cerveada/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cerveada/subscriptions","organizations_url":"https://api.github.com/users/cerveada/orgs","repos_url":"https://api.github.com/users/cerveada/repos","events_url":"https://api.github.com/users/cerveada/events{/privacy}","received_events_url":"https://api.github.com/users/cerveada/received_events","type":"User","site_admin":false},"assignees":[{"login":"cerveada","id":5530211,"node_id":"MDQ6VXNlcjU1MzAyMTE=","avatar_url":"https://avatars0.githubusercontent.com/u/5530211?v=4","gravatar_id":"","url":"https://api.github.com/users/cerveada","html_url":"https://github.com/cerveada","followers_url":"https://api.github.com/users/cerveada/followers","following_url":"https://api.github.com/users/cerveada/following{/other_user}","gists_url":"https://api.github.com/users/cerveada/gists{/gist_id}","starred_url":"https://api.github.com/users/cerveada/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cerveada/subscriptions","organizations_url":"https://api.github.com/users/cerveada/orgs","repos_url":"https://api.github.com/users/cerveada/repos","events_url":"https://api.github.com/users/cerveada/events{/privacy}","received_events_url":"https://api.github.com/users/cerveada/received_events","type":"User","site_admin":false}],"milestone":null,"comments":9,"created_at":"2020-06-25T13:03:24Z","updated_at":"2020-10-01T09:16:21Z","closed_at":"2020-10-01T09:16:21Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"> Migrator seems to finish/stall on record 84200: \r\n\r\n    Processed: 84200     Failures: 2459      Speed [doc/sec]: 17.26     Queue: [..........]","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/511","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/511/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/511/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/511/events","html_url":"https://github.com/twitter/finatra/issues/511","id":518201950,"node_id":"MDU6SXNzdWU1MTgyMDE5NTA=","number":511,"title":"Jackson 2.10 support","user":{"login":"kimxogus","id":11684628,"node_id":"MDQ6VXNlcjExNjg0NjI4","avatar_url":"https://avatars2.githubusercontent.com/u/11684628?v=4","gravatar_id":"","url":"https://api.github.com/users/kimxogus","html_url":"https://github.com/kimxogus","followers_url":"https://api.github.com/users/kimxogus/followers","following_url":"https://api.github.com/users/kimxogus/following{/other_user}","gists_url":"https://api.github.com/users/kimxogus/gists{/gist_id}","starred_url":"https://api.github.com/users/kimxogus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kimxogus/subscriptions","organizations_url":"https://api.github.com/users/kimxogus/orgs","repos_url":"https://api.github.com/users/kimxogus/repos","events_url":"https://api.github.com/users/kimxogus/events{/privacy}","received_events_url":"https://api.github.com/users/kimxogus/received_events","type":"User","site_admin":false},"labels":[{"id":760293246,"node_id":"MDU6TGFiZWw3NjAyOTMyNDY=","url":"https://api.github.com/repos/twitter/finatra/labels/feature%20request","name":"feature request","color":"e8c33e","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-11-06T02:46:22Z","updated_at":"2020-05-29T21:31:47Z","closed_at":"2020-05-29T21:31:47Z","author_association":"NONE","active_lock_reason":null,"body":"Support jackson 2.10\r\n\r\n### Expected behavior\r\n\r\nSupport jackson 2.10\r\n\r\n### Actual behavior\r\n\r\njackson 2.10 is not supported\r\n\r\n### Steps to reproduce the behavior\r\n\r\n- Add jackson 2.10.0 to library dependencies\r\n```scala\r\n    \"com.fasterxml.jackson.core\"     % \"jackson-core\"          % \"2.10.0\",\r\n    \"com.fasterxml.jackson.core\"     % \"jackson-databind\"      % \"2.10.0\",\r\n    \"com.fasterxml.jackson.module\"   %% \"jackson-module-scala\" % \"2.10.0\",\r\n    \"com.fasterxml.jackson.datatype\" % \"jackson-datatype-joda\" % \"2.10.0\"\r\n```\r\n- Compile error at https://github.com/twitter/finatra/blob/develop/jackson/src/main/scala/com/fasterxml/jackson/databind/ObjectMapperCopier.scala#L3\r\n\t- Because of https://github.com/FasterXML/jackson-module-scala/commit/6e38b81e4680c153b21d92d81ce418307e9d26c1","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/431","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/431/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/431/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/431/events","html_url":"https://github.com/twitter/finatra/issues/431","id":252986563,"node_id":"MDU6SXNzdWUyNTI5ODY1NjM=","number":431,"title":"@Flag annotation doesn't work with Seq/List","user":{"login":"amartinsn","id":13151,"node_id":"MDQ6VXNlcjEzMTUx","avatar_url":"https://avatars1.githubusercontent.com/u/13151?v=4","gravatar_id":"","url":"https://api.github.com/users/amartinsn","html_url":"https://github.com/amartinsn","followers_url":"https://api.github.com/users/amartinsn/followers","following_url":"https://api.github.com/users/amartinsn/following{/other_user}","gists_url":"https://api.github.com/users/amartinsn/gists{/gist_id}","starred_url":"https://api.github.com/users/amartinsn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amartinsn/subscriptions","organizations_url":"https://api.github.com/users/amartinsn/orgs","repos_url":"https://api.github.com/users/amartinsn/repos","events_url":"https://api.github.com/users/amartinsn/events{/privacy}","received_events_url":"https://api.github.com/users/amartinsn/received_events","type":"User","site_admin":false},"labels":[{"id":260339486,"node_id":"MDU6TGFiZWwyNjAzMzk0ODY=","url":"https://api.github.com/repos/twitter/finatra/labels/backlog","name":"backlog","color":"0052cc","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-08-25T18:41:51Z","updated_at":"2020-06-23T07:07:38Z","closed_at":"2020-06-23T07:07:38Z","author_association":"NONE","active_lock_reason":null,"body":"Getting an error when defining a `flag` that returns a `Seq` and try to inject that in a `Controller` implementation using the `@Flag` annotation.\r\n\r\n### Expected behavior\r\n\r\nGiven this flag defined within a `TwitterModule`:\r\n```\r\nflag(\"things\", Seq[String](\"foo\", \"bar\"), \"A list of things\")\r\n```\r\n\r\nWhen I inject that flag in a Controller:\r\n```\r\nclass MyController @Inject()(\r\n  @Flag(\"things\") things: Seq[String]) extends Controller {\r\n   ...\r\n}\r\n```\r\n\r\nThen `things` val should be `Seq(\"foo\", \"bar\")`\r\n\r\n### Actual behavior\r\n\r\nCurrently I'm getting the following error when bootstrapping the server:\r\n\r\n```\r\ncom.google.inject.ConfigurationException: Guice configuration errors:\r\n\r\n1) No implementation for scala.collection.Seq<java.lang.String> annotated with @com.twitter.inject.annotations.Flag(value=enabled) was bound.\r\n  while locating scala.collection.Seq<java.lang.String> annotated with @com.twitter.inject.annotations.Flag(value=enabled)\r\n    for parameter 0 at com.example.MyController.<init>(MyController.scala:11)\r\n  while locating com.example.MyController\r\n```\r\n\r\n### Steps to reproduce the behavior\r\n\r\nThe steps are pretty much defined in the **Expected behavior** section. Please let me know if you need more details.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/FasterXML/jackson-module-scala/issues/87","repository_url":"https://api.github.com/repos/FasterXML/jackson-module-scala","labels_url":"https://api.github.com/repos/FasterXML/jackson-module-scala/issues/87/labels{/name}","comments_url":"https://api.github.com/repos/FasterXML/jackson-module-scala/issues/87/comments","events_url":"https://api.github.com/repos/FasterXML/jackson-module-scala/issues/87/events","html_url":"https://github.com/FasterXML/jackson-module-scala/issues/87","id":15922703,"node_id":"MDU6SXNzdWUxNTkyMjcwMw==","number":87,"title":"Case class with Seq parameter default = Nil and  not supported, deserialized to null","user":{"login":"kfiron","id":2239908,"node_id":"MDQ6VXNlcjIyMzk5MDg=","avatar_url":"https://avatars3.githubusercontent.com/u/2239908?v=4","gravatar_id":"","url":"https://api.github.com/users/kfiron","html_url":"https://github.com/kfiron","followers_url":"https://api.github.com/users/kfiron/followers","following_url":"https://api.github.com/users/kfiron/following{/other_user}","gists_url":"https://api.github.com/users/kfiron/gists{/gist_id}","starred_url":"https://api.github.com/users/kfiron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kfiron/subscriptions","organizations_url":"https://api.github.com/users/kfiron/orgs","repos_url":"https://api.github.com/users/kfiron/repos","events_url":"https://api.github.com/users/kfiron/events{/privacy}","received_events_url":"https://api.github.com/users/kfiron/received_events","type":"User","site_admin":false},"labels":[{"id":364455113,"node_id":"MDU6TGFiZWwzNjQ0NTUxMTM=","url":"https://api.github.com/repos/FasterXML/jackson-module-scala/labels/Default%20Parameters","name":"Default Parameters","color":"5319e7","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/FasterXML/jackson-module-scala/milestones/15","html_url":"https://github.com/FasterXML/jackson-module-scala/milestone/15","labels_url":"https://api.github.com/repos/FasterXML/jackson-module-scala/milestones/15/labels","id":1715923,"node_id":"MDk6TWlsZXN0b25lMTcxNTkyMw==","number":15,"title":"2.8.0","description":null,"creator":{"login":"nbauernfeind","id":1030443,"node_id":"MDQ6VXNlcjEwMzA0NDM=","avatar_url":"https://avatars3.githubusercontent.com/u/1030443?v=4","gravatar_id":"","url":"https://api.github.com/users/nbauernfeind","html_url":"https://github.com/nbauernfeind","followers_url":"https://api.github.com/users/nbauernfeind/followers","following_url":"https://api.github.com/users/nbauernfeind/following{/other_user}","gists_url":"https://api.github.com/users/nbauernfeind/gists{/gist_id}","starred_url":"https://api.github.com/users/nbauernfeind/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nbauernfeind/subscriptions","organizations_url":"https://api.github.com/users/nbauernfeind/orgs","repos_url":"https://api.github.com/users/nbauernfeind/repos","events_url":"https://api.github.com/users/nbauernfeind/events{/privacy}","received_events_url":"https://api.github.com/users/nbauernfeind/received_events","type":"User","site_admin":false},"open_issues":12,"closed_issues":2,"state":"open","created_at":"2016-04-18T23:05:43Z","updated_at":"2020-01-29T22:22:23Z","due_on":null,"closed_at":null},"comments":58,"created_at":"2013-06-24T12:45:04Z","updated_at":"2020-07-08T05:35:02Z","closed_at":"2019-12-14T18:37:19Z","author_association":"NONE","active_lock_reason":null,"body":"# Given case class:\n\ncase class Cat(name : String, kittens: Seq[Cat] = Nil)\n# Read in test:\n\nmapper.readValue(\"{\\\"name\\\":\\\"kozmo\\\"}\", classOf[Cat])\n# Expected:\n\nexpected cat with Nil kittens, however it is null. it seems like SeqModule does not check for the default value if the parameter does not provieded\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/line/armeria/issues/2634","repository_url":"https://api.github.com/repos/line/armeria","labels_url":"https://api.github.com/repos/line/armeria/issues/2634/labels{/name}","comments_url":"https://api.github.com/repos/line/armeria/issues/2634/comments","events_url":"https://api.github.com/repos/line/armeria/issues/2634/events","html_url":"https://github.com/line/armeria/issues/2634","id":589055510,"node_id":"MDU6SXNzdWU1ODkwNTU1MTA=","number":2634,"title":"Provide a way to perform additional work in `Logging{Client,Service}`","user":{"login":"trustin","id":173918,"node_id":"MDQ6VXNlcjE3MzkxOA==","avatar_url":"https://avatars0.githubusercontent.com/u/173918?v=4","gravatar_id":"","url":"https://api.github.com/users/trustin","html_url":"https://github.com/trustin","followers_url":"https://api.github.com/users/trustin/followers","following_url":"https://api.github.com/users/trustin/following{/other_user}","gists_url":"https://api.github.com/users/trustin/gists{/gist_id}","starred_url":"https://api.github.com/users/trustin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trustin/subscriptions","organizations_url":"https://api.github.com/users/trustin/orgs","repos_url":"https://api.github.com/users/trustin/repos","events_url":"https://api.github.com/users/trustin/events{/privacy}","received_events_url":"https://api.github.com/users/trustin/received_events","type":"User","site_admin":false},"labels":[{"id":287373881,"node_id":"MDU6TGFiZWwyODczNzM4ODE=","url":"https://api.github.com/repos/line/armeria/labels/new%20feature","name":"new feature","color":"009800","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/line/armeria/milestones/166","html_url":"https://github.com/line/armeria/milestone/166","labels_url":"https://api.github.com/repos/line/armeria/milestones/166/labels","id":5395950,"node_id":"MDk6TWlsZXN0b25lNTM5NTk1MA==","number":166,"title":"0.99.6","description":"","creator":{"login":"trustin","id":173918,"node_id":"MDQ6VXNlcjE3MzkxOA==","avatar_url":"https://avatars0.githubusercontent.com/u/173918?v=4","gravatar_id":"","url":"https://api.github.com/users/trustin","html_url":"https://github.com/trustin","followers_url":"https://api.github.com/users/trustin/followers","following_url":"https://api.github.com/users/trustin/following{/other_user}","gists_url":"https://api.github.com/users/trustin/gists{/gist_id}","starred_url":"https://api.github.com/users/trustin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trustin/subscriptions","organizations_url":"https://api.github.com/users/trustin/orgs","repos_url":"https://api.github.com/users/trustin/repos","events_url":"https://api.github.com/users/trustin/events{/privacy}","received_events_url":"https://api.github.com/users/trustin/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":24,"state":"closed","created_at":"2020-05-08T00:46:31Z","updated_at":"2020-08-05T03:13:43Z","due_on":"2020-05-26T07:00:00Z","closed_at":"2020-05-26T04:47:41Z"},"comments":18,"created_at":"2020-03-27T11:05:24Z","updated_at":"2020-05-19T08:53:50Z","closed_at":"2020-05-19T08:53:50Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"For example, a user may have some MDC property he or she wants to be logged. To make the current MDC property is transferred to the moment where `Logging{Client,Service}` logs something, a user has to:\r\n\r\n1. Store the current thread's MDC property somewhere, e.g. local variable.\r\n2. When `Logging{Client,Service}` logs something, load the property from (1) and set it to an MDC property.\r\n3. After logging is done, the MDC property set in (2) has to be cleared or reverted to the old value.\r\n\r\nTo make this possible, we need to allow a user specify some custom logic which is executed when:\r\n\r\n- `Logging{Client.execute,Service.serve}()` is called, for the step 1.\r\n- Before and after logging, for the step 2 and 3.\r\n\r\nI'm not really sure if you need to allow running an arbitrary logic, though. It may be just enough to let a user specify a list of MDC keys, so they are stored and loaded automatically. Thoughts?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/519","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/519/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/519/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/519/events","html_url":"https://github.com/twitter/finatra/issues/519","id":556214273,"node_id":"MDU6SXNzdWU1NTYyMTQyNzM=","number":519,"title":"object FeatureTest is not a member of package com.twitter.inject.server","user":{"login":"MeerKatDev","id":1340996,"node_id":"MDQ6VXNlcjEzNDA5OTY=","avatar_url":"https://avatars3.githubusercontent.com/u/1340996?v=4","gravatar_id":"","url":"https://api.github.com/users/MeerKatDev","html_url":"https://github.com/MeerKatDev","followers_url":"https://api.github.com/users/MeerKatDev/followers","following_url":"https://api.github.com/users/MeerKatDev/following{/other_user}","gists_url":"https://api.github.com/users/MeerKatDev/gists{/gist_id}","starred_url":"https://api.github.com/users/MeerKatDev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MeerKatDev/subscriptions","organizations_url":"https://api.github.com/users/MeerKatDev/orgs","repos_url":"https://api.github.com/users/MeerKatDev/repos","events_url":"https://api.github.com/users/MeerKatDev/events{/privacy}","received_events_url":"https://api.github.com/users/MeerKatDev/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2020-01-28T13:36:32Z","updated_at":"2020-01-30T20:07:28Z","closed_at":"2020-01-30T20:07:27Z","author_association":"NONE","active_lock_reason":null,"body":"As in the title, after including the sbt package finatra-http, and trying to run this example:\r\nhttps://github.com/twitter/finatra/blob/a79f56347acd2194e415975ab125e2509c8e91e5/examples/http-server/src/test/scala/com/twitter/hello/HelloWorldFeatureTest.scala\r\nthis error appears, along with \"Symbol 'type com.twitter.inject.server.EmbeddedTwitterServer' is missing from the classpath.\" and \"not found: type HelloWorldServer\". \r\nAlso, in general the documentation is broken.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/466","repository_url":"https://api.github.com/repos/openzipkin/zipkin","labels_url":"https://api.github.com/repos/openzipkin/zipkin/issues/466/labels{/name}","comments_url":"https://api.github.com/repos/openzipkin/zipkin/issues/466/comments","events_url":"https://api.github.com/repos/openzipkin/zipkin/issues/466/events","html_url":"https://github.com/openzipkin/zipkin/issues/466","id":95663394,"node_id":"MDU6SXNzdWU5NTY2MzM5NA==","number":466,"title":"Configuration","user":{"login":"eirslett","id":1872593,"node_id":"MDQ6VXNlcjE4NzI1OTM=","avatar_url":"https://avatars0.githubusercontent.com/u/1872593?v=4","gravatar_id":"","url":"https://api.github.com/users/eirslett","html_url":"https://github.com/eirslett","followers_url":"https://api.github.com/users/eirslett/followers","following_url":"https://api.github.com/users/eirslett/following{/other_user}","gists_url":"https://api.github.com/users/eirslett/gists{/gist_id}","starred_url":"https://api.github.com/users/eirslett/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eirslett/subscriptions","organizations_url":"https://api.github.com/users/eirslett/orgs","repos_url":"https://api.github.com/users/eirslett/repos","events_url":"https://api.github.com/users/eirslett/events{/privacy}","received_events_url":"https://api.github.com/users/eirslett/received_events","type":"User","site_admin":false},"labels":[{"id":6517858,"node_id":"MDU6TGFiZWw2NTE3ODU4","url":"https://api.github.com/repos/openzipkin/zipkin/labels/question","name":"question","color":"cc317c","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-07-17T14:09:28Z","updated_at":"2020-04-06T20:29:01Z","closed_at":"2020-04-06T20:29:01Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"How should we configure zipkin-collector/query/web?\nThe present way is to use Scala code with eval, @adriancole says Twitter has done a lot of refactoring in their apps later, now might be the time to use Twitter flags instead?\nWe would lose the possibility of writing Scala code in the configuration, so it might be a little more difficult to set up backends as people wish. Another option I suggest is to use [typesafe config](https://github.com/typesafehub/config), which has a pretty flexible setup.\n\nPossible alternatives:\n- Config as Scala, eval (like today)\n- Twitter flags (runtime command-line options)\n- Something else\n\nThoughts?\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/494","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/494/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/494/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/494/events","html_url":"https://github.com/twitter/finatra/issues/494","id":428030976,"node_id":"MDU6SXNzdWU0MjgwMzA5NzY=","number":494,"title":"Scala 2.13 support","user":{"login":"blueway","id":1829207,"node_id":"MDQ6VXNlcjE4MjkyMDc=","avatar_url":"https://avatars3.githubusercontent.com/u/1829207?v=4","gravatar_id":"","url":"https://api.github.com/users/blueway","html_url":"https://github.com/blueway","followers_url":"https://api.github.com/users/blueway/followers","following_url":"https://api.github.com/users/blueway/following{/other_user}","gists_url":"https://api.github.com/users/blueway/gists{/gist_id}","starred_url":"https://api.github.com/users/blueway/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blueway/subscriptions","organizations_url":"https://api.github.com/users/blueway/orgs","repos_url":"https://api.github.com/users/blueway/repos","events_url":"https://api.github.com/users/blueway/events{/privacy}","received_events_url":"https://api.github.com/users/blueway/received_events","type":"User","site_admin":false},"labels":[{"id":260339486,"node_id":"MDU6TGFiZWwyNjAzMzk0ODY=","url":"https://api.github.com/repos/twitter/finatra/labels/backlog","name":"backlog","color":"0052cc","default":false,"description":null},{"id":1415525209,"node_id":"MDU6TGFiZWwxNDE1NTI1MjA5","url":"https://api.github.com/repos/twitter/finatra/labels/help%20wanted","name":"help wanted","color":"c5def5","default":true,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-04-02T05:28:58Z","updated_at":"2020-03-10T18:22:44Z","closed_at":"2020-03-10T18:22:44Z","author_association":"NONE","active_lock_reason":null,"body":"One line summary of the issue here.\r\n\r\n### Expected behavior\r\n\r\nScala 2.13 support\r\n\r\n### Actual behavior\r\n\r\nAs concisely as possible, describe the observed behavior.\r\n\r\n### Steps to reproduce the behavior\r\n\r\nPlease list all relevant steps to reproduce the observed behavior.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/208","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/208/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/208/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/208/events","html_url":"https://github.com/twitter/finatra/issues/208","id":78377763,"node_id":"MDU6SXNzdWU3ODM3Nzc2Mw==","number":208,"title":"Disable admin","user":{"login":"narcisobenigno","id":513635,"node_id":"MDQ6VXNlcjUxMzYzNQ==","avatar_url":"https://avatars3.githubusercontent.com/u/513635?v=4","gravatar_id":"","url":"https://api.github.com/users/narcisobenigno","html_url":"https://github.com/narcisobenigno","followers_url":"https://api.github.com/users/narcisobenigno/followers","following_url":"https://api.github.com/users/narcisobenigno/following{/other_user}","gists_url":"https://api.github.com/users/narcisobenigno/gists{/gist_id}","starred_url":"https://api.github.com/users/narcisobenigno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narcisobenigno/subscriptions","organizations_url":"https://api.github.com/users/narcisobenigno/orgs","repos_url":"https://api.github.com/users/narcisobenigno/repos","events_url":"https://api.github.com/users/narcisobenigno/events{/privacy}","received_events_url":"https://api.github.com/users/narcisobenigno/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2015-05-20T05:19:40Z","updated_at":"2020-02-22T15:52:10Z","closed_at":"2015-06-13T20:54:34Z","author_association":"NONE","active_lock_reason":null,"body":"Looks like I can not  use admin on heroku... How can I disable it?\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finagle/issues/771","repository_url":"https://api.github.com/repos/twitter/finagle","labels_url":"https://api.github.com/repos/twitter/finagle/issues/771/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finagle/issues/771/comments","events_url":"https://api.github.com/repos/twitter/finagle/issues/771/events","html_url":"https://github.com/twitter/finagle/issues/771","id":455666744,"node_id":"MDU6SXNzdWU0NTU2NjY3NDQ=","number":771,"title":"Build for 2.13.0","user":{"login":"rnd4222","id":29251547,"node_id":"MDQ6VXNlcjI5MjUxNTQ3","avatar_url":"https://avatars3.githubusercontent.com/u/29251547?v=4","gravatar_id":"","url":"https://api.github.com/users/rnd4222","html_url":"https://github.com/rnd4222","followers_url":"https://api.github.com/users/rnd4222/followers","following_url":"https://api.github.com/users/rnd4222/following{/other_user}","gists_url":"https://api.github.com/users/rnd4222/gists{/gist_id}","starred_url":"https://api.github.com/users/rnd4222/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnd4222/subscriptions","organizations_url":"https://api.github.com/users/rnd4222/orgs","repos_url":"https://api.github.com/users/rnd4222/repos","events_url":"https://api.github.com/users/rnd4222/events{/privacy}","received_events_url":"https://api.github.com/users/rnd4222/received_events","type":"User","site_admin":false},"labels":[{"id":403475537,"node_id":"MDU6TGFiZWw0MDM0NzU1Mzc=","url":"https://api.github.com/repos/twitter/finagle/labels/help%20wanted","name":"help wanted","color":"0052cc","default":true,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":54,"created_at":"2019-06-13T10:41:01Z","updated_at":"2020-04-28T20:48:30Z","closed_at":"2020-04-28T20:48:30Z","author_association":"NONE","active_lock_reason":null,"body":"Scala 2.13.0 was [released](https://github.com/scala/scala/releases/tag/v2.13.0), so it would be great to have finagle build for it.\r\n\r\nIf it's marked with an asterisk, it doesn't have any dependencies and will be easy to target next.  If you want to discover what the dependencies of a given project are, take a peek inside of the build.sbt file.\r\n\r\nIf you start working on one of these subprojects, please add a comment on this thread and I'll add your name next to it so people know not to duplicate your work.\r\n\r\n- [x] finagle-base-http* (@martijnhoekstra)\r\n- [x] finagle-benchmark-thrift* (@joroKr21)\r\n- [x] finagle-benchmark(@martijnhoekstra)\r\n- [x] finagle-core (@martijnhoekstra)\r\n- [x] finagle-exception (@DieBauer)\r\n- [x] finagle-exp (@DieBauer)\r\n- [x] finagle-grpc-context* (@martijnhoekstra)\r\n- [x] finagle-http (@martijnhoekstra, @spockz)\r\n- [x] finagle-http2 (@martijnhoekstra, @spockz)\r\n- [x] finagle-init  (@martijnhoekstra)\r\n- [x] finagle-integration (@felixbr)\r\n- [x] finagle-memcached(@martijnhoekstra)\r\n- [x] finagle-mux* (@martijnhoekstra)\r\n- [x] finagle-mysql (@martijnhoekstra)\r\n- [x] finagle-netty4 (@martijnhoekstra)\r\n- [x] finagle-netty4-http (@martijnhoekstra, @spockz)\r\n- [x] finagle-opencensus-tracing(@hderms)\r\n- [x] finagle-partitioning (@martijnhoekstra)\r\n- [x] finagle-redis (@martijnhoekstra)\r\n- [x] finagle-serversets* (@joroKr21)\r\n- [x] finagle-stats (@hderms)\r\n- [x] finagle-stats-core (@hderms)\r\n- [x] finagle-thrift (@martijnhoekstra)\r\n- [x] finagle-thriftmux (@martijnhoekstra)\r\n- [x] finagle-toggle  (@martijnhoekstra)\r\n- [x] finagle-tunable (@martijnhoekstra)\r\n- [x] finagle-zipkin-core (@DieBauer)\r\n- [x] finagle-zipkin-scribe (@DieBauer)","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/AbsaOSS/spline-spark-agent/issues/74","repository_url":"https://api.github.com/repos/AbsaOSS/spline-spark-agent","labels_url":"https://api.github.com/repos/AbsaOSS/spline-spark-agent/issues/74/labels{/name}","comments_url":"https://api.github.com/repos/AbsaOSS/spline-spark-agent/issues/74/comments","events_url":"https://api.github.com/repos/AbsaOSS/spline-spark-agent/issues/74/events","html_url":"https://github.com/AbsaOSS/spline-spark-agent/issues/74","id":624936023,"node_id":"MDU6SXNzdWU2MjQ5MzYwMjM=","number":74,"title":"Lineage not being reported from production Hadoop+Hive+Spark","user":{"login":"DaimonPl","id":9693936,"node_id":"MDQ6VXNlcjk2OTM5MzY=","avatar_url":"https://avatars0.githubusercontent.com/u/9693936?v=4","gravatar_id":"","url":"https://api.github.com/users/DaimonPl","html_url":"https://github.com/DaimonPl","followers_url":"https://api.github.com/users/DaimonPl/followers","following_url":"https://api.github.com/users/DaimonPl/following{/other_user}","gists_url":"https://api.github.com/users/DaimonPl/gists{/gist_id}","starred_url":"https://api.github.com/users/DaimonPl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaimonPl/subscriptions","organizations_url":"https://api.github.com/users/DaimonPl/orgs","repos_url":"https://api.github.com/users/DaimonPl/repos","events_url":"https://api.github.com/users/DaimonPl/events{/privacy}","received_events_url":"https://api.github.com/users/DaimonPl/received_events","type":"User","site_admin":false},"labels":[{"id":1764745644,"node_id":"MDU6TGFiZWwxNzY0NzQ1NjQ0","url":"https://api.github.com/repos/AbsaOSS/spline-spark-agent/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":{"login":"wajda","id":795479,"node_id":"MDQ6VXNlcjc5NTQ3OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/795479?v=4","gravatar_id":"","url":"https://api.github.com/users/wajda","html_url":"https://github.com/wajda","followers_url":"https://api.github.com/users/wajda/followers","following_url":"https://api.github.com/users/wajda/following{/other_user}","gists_url":"https://api.github.com/users/wajda/gists{/gist_id}","starred_url":"https://api.github.com/users/wajda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wajda/subscriptions","organizations_url":"https://api.github.com/users/wajda/orgs","repos_url":"https://api.github.com/users/wajda/repos","events_url":"https://api.github.com/users/wajda/events{/privacy}","received_events_url":"https://api.github.com/users/wajda/received_events","type":"User","site_admin":false},"assignees":[{"login":"wajda","id":795479,"node_id":"MDQ6VXNlcjc5NTQ3OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/795479?v=4","gravatar_id":"","url":"https://api.github.com/users/wajda","html_url":"https://github.com/wajda","followers_url":"https://api.github.com/users/wajda/followers","following_url":"https://api.github.com/users/wajda/following{/other_user}","gists_url":"https://api.github.com/users/wajda/gists{/gist_id}","starred_url":"https://api.github.com/users/wajda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wajda/subscriptions","organizations_url":"https://api.github.com/users/wajda/orgs","repos_url":"https://api.github.com/users/wajda/repos","events_url":"https://api.github.com/users/wajda/events{/privacy}","received_events_url":"https://api.github.com/users/wajda/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/AbsaOSS/spline-spark-agent/milestones/6","html_url":"https://github.com/AbsaOSS/spline-spark-agent/milestone/6","labels_url":"https://api.github.com/repos/AbsaOSS/spline-spark-agent/milestones/6/labels","id":5472983,"node_id":"MDk6TWlsZXN0b25lNTQ3Mjk4Mw==","number":6,"title":"0.5.3","description":"Bugfix release","creator":{"login":"wajda","id":795479,"node_id":"MDQ6VXNlcjc5NTQ3OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/795479?v=4","gravatar_id":"","url":"https://api.github.com/users/wajda","html_url":"https://github.com/wajda","followers_url":"https://api.github.com/users/wajda/followers","following_url":"https://api.github.com/users/wajda/following{/other_user}","gists_url":"https://api.github.com/users/wajda/gists{/gist_id}","starred_url":"https://api.github.com/users/wajda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wajda/subscriptions","organizations_url":"https://api.github.com/users/wajda/orgs","repos_url":"https://api.github.com/users/wajda/repos","events_url":"https://api.github.com/users/wajda/events{/privacy}","received_events_url":"https://api.github.com/users/wajda/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":7,"state":"closed","created_at":"2020-05-28T09:58:15Z","updated_at":"2020-05-31T17:43:06Z","due_on":null,"closed_at":"2020-05-31T17:42:33Z"},"comments":18,"created_at":"2020-05-26T14:39:51Z","updated_at":"2020-05-29T13:30:05Z","closed_at":"2020-05-29T13:30:05Z","author_association":"NONE","active_lock_reason":null,"body":"I verified that lineage is reported from end-to-end tests (local spark context)\r\n\r\nHowever when run on hadoop cluster with Hive and Spark 2.4.5, no lineage, nor any warning or error is reported\r\n\r\nconfiguration:\r\n\r\n```\r\nspark.sql.queryExecutionListeners=\"za.co.absa.spline.harvester.listener.SplineQueryExecutionListener\"\r\nspark.spline.producer.url=\"http://my-domian-name:9090/producer\"\r\nspark.spline.timeout.read=30000\r\nspark.spline.timeout.connection=30000\r\nspark.spline.iwd_strategy.default.on_missing_metrics=\"CAPTURE_LINEAGE\"\r\n```\r\n\r\nbuild.sbt:\r\n\r\n```\r\n\"za.co.absa.spline.agent.spark\" %% \"agent-core\" % \"0.5.2\" excludeAll(\r\n  ExclusionRule(organization = \"org.apache.spark\")\r\n)\r\n```\r\n\r\nlogs from job:\r\n\r\n```\r\n2020-05-26 16:22:35.793 | Spline successfully initialized. Spark Lineage tracking is ENABLED.\r\n2020-05-26 16:22:35.728 | spline.timeout.connection is set to:'30000 milliseconds' ms\r\n2020-05-26 16:22:35.728 | spline.timeout.read is set to:'30000 milliseconds' ms\r\n2020-05-26 16:22:35.727 | spline.producer.url is set to:'http://my-domian-name:9090/producer'\r\n2020-05-26 16:22:35.709 | Instantiating LineageDispatcher for class name: za.co.absa.spline.harvester.dispatcher.HttpLineageDispatcher\r\n2020-05-26 16:22:35.706 | Instantiating IgnoredWriteDetectionStrategy for class name: za.co.absa.spline.harvester.write_detection.DefaultIgnoredWriteDetectionStrategy\r\n2020-05-26 16:22:35.703 | Spline mode: BEST_EFFORT\r\n2020-05-26 16:22:35.703 | Spline version: null\r\n2020-05-26 16:22:35.685 | Initializing Spline agent...\r\n```\r\n\r\nSame code run from local spark context sends lineage successfuly and it's visible in spline UI\r\n\r\nAny idea how to debug problem? I see no logs which could be helpful, i set logging configuration for DEBUG","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/515","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/515/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/515/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/515/events","html_url":"https://github.com/twitter/finatra/issues/515","id":529561617,"node_id":"MDU6SXNzdWU1Mjk1NjE2MTc=","number":515,"title":"Routes are not found when they contain parameters (19.11.0)","user":{"login":"cernerae-avlino","id":50373279,"node_id":"MDQ6VXNlcjUwMzczMjc5","avatar_url":"https://avatars1.githubusercontent.com/u/50373279?v=4","gravatar_id":"","url":"https://api.github.com/users/cernerae-avlino","html_url":"https://github.com/cernerae-avlino","followers_url":"https://api.github.com/users/cernerae-avlino/followers","following_url":"https://api.github.com/users/cernerae-avlino/following{/other_user}","gists_url":"https://api.github.com/users/cernerae-avlino/gists{/gist_id}","starred_url":"https://api.github.com/users/cernerae-avlino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cernerae-avlino/subscriptions","organizations_url":"https://api.github.com/users/cernerae-avlino/orgs","repos_url":"https://api.github.com/users/cernerae-avlino/repos","events_url":"https://api.github.com/users/cernerae-avlino/events{/privacy}","received_events_url":"https://api.github.com/users/cernerae-avlino/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-11-27T20:34:44Z","updated_at":"2019-12-02T17:25:30Z","closed_at":"2019-12-02T17:25:30Z","author_association":"NONE","active_lock_reason":null,"body":"Reporting issue where routes are not being resolved when they contains parameters, as in the example below.\r\n\r\nI migrated from Finatra v19.7.0 to v19.11.0. The Expected behavior below works in v19.7.0, but fails in v19.11.0.\r\n\r\n### Test\r\n`prefix(value = \"/hello\") { post(route = \"/:status/?\") { request: Request =>... } }`\r\n\r\nResults in a 404 for `/hello/on`, `/hello/off/`, `/hello/anything/`. Changing the route from `/hello/:status` to `/hello/on` explicitly, will resolve the route when a request to `POST /hello/on/` is made.\r\n\r\n### Expected behavior\r\nPOST /hello/on/ will call post(route = \"/:status/?\")\r\nPOST /hello/off/ will call post(route = \"/:status/?\")\r\n\r\n### Actual behavior\r\nThe endpoint cannot be found\r\n`15:21:24.881 [finagle/netty4-1-4] INFO  c.t.f.h.filters.AccessLoggingFilter - 0:0:0:0:0:0:0:1 - - [27/Nov/2019:20:21:24 +0000] \"POST /hello/on/ HTTP/1.1\" 404 - 26 \"PostmanRuntime/7.19.0\"\r\n`\r\n\r\n### Reproduce\r\nMake a POST request to the route `/hello/:status/`, where the route is inside one or more prefixes.\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/480","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/480/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/480/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/480/events","html_url":"https://github.com/twitter/finatra/issues/480","id":396716347,"node_id":"MDU6SXNzdWUzOTY3MTYzNDc=","number":480,"title":"FinatraObjectMapper.parse handling of Generic types","user":{"login":"wadejensen","id":11764802,"node_id":"MDQ6VXNlcjExNzY0ODAy","avatar_url":"https://avatars1.githubusercontent.com/u/11764802?v=4","gravatar_id":"","url":"https://api.github.com/users/wadejensen","html_url":"https://github.com/wadejensen","followers_url":"https://api.github.com/users/wadejensen/followers","following_url":"https://api.github.com/users/wadejensen/following{/other_user}","gists_url":"https://api.github.com/users/wadejensen/gists{/gist_id}","starred_url":"https://api.github.com/users/wadejensen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wadejensen/subscriptions","organizations_url":"https://api.github.com/users/wadejensen/orgs","repos_url":"https://api.github.com/users/wadejensen/repos","events_url":"https://api.github.com/users/wadejensen/events{/privacy}","received_events_url":"https://api.github.com/users/wadejensen/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"node_id":"MDU6TGFiZWw0NDE5NTczNTk=","url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"cacoco","id":613046,"node_id":"MDQ6VXNlcjYxMzA0Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false},"assignees":[{"login":"cacoco","id":613046,"node_id":"MDQ6VXNlcjYxMzA0Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/twitter/finatra/milestones/14","html_url":"https://github.com/twitter/finatra/milestone/14","labels_url":"https://api.github.com/repos/twitter/finatra/milestones/14/labels","id":4667561,"node_id":"MDk6TWlsZXN0b25lNDY2NzU2MQ==","number":14,"title":"19.10.0","description":"","creator":{"login":"cacoco","id":613046,"node_id":"MDQ6VXNlcjYxMzA0Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":1,"state":"closed","created_at":"2019-09-17T18:20:30Z","updated_at":"2019-10-29T14:31:17Z","due_on":"2019-10-31T07:00:00Z","closed_at":"2019-10-29T14:31:17Z"},"comments":9,"created_at":"2019-01-08T01:36:26Z","updated_at":"2019-10-23T01:40:46Z","closed_at":"2019-10-08T16:33:58Z","author_association":"NONE","active_lock_reason":null,"body":"This issue regarding a lack of support in `FinatraObjectMapper` for deser'ing generic case classes was closed because @cacoco mentioned that Jackson did not support generics due to type erasure.\r\n\r\nhttps://github.com/twitter/finatra/issues/463#issue-336716263\r\n\r\nHowever this is not longer the case in [jackson-module-scale](https://github.com/FasterXML/jackson-module-scala)\r\nSee unit test for `CaseClassDeserializerTest`:\r\n\r\nhttps://github.com/FasterXML/jackson-module-scala/blob/master/src/test/scala/com/fasterxml/jackson/module/scala/deser/CaseClassDeserializerTest.scala#L78-L81.\r\n```scala\r\n  case class GenericTestCaseClass[T](data: T)\r\n...\r\n  it should \"deserialize a generic case class\" in {\r\n    val result = GenericTestCaseClass(42)\r\n    deserialize[GenericTestCaseClass[Int]](\"\"\"{\"data\":42}\"\"\") shouldBe result\r\n  }\r\n```\r\n\r\nRepro from previous issue description in next comment.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/718","repository_url":"https://api.github.com/repos/openzipkin/zipkin","labels_url":"https://api.github.com/repos/openzipkin/zipkin/issues/718/labels{/name}","comments_url":"https://api.github.com/repos/openzipkin/zipkin/issues/718/comments","events_url":"https://api.github.com/repos/openzipkin/zipkin/issues/718/events","html_url":"https://github.com/openzipkin/zipkin/issues/718","id":107342106,"node_id":"MDU6SXNzdWUxMDczNDIxMDY=","number":718,"title":"Allow caching of getServices in the UI","user":{"login":"adriancole","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars2.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/adriancole","html_url":"https://github.com/adriancole","followers_url":"https://api.github.com/users/adriancole/followers","following_url":"https://api.github.com/users/adriancole/following{/other_user}","gists_url":"https://api.github.com/users/adriancole/gists{/gist_id}","starred_url":"https://api.github.com/users/adriancole/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adriancole/subscriptions","organizations_url":"https://api.github.com/users/adriancole/orgs","repos_url":"https://api.github.com/users/adriancole/repos","events_url":"https://api.github.com/users/adriancole/events{/privacy}","received_events_url":"https://api.github.com/users/adriancole/received_events","type":"User","site_admin":false},"labels":[{"id":6517856,"node_id":"MDU6TGFiZWw2NTE3ODU2","url":"https://api.github.com/repos/openzipkin/zipkin/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":1100967948,"node_id":"MDU6TGFiZWwxMTAwOTY3OTQ4","url":"https://api.github.com/repos/openzipkin/zipkin/labels/ui","name":"ui","color":"bf2f39","default":false,"description":"Zipkin UI"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":22,"created_at":"2015-09-19T16:12:43Z","updated_at":"2020-04-03T11:26:24Z","closed_at":"2020-04-03T11:26:24Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"From @yurishkuro \n\n> the query to get all service names in Cassandra needs to hit every node in the cluster. We've been seeing strange huge latencies with it recently, still investigating. To mitigate the impact, I've added a cache of service names in Cassandra span storage, which periodically refreshes itself.\n\nI think we should solve this at the HTTP abstraction, ex. sending cache headers back, so that the client doesn't call so much.\n\nThere are two endpoints on zipkin-web that call `getServices`\n- `/` - part of a massive thing that includes enumerating all services, to pass to `index.mustache`\n- `/api/services` - possibly unused json string list\n\nI see two things to do:\n- change `index.mustache` to use javascript to GET /api/services and fill the `Service Name` selector by itself\n- change `handleServices` to return cache headers\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/dropwizard/metrics/issues/1147","repository_url":"https://api.github.com/repos/dropwizard/metrics","labels_url":"https://api.github.com/repos/dropwizard/metrics/issues/1147/labels{/name}","comments_url":"https://api.github.com/repos/dropwizard/metrics/issues/1147/comments","events_url":"https://api.github.com/repos/dropwizard/metrics/issues/1147/events","html_url":"https://github.com/dropwizard/metrics/issues/1147","id":237428553,"node_id":"MDU6SXNzdWUyMzc0Mjg1NTM=","number":1147,"title":"add heap profile in admin servlet","user":{"login":"ccl0326","id":904084,"node_id":"MDQ6VXNlcjkwNDA4NA==","avatar_url":"https://avatars2.githubusercontent.com/u/904084?v=4","gravatar_id":"","url":"https://api.github.com/users/ccl0326","html_url":"https://github.com/ccl0326","followers_url":"https://api.github.com/users/ccl0326/followers","following_url":"https://api.github.com/users/ccl0326/following{/other_user}","gists_url":"https://api.github.com/users/ccl0326/gists{/gist_id}","starred_url":"https://api.github.com/users/ccl0326/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ccl0326/subscriptions","organizations_url":"https://api.github.com/users/ccl0326/orgs","repos_url":"https://api.github.com/users/ccl0326/repos","events_url":"https://api.github.com/users/ccl0326/events{/privacy}","received_events_url":"https://api.github.com/users/ccl0326/received_events","type":"User","site_admin":false},"labels":[{"id":1530072519,"node_id":"MDU6TGFiZWwxNTMwMDcyNTE5","url":"https://api.github.com/repos/dropwizard/metrics/labels/Stale","name":"Stale","color":"ededed","default":false,"description":null},{"id":656368,"node_id":"MDU6TGFiZWw2NTYzNjg=","url":"https://api.github.com/repos/dropwizard/metrics/labels/improvement","name":"improvement","color":"0b02e1","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-06-21T06:34:10Z","updated_at":"2019-09-18T00:04:45Z","closed_at":"2019-09-18T00:04:45Z","author_association":"NONE","active_lock_reason":null,"body":"in twitter-server and finatra, there is a https://github.com/mariusae/heapster wrapper for heap pprof. but the heapster is a jni project. can metrics support it?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/370","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/370/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/370/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/370/events","html_url":"https://github.com/twitter/finatra/issues/370","id":191766257,"node_id":"MDU6SXNzdWUxOTE3NjYyNTc=","number":370,"title":"NullPointerException while deserializing invalid LocalDate from case class Request","user":{"login":"AlexITC","id":4218436,"node_id":"MDQ6VXNlcjQyMTg0MzY=","avatar_url":"https://avatars3.githubusercontent.com/u/4218436?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexITC","html_url":"https://github.com/AlexITC","followers_url":"https://api.github.com/users/AlexITC/followers","following_url":"https://api.github.com/users/AlexITC/following{/other_user}","gists_url":"https://api.github.com/users/AlexITC/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexITC/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexITC/subscriptions","organizations_url":"https://api.github.com/users/AlexITC/orgs","repos_url":"https://api.github.com/users/AlexITC/repos","events_url":"https://api.github.com/users/AlexITC/events{/privacy}","received_events_url":"https://api.github.com/users/AlexITC/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"node_id":"MDU6TGFiZWw0NDE5NTczNTk=","url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-11-25T21:21:31Z","updated_at":"2019-10-23T01:53:56Z","closed_at":"2017-01-07T02:54:47Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Defining a org.joda.time.LocalDate argument in a case class Request leads to NullPointerException when the argument is invalid.\r\n\r\n### Expected behavior\r\n\r\nWhen a LocalDate object can't be deserialized, Finatra should give useful feedback to the client.\r\n\r\n### Actual behavior\r\n\r\nFinatra returns internal server error to the client when an invalid date is passed as argument:\r\n```\r\n{\"errors\":[\"internal server error\"]}\r\n```\r\n\r\nAlso, the following stack trace is shown in the log:\r\n```\r\n2016-11-25 15:02:31,426 ERR FinatraCaseClassDeserializer Unexpected exception parsing field: CaseClassField(date,[simple type, class org.joda.time.LocalDate],class com.alex.webapp.MyRequest,None,WrappedArray(@com.twitter.finatra.request.QueryParam()),None)\r\njava.lang.NullPointerException: null\r\n\tat com.twitter.finatra.json.FinatraObjectMapper.convert(FinatraObjectMapper.scala:121)\r\n\tat com.twitter.finatra.http.internal.marshalling.RequestInjectableValues.convert(RequestInjectableValues.scala:80)\r\n\tat com.twitter.finatra.http.internal.marshalling.RequestInjectableValues.com$twitter$finatra$http$internal$marshalling$RequestInjectableValues$$convert(RequestInjectableValues.scala:67)\r\n\tat com.twitter.finatra.http.internal.marshalling.RequestInjectableValues$$anonfun$findInjectableValue$1.apply(RequestInjectableValues.scala:56)\r\n\tat com.twitter.finatra.http.internal.marshalling.RequestInjectableValues$$anonfun$findInjectableValue$1.apply(RequestInjectableValues.scala:56)\r\n\tat scala.Option.map(Option.scala:146)\r\n\tat com.twitter.finatra.http.internal.marshalling.RequestInjectableValues.findInjectableValue(RequestInjectableValues.scala:56)\r\n\tat com.fasterxml.jackson.databind.DeserializationContext.findInjectableValue(DeserializationContext.java:361)\r\n\tat com.twitter.finatra.json.internal.caseclass.utils.FieldInjection.inject(FieldInjection.scala:62)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.CaseClassField.parse(CaseClassField.scala:117)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer$$anonfun$parseConstructorValues$1.apply(FinatraCaseClassDeserializer.scala:118)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer$$anonfun$parseConstructorValues$1.apply(FinatraCaseClassDeserializer.scala:116)\r\n\tat scala.collection.immutable.List.foreach(List.scala:381)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.parseConstructorValues(FinatraCaseClassDeserializer.scala:116)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserialize(FinatraCaseClassDeserializer.scala:87)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserializeNonWrapperClass(FinatraCaseClassDeserializer.scala:83)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserialize(FinatraCaseClassDeserializer.scala:65)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1511)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1216)\r\n\tat com.twitter.finatra.http.internal.marshalling.FinatraDefaultMessageBodyReader.parse(FinatraDefaultMessageBodyReader.scala:34)\r\n\tat com.twitter.finatra.http.internal.marshalling.MessageBodyManager.read(MessageBodyManager.scala:77)\r\n\tat com.twitter.finatra.http.internal.marshalling.CallbackConverter$$anonfun$createRequestCallback$2.apply(CallbackConverter.scala:49)\r\n\tat com.twitter.finatra.http.internal.marshalling.CallbackConverter$$anonfun$createRequestCallback$2.apply(CallbackConverter.scala:48)\r\n\tat com.twitter.finatra.http.internal.marshalling.CallbackConverter$$anonfun$createResponseCallback$10.apply(CallbackConverter.scala:118)\r\n\tat com.twitter.finatra.http.internal.marshalling.CallbackConverter$$anonfun$createResponseCallback$10.apply(CallbackConverter.scala:117)\r\n\tat com.twitter.finagle.Service$$anon$5.apply(Service.scala:28)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.alex.webapp.filters.UserFilter.apply(UserFilter.scala:29)\r\n\tat com.alex.webapp.filters.UserFilter.apply(UserFilter.scala:16)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.alex.webapp.filters.StaticResourceProviderFilter.apply(StaticResourceProviderFilter.scala:22)\r\n\tat com.alex.webapp.filters.StaticResourceProviderFilter.apply(StaticResourceProviderFilter.scala:11)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finatra.http.filters.ExceptionMappingFilter.apply(ExceptionMappingFilter.scala:18)\r\n\tat com.twitter.finatra.http.filters.ExceptionMappingFilter.apply(ExceptionMappingFilter.scala:13)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finatra.http.filters.HttpResponseFilter.apply(HttpResponseFilter.scala:35)\r\n\tat com.twitter.finatra.http.filters.HttpResponseFilter.apply(HttpResponseFilter.scala:19)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finatra.http.filters.AccessLoggingFilter.apply(AccessLoggingFilter.scala:23)\r\n\tat com.twitter.finatra.http.filters.AccessLoggingFilter.apply(AccessLoggingFilter.scala:11)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finatra.http.filters.StatsFilter.apply(StatsFilter.scala:89)\r\n\tat com.twitter.finatra.http.filters.StatsFilter.apply(StatsFilter.scala:59)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Filter$AndThen.apply(Filter.scala:161)\r\n\tat com.twitter.finatra.filters.MergedFilter.apply(MergedFilter.scala:13)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:78)\r\n\tat com.twitter.finatra.http.internal.routing.Route.handleMatch(Route.scala:60)\r\n\tat com.twitter.finatra.http.internal.routing.Routes.handle(Routes.scala:46)\r\n\tat com.twitter.finatra.http.internal.routing.RoutingService.apply(RoutingService.scala:32)\r\n\tat com.twitter.finatra.http.internal.routing.RoutingService.apply(RoutingService.scala:11)\r\n\tat com.twitter.finagle.ServiceProxy.apply(Service.scala:120)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.tracing.ServerDestTracingProxy$$anon$1.apply(DestinationTracing.scala:32)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.service.DeadlineStatsFilter.apply(DeadlineStatsFilter.scala:60)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:38)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:148)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:42)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(JvmFilter.scala:29)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:43)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:118)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:86)\r\n\tat com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:51)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)\r\n\tat com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$8$$anonfun$apply$2$$anonfun$apply$3.apply(Codec.scala:476)\r\n\tat com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$8$$anonfun$apply$2$$anonfun$apply$3.apply(Codec.scala:476)\r\n\tat com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$2.apply(Codec.scala:422)\r\n\tat com.twitter.util.Local.let(Local.scala:141)\r\n\tat com.twitter.finagle.context.Context$class.let(Context.scala:176)\r\n\tat com.twitter.finagle.context.MarshalledContext.let(Context.scala:232)\r\n\tat com.twitter.finagle.tracing.Trace$.letId(Trace.scala:167)\r\n\tat com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(Codec.scala:420)\r\n\tat com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$8$$anonfun$apply$2.apply(Codec.scala:476)\r\n\tat com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$8$$anonfun$apply$2.apply(Codec.scala:476)\r\n\tat com.twitter.util.Local.let(Local.scala:141)\r\n\tat com.twitter.finagle.context.Context$class.let(Context.scala:176)\r\n\tat com.twitter.finagle.context.LocalContext.let(LocalContext.scala:8)\r\n\tat com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:185)\r\n\tat com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$8.apply(Codec.scala:475)\r\n\tat com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$8.apply(Codec.scala:474)\r\n\tat com.twitter.finagle.Filter$$anon$6.apply(Filter.scala:254)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:39)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:29)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:16)\r\n\tat com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:16)\r\n\tat com.twitter.util.Local.let(Local.scala:141)\r\n\tat com.twitter.finagle.context.Context$class.let(Context.scala:188)\r\n\tat com.twitter.finagle.context.MarshalledContext.let(Context.scala:232)\r\n\tat com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:75)\r\n\tat com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:16)\r\n\tat com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:26)\r\n\tat com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:61)\r\n\tat com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:20)\r\n\tat com.twitter.finagle.http.exp.GenSerialServerDispatcher$$anonfun$com$twitter$finagle$http$exp$GenSerialServerDispatcher$$loop$1$$anonfun$apply$1.apply$mcV$sp(ServerDispatcher.scala:55)\r\n\tat com.twitter.finagle.http.exp.GenSerialServerDispatcher$$anonfun$com$twitter$finagle$http$exp$GenSerialServerDispatcher$$loop$1$$anonfun$apply$1.apply(ServerDispatcher.scala:54)\r\n\tat com.twitter.finagle.http.exp.GenSerialServerDispatcher$$anonfun$com$twitter$finagle$http$exp$GenSerialServerDispatcher$$loop$1$$anonfun$apply$1.apply(ServerDispatcher.scala:54)\r\n\tat com.twitter.util.Local.let(Local.scala:141)\r\n\tat com.twitter.finagle.context.Context$class.let(Context.scala:176)\r\n\tat com.twitter.finagle.context.LocalContext.let(LocalContext.scala:8)\r\n\tat com.twitter.finagle.http.exp.GenSerialServerDispatcher$$anonfun$com$twitter$finagle$http$exp$GenSerialServerDispatcher$$loop$1.apply(ServerDispatcher.scala:53)\r\n\tat com.twitter.finagle.http.exp.GenSerialServerDispatcher$$anonfun$com$twitter$finagle$http$exp$GenSerialServerDispatcher$$loop$1.apply(ServerDispatcher.scala:48)\r\n\tat com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1092)\r\n\tat com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1091)\r\n\tat com.twitter.util.Promise$Transformer.liftedTree1$1(Promise.scala:107)\r\n\tat com.twitter.util.Promise$Transformer.k(Promise.scala:107)\r\n\tat com.twitter.util.Promise$Transformer.apply(Promise.scala:117)\r\n\tat com.twitter.util.Promise$Transformer.apply(Promise.scala:98)\r\n\tat com.twitter.util.Promise$$anon$1.run(Promise.scala:436)\r\n\tat com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:200)\r\n\tat com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:158)\r\n\tat com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:272)\r\n\tat com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:108)\r\n\tat com.twitter.util.Promise.runq(Promise.scala:405)\r\n\tat com.twitter.util.Promise.updateIfEmpty(Promise.scala:801)\r\n\tat com.twitter.util.Promise.update(Promise.scala:775)\r\n\tat com.twitter.util.Promise.setValue(Promise.scala:751)\r\n\tat com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:120)\r\n\tat com.twitter.finagle.netty3.transport.ChannelTransport.handleUpstream(ChannelTransport.scala:55)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.messageReceived(SimpleChannelHandler.java:142)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.messageReceived(SimpleChannelHandler.java:142)\r\n\tat com.twitter.finagle.netty3.channel.ChannelRequestStatsHandler.messageReceived(ChannelRequestStatsHandler.scala:32)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n\tat com.twitter.finagle.http.SafeServerHttpChunkAggregator.handleUpstream(Codec.scala:101)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.messageReceived(SimpleChannelUpstreamHandler.java:124)\r\n\tat com.twitter.finagle.http.codec.RespondToExpectContinue.messageReceived(RespondToExpectContinue.scala:28)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.messageReceived(SimpleChannelUpstreamHandler.java:124)\r\n\tat com.twitter.finagle.http.codec.PayloadSizeHandler.messageReceived(PayloadSizeHandler.scala:22)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.handler.codec.http.HttpContentEncoder.messageReceived(HttpContentEncoder.java:82)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)\r\n\tat org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)\r\n\tat org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)\r\n\tat org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n\tat org.jboss.netty.handler.codec.http.HttpServerCodec.handleUpstream(HttpServerCodec.java:56)\r\n\tat com.twitter.finagle.http.SafeHttpServerCodec.handleUpstream(Codec.scala:123)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.messageReceived(SimpleChannelHandler.java:142)\r\n\tat com.twitter.finagle.netty3.channel.ChannelStatsHandler.messageReceived(ChannelStatsHandler.scala:68)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\r\n\tat org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)\r\n\tat org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)\r\n\tat org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\r\n\tat org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\r\n\tat org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)\r\n\tat org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\r\n\tat org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\r\n\tat org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\r\n\tat org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat com.twitter.finagle.util.ProxyThreadFactory$$anonfun$newProxiedRunnable$1$$anon$1.run(ProxyThreadFactory.scala:19)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n2016-11-25 15:02:31,427 ERR                                                                                                    ThrowableExceptionMapper  Unhandled Exception\r\njava.lang.NullPointerException: null\r\n\tat com.twitter.finatra.json.FinatraObjectMapper.convert(FinatraObjectMapper.scala:121)\r\n\tat com.twitter.finatra.http.internal.marshalling.RequestInjectableValues.convert(RequestInjectableValues.scala:80)\r\n\tat com.twitter.finatra.http.internal.marshalling.RequestInjectableValues.com$twitter$finatra$http$internal$marshalling$RequestInjectableValues$$convert(RequestInjectableValues.scala:67)\r\n\tat com.twitter.finatra.http.internal.marshalling.RequestInjectableValues$$anonfun$findInjectableValue$1.apply(RequestInjectableValues.scala:56)\r\n\tat com.twitter.finatra.http.internal.marshalling.RequestInjectableValues$$anonfun$findInjectableValue$1.apply(RequestInjectableValues.scala:56)\r\n\tat scala.Option.map(Option.scala:146)\r\n\tat com.twitter.finatra.http.internal.marshalling.RequestInjectableValues.findInjectableValue(RequestInjectableValues.scala:56)\r\n\tat com.fasterxml.jackson.databind.DeserializationContext.findInjectableValue(DeserializationContext.java:361)\r\n\tat com.twitter.finatra.json.internal.caseclass.utils.FieldInjection.inject(FieldInjection.scala:62)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.CaseClassField.parse(CaseClassField.scala:117)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer$$anonfun$parseConstructorValues$1.apply(FinatraCaseClassDeserializer.scala:118)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer$$anonfun$parseConstructorValues$1.apply(FinatraCaseClassDeserializer.scala:116)\r\n\tat scala.collection.immutable.List.foreach(List.scala:381)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.parseConstructorValues(FinatraCaseClassDeserializer.scala:116)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserialize(FinatraCaseClassDeserializer.scala:87)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserializeNonWrapperClass(FinatraCaseClassDeserializer.scala:83)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserialize(FinatraCaseClassDeserializer.scala:65)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1511)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1216)\r\n\tat com.twitter.finatra.http.internal.marshalling.FinatraDefaultMessageBodyReader.parse(FinatraDefaultMessageBodyReader.scala:34)\r\n\tat com.twitter.finatra.http.internal.marshalling.MessageBodyManager.read(MessageBodyManager.scala:77)\r\n\tat com.twitter.finatra.http.internal.marshalling.CallbackConverter$$anonfun$createRequestCallback$2.apply(CallbackConverter.scala:49)\r\n\tat com.twitter.finatra.http.internal.marshalling.CallbackConverter$$anonfun$createRequestCallback$2.apply(CallbackConverter.scala:48)\r\n\tat com.twitter.finatra.http.internal.marshalling.CallbackConverter$$anonfun$createResponseCallback$10.apply(CallbackConverter.scala:118)\r\n\tat com.twitter.finatra.http.internal.marshalling.CallbackConverter$$anonfun$createResponseCallback$10.apply(CallbackConverter.scala:117)\r\n\tat com.twitter.finagle.Service$$anon$5.apply(Service.scala:28)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.alex.webapp.filters.UserFilter.apply(UserFilter.scala:29)\r\n\tat com.alex.webapp.filters.UserFilter.apply(UserFilter.scala:16)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.alex.webapp.filters.StaticResourceProviderFilter.apply(StaticResourceProviderFilter.scala:22)\r\n\tat com.alex.webapp.filters.StaticResourceProviderFilter.apply(StaticResourceProviderFilter.scala:11)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finatra.http.filters.ExceptionMappingFilter.apply(ExceptionMappingFilter.scala:18)\r\n\tat com.twitter.finatra.http.filters.ExceptionMappingFilter.apply(ExceptionMappingFilter.scala:13)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finatra.http.filters.HttpResponseFilter.apply(HttpResponseFilter.scala:35)\r\n\tat com.twitter.finatra.http.filters.HttpResponseFilter.apply(HttpResponseFilter.scala:19)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finatra.http.filters.AccessLoggingFilter.apply(AccessLoggingFilter.scala:23)\r\n\tat com.twitter.finatra.http.filters.AccessLoggingFilter.apply(AccessLoggingFilter.scala:11)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finatra.http.filters.StatsFilter.apply(StatsFilter.scala:89)\r\n\tat com.twitter.finatra.http.filters.StatsFilter.apply(StatsFilter.scala:59)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Filter$AndThen.apply(Filter.scala:161)\r\n\tat com.twitter.finatra.filters.MergedFilter.apply(MergedFilter.scala:13)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:78)\r\n\tat com.twitter.finatra.http.internal.routing.Route.handleMatch(Route.scala:60)\r\n\tat com.twitter.finatra.http.internal.routing.Routes.handle(Routes.scala:46)\r\n\tat com.twitter.finatra.http.internal.routing.RoutingService.apply(RoutingService.scala:32)\r\n\tat com.twitter.finatra.http.internal.routing.RoutingService.apply(RoutingService.scala:11)\r\n\tat com.twitter.finagle.ServiceProxy.apply(Service.scala:120)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.tracing.ServerDestTracingProxy$$anon$1.apply(DestinationTracing.scala:32)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.service.DeadlineStatsFilter.apply(DeadlineStatsFilter.scala:60)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.filter.DtabStatsFilter.apply(DtabStatsFilter.scala:38)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.service.StatsFilter.apply(StatsFilter.scala:148)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.filter.ExceptionSourceFilter.apply(ExceptionSourceFilter.scala:42)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.filter.MkJvmFilter$$anon$1.apply(JvmFilter.scala:29)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.filter.ServerStatsFilter.apply(ServerStatsFilter.scala:43)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.tracing.AnnotatingTracingFilter.apply(TraceInitializerFilter.scala:118)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:86)\r\n\tat com.twitter.finagle.http.filter.HttpNackFilter.apply(HttpNackFilter.scala:51)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:13)\r\n\tat com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$8$$anonfun$apply$2$$anonfun$apply$3.apply(Codec.scala:476)\r\n\tat com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$8$$anonfun$apply$2$$anonfun$apply$3.apply(Codec.scala:476)\r\n\tat com.twitter.finagle.http.TraceInfo$$anonfun$letTraceIdFromRequestHeaders$2.apply(Codec.scala:422)\r\n\tat com.twitter.util.Local.let(Local.scala:141)\r\n\tat com.twitter.finagle.context.Context$class.let(Context.scala:176)\r\n\tat com.twitter.finagle.context.MarshalledContext.let(Context.scala:232)\r\n\tat com.twitter.finagle.tracing.Trace$.letId(Trace.scala:167)\r\n\tat com.twitter.finagle.http.TraceInfo$.letTraceIdFromRequestHeaders(Codec.scala:420)\r\n\tat com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$8$$anonfun$apply$2.apply(Codec.scala:476)\r\n\tat com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$8$$anonfun$apply$2.apply(Codec.scala:476)\r\n\tat com.twitter.util.Local.let(Local.scala:141)\r\n\tat com.twitter.finagle.context.Context$class.let(Context.scala:176)\r\n\tat com.twitter.finagle.context.LocalContext.let(LocalContext.scala:8)\r\n\tat com.twitter.finagle.tracing.Trace$.letTracer(Trace.scala:185)\r\n\tat com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$8.apply(Codec.scala:475)\r\n\tat com.twitter.finagle.http.HttpServerTraceInitializer$$anonfun$8.apply(Codec.scala:474)\r\n\tat com.twitter.finagle.Filter$$anon$6.apply(Filter.scala:254)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.filter.MonitorFilter.apply(MonitorFilter.scala:39)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.filter.PayloadSizeFilter.apply(PayloadSizeFilter.scala:29)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:16)\r\n\tat com.twitter.finagle.http.filter.ServerContextFilter$$anonfun$apply$1.apply(ContextFilter.scala:16)\r\n\tat com.twitter.util.Local.let(Local.scala:141)\r\n\tat com.twitter.finagle.context.Context$class.let(Context.scala:188)\r\n\tat com.twitter.finagle.context.MarshalledContext.let(Context.scala:232)\r\n\tat com.twitter.finagle.http.codec.HttpContext$.read(HttpContext.scala:75)\r\n\tat com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:16)\r\n\tat com.twitter.finagle.http.filter.ServerContextFilter.apply(ContextFilter.scala:12)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.Service$$anon$1.apply(Service.scala:16)\r\n\tat com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:26)\r\n\tat com.twitter.finagle.http.filter.DtabFilter.apply(DtabFilter.scala:12)\r\n\tat com.twitter.finagle.Filter$$anon$1.apply(Filter.scala:79)\r\n\tat com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:61)\r\n\tat com.twitter.finagle.http.codec.HttpServerDispatcher.dispatch(HttpServerDispatcher.scala:20)\r\n\tat com.twitter.finagle.http.exp.GenSerialServerDispatcher$$anonfun$com$twitter$finagle$http$exp$GenSerialServerDispatcher$$loop$1$$anonfun$apply$1.apply$mcV$sp(ServerDispatcher.scala:55)\r\n\tat com.twitter.finagle.http.exp.GenSerialServerDispatcher$$anonfun$com$twitter$finagle$http$exp$GenSerialServerDispatcher$$loop$1$$anonfun$apply$1.apply(ServerDispatcher.scala:54)\r\n\tat com.twitter.finagle.http.exp.GenSerialServerDispatcher$$anonfun$com$twitter$finagle$http$exp$GenSerialServerDispatcher$$loop$1$$anonfun$apply$1.apply(ServerDispatcher.scala:54)\r\n\tat com.twitter.util.Local.let(Local.scala:141)\r\n\tat com.twitter.finagle.context.Context$class.let(Context.scala:176)\r\n\tat com.twitter.finagle.context.LocalContext.let(LocalContext.scala:8)\r\n\tat com.twitter.finagle.http.exp.GenSerialServerDispatcher$$anonfun$com$twitter$finagle$http$exp$GenSerialServerDispatcher$$loop$1.apply(ServerDispatcher.scala:53)\r\n\tat com.twitter.finagle.http.exp.GenSerialServerDispatcher$$anonfun$com$twitter$finagle$http$exp$GenSerialServerDispatcher$$loop$1.apply(ServerDispatcher.scala:48)\r\n\tat com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1092)\r\n\tat com.twitter.util.Future$$anonfun$flatMap$1.apply(Future.scala:1091)\r\n\tat com.twitter.util.Promise$Transformer.liftedTree1$1(Promise.scala:107)\r\n\tat com.twitter.util.Promise$Transformer.k(Promise.scala:107)\r\n\tat com.twitter.util.Promise$Transformer.apply(Promise.scala:117)\r\n\tat com.twitter.util.Promise$Transformer.apply(Promise.scala:98)\r\n\tat com.twitter.util.Promise$$anon$1.run(Promise.scala:436)\r\n\tat com.twitter.concurrent.LocalScheduler$Activation.run(Scheduler.scala:200)\r\n\tat com.twitter.concurrent.LocalScheduler$Activation.submit(Scheduler.scala:158)\r\n\tat com.twitter.concurrent.LocalScheduler.submit(Scheduler.scala:272)\r\n\tat com.twitter.concurrent.Scheduler$.submit(Scheduler.scala:108)\r\n\tat com.twitter.util.Promise.runq(Promise.scala:405)\r\n\tat com.twitter.util.Promise.updateIfEmpty(Promise.scala:801)\r\n\tat com.twitter.util.Promise.update(Promise.scala:775)\r\n\tat com.twitter.util.Promise.setValue(Promise.scala:751)\r\n\tat com.twitter.concurrent.AsyncQueue.offer(AsyncQueue.scala:120)\r\n\tat com.twitter.finagle.netty3.transport.ChannelTransport.handleUpstream(ChannelTransport.scala:55)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.messageReceived(SimpleChannelHandler.java:142)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.messageReceived(SimpleChannelHandler.java:142)\r\n\tat com.twitter.finagle.netty3.channel.ChannelRequestStatsHandler.messageReceived(ChannelRequestStatsHandler.scala:32)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n\tat com.twitter.finagle.http.SafeServerHttpChunkAggregator.handleUpstream(Codec.scala:101)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.messageReceived(SimpleChannelUpstreamHandler.java:124)\r\n\tat com.twitter.finagle.http.codec.RespondToExpectContinue.messageReceived(RespondToExpectContinue.scala:28)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.messageReceived(SimpleChannelUpstreamHandler.java:124)\r\n\tat com.twitter.finagle.http.codec.PayloadSizeHandler.messageReceived(PayloadSizeHandler.scala:22)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.handler.codec.http.HttpContentEncoder.messageReceived(HttpContentEncoder.java:82)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)\r\n\tat org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)\r\n\tat org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)\r\n\tat org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)\r\n\tat org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n\tat org.jboss.netty.handler.codec.http.HttpServerCodec.handleUpstream(HttpServerCodec.java:56)\r\n\tat com.twitter.finagle.http.SafeHttpServerCodec.handleUpstream(Codec.scala:123)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.messageReceived(SimpleChannelHandler.java:142)\r\n\tat com.twitter.finagle.netty3.channel.ChannelStatsHandler.messageReceived(ChannelStatsHandler.scala:68)\r\n\tat org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n\tat org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\r\n\tat org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)\r\n\tat org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)\r\n\tat org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\r\n\tat org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\r\n\tat org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)\r\n\tat org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\r\n\tat org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\r\n\tat org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\r\n\tat org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat com.twitter.finagle.util.ProxyThreadFactory$$anonfun$newProxiedRunnable$1$$anon$1.run(ProxyThreadFactory.scala:19)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n2016-11-25 15:02:31,427 WAR                                                                                                    ResponseBuilder           Request Failure: Internal/Unhandled/java.lang.NullPointerException\r\n```\r\n\r\n### Steps to reproduce the behavior\r\n\r\nRun the following file:\r\n```\r\nimport com.twitter.finatra.http.HttpServer\r\nimport com.twitter.finatra.http.filters.CommonFilters\r\nimport com.twitter.finatra.http.routing.HttpRouter\r\n\r\nobject MyAppServerMain extends WebAppServer\r\n\r\nclass MyAppServer extends HttpServer {\r\n  override def configureHttp(router: HttpRouter): Unit = {\r\n    val _ = (\r\n      router\r\n        .filter[CommonFilters]\r\n        .add[MyController]\r\n    )\r\n  }\r\n}\r\n\r\nimport com.twitter.finatra.http.Controller\r\n\r\nclass MyController\r\n  extends Controller {\r\n\r\n  get(\"/sample\") { request: MyRequest =>\r\n    info(request)\r\n    response.ok\r\n  }\r\n}\r\n\r\nimport com.twitter.finatra.request.QueryParam\r\nimport org.joda.time.LocalDate\r\n\r\ncase class MyRequest(\r\n  @QueryParam date: LocalDate\r\n)\r\n```\r\n\r\nRun the following command:\r\n```\r\ncurl -D - \"http://localhost:8888/sample?date=2016-11-25\"\r\n```\r\n\r\nEverything works as expected:\r\n```\r\nHTTP/1.1 200 OK\r\nServer: Finatra\r\nDate: Fri, 25 Nov 2016 21:19:19 GMT\r\nContent-Length: 0\r\n```\r\n\r\nRun the following command (an invalid date):\r\n```\r\ncurl -D- \"http://localhost:8888/sample?date=2016-11-35\"\r\n```\r\n\r\nAnd this is the feedback:\r\n```\r\nHTTP/1.1 500 Internal Server Error\r\nContent-Type: application/json; charset=utf-8\r\nServer: Finatra\r\nDate: Fri, 25 Nov 2016 21:19:23 GMT\r\nContent-Length: 36\r\n\r\n{\"errors\":[\"internal server error\"]}\r\n```\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/501","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/501/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/501/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/501/events","html_url":"https://github.com/twitter/finatra/issues/501","id":442132277,"node_id":"MDU6SXNzdWU0NDIxMzIyNzc=","number":501,"title":"Update the dependency version of Jackson to  2.9.8 ","user":{"login":"mirkindonald","id":8761788,"node_id":"MDQ6VXNlcjg3NjE3ODg=","avatar_url":"https://avatars1.githubusercontent.com/u/8761788?v=4","gravatar_id":"","url":"https://api.github.com/users/mirkindonald","html_url":"https://github.com/mirkindonald","followers_url":"https://api.github.com/users/mirkindonald/followers","following_url":"https://api.github.com/users/mirkindonald/following{/other_user}","gists_url":"https://api.github.com/users/mirkindonald/gists{/gist_id}","starred_url":"https://api.github.com/users/mirkindonald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mirkindonald/subscriptions","organizations_url":"https://api.github.com/users/mirkindonald/orgs","repos_url":"https://api.github.com/users/mirkindonald/repos","events_url":"https://api.github.com/users/mirkindonald/events{/privacy}","received_events_url":"https://api.github.com/users/mirkindonald/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"cacoco","id":613046,"node_id":"MDQ6VXNlcjYxMzA0Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false},"assignees":[{"login":"cacoco","id":613046,"node_id":"MDQ6VXNlcjYxMzA0Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2019-05-09T09:13:06Z","updated_at":"2019-10-23T01:38:55Z","closed_at":"2019-05-16T19:11:01Z","author_association":"NONE","active_lock_reason":null,"body":"Jackson version need to be updated to latest version. \r\n\r\n### Expected behavior\r\n\r\nJackson Dependency version should be of version 2.9.8 (latest)\r\n\r\n### Actual behavior\r\n\r\nThe current version is 2.9.6\r\n\r\n### Steps to reproduce the behavior\r\n\r\nPlease list all relevant steps to reproduce the observed behavior.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/yahoo/maha/issues/476","repository_url":"https://api.github.com/repos/yahoo/maha","labels_url":"https://api.github.com/repos/yahoo/maha/issues/476/labels{/name}","comments_url":"https://api.github.com/repos/yahoo/maha/issues/476/comments","events_url":"https://api.github.com/repos/yahoo/maha/issues/476/events","html_url":"https://github.com/yahoo/maha/issues/476","id":466543698,"node_id":"MDU6SXNzdWU0NjY1NDM2OTg=","number":476,"title":"Integration issue with finatra at runtime","user":{"login":"shravanak","id":5891885,"node_id":"MDQ6VXNlcjU4OTE4ODU=","avatar_url":"https://avatars2.githubusercontent.com/u/5891885?v=4","gravatar_id":"","url":"https://api.github.com/users/shravanak","html_url":"https://github.com/shravanak","followers_url":"https://api.github.com/users/shravanak/followers","following_url":"https://api.github.com/users/shravanak/following{/other_user}","gists_url":"https://api.github.com/users/shravanak/gists{/gist_id}","starred_url":"https://api.github.com/users/shravanak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shravanak/subscriptions","organizations_url":"https://api.github.com/users/shravanak/orgs","repos_url":"https://api.github.com/users/shravanak/repos","events_url":"https://api.github.com/users/shravanak/events{/privacy}","received_events_url":"https://api.github.com/users/shravanak/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-07-10T21:59:49Z","updated_at":"2019-08-13T15:56:23Z","closed_at":"2019-08-13T15:56:23Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Seeing this runtime exception when I pull in maha artifacts. \r\nFinatra uses netty 4.1.35.Final but somehow this class is getting pulled into the classpath from ning async-http-client as it pulls an older version of the DefaultChannelId class inside the jar.\r\nhttps://github.com/impossibl/pgjdbc-ng/issues/332\r\n\r\nCaused by: java.lang.NoSuchMethodError: io.netty.channel.DefaultChannelId.newInstance()Lio/netty/channel/DefaultChannelId;\r\n\tat io.netty.channel.AbstractChannel.newId(AbstractChannel.java:112)\r\n\tat io.netty.channel.AbstractChannel.<init>(AbstractChannel.java:84)\r\n\tat io.netty.bootstrap.FailedChannel.<init>(FailedChannel.java:33)\r\n\tat io.netty.bootstrap.AbstractBootstrap.initAndRegister(AbstractBootstrap.java:330)\r\n\tat io.netty.bootstrap.AbstractBootstrap.doBind(AbstractBootstrap.java:282)\r\n\tat io.netty.bootstrap.AbstractBootstrap.bind(AbstractBootstrap.java:278)\r\n\tat com.twitter.finagle.netty4.ListeningServerBuilder$$anon$1.<init>(ListeningServerBuilder.scala:172)\r\n\tat com.twitter.finagle.netty4.ListeningServerBuilder.bindWithBridge(ListeningServerBuilder.scala:78)\r\n\tat com.twitter.finagle.netty4.Netty4Listener.listen(Netty4Listener.scala:103)\r\n\tat com.twitter.finagle.server.StdStackServer.newListeningServer(StdStackServer.scala:82)\r\n\tat com.twitter.finagle.server.StdStackServer.newListeningServer$(StdStackServer.scala:69)\r\ncom.twitter.inject.server.EmbeddedTwitterServer.$anonfun$runNonExitingMain$2(EmbeddedTwitterServer.scala:623)\r\n\t... 26 more\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/484","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/484/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/484/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/484/events","html_url":"https://github.com/twitter/finatra/issues/484","id":400848367,"node_id":"MDU6SXNzdWU0MDA4NDgzNjc=","number":484,"title":"Finatra on Java-11 requires additional dependency.","user":{"login":"vi-p4f","id":8612009,"node_id":"MDQ6VXNlcjg2MTIwMDk=","avatar_url":"https://avatars2.githubusercontent.com/u/8612009?v=4","gravatar_id":"","url":"https://api.github.com/users/vi-p4f","html_url":"https://github.com/vi-p4f","followers_url":"https://api.github.com/users/vi-p4f/followers","following_url":"https://api.github.com/users/vi-p4f/following{/other_user}","gists_url":"https://api.github.com/users/vi-p4f/gists{/gist_id}","starred_url":"https://api.github.com/users/vi-p4f/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vi-p4f/subscriptions","organizations_url":"https://api.github.com/users/vi-p4f/orgs","repos_url":"https://api.github.com/users/vi-p4f/repos","events_url":"https://api.github.com/users/vi-p4f/events{/privacy}","received_events_url":"https://api.github.com/users/vi-p4f/received_events","type":"User","site_admin":false},"labels":[{"id":260339486,"node_id":"MDU6TGFiZWwyNjAzMzk0ODY=","url":"https://api.github.com/repos/twitter/finatra/labels/backlog","name":"backlog","color":"0052cc","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-01-18T18:58:18Z","updated_at":"2019-06-17T23:37:39Z","closed_at":"2019-06-17T23:37:39Z","author_association":"NONE","active_lock_reason":null,"body":"The file  https://github.com/twitter/finatra/blob/develop/utils/src/main/scala/com/twitter/finatra/utils/FileResolver.scala depends on javax.activation.MimetypesFileTypeMap which was removed from Java 11 jdk. So running Finatra on java 11 requires additional third party dependency: \r\n\"com.sun.activation\" % \"javax.activation\" % \"1.2.0\".\r\n\r\n### Expected behavior\r\nReview Finatra source. May be it does not need this dependency?\r\n\r\n### Actual behavior\r\nFailed in runtime without extra dependency.\r\n\r\n### Steps to reproduce the behavior\r\nFinatra test server failed to start.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/UdashFramework/udash-core/issues/279","repository_url":"https://api.github.com/repos/UdashFramework/udash-core","labels_url":"https://api.github.com/repos/UdashFramework/udash-core/issues/279/labels{/name}","comments_url":"https://api.github.com/repos/UdashFramework/udash-core/issues/279/comments","events_url":"https://api.github.com/repos/UdashFramework/udash-core/issues/279/events","html_url":"https://github.com/UdashFramework/udash-core/issues/279","id":435551508,"node_id":"MDU6SXNzdWU0MzU1NTE1MDg=","number":279,"title":"Trying to get Udash working with Twitter Futures","user":{"login":"codeape","id":1051317,"node_id":"MDQ6VXNlcjEwNTEzMTc=","avatar_url":"https://avatars2.githubusercontent.com/u/1051317?v=4","gravatar_id":"","url":"https://api.github.com/users/codeape","html_url":"https://github.com/codeape","followers_url":"https://api.github.com/users/codeape/followers","following_url":"https://api.github.com/users/codeape/following{/other_user}","gists_url":"https://api.github.com/users/codeape/gists{/gist_id}","starred_url":"https://api.github.com/users/codeape/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codeape/subscriptions","organizations_url":"https://api.github.com/users/codeape/orgs","repos_url":"https://api.github.com/users/codeape/repos","events_url":"https://api.github.com/users/codeape/events{/privacy}","received_events_url":"https://api.github.com/users/codeape/received_events","type":"User","site_admin":false},"labels":[{"id":331756271,"node_id":"MDU6TGFiZWwzMzE3NTYyNzE=","url":"https://api.github.com/repos/UdashFramework/udash-core/labels/question","name":"question","color":"cc317c","default":true,"description":null}],"state":"closed","locked":false,"assignee":{"login":"ghik","id":1022675,"node_id":"MDQ6VXNlcjEwMjI2NzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1022675?v=4","gravatar_id":"","url":"https://api.github.com/users/ghik","html_url":"https://github.com/ghik","followers_url":"https://api.github.com/users/ghik/followers","following_url":"https://api.github.com/users/ghik/following{/other_user}","gists_url":"https://api.github.com/users/ghik/gists{/gist_id}","starred_url":"https://api.github.com/users/ghik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghik/subscriptions","organizations_url":"https://api.github.com/users/ghik/orgs","repos_url":"https://api.github.com/users/ghik/repos","events_url":"https://api.github.com/users/ghik/events{/privacy}","received_events_url":"https://api.github.com/users/ghik/received_events","type":"User","site_admin":false},"assignees":[{"login":"ghik","id":1022675,"node_id":"MDQ6VXNlcjEwMjI2NzU=","avatar_url":"https://avatars2.githubusercontent.com/u/1022675?v=4","gravatar_id":"","url":"https://api.github.com/users/ghik","html_url":"https://github.com/ghik","followers_url":"https://api.github.com/users/ghik/followers","following_url":"https://api.github.com/users/ghik/following{/other_user}","gists_url":"https://api.github.com/users/ghik/gists{/gist_id}","starred_url":"https://api.github.com/users/ghik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghik/subscriptions","organizations_url":"https://api.github.com/users/ghik/orgs","repos_url":"https://api.github.com/users/ghik/repos","events_url":"https://api.github.com/users/ghik/events{/privacy}","received_events_url":"https://api.github.com/users/ghik/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/UdashFramework/udash-core/milestones/8","html_url":"https://github.com/UdashFramework/udash-core/milestone/8","labels_url":"https://api.github.com/repos/UdashFramework/udash-core/milestones/8/labels","id":3444616,"node_id":"MDk6TWlsZXN0b25lMzQ0NDYxNg==","number":8,"title":"0.8.0","description":"","creator":{"login":"Starzu","id":817407,"node_id":"MDQ6VXNlcjgxNzQwNw==","avatar_url":"https://avatars2.githubusercontent.com/u/817407?v=4","gravatar_id":"","url":"https://api.github.com/users/Starzu","html_url":"https://github.com/Starzu","followers_url":"https://api.github.com/users/Starzu/followers","following_url":"https://api.github.com/users/Starzu/following{/other_user}","gists_url":"https://api.github.com/users/Starzu/gists{/gist_id}","starred_url":"https://api.github.com/users/Starzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Starzu/subscriptions","organizations_url":"https://api.github.com/users/Starzu/orgs","repos_url":"https://api.github.com/users/Starzu/repos","events_url":"https://api.github.com/users/Starzu/events{/privacy}","received_events_url":"https://api.github.com/users/Starzu/received_events","type":"User","site_admin":false},"open_issues":1,"closed_issues":85,"state":"closed","created_at":"2018-06-22T10:54:48Z","updated_at":"2020-03-20T06:46:41Z","due_on":null,"closed_at":"2019-08-23T11:33:27Z"},"comments":4,"created_at":"2019-04-21T21:56:19Z","updated_at":"2019-08-23T13:27:58Z","closed_at":"2019-04-23T08:38:51Z","author_association":"NONE","active_lock_reason":null,"body":"I am trying to use Twitter Futures instead of Scala Futures. As per the user manual and the example: https://github.com/UdashFramework/udash-core/blob/master/rest/src/test/scala/io/udash/rest/monix/MonixRestImplicits.scala\r\n\r\nI made this \"Rest Implicit\": \r\n```package org.codeape.timepool.shared.twitter\r\n\r\nimport com.twitter.util.{Future, Promise, Return, Throw}\r\nimport io.udash.rest.{GenCodecRestImplicits, OpenApiFullInstances, RestOpenApiCompanion}\r\nimport io.udash.rest.raw.RawRest.{Async, AsyncEffect}\r\nimport com.avsystem.commons._\r\nimport com.avsystem.commons.meta.MacroInstances\r\nimport com.avsystem.commons.misc.ImplicitNotFound\r\nimport io.udash.rest.raw.HttpResponseType\r\n\r\nimport scala.annotation.implicitNotFound\r\n\r\ntrait TwitterRestImplicits extends GenCodecRestImplicits {\r\n\r\n  implicit def futureToAsyn(): AsyncEffect[Future] = new AsyncEffect[Future] {\r\n    def toAsync[A](future: Future[A]): Async[A] =\r\n      callback => future.respond {\r\n        case Return(value) => callback(Success(value))\r\n        case Throw(exception) => callback(Failure(exception))\r\n      }\r\n    def fromAsync[A](async: Async[A]): Future[A] = {\r\n      val future = Promise[A]()\r\n      async {\r\n        case Success(value) => future.setValue(value)\r\n        case Failure(exception) => future.setException(exception)\r\n      }\r\n      future\r\n    }\r\n  }\r\n\r\n  @implicitNotFound(\"${T} is not a valid HTTP method result type - it must be wrapped into a twitter Future\")\r\n  implicit def httpResponseTypeNotFound[T]: ImplicitNotFound[HttpResponseType[T]] =\r\n    ImplicitNotFound()\r\n\r\n}\r\nobject TwitterRestImplicits extends TwitterRestImplicits\r\n\r\nabstract class TwitterRestApiCompanion[Real](\r\n  implicit macroInstances: MacroInstances[TwitterRestImplicits, OpenApiFullInstances[Real]]\r\n) extends RestOpenApiCompanion[TwitterRestImplicits, Real](TwitterRestImplicits)\r\n```\r\nI think I have done the translation from Async to Future and back correctly. However, when I try to use my \"Rest Implicit\" here:\r\n\r\n```\r\npackage org.codeape.timepool.shared\r\n\r\nimport com.twitter.util.Future\r\n//import io.udash.rest._\r\nimport org.codeape.timepool.shared.model.auth.UserContext\r\nimport org.codeape.timepool.shared.twitter.TwitterRestApiCompanion\r\n\r\ntrait AuthREST {\r\n\r\n  def login(username: String, password: String): Future[UserContext]\r\n\r\n}\r\nobject AuthREST extends TwitterRestApiCompanion[AuthREST]\r\n\r\ntrait MainServerREST {\r\n\r\n  /** Authentication. */\r\n  def auth(): AuthREST\r\n\r\n}\r\nobject MainServerREST extends TwitterRestApiCompanion[MainServerREST]\r\n```\r\nAuthREST compilation fail:\r\n```\r\nError:(10, 7) Macro at line 13 failed: cannot translate between trait AuthREST and trait RawRest:\r\nproblem with method login:\r\n * it cannot be translated into a prefix method:\r\n   result type com.twitter.util.Future[org.codeape.timepool.shared.model.auth.UserContext] is not a valid REST API trait, does it have a properly defined companion object?\r\n * it cannot be translated into an HTTP method:\r\n   com.twitter.util.Future[org.codeape.timepool.shared.model.auth.UserContext] is not a valid HTTP method result type - it must be wrapped into a twitter Future\r\n  def login(username: String, password: String): Future[UserContext]\r\n```\r\nWhy does this happen? What am I missing? What am I doing wrong? Is this a bug?\r\n\r\nI am using Udash version 0.8.0-RC2, finatra and twitter util version 19.2.0.\r\n```\r\nimport org.scalajs.sbtplugin.ScalaJSPlugin.autoImport._\r\nimport org.portablescala.sbtplatformdeps.PlatformDepsPlugin.autoImport._\r\nimport sbt._\r\n\r\nobject Dependencies {\r\n\r\n  val versionOfScala = \"2.12.8\"\r\n\r\n  // Udash\r\n  val udashVersion = \"0.8.0-RC2\"\r\n  val udashJQueryVersion = \"3.0.1\"\r\n\r\n  // Backend\r\n  val twitterVersion = \"19.2.0\"\r\n  val logbackVersion = \"1.2.3\"\r\n\r\n  // JS dependencies\r\n  val bootstrapVersion = \"3.3.7-1\"\r\n  val highchartsVersion = \"5.0.14\"\r\n\r\n  // Testing\r\n  val scalatestVersion = \"3.0.7\"\r\n  val scalamockVersion = \"4.1.0\"\r\n\r\n  // Dependencies for both frontend and backend\r\n  // Those have to be cross-compilable\r\n  val crossDeps = Def.setting(Seq(\r\n    \"io.udash\"    %%% \"udash-core\" % udashVersion,\r\n    \"io.udash\"    %%% \"udash-rest\" % udashVersion,\r\n    \"io.udash\"    %%% \"udash-css\"  % udashVersion,\r\n    \"io.udash\"    %%% \"udash-auth\" % udashVersion,\r\n    \"com.twitter\" %%  \"util-core\"  % twitterVersion,\r\n  ))\r\n\r\n  // Dependencies compiled to JavaScript code\r\n  val frontendDeps = Def.setting(Seq(\r\n    \"io.udash\" %%% \"udash-core\" % udashVersion,\r\n    \"io.udash\" %%% \"udash-css\" % udashVersion,\r\n    \"io.udash\" %%% \"udash-auth\" % udashVersion,\r\n\r\n    // type-safe wrapper for Twitter Bootstrap\r\n    \"io.udash\" %%% \"udash-bootstrap\" % udashVersion,\r\n    // type-safe wrapper for Highcharts\r\n    \"io.udash\" %%% \"udash-charts\" % udashVersion,\r\n    // type-safe wrapper for jQuery\r\n    \"io.udash\" %%% \"udash-jquery\" % udashJQueryVersion,\r\n  ))\r\n\r\n  // JavaScript libraries dependencies\r\n  // Those will be added into frontend-deps.js\r\n  val frontendJSDeps = Def.setting(Seq(\r\n    // \"jquery.js\" is provided by \"udash-jquery\" dependency\r\n    \"org.webjars\" % \"bootstrap\" % bootstrapVersion /\r\n      \"bootstrap.js\" minified \"bootstrap.min.js\" dependsOn \"jquery.js\",\r\n\r\n    // Highcharts JS files\r\n    \"org.webjars\" % \"highcharts\" % highchartsVersion /\r\n      s\"$highchartsVersion/highcharts.src.js\" minified s\"$highchartsVersion/highcharts.js\" dependsOn \"jquery.js\",\r\n    \"org.webjars\" % \"highcharts\" % highchartsVersion /\r\n      s\"$highchartsVersion/highcharts-3d.src.js\" minified s\"$highchartsVersion/highcharts-3d.js\" dependsOn s\"$highchartsVersion/highcharts.src.js\",\r\n    \"org.webjars\" % \"highcharts\" % highchartsVersion /\r\n      s\"$highchartsVersion/highcharts-more.src.js\" minified s\"$highchartsVersion/highcharts-more.js\" dependsOn s\"$highchartsVersion/highcharts.src.js\",\r\n    \"org.webjars\" % \"highcharts\" % highchartsVersion /\r\n      s\"$highchartsVersion/modules/exporting.src.js\" minified s\"$highchartsVersion/modules/exporting.js\" dependsOn s\"$highchartsVersion/highcharts.src.js\",\r\n    \"org.webjars\" % \"highcharts\" % highchartsVersion /\r\n      s\"$highchartsVersion/modules/drilldown.src.js\" minified s\"$highchartsVersion/modules/drilldown.js\" dependsOn s\"$highchartsVersion/highcharts.src.js\",\r\n    \"org.webjars\" % \"highcharts\" % highchartsVersion /\r\n      s\"$highchartsVersion/modules/heatmap.src.js\" minified s\"$highchartsVersion/modules/heatmap.js\" dependsOn s\"$highchartsVersion/highcharts.src.js\",\r\n  ))\r\n\r\n  // Dependencies for JVM part of code\r\n  val backendDeps = Def.setting(Seq(\r\n    \"io.udash\" %% \"udash-rpc\" % udashVersion,\r\n    \"io.udash\" %% \"udash-rest\" % udashVersion,\r\n    \"io.udash\" %% \"udash-i18n\" % udashVersion,\r\n    \"io.udash\" %% \"udash-css\" % udashVersion,\r\n\r\n    \"com.twitter\" %% \"finatra-http\" % twitterVersion,\r\n    \"ch.qos.logback\" % \"logback-classic\" % logbackVersion,\r\n  ))\r\n\r\n  // Test dependencies\r\n  val crossTestDeps = Def.setting(Seq(\r\n    \"org.scalatest\" %%% \"scalatest\" % scalatestVersion,\r\n    \"org.scalamock\" %%% \"scalamock\" % scalamockVersion\r\n  ).map(_ % Test))\r\n  \r\n}\r\n```\r\n\r\n\r\n\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finagle/issues/538","repository_url":"https://api.github.com/repos/twitter/finagle","labels_url":"https://api.github.com/repos/twitter/finagle/issues/538/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finagle/issues/538/comments","events_url":"https://api.github.com/repos/twitter/finagle/issues/538/events","html_url":"https://github.com/twitter/finagle/issues/538","id":169521259,"node_id":"MDU6SXNzdWUxNjk1MjEyNTk=","number":538,"title":"Streaming requests with a fixed content-length are received in one large chunk","user":{"login":"rklancer","id":72165,"node_id":"MDQ6VXNlcjcyMTY1","avatar_url":"https://avatars3.githubusercontent.com/u/72165?v=4","gravatar_id":"","url":"https://api.github.com/users/rklancer","html_url":"https://github.com/rklancer","followers_url":"https://api.github.com/users/rklancer/followers","following_url":"https://api.github.com/users/rklancer/following{/other_user}","gists_url":"https://api.github.com/users/rklancer/gists{/gist_id}","starred_url":"https://api.github.com/users/rklancer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rklancer/subscriptions","organizations_url":"https://api.github.com/users/rklancer/orgs","repos_url":"https://api.github.com/users/rklancer/repos","events_url":"https://api.github.com/users/rklancer/events{/privacy}","received_events_url":"https://api.github.com/users/rklancer/received_events","type":"User","site_admin":false},"labels":[{"id":102979541,"node_id":"MDU6TGFiZWwxMDI5Nzk1NDE=","url":"https://api.github.com/repos/twitter/finagle/labels/good%20first%20issue","name":"good first issue","color":"009800","default":true,"description":""},{"id":403475537,"node_id":"MDU6TGFiZWw0MDM0NzU1Mzc=","url":"https://api.github.com/repos/twitter/finagle/labels/help%20wanted","name":"help wanted","color":"0052cc","default":true,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2016-08-05T03:26:41Z","updated_at":"2019-06-11T01:29:00Z","closed_at":"2019-06-11T01:29:00Z","author_association":"NONE","active_lock_reason":null,"body":"I'm trying to stream requests for certain routes in a Finatra server, in order to pipeline the contents to a downstream http service. But the `streaming` option has no practical effect because Finagle constructs a Netty `HttpMessageDecoder` that accumulates up to `maxRequestSize` bytes into a buffer before firing any events.\n### Expected behavior\n\nIn a Finatra route callback, with Finagle's `streaming` option configured (by specifying Finatra's `streamRequest` option), I expect to be able to obtain `com.twitter.io.Reader` that fills a buffer with bytes as they are received.\n### Actual behavior\n\nWhen the Finatra route callback is called the entire contents of the request have always been read into the reader beforehand. A debugger session shows that Netty's `HttpMessageDecoder` _does_ asynchronously receive bytes, but accumulates them into a buffer rather than immediately passing them up the pipeline.\n### Steps to Reproduce\n\nI am developing a Finatra server (2.1.6, Finagle version 6.35.0). I set `streaming` to true by configuring the `streamRequest` option in the Finatra server. One particular route callback in the Finatra server is supposed to accept POSTed files from our client app and stream them to a downstream service, preferably without buffering the entire file in memory first.\n\nI can reproduce by uploading a largish (<5MB) file via curl to the Finatra route mentioned above. (So, a fixed-length request, like our client app would send, with a `content-length` header and no `transfer-encoding: chunked` header.) The buffer is always filled before the route callback is invoked.\n### Discussion\n\nAs far as I can tell, this is because when `com.twitter.finagle.http.Http` constructs a Netty pipeline, it passes `maxRequestSize` as the **`maxChunkSize`** argument of `SafeHttpServerCodec`. This amounts to inserting a Netty `HttpMessageDecoder` that does not detect a frame and emit a `messageReceived` event until the entire message has been received.\n\nSee https://github.com/twitter/finagle/blob/3bd9661da354a30bbf7cf22a10bd854759beddd1/finagle-http/src/main/scala/com/twitter/finagle/http/Codec.scala#L291\n\nIs it possible to decouple the chunk size and request size concepts? It seems the `HttpChunkAggregator`, which is added to the pipeline when `streaming` is false, would handle aggregating smaller chunks into the completed message for the non-streaming case.\n\n_Note_: I'm mostly using Finagle via Finatra, and then at one remove via a Java wrapper library created at my company. I'm learning to read Scala, but not prepared to write any yet.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/427","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/427/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/427/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/427/events","html_url":"https://github.com/twitter/finatra/issues/427","id":247840857,"node_id":"MDU6SXNzdWUyNDc4NDA4NTc=","number":427,"title":"Case class requests with url encoded route params are not decoded","user":{"login":"devshorts","id":1799346,"node_id":"MDQ6VXNlcjE3OTkzNDY=","avatar_url":"https://avatars1.githubusercontent.com/u/1799346?v=4","gravatar_id":"","url":"https://api.github.com/users/devshorts","html_url":"https://github.com/devshorts","followers_url":"https://api.github.com/users/devshorts/followers","following_url":"https://api.github.com/users/devshorts/following{/other_user}","gists_url":"https://api.github.com/users/devshorts/gists{/gist_id}","starred_url":"https://api.github.com/users/devshorts/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/devshorts/subscriptions","organizations_url":"https://api.github.com/users/devshorts/orgs","repos_url":"https://api.github.com/users/devshorts/repos","events_url":"https://api.github.com/users/devshorts/events{/privacy}","received_events_url":"https://api.github.com/users/devshorts/received_events","type":"User","site_admin":false},"labels":[{"id":260339486,"node_id":"MDU6TGFiZWwyNjAzMzk0ODY=","url":"https://api.github.com/repos/twitter/finatra/labels/backlog","name":"backlog","color":"0052cc","default":false,"description":null},{"id":262529463,"node_id":"MDU6TGFiZWwyNjI1Mjk0NjM=","url":"https://api.github.com/repos/twitter/finatra/labels/in%20progress","name":"in progress","color":"ededed","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"cacoco","id":613046,"node_id":"MDQ6VXNlcjYxMzA0Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false},"assignees":[{"login":"cacoco","id":613046,"node_id":"MDQ6VXNlcjYxMzA0Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2017-08-03T21:28:25Z","updated_at":"2019-05-07T01:44:31Z","closed_at":"2019-05-07T01:44:31Z","author_association":"NONE","active_lock_reason":null,"body":"If you have a case class request:\r\n```\r\ncase class FooRequest(@RouteParam data: String)\r\n```\r\n\r\nAnd a controller like:\r\n```\r\nget(\"test/:dat\") { request: FooRequest => \r\n}\r\n```\r\n\r\nIf you send a url encoded route to it:\r\n\r\n```\r\nget test/=\r\nGET test/%3D`\r\n```\r\nThe value of data does not reflect the decoded value (`=`) but instead shows `%3D`. This seems related to https://github.com/twitter/finatra/issues/68 but was filed against 1.x and I am seeing this on finatra 2.10\r\n\r\n### Expected behavior\r\n\r\nRoute url encoded params are decoded\r\n\r\n### Actual behavior\r\n\r\nRoute url encoded params are not decoded\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/437","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/437/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/437/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/437/events","html_url":"https://github.com/twitter/finatra/issues/437","id":268179472,"node_id":"MDU6SXNzdWUyNjgxNzk0NzI=","number":437,"title":"@JsonProperty in trait ignored when case class extends trait","user":{"login":"JasnaMRB","id":568975,"node_id":"MDQ6VXNlcjU2ODk3NQ==","avatar_url":"https://avatars3.githubusercontent.com/u/568975?v=4","gravatar_id":"","url":"https://api.github.com/users/JasnaMRB","html_url":"https://github.com/JasnaMRB","followers_url":"https://api.github.com/users/JasnaMRB/followers","following_url":"https://api.github.com/users/JasnaMRB/following{/other_user}","gists_url":"https://api.github.com/users/JasnaMRB/gists{/gist_id}","starred_url":"https://api.github.com/users/JasnaMRB/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasnaMRB/subscriptions","organizations_url":"https://api.github.com/users/JasnaMRB/orgs","repos_url":"https://api.github.com/users/JasnaMRB/repos","events_url":"https://api.github.com/users/JasnaMRB/events{/privacy}","received_events_url":"https://api.github.com/users/JasnaMRB/received_events","type":"User","site_admin":false},"labels":[{"id":441957359,"node_id":"MDU6TGFiZWw0NDE5NTczNTk=","url":"https://api.github.com/repos/twitter/finatra/labels/answered","name":"answered","color":"41d620","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"cacoco","id":613046,"node_id":"MDQ6VXNlcjYxMzA0Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false},"assignees":[{"login":"cacoco","id":613046,"node_id":"MDQ6VXNlcjYxMzA0Ng==","avatar_url":"https://avatars2.githubusercontent.com/u/613046?v=4","gravatar_id":"","url":"https://api.github.com/users/cacoco","html_url":"https://github.com/cacoco","followers_url":"https://api.github.com/users/cacoco/followers","following_url":"https://api.github.com/users/cacoco/following{/other_user}","gists_url":"https://api.github.com/users/cacoco/gists{/gist_id}","starred_url":"https://api.github.com/users/cacoco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cacoco/subscriptions","organizations_url":"https://api.github.com/users/cacoco/orgs","repos_url":"https://api.github.com/users/cacoco/repos","events_url":"https://api.github.com/users/cacoco/events{/privacy}","received_events_url":"https://api.github.com/users/cacoco/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2017-10-24T20:44:47Z","updated_at":"2019-01-17T16:03:52Z","closed_at":"2019-01-15T18:20:40Z","author_association":"NONE","active_lock_reason":null,"body":"`@JsonProperty` works fine when directly put onto a case class's field, but when it's located on a related trait instead, Finatra deserializer seems to ignore it and throws a `com.twitter.finatra.json.internal.caseclass.exceptions.CaseClassValidationException`, complaining that a required field is missing since the specified key in the JSON (that's also in the `@JsonProperty`) isn't picked up. I believe this sort of functionality works with vanilla Jackson, so I'd expect it to work with Finatra as well.\r\n\r\n## Sample case\r\n\r\n```\r\ncase class Foo(hello: String) extends Bar \r\n\r\ntrait Bar {\r\n  @JsonProperty(\"helloWorld\")\r\n  def hello: String   \r\n}\r\n```\r\n  \r\n(Finatra only expects key `\"hello\"`, not `\"helloWorld\"`.)  \r\n\r\nMay be related to lines 63-65 here: https://github.com/twitter/finatra/blob/develop/jackson/src/main/scala/com/twitter/finatra/json/internal/caseclass/jackson/CaseClassField.scala ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/chaoss/augur/issues/154","repository_url":"https://api.github.com/repos/chaoss/augur","labels_url":"https://api.github.com/repos/chaoss/augur/issues/154/labels{/name}","comments_url":"https://api.github.com/repos/chaoss/augur/issues/154/comments","events_url":"https://api.github.com/repos/chaoss/augur/issues/154/events","html_url":"https://github.com/chaoss/augur/issues/154","id":351454826,"node_id":"MDU6SXNzdWUzNTE0NTQ4MjY=","number":154,"title":"Numbers in /:owner/:repo/contributors not matching GitHub numbers","user":{"login":"OrkoHunter","id":8065913,"node_id":"MDQ6VXNlcjgwNjU5MTM=","avatar_url":"https://avatars2.githubusercontent.com/u/8065913?v=4","gravatar_id":"","url":"https://api.github.com/users/OrkoHunter","html_url":"https://github.com/OrkoHunter","followers_url":"https://api.github.com/users/OrkoHunter/followers","following_url":"https://api.github.com/users/OrkoHunter/following{/other_user}","gists_url":"https://api.github.com/users/OrkoHunter/gists{/gist_id}","starred_url":"https://api.github.com/users/OrkoHunter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OrkoHunter/subscriptions","organizations_url":"https://api.github.com/users/OrkoHunter/orgs","repos_url":"https://api.github.com/users/OrkoHunter/repos","events_url":"https://api.github.com/users/OrkoHunter/events{/privacy}","received_events_url":"https://api.github.com/users/OrkoHunter/received_events","type":"User","site_admin":false},"labels":[{"id":512453059,"node_id":"MDU6TGFiZWw1MTI0NTMwNTk=","url":"https://api.github.com/repos/chaoss/augur/labels/bug","name":"bug","color":"f4abef","default":true,"description":"Documents unexpected/wrong/buggy behavior"},{"id":835195293,"node_id":"MDU6TGFiZWw4MzUxOTUyOTM=","url":"https://api.github.com/repos/chaoss/augur/labels/deployed%20version","name":"deployed version","color":"f79059","default":false,"description":"Live problems with deployed versions"}],"state":"closed","locked":false,"assignee":{"login":"ccarterlandis","id":31522931,"node_id":"MDQ6VXNlcjMxNTIyOTMx","avatar_url":"https://avatars2.githubusercontent.com/u/31522931?v=4","gravatar_id":"","url":"https://api.github.com/users/ccarterlandis","html_url":"https://github.com/ccarterlandis","followers_url":"https://api.github.com/users/ccarterlandis/followers","following_url":"https://api.github.com/users/ccarterlandis/following{/other_user}","gists_url":"https://api.github.com/users/ccarterlandis/gists{/gist_id}","starred_url":"https://api.github.com/users/ccarterlandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ccarterlandis/subscriptions","organizations_url":"https://api.github.com/users/ccarterlandis/orgs","repos_url":"https://api.github.com/users/ccarterlandis/repos","events_url":"https://api.github.com/users/ccarterlandis/events{/privacy}","received_events_url":"https://api.github.com/users/ccarterlandis/received_events","type":"User","site_admin":false},"assignees":[{"login":"ccarterlandis","id":31522931,"node_id":"MDQ6VXNlcjMxNTIyOTMx","avatar_url":"https://avatars2.githubusercontent.com/u/31522931?v=4","gravatar_id":"","url":"https://api.github.com/users/ccarterlandis","html_url":"https://github.com/ccarterlandis","followers_url":"https://api.github.com/users/ccarterlandis/followers","following_url":"https://api.github.com/users/ccarterlandis/following{/other_user}","gists_url":"https://api.github.com/users/ccarterlandis/gists{/gist_id}","starred_url":"https://api.github.com/users/ccarterlandis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ccarterlandis/subscriptions","organizations_url":"https://api.github.com/users/ccarterlandis/orgs","repos_url":"https://api.github.com/users/ccarterlandis/repos","events_url":"https://api.github.com/users/ccarterlandis/events{/privacy}","received_events_url":"https://api.github.com/users/ccarterlandis/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2018-08-17T04:41:57Z","updated_at":"2018-10-12T04:13:28Z","closed_at":"2018-10-12T04:13:28Z","author_association":"NONE","active_lock_reason":null,"body":"Hi!\r\n\r\nI am trying to use this API to get all the contributors of a project as well as the entire Twitter OSS. It is a very valuable metric!\r\n\r\nHowever, as of now, the numbers given in the result does not seem to be accurate. For example,\r\n1. http://twitter.augurlabs.io/api/unstable/twitter/finagle/contributors tells us that `cacoco` has 1 commits, but https://github.com/twitter/finagle/graphs/contributors says that `cacoco` has 76 commits.\r\n\r\n2. http://twitter.augurlabs.io/api/unstable/twitter/finatra/contributors\r\ntells us that `cacoco` has 868 commits, but https://github.com/twitter/finatra/graphs/contributors says that `cacoco` has 462 commits.\r\n\r\nMy question is that, what does the `commits` data in the result represent?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/468","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/468/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/468/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/468/events","html_url":"https://github.com/twitter/finatra/issues/468","id":358444275,"node_id":"MDU6SXNzdWUzNTg0NDQyNzU=","number":468,"title":"@RouteParam in case class is not working in put request","user":{"login":"fidesachates","id":2189515,"node_id":"MDQ6VXNlcjIxODk1MTU=","avatar_url":"https://avatars1.githubusercontent.com/u/2189515?v=4","gravatar_id":"","url":"https://api.github.com/users/fidesachates","html_url":"https://github.com/fidesachates","followers_url":"https://api.github.com/users/fidesachates/followers","following_url":"https://api.github.com/users/fidesachates/following{/other_user}","gists_url":"https://api.github.com/users/fidesachates/gists{/gist_id}","starred_url":"https://api.github.com/users/fidesachates/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fidesachates/subscriptions","organizations_url":"https://api.github.com/users/fidesachates/orgs","repos_url":"https://api.github.com/users/fidesachates/repos","events_url":"https://api.github.com/users/fidesachates/events{/privacy}","received_events_url":"https://api.github.com/users/fidesachates/received_events","type":"User","site_admin":false},"labels":[{"id":267459545,"node_id":"MDU6TGFiZWwyNjc0NTk1NDU=","url":"https://api.github.com/repos/twitter/finatra/labels/in%20triage","name":"in triage","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-09-10T02:24:48Z","updated_at":"2018-10-12T05:57:58Z","closed_at":"2018-10-12T05:57:58Z","author_association":"NONE","active_lock_reason":null,"body":"I have a case class with a `@RouteParam` annotation on field `id` that is not being populated on a put request. \r\n\r\n### Expected behavior\r\n\r\nI expect the value  of the route param to be in assigned to the case class field `id`\r\n\r\n### Actual behavior\r\n\r\nThe value of the field is an empty string; however, I can get the value of the route param with `request.request.getParam(\"id\")`\r\n\r\n### Steps to reproduce the behavior\r\n\r\nI have scala version 2.12 and finatra library version 18.8.0. The code snippets are below:\r\n\r\n```\r\nclass MyController extends Controller {\r\n\r\n  private val log: Logger = LoggerFactory.getLogger(classOf[MongodbController])\r\n\r\n  put(\"/lights/:id\") { request: LightWithId =>\r\n    log.info(request.toString)\r\n\r\n    response.ok().toFuture\r\n  }\r\n}\r\n\r\ncase class LightWithId(\r\n                        @RouteParam id: String,\r\n                        request: Request,\r\n                        vendor: VendorType,\r\n                        lightType: LightType,\r\n                        vendorData: Map[String, Any]\r\n                      )\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/FasterXML/jackson-databind/issues/1835","repository_url":"https://api.github.com/repos/FasterXML/jackson-databind","labels_url":"https://api.github.com/repos/FasterXML/jackson-databind/issues/1835/labels{/name}","comments_url":"https://api.github.com/repos/FasterXML/jackson-databind/issues/1835/comments","events_url":"https://api.github.com/repos/FasterXML/jackson-databind/issues/1835/events","html_url":"https://github.com/FasterXML/jackson-databind/issues/1835","id":276137853,"node_id":"MDU6SXNzdWUyNzYxMzc4NTM=","number":1835,"title":"ValueInjector break from 2.8.x to 2.9.x","user":{"login":"kinigitbyday","id":2687212,"node_id":"MDQ6VXNlcjI2ODcyMTI=","avatar_url":"https://avatars0.githubusercontent.com/u/2687212?v=4","gravatar_id":"","url":"https://api.github.com/users/kinigitbyday","html_url":"https://github.com/kinigitbyday","followers_url":"https://api.github.com/users/kinigitbyday/followers","following_url":"https://api.github.com/users/kinigitbyday/following{/other_user}","gists_url":"https://api.github.com/users/kinigitbyday/gists{/gist_id}","starred_url":"https://api.github.com/users/kinigitbyday/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kinigitbyday/subscriptions","organizations_url":"https://api.github.com/users/kinigitbyday/orgs","repos_url":"https://api.github.com/users/kinigitbyday/repos","events_url":"https://api.github.com/users/kinigitbyday/events{/privacy}","received_events_url":"https://api.github.com/users/kinigitbyday/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/FasterXML/jackson-databind/milestones/86","html_url":"https://github.com/FasterXML/jackson-databind/milestone/86","labels_url":"https://api.github.com/repos/FasterXML/jackson-databind/milestones/86/labels","id":2849363,"node_id":"MDk6TWlsZXN0b25lMjg0OTM2Mw==","number":86,"title":"2.9.3","description":null,"creator":{"login":"cowtowncoder","id":55065,"node_id":"MDQ6VXNlcjU1MDY1","avatar_url":"https://avatars0.githubusercontent.com/u/55065?v=4","gravatar_id":"","url":"https://api.github.com/users/cowtowncoder","html_url":"https://github.com/cowtowncoder","followers_url":"https://api.github.com/users/cowtowncoder/followers","following_url":"https://api.github.com/users/cowtowncoder/following{/other_user}","gists_url":"https://api.github.com/users/cowtowncoder/gists{/gist_id}","starred_url":"https://api.github.com/users/cowtowncoder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cowtowncoder/subscriptions","organizations_url":"https://api.github.com/users/cowtowncoder/orgs","repos_url":"https://api.github.com/users/cowtowncoder/repos","events_url":"https://api.github.com/users/cowtowncoder/events{/privacy}","received_events_url":"https://api.github.com/users/cowtowncoder/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":9,"state":"open","created_at":"2017-10-19T00:13:37Z","updated_at":"2017-12-06T05:50:33Z","due_on":null,"closed_at":null},"comments":9,"created_at":"2017-11-22T16:50:38Z","updated_at":"2018-08-31T00:09:21Z","closed_at":"2017-12-06T02:42:57Z","author_association":"NONE","active_lock_reason":null,"body":"The ValueInjector constructor signature changed with https://github.com/FasterXML/jackson-databind/commit/76381c528c9b75265e8b93bf6bb4532e4aa8e957#diff-dbcd29e987f27d95f964a674963a9066R24. It seems like the old one could have been deprecated instead of the hard break. \r\n\r\nI'm using Finatra for my API layer, and it handles a lot of request object de/serialization using Jackson. I'd like to upgrade to 2.9.2, but currently can't because Finatra attempts to create an instance of ValueInjector using the old constructor (https://github.com/twitter/finatra/blob/develop/jackson/src/main/scala/com/twitter/finatra/json/internal/caseclass/utils/FieldInjection.scala#L50). It seemed better to open the issue here because I don't think Finatra should have to lock users to 2.9+. ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/442","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/442/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/442/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/442/events","html_url":"https://github.com/twitter/finatra/issues/442","id":276146357,"node_id":"MDU6SXNzdWUyNzYxNDYzNTc=","number":442,"title":"Incompatibility with Jackson 2.9.x","user":{"login":"kinigitbyday","id":2687212,"node_id":"MDQ6VXNlcjI2ODcyMTI=","avatar_url":"https://avatars0.githubusercontent.com/u/2687212?v=4","gravatar_id":"","url":"https://api.github.com/users/kinigitbyday","html_url":"https://github.com/kinigitbyday","followers_url":"https://api.github.com/users/kinigitbyday/followers","following_url":"https://api.github.com/users/kinigitbyday/following{/other_user}","gists_url":"https://api.github.com/users/kinigitbyday/gists{/gist_id}","starred_url":"https://api.github.com/users/kinigitbyday/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kinigitbyday/subscriptions","organizations_url":"https://api.github.com/users/kinigitbyday/orgs","repos_url":"https://api.github.com/users/kinigitbyday/repos","events_url":"https://api.github.com/users/kinigitbyday/events{/privacy}","received_events_url":"https://api.github.com/users/kinigitbyday/received_events","type":"User","site_admin":false},"labels":[{"id":760293246,"node_id":"MDU6TGFiZWw3NjAyOTMyNDY=","url":"https://api.github.com/repos/twitter/finatra/labels/feature%20request","name":"feature request","color":"e8c33e","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-11-22T17:16:16Z","updated_at":"2018-08-29T19:16:36Z","closed_at":"2018-08-29T19:16:36Z","author_association":"NONE","active_lock_reason":null,"body":"Case class deserialization logic is incompatible with Jackson 2.9.x\r\n\r\n### Expected behavior\r\n\r\nCase class deserialization path should work with jackson-databind 2.9.x.\r\n\r\n### Actual behavior\r\n\r\nNoSuchMethodError on the ValueInjector constructor. Appears to have been a break to the signature between 2.8x and 2.9.x (https://github.com/FasterXML/jackson-databind/commit/76381c528c9b75265e8b93bf6bb4532e4aa8e957#diff-dbcd29e987f27d95f964a674963a9066R24).\r\n\r\n```\r\njava.lang.NoSuchMethodError: com.fasterxml.jackson.databind.deser.impl.ValueInjector.<init>(Lcom/fasterxml/jackson/databind/PropertyName;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/util/Annotations;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;Ljava/lang/Object;)V\r\n\tat com.twitter.finatra.json.internal.caseclass.utils.FieldInjection.beanProperty$lzycompute(FieldInjection.scala:55)\r\n\tat com.twitter.finatra.json.internal.caseclass.utils.FieldInjection.beanProperty(FieldInjection.scala:49)\r\n\tat com.twitter.finatra.json.internal.caseclass.utils.FieldInjection.inject(FieldInjection.scala:64)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.CaseClassField.parse(CaseClassField.scala:136)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.$anonfun$parseConstructorValues$1(FinatraCaseClassDeserializer.scala:128)\r\n\tat scala.collection.immutable.List.foreach(List.scala:389)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.parseConstructorValues(FinatraCaseClassDeserializer.scala:126)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserialize(FinatraCaseClassDeserializer.scala:93)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserializeNonWrapperClass(FinatraCaseClassDeserializer.scala:85)\r\n\tat com.twitter.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer.deserialize(FinatraCaseClassDeserializer.scala:67)\r\n\tat com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1608)\r\n\tat com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1292)\r\n\tat com.twitter.finatra.http.internal.marshalling.FinatraDefaultMessageBodyReader.parse(FinatraDefaultMessageBodyReader.scala:34)\r\n\tat com.twitter.finatra.http.internal.marshalling.MessageBodyManager.read(MessageBodyManager.scala:79)\r\n```\r\n\r\n### Steps to reproduce the behavior\r\n\r\n1. Create a controller with a method that uses a case class request.\r\n2. Pull in jackson 2.9.x\r\n3. Make a request to the aforementioned method. \r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/471","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/471/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/471/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/471/events","html_url":"https://github.com/twitter/finatra/issues/471","id":361864770,"node_id":"MDU6SXNzdWUzNjE4NjQ3NzA=","number":471,"title":"Help to configure better exception handling for outdated protocols","user":{"login":"alexr967","id":17540574,"node_id":"MDQ6VXNlcjE3NTQwNTc0","avatar_url":"https://avatars3.githubusercontent.com/u/17540574?v=4","gravatar_id":"","url":"https://api.github.com/users/alexr967","html_url":"https://github.com/alexr967","followers_url":"https://api.github.com/users/alexr967/followers","following_url":"https://api.github.com/users/alexr967/following{/other_user}","gists_url":"https://api.github.com/users/alexr967/gists{/gist_id}","starred_url":"https://api.github.com/users/alexr967/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexr967/subscriptions","organizations_url":"https://api.github.com/users/alexr967/orgs","repos_url":"https://api.github.com/users/alexr967/repos","events_url":"https://api.github.com/users/alexr967/events{/privacy}","received_events_url":"https://api.github.com/users/alexr967/received_events","type":"User","site_admin":false},"labels":[{"id":267459545,"node_id":"MDU6TGFiZWwyNjc0NTk1NDU=","url":"https://api.github.com/repos/twitter/finatra/labels/in%20triage","name":"in triage","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-09-19T18:08:19Z","updated_at":"2018-10-04T19:48:11Z","closed_at":"2018-10-04T18:31:47Z","author_association":"NONE","active_lock_reason":null,"body":"When users connect to com.twitter.finatra.http.HttpServer with SSLv3, we get stack trace in logs.\r\n\r\n\r\n### Expected behavior\r\n\r\nWould like to handle the case to return 401 with custom message and log ip and user name in logs\r\n\r\n### Actual behavior\r\n\r\nStack trace below\r\n\r\n### Steps to reproduce the behavior\r\n\r\nStart HttpServer and connect with SSLv3 protocol\r\n\r\n[x.sc.txt](https://github.com/twitter/finatra/files/2398219/x.sc.txt)\r\n[y.log.txt](https://github.com/twitter/finatra/files/2398227/y.log.txt)\r\n\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/994","repository_url":"https://api.github.com/repos/openzipkin/zipkin","labels_url":"https://api.github.com/repos/openzipkin/zipkin/issues/994/labels{/name}","comments_url":"https://api.github.com/repos/openzipkin/zipkin/issues/994/comments","events_url":"https://api.github.com/repos/openzipkin/zipkin/issues/994/events","html_url":"https://github.com/openzipkin/zipkin/issues/994","id":135300829,"node_id":"MDU6SXNzdWUxMzUzMDA4Mjk=","number":994,"title":"support /heath endpoint","user":{"login":"jcarres-mdsol","id":1803073,"node_id":"MDQ6VXNlcjE4MDMwNzM=","avatar_url":"https://avatars0.githubusercontent.com/u/1803073?v=4","gravatar_id":"","url":"https://api.github.com/users/jcarres-mdsol","html_url":"https://github.com/jcarres-mdsol","followers_url":"https://api.github.com/users/jcarres-mdsol/followers","following_url":"https://api.github.com/users/jcarres-mdsol/following{/other_user}","gists_url":"https://api.github.com/users/jcarres-mdsol/gists{/gist_id}","starred_url":"https://api.github.com/users/jcarres-mdsol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jcarres-mdsol/subscriptions","organizations_url":"https://api.github.com/users/jcarres-mdsol/orgs","repos_url":"https://api.github.com/users/jcarres-mdsol/repos","events_url":"https://api.github.com/users/jcarres-mdsol/events{/privacy}","received_events_url":"https://api.github.com/users/jcarres-mdsol/received_events","type":"User","site_admin":false},"labels":[{"id":6517856,"node_id":"MDU6TGFiZWw2NTE3ODU2","url":"https://api.github.com/repos/openzipkin/zipkin/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":237089161,"node_id":"MDU6TGFiZWwyMzcwODkxNjE=","url":"https://api.github.com/repos/openzipkin/zipkin/labels/server","name":"server","color":"5319e7","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2016-02-22T03:11:48Z","updated_at":"2018-10-26T09:23:00Z","closed_at":"2016-03-16T15:38:21Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"In our testing tools we are checking that the zipkin query server is running but doing a HEAD request to the API.\nThis will return 404\nBut if we do a GET request it will respond normally with 200.\nThat's an extra burden (to be sending data when it does need to) and the API should be responding to HEAD also.\n\nOptionally or in addition the zipkin query server could have some /status or similar endpoint to check its health.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twitter/finatra/issues/458","repository_url":"https://api.github.com/repos/twitter/finatra","labels_url":"https://api.github.com/repos/twitter/finatra/issues/458/labels{/name}","comments_url":"https://api.github.com/repos/twitter/finatra/issues/458/comments","events_url":"https://api.github.com/repos/twitter/finatra/issues/458/events","html_url":"https://github.com/twitter/finatra/issues/458","id":326858236,"node_id":"MDU6SXNzdWUzMjY4NTgyMzY=","number":458,"title":"Flags documentation has broken link to Typesafe Config example repo ","user":{"login":"rsetia","id":14298613,"node_id":"MDQ6VXNlcjE0Mjk4NjEz","avatar_url":"https://avatars1.githubusercontent.com/u/14298613?v=4","gravatar_id":"","url":"https://api.github.com/users/rsetia","html_url":"https://github.com/rsetia","followers_url":"https://api.github.com/users/rsetia/followers","following_url":"https://api.github.com/users/rsetia/following{/other_user}","gists_url":"https://api.github.com/users/rsetia/gists{/gist_id}","starred_url":"https://api.github.com/users/rsetia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsetia/subscriptions","organizations_url":"https://api.github.com/users/rsetia/orgs","repos_url":"https://api.github.com/users/rsetia/repos","events_url":"https://api.github.com/users/rsetia/events{/privacy}","received_events_url":"https://api.github.com/users/rsetia/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-27T22:57:36Z","updated_at":"2018-06-01T22:32:30Z","closed_at":"2018-06-01T22:32:30Z","author_association":"NONE","active_lock_reason":null,"body":"The docs mention an example repo which does not exist on Github. \r\n\r\n### Expected behavior\r\nIn this doc, https://twitter.github.io/finatra/user-guide/getting-started/flags.html, \r\nthe \"example repository\" link in the following sentence will lead to an existing Github repo: \r\n\r\n   See this thread on using Typesafe Config with Finatra and this example repository.\r\n\r\n### Actual behavior\r\n\r\nThe repo does not exist, https://github.com/dkowis/finatra-typesafe-config","performed_via_github_app":null,"score":1.0}]}
0

