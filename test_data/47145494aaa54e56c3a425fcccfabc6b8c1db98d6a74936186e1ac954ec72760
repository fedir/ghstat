HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:08:20 GMT
Link: <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fjuxt%2Fyada+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fjuxt%2Fyada+type%3Aissue+state%3Aclosed&page=2>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: D169:BAD1:E3D9AE:105A333:5FB01D13
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 24
X-Ratelimit-Reset: 1605377359
X-Ratelimit-Used: 6
X-Xss-Protection: 1; mode=block

164a2
{"total_count":36,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/borkdude/clj-kondo/issues/47","repository_url":"https://api.github.com/repos/borkdude/clj-kondo","labels_url":"https://api.github.com/repos/borkdude/clj-kondo/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/borkdude/clj-kondo/issues/47/comments","events_url":"https://api.github.com/repos/borkdude/clj-kondo/issues/47/events","html_url":"https://github.com/borkdude/clj-kondo/issues/47","id":429399287,"node_id":"MDU6SXNzdWU0MjkzOTkyODc=","number":47,"title":"Wrong arity of function detected when using hash sign with type hint","user":{"login":"borkdude","id":284934,"node_id":"MDQ6VXNlcjI4NDkzNA==","avatar_url":"https://avatars1.githubusercontent.com/u/284934?v=4","gravatar_id":"","url":"https://api.github.com/users/borkdude","html_url":"https://github.com/borkdude","followers_url":"https://api.github.com/users/borkdude/followers","following_url":"https://api.github.com/users/borkdude/following{/other_user}","gists_url":"https://api.github.com/users/borkdude/gists{/gist_id}","starred_url":"https://api.github.com/users/borkdude/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/borkdude/subscriptions","organizations_url":"https://api.github.com/users/borkdude/orgs","repos_url":"https://api.github.com/users/borkdude/repos","events_url":"https://api.github.com/users/borkdude/events{/privacy}","received_events_url":"https://api.github.com/users/borkdude/received_events","type":"User","site_admin":false},"labels":[{"id":1282613094,"node_id":"MDU6TGFiZWwxMjgyNjEzMDk0","url":"https://api.github.com/repos/borkdude/clj-kondo/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-04-04T17:32:31Z","updated_at":"2019-04-25T08:41:46Z","closed_at":"2019-04-07T14:49:10Z","author_association":"OWNER","active_lock_reason":null,"body":"Repro:\r\n\r\n```\r\n$ rlwrap clj-kondo --lint -\r\n(defn get-bytes ^bytes [part] part)\r\n(get-bytes :thing)\r\n$ rlwrap clj-kondo --lint -\r\n(defn get-bytes #^bytes [part] part)\r\n(get-bytes :thing)\r\n^D<stdin>:2:1: error: Wrong number of args (1) passed to user/get-bytes\r\n```\r\n\r\nFound when linting yada:\r\nhttps://github.com/juxt/yada/blob/c69c003794d1f07336741dcd80aa7b8fa8ca5cdb/ext/multipart/src/yada/multipart.clj#L37","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/edge/issues/67","repository_url":"https://api.github.com/repos/juxt/edge","labels_url":"https://api.github.com/repos/juxt/edge/issues/67/labels{/name}","comments_url":"https://api.github.com/repos/juxt/edge/issues/67/comments","events_url":"https://api.github.com/repos/juxt/edge/issues/67/events","html_url":"https://github.com/juxt/edge/issues/67","id":422605955,"node_id":"MDU6SXNzdWU0MjI2MDU5NTU=","number":67,"title":"`edge.yada.ig/hosts` for \"bidi.vhosts.VHostsModel\" does not handle `:*`","user":{"login":"p-himik","id":4410314,"node_id":"MDQ6VXNlcjQ0MTAzMTQ=","avatar_url":"https://avatars0.githubusercontent.com/u/4410314?v=4","gravatar_id":"","url":"https://api.github.com/users/p-himik","html_url":"https://github.com/p-himik","followers_url":"https://api.github.com/users/p-himik/followers","following_url":"https://api.github.com/users/p-himik/following{/other_user}","gists_url":"https://api.github.com/users/p-himik/gists{/gist_id}","starred_url":"https://api.github.com/users/p-himik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/p-himik/subscriptions","organizations_url":"https://api.github.com/users/p-himik/orgs","repos_url":"https://api.github.com/users/p-himik/repos","events_url":"https://api.github.com/users/p-himik/events{/privacy}","received_events_url":"https://api.github.com/users/p-himik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-03-19T08:44:51Z","updated_at":"2019-03-21T09:28:02Z","closed_at":"2019-03-21T09:28:02Z","author_association":"NONE","active_lock_reason":null,"body":"Bidi accepts `:*` as a vhost, it doesn't parse it in any way and just passes as is.\r\nBut https://github.com/juxt/edge/blob/master/lib/edge.ig.yada/src/edge/yada/ig.clj#L41 assumes that the host has been parsed into a map of `:scheme` and `:host`.\r\nIt leads to `Execution error (NullPointerException) at edge.yada.ig/eval44369$fn$fn (ig.clj:41).\r\nnull` when executing `(go)`.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/250","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/250/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/250/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/250/events","html_url":"https://github.com/juxt/yada/issues/250","id":395956815,"node_id":"MDU6SXNzdWUzOTU5NTY4MTU=","number":250,"title":"Set-Cookie header is dropped if one of the cookie values is nil","user":{"login":"armincerf","id":9809256,"node_id":"MDQ6VXNlcjk4MDkyNTY=","avatar_url":"https://avatars3.githubusercontent.com/u/9809256?v=4","gravatar_id":"","url":"https://api.github.com/users/armincerf","html_url":"https://github.com/armincerf","followers_url":"https://api.github.com/users/armincerf/followers","following_url":"https://api.github.com/users/armincerf/following{/other_user}","gists_url":"https://api.github.com/users/armincerf/gists{/gist_id}","starred_url":"https://api.github.com/users/armincerf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/armincerf/subscriptions","organizations_url":"https://api.github.com/users/armincerf/orgs","repos_url":"https://api.github.com/users/armincerf/repos","events_url":"https://api.github.com/users/armincerf/events{/privacy}","received_events_url":"https://api.github.com/users/armincerf/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-01-04T15:05:25Z","updated_at":"2019-04-19T22:17:34Z","closed_at":"2019-04-19T22:17:34Z","author_association":"MEMBER","active_lock_reason":null,"body":"Happens when the response contains multiple cookies and one of them is a nilable value.\r\n\r\nE.g ```:cookies {\"cookie-a\" \"non-nil-cookie\"\r\n                       \"cookie-b\" optional-value}```\r\nIf optional-value is nil, cookie-a will not be in the response.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/188","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/188/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/188/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/188/events","html_url":"https://github.com/juxt/yada/issues/188","id":247277438,"node_id":"MDU6SXNzdWUyNDcyNzc0Mzg=","number":188,"title":"Support media types with a suffix","user":{"login":"delitescere","id":134630,"node_id":"MDQ6VXNlcjEzNDYzMA==","avatar_url":"https://avatars2.githubusercontent.com/u/134630?v=4","gravatar_id":"","url":"https://api.github.com/users/delitescere","html_url":"https://github.com/delitescere","followers_url":"https://api.github.com/users/delitescere/followers","following_url":"https://api.github.com/users/delitescere/following{/other_user}","gists_url":"https://api.github.com/users/delitescere/gists{/gist_id}","starred_url":"https://api.github.com/users/delitescere/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/delitescere/subscriptions","organizations_url":"https://api.github.com/users/delitescere/orgs","repos_url":"https://api.github.com/users/delitescere/repos","events_url":"https://api.github.com/users/delitescere/events{/privacy}","received_events_url":"https://api.github.com/users/delitescere/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-08-02T05:30:57Z","updated_at":"2019-05-02T16:24:42Z","closed_at":"2019-05-02T16:24:42Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Media types may include a suffix to indicate the underlying structure of the content. A well-known example is `application/hal+json` which indicates a HAL document in JSON format.\r\n\r\nWhere the media type of the suffix (e.g. `application/json`) already has a render function (`render-map`, etc), an additional render function should not be needed for the suffixed media type (e.g. `application/hal+json`), unless specific alternate processing is desired.\r\n\r\nThis means that if there is a `render-map` function defined for `application/json` then a `render-map` for `application/hal+json` need not be defined (but may be if desired). Yada should default to the render functions for the media type of the suffix if there are none found matching the suffixed media type.\r\n\r\nNonetheless, in the `:produces` declarations for a resource, the specific media types should still be explicitly listed if they are to be accepted based on `Accept` request header content negotiation and used as the `Content-Type` response header. For example:\r\n\r\n```clojure\r\n;; ...\r\n:produces [\"text/html\"\r\n           \"application/json-home\"\r\n           \"application/hal+json\"\r\n           \"application/json\"\r\n           \"application/edn\"]\r\n;; ...\r\n```\r\n\r\nThat it is, even though the `application/hal+json` representation _is valid JSON_, if it wasn't the negotiated content type, then it should not be nominated as the content type in the response. Indeed, some providers may wish to elide the HAL metadata from the response entity if HAL wasn't requested (even though, again, a consumer desiring a JSON response will receive valid JSON even with the HAL metadata included).\r\n\r\nFurther reading:\r\nhttps://en.wikipedia.org/wiki/Media_type#Suffix\r\nhttps://tools.ietf.org/html/rfc6839","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/251","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/251/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/251/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/251/events","html_url":"https://github.com/juxt/yada/issues/251","id":396864830,"node_id":"MDU6SXNzdWUzOTY4NjQ4MzA=","number":251,"title":"yada 1.2.16 authentication is not backwards compatible","user":{"login":"stijnopheide","id":1864762,"node_id":"MDQ6VXNlcjE4NjQ3NjI=","avatar_url":"https://avatars0.githubusercontent.com/u/1864762?v=4","gravatar_id":"","url":"https://api.github.com/users/stijnopheide","html_url":"https://github.com/stijnopheide","followers_url":"https://api.github.com/users/stijnopheide/followers","following_url":"https://api.github.com/users/stijnopheide/following{/other_user}","gists_url":"https://api.github.com/users/stijnopheide/gists{/gist_id}","starred_url":"https://api.github.com/users/stijnopheide/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stijnopheide/subscriptions","organizations_url":"https://api.github.com/users/stijnopheide/orgs","repos_url":"https://api.github.com/users/stijnopheide/repos","events_url":"https://api.github.com/users/stijnopheide/events{/privacy}","received_events_url":"https://api.github.com/users/stijnopheide/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-01-08T11:27:54Z","updated_at":"2019-01-11T09:56:54Z","closed_at":"2019-01-11T09:56:54Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"When you're relying on the functionality of yada < 1.2.16 where you could pass in an authentication scheme with `{:verify your-verify-fn}`, this no longer works with yada 1.2.16.\r\n\r\nThe check in 1.2.16 fails at https://github.com/juxt/yada/blob/1.2.16/src/yada/security.clj#L103\r\n\r\nbecause the authentication scheme doesn't specify a `:scheme` key. Previously you could rely on the defmethod for `nil` (https://github.com/juxt/yada/blob/1.2.16/src/yada/security.clj#L30) but this doesn't get called anymore.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/203","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/203/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/203/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/203/events","html_url":"https://github.com/juxt/yada/issues/203","id":267501102,"node_id":"MDU6SXNzdWUyNjc1MDExMDI=","number":203,"title":"`:get {:response :request}` ","user":{"login":"nha","id":1968291,"node_id":"MDQ6VXNlcjE5NjgyOTE=","avatar_url":"https://avatars3.githubusercontent.com/u/1968291?v=4","gravatar_id":"","url":"https://api.github.com/users/nha","html_url":"https://github.com/nha","followers_url":"https://api.github.com/users/nha/followers","following_url":"https://api.github.com/users/nha/following{/other_user}","gists_url":"https://api.github.com/users/nha/gists{/gist_id}","starred_url":"https://api.github.com/users/nha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nha/subscriptions","organizations_url":"https://api.github.com/users/nha/orgs","repos_url":"https://api.github.com/users/nha/repos","events_url":"https://api.github.com/users/nha/events{/privacy}","received_events_url":"https://api.github.com/users/nha/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-10-22T21:39:33Z","updated_at":"2018-08-30T07:29:25Z","closed_at":"2018-08-30T07:29:25Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Why does\r\n```\r\n:get {:response (fn [ctx] (:request ctx))}\r\n```\r\nwork but not:\r\n```\r\n:get {:response :request}\r\n```\r\n=>\r\n```java.lang.IllegalArgumentException: Don't know how to convert class clojure.lang.Keyword into class java.lang.String```\r\n\r\n\r\n\r\nyada 1.2.9","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/cljdoc/cljdoc/issues/95","repository_url":"https://api.github.com/repos/cljdoc/cljdoc","labels_url":"https://api.github.com/repos/cljdoc/cljdoc/issues/95/labels{/name}","comments_url":"https://api.github.com/repos/cljdoc/cljdoc/issues/95/comments","events_url":"https://api.github.com/repos/cljdoc/cljdoc/issues/95/events","html_url":"https://github.com/cljdoc/cljdoc/issues/95","id":350221839,"node_id":"MDU6SXNzdWUzNTAyMjE4Mzk=","number":95,"title":"Support admonitions in Markdown docs","user":{"login":"bbatsov","id":103882,"node_id":"MDQ6VXNlcjEwMzg4Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/103882?v=4","gravatar_id":"","url":"https://api.github.com/users/bbatsov","html_url":"https://github.com/bbatsov","followers_url":"https://api.github.com/users/bbatsov/followers","following_url":"https://api.github.com/users/bbatsov/following{/other_user}","gists_url":"https://api.github.com/users/bbatsov/gists{/gist_id}","starred_url":"https://api.github.com/users/bbatsov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbatsov/subscriptions","organizations_url":"https://api.github.com/users/bbatsov/orgs","repos_url":"https://api.github.com/users/bbatsov/repos","events_url":"https://api.github.com/users/bbatsov/events{/privacy}","received_events_url":"https://api.github.com/users/bbatsov/received_events","type":"User","site_admin":false},"labels":[{"id":796115328,"node_id":"MDU6TGFiZWw3OTYxMTUzMjg=","url":"https://api.github.com/repos/cljdoc/cljdoc/labels/Good%20First%20Issue","name":"Good First Issue","color":"7057ff","default":false,"description":"Want to help ship cljdoc? These are good issues to start with."},{"id":893172873,"node_id":"MDU6TGFiZWw4OTMxNzI4NzM=","url":"https://api.github.com/repos/cljdoc/cljdoc/labels/Guides","name":"Guides","color":"132f7c","default":false,"description":"Issues related to rendering guides or articles originating from Markdown or similar formats."},{"id":796115327,"node_id":"MDU6TGFiZWw3OTYxMTUzMjc=","url":"https://api.github.com/repos/cljdoc/cljdoc/labels/Help%20Wanted","name":"Help Wanted","color":"0e8a16","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2018-08-13T22:52:29Z","updated_at":"2018-10-31T11:51:51Z","closed_at":"2018-10-30T19:21:13Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I typically publish my project's docs using MkDocs () and I'm always making use of https://github.com/Python-Markdown/markdown/blob/master/docs/extensions/admonition.md\r\n\r\nSeems that's not currently supported by whatever Markdown processor cljdoc uses, which is quite unfortunate for me. \r\n\r\nTake a look here https://cljdoc.xyz/d/nrepl/nrepl/0.4.4/doc/middlewares and you'll immediately understand my problem. ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/silverstripe/silverstripe-graphql/issues/118","repository_url":"https://api.github.com/repos/silverstripe/silverstripe-graphql","labels_url":"https://api.github.com/repos/silverstripe/silverstripe-graphql/issues/118/labels{/name}","comments_url":"https://api.github.com/repos/silverstripe/silverstripe-graphql/issues/118/comments","events_url":"https://api.github.com/repos/silverstripe/silverstripe-graphql/issues/118/events","html_url":"https://github.com/silverstripe/silverstripe-graphql/issues/118","id":257195066,"node_id":"MDU6SXNzdWUyNTcxOTUwNjY=","number":118,"title":"IE11 does not add CORS header when using the same domain","user":{"login":"Firesphere","id":680570,"node_id":"MDQ6VXNlcjY4MDU3MA==","avatar_url":"https://avatars3.githubusercontent.com/u/680570?v=4","gravatar_id":"","url":"https://api.github.com/users/Firesphere","html_url":"https://github.com/Firesphere","followers_url":"https://api.github.com/users/Firesphere/followers","following_url":"https://api.github.com/users/Firesphere/following{/other_user}","gists_url":"https://api.github.com/users/Firesphere/gists{/gist_id}","starred_url":"https://api.github.com/users/Firesphere/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Firesphere/subscriptions","organizations_url":"https://api.github.com/users/Firesphere/orgs","repos_url":"https://api.github.com/users/Firesphere/repos","events_url":"https://api.github.com/users/Firesphere/events{/privacy}","received_events_url":"https://api.github.com/users/Firesphere/received_events","type":"User","site_admin":false},"labels":[{"id":472062978,"node_id":"MDU6TGFiZWw0NzIwNjI5Nzg=","url":"https://api.github.com/repos/silverstripe/silverstripe-graphql/labels/affects/v4","name":"affects/v4","color":"5319e7","default":false,"description":null},{"id":587709036,"node_id":"MDU6TGFiZWw1ODc3MDkwMzY=","url":"https://api.github.com/repos/silverstripe/silverstripe-graphql/labels/change/patch","name":"change/patch","color":"fef2c0","default":false,"description":null},{"id":587709060,"node_id":"MDU6TGFiZWw1ODc3MDkwNjA=","url":"https://api.github.com/repos/silverstripe/silverstripe-graphql/labels/effort/medium","name":"effort/medium","color":"fef2c0","default":false,"description":null},{"id":587709078,"node_id":"MDU6TGFiZWw1ODc3MDkwNzg=","url":"https://api.github.com/repos/silverstripe/silverstripe-graphql/labels/impact/high","name":"impact/high","color":"eb6420","default":false,"description":null},{"id":443455054,"node_id":"MDU6TGFiZWw0NDM0NTUwNTQ=","url":"https://api.github.com/repos/silverstripe/silverstripe-graphql/labels/type/bug","name":"type/bug","color":"d93f0b","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"flamerohr","id":1064889,"node_id":"MDQ6VXNlcjEwNjQ4ODk=","avatar_url":"https://avatars0.githubusercontent.com/u/1064889?v=4","gravatar_id":"","url":"https://api.github.com/users/flamerohr","html_url":"https://github.com/flamerohr","followers_url":"https://api.github.com/users/flamerohr/followers","following_url":"https://api.github.com/users/flamerohr/following{/other_user}","gists_url":"https://api.github.com/users/flamerohr/gists{/gist_id}","starred_url":"https://api.github.com/users/flamerohr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/flamerohr/subscriptions","organizations_url":"https://api.github.com/users/flamerohr/orgs","repos_url":"https://api.github.com/users/flamerohr/repos","events_url":"https://api.github.com/users/flamerohr/events{/privacy}","received_events_url":"https://api.github.com/users/flamerohr/received_events","type":"User","site_admin":false},"assignees":[{"login":"flamerohr","id":1064889,"node_id":"MDQ6VXNlcjEwNjQ4ODk=","avatar_url":"https://avatars0.githubusercontent.com/u/1064889?v=4","gravatar_id":"","url":"https://api.github.com/users/flamerohr","html_url":"https://github.com/flamerohr","followers_url":"https://api.github.com/users/flamerohr/followers","following_url":"https://api.github.com/users/flamerohr/following{/other_user}","gists_url":"https://api.github.com/users/flamerohr/gists{/gist_id}","starred_url":"https://api.github.com/users/flamerohr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/flamerohr/subscriptions","organizations_url":"https://api.github.com/users/flamerohr/orgs","repos_url":"https://api.github.com/users/flamerohr/repos","events_url":"https://api.github.com/users/flamerohr/events{/privacy}","received_events_url":"https://api.github.com/users/flamerohr/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/silverstripe/silverstripe-graphql/milestones/12","html_url":"https://github.com/silverstripe/silverstripe-graphql/milestone/12","labels_url":"https://api.github.com/repos/silverstripe/silverstripe-graphql/milestones/12/labels","id":3017971,"node_id":"MDk6TWlsZXN0b25lMzAxNzk3MQ==","number":12,"title":"Recipe 4.0.2","description":"","creator":{"login":"tractorcow","id":936064,"node_id":"MDQ6VXNlcjkzNjA2NA==","avatar_url":"https://avatars2.githubusercontent.com/u/936064?v=4","gravatar_id":"","url":"https://api.github.com/users/tractorcow","html_url":"https://github.com/tractorcow","followers_url":"https://api.github.com/users/tractorcow/followers","following_url":"https://api.github.com/users/tractorcow/following{/other_user}","gists_url":"https://api.github.com/users/tractorcow/gists{/gist_id}","starred_url":"https://api.github.com/users/tractorcow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tractorcow/subscriptions","organizations_url":"https://api.github.com/users/tractorcow/orgs","repos_url":"https://api.github.com/users/tractorcow/repos","events_url":"https://api.github.com/users/tractorcow/events{/privacy}","received_events_url":"https://api.github.com/users/tractorcow/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":2,"state":"closed","created_at":"2018-01-08T00:23:50Z","updated_at":"2018-01-25T20:28:32Z","due_on":null,"closed_at":"2018-01-25T20:28:32Z"},"comments":16,"created_at":"2017-09-12T21:50:19Z","updated_at":"2018-01-23T21:39:02Z","closed_at":"2018-01-23T21:39:02Z","author_association":"NONE","active_lock_reason":null,"body":"IE11 and Edge do not add the CORS Origin header, even when explicitly set, when the domain is the same as the domain graphql (asset admin) tries to talk to. \r\n\r\nThis breaks the CMS when CORS is enabled. Which means the GraphQL API becomes a lot less useful to anyone who wants to serve it to other domains or standalone apps, and still support IE for it's content authors.\r\n\r\nExplicitly setting the Origin header in the asset admin, does not resolve the problem, as IE still does not actually add it.\r\n\r\nBackground is here:\r\nhttps://connect.microsoft.com/IE/feedback/details/781303/origin-header-is-not-added-to-cors-requests-to-same-domain-but-different-port\r\nAlthough the issue applies to the same port as well as a different port\r\n\r\n# PRs:\r\n\r\n - [ ] https://github.com/silverstripe/silverstripe-graphql/pull/132","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/168","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/168/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/168/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/168/events","html_url":"https://github.com/juxt/yada/issues/168","id":223874611,"node_id":"MDU6SXNzdWUyMjM4NzQ2MTE=","number":168,"title":"ClassPathResource: java.lang.ClassCastException: java.io.File cannot be cast to java.net.URL","user":{"login":"borkdude","id":284934,"node_id":"MDQ6VXNlcjI4NDkzNA==","avatar_url":"https://avatars1.githubusercontent.com/u/284934?v=4","gravatar_id":"","url":"https://api.github.com/users/borkdude","html_url":"https://github.com/borkdude","followers_url":"https://api.github.com/users/borkdude/followers","following_url":"https://api.github.com/users/borkdude/following{/other_user}","gists_url":"https://api.github.com/users/borkdude/gists{/gist_id}","starred_url":"https://api.github.com/users/borkdude/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/borkdude/subscriptions","organizations_url":"https://api.github.com/users/borkdude/orgs","repos_url":"https://api.github.com/users/borkdude/repos","events_url":"https://api.github.com/users/borkdude/events{/privacy}","received_events_url":"https://api.github.com/users/borkdude/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-04-24T16:19:11Z","updated_at":"2017-04-25T06:39:59Z","closed_at":"2017-04-25T05:25:38Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Fixed in https://github.com/juxt/yada/pull/167","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/16","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/16/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/16/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/16/events","html_url":"https://github.com/juxt/yada/issues/16","id":99441286,"node_id":"MDU6SXNzdWU5OTQ0MTI4Ng==","number":16,"title":"modular template not found for yada","user":{"login":"xhh","id":159740,"node_id":"MDQ6VXNlcjE1OTc0MA==","avatar_url":"https://avatars1.githubusercontent.com/u/159740?v=4","gravatar_id":"","url":"https://api.github.com/users/xhh","html_url":"https://github.com/xhh","followers_url":"https://api.github.com/users/xhh/followers","following_url":"https://api.github.com/users/xhh/following{/other_user}","gists_url":"https://api.github.com/users/xhh/gists{/gist_id}","starred_url":"https://api.github.com/users/xhh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xhh/subscriptions","organizations_url":"https://api.github.com/users/xhh/orgs","repos_url":"https://api.github.com/users/xhh/repos","events_url":"https://api.github.com/users/xhh/events{/privacy}","received_events_url":"https://api.github.com/users/xhh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-08-06T14:01:23Z","updated_at":"2017-04-16T17:49:53Z","closed_at":"2017-04-16T17:49:53Z","author_association":"NONE","active_lock_reason":null,"body":"On [yada user guide](http://yada.juxt.pro/user-guide.html) there's a command to generate a project:\n\n```\nlein new modular yada-demo yada\n```\n\nBut it gives error: `No such template: yada`. Is this template not ready yet?\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/130","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/130/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/130/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/130/events","html_url":"https://github.com/juxt/yada/issues/130","id":182455861,"node_id":"MDU6SXNzdWUxODI0NTU4NjE=","number":130,"title":"Doc: links to parameters section are incorrect","user":{"login":"jeroenvandijk","id":27645,"node_id":"MDQ6VXNlcjI3NjQ1","avatar_url":"https://avatars1.githubusercontent.com/u/27645?v=4","gravatar_id":"","url":"https://api.github.com/users/jeroenvandijk","html_url":"https://github.com/jeroenvandijk","followers_url":"https://api.github.com/users/jeroenvandijk/followers","following_url":"https://api.github.com/users/jeroenvandijk/following{/other_user}","gists_url":"https://api.github.com/users/jeroenvandijk/gists{/gist_id}","starred_url":"https://api.github.com/users/jeroenvandijk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeroenvandijk/subscriptions","organizations_url":"https://api.github.com/users/jeroenvandijk/orgs","repos_url":"https://api.github.com/users/jeroenvandijk/repos","events_url":"https://api.github.com/users/jeroenvandijk/events{/privacy}","received_events_url":"https://api.github.com/users/jeroenvandijk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-10-12T07:38:19Z","updated_at":"2017-02-24T15:23:33Z","closed_at":"2017-02-24T15:23:33Z","author_association":"NONE","active_lock_reason":null,"body":"(I'm not familiar with asciidoc yet, so I'll just report the issue without fixing it)\n\nThis line has a link to a parameters section but it is dead:\nhttps://github.com/juxt/yada/blame/47feba3feeff9fe47cb09dbdfed7daf199f43ca1/doc/hello.adoc#L490\n\nShould probably be section \"6 Parameters\", unfortunately i cannot link to 6 either because the link in the left hand side menu conflicts with section 3.1 it seems: https://juxt.pro/yada/manual/index.html#parameters\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/edge/issues/22","repository_url":"https://api.github.com/repos/juxt/edge","labels_url":"https://api.github.com/repos/juxt/edge/issues/22/labels{/name}","comments_url":"https://api.github.com/repos/juxt/edge/issues/22/comments","events_url":"https://api.github.com/repos/juxt/edge/issues/22/events","html_url":"https://github.com/juxt/edge/issues/22","id":198991855,"node_id":"MDU6SXNzdWUxOTg5OTE4NTU=","number":22,"title":"boot uberjar fails","user":{"login":"thegeez","id":503956,"node_id":"MDQ6VXNlcjUwMzk1Ng==","avatar_url":"https://avatars0.githubusercontent.com/u/503956?v=4","gravatar_id":"","url":"https://api.github.com/users/thegeez","html_url":"https://github.com/thegeez","followers_url":"https://api.github.com/users/thegeez/followers","following_url":"https://api.github.com/users/thegeez/following{/other_user}","gists_url":"https://api.github.com/users/thegeez/gists{/gist_id}","starred_url":"https://api.github.com/users/thegeez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thegeez/subscriptions","organizations_url":"https://api.github.com/users/thegeez/orgs","repos_url":"https://api.github.com/users/thegeez/repos","events_url":"https://api.github.com/users/thegeez/events{/privacy}","received_events_url":"https://api.github.com/users/thegeez/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2017-01-05T16:06:41Z","updated_at":"2017-02-10T16:45:08Z","closed_at":"2017-02-10T16:45:08Z","author_association":"NONE","active_lock_reason":null,"body":"A new clone of this project at cc9ad27bf1a77c25f6fd545a7b0c0150a9b353a7\r\nWith \r\n```\r\n$ boot --version\r\n#http://boot-clj.com\r\n#Thu Jan 05 16:57:57 CET 2017\r\nBOOT_CLOJURE_NAME=org.clojure/clojure\r\nBOOT_CLOJURE_VERSION=1.9.0-alpha12\r\nBOOT_VERSION=2.6.0\r\n```\r\n\r\nAnd \r\n```\r\n$ java -version\r\nopenjdk version \"1.8.0_91\"\r\nOpenJDK Runtime Environment (build 1.8.0_91-8u91-b14-0ubuntu4~15.10.1-b14)\r\nOpenJDK 64-Bit Server VM (build 25.91-b14, mixed mode)\r\n```\r\n\r\n```\r\n$ boot uberjar\r\nBuilding uberjar\r\nCompiling {sass}... 8 changed files.\r\nCompiling ClojureScript...\r\n• edge.js\r\nCompiling 1/1 edge.main...\r\n             clojure.lang.ExceptionInfo: java.io.IOException: File name too long, compiling:(yada/schema.clj:84:3)\r\n    data: {:file \"/tmp/boot.user6370988360429421521.clj\", :line 61}\r\nclojure.lang.Compiler$CompilerException: java.io.IOException: File name too long, compiling:(yada/schema.clj:84:3)\r\n                    java.io.IOException: File name too long\r\n                                ...  \r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/clojure-emacs/refactor-nrepl/issues/176","repository_url":"https://api.github.com/repos/clojure-emacs/refactor-nrepl","labels_url":"https://api.github.com/repos/clojure-emacs/refactor-nrepl/issues/176/labels{/name}","comments_url":"https://api.github.com/repos/clojure-emacs/refactor-nrepl/issues/176/comments","events_url":"https://api.github.com/repos/clojure-emacs/refactor-nrepl/issues/176/events","html_url":"https://github.com/clojure-emacs/refactor-nrepl/issues/176","id":193745854,"node_id":"MDU6SXNzdWUxOTM3NDU4NTQ=","number":176,"title":"Non-deterministic compilation errors on startup","user":{"login":"malcolmsparks","id":163131,"node_id":"MDQ6VXNlcjE2MzEzMQ==","avatar_url":"https://avatars2.githubusercontent.com/u/163131?v=4","gravatar_id":"","url":"https://api.github.com/users/malcolmsparks","html_url":"https://github.com/malcolmsparks","followers_url":"https://api.github.com/users/malcolmsparks/followers","following_url":"https://api.github.com/users/malcolmsparks/following{/other_user}","gists_url":"https://api.github.com/users/malcolmsparks/gists{/gist_id}","starred_url":"https://api.github.com/users/malcolmsparks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malcolmsparks/subscriptions","organizations_url":"https://api.github.com/users/malcolmsparks/orgs","repos_url":"https://api.github.com/users/malcolmsparks/repos","events_url":"https://api.github.com/users/malcolmsparks/events{/privacy}","received_events_url":"https://api.github.com/users/malcolmsparks/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-12-06T11:15:28Z","updated_at":"2016-12-12T18:23:27Z","closed_at":"2016-12-12T18:23:27Z","author_association":"NONE","active_lock_reason":null,"body":"\r\n## Expected behavior\r\n\r\n`(dev)` should work without errors\r\n\r\n## Actual behavior\r\n\r\n`(dev)` sometimes yields errors.\r\n\r\nSee https://github.com/ztellman/byte-streams/issues/25\r\n\r\nA sample:\r\n\r\n```\r\n** <2016-11-27 Sun 10:57>: Started repl from shell\r\n(dev): ok\r\n(go): ok\r\n(reset): ok\r\n** <2016-11-27 Sun 11:00>: Started repl from emacs/cider\r\n(dev): ok\r\n(go):\r\n   Error in server model: [nil [nil [nil (named [nil nil nil nil nil\r\n   [nil (named (not (matches-some-precondition? false)) \"Matched\")]\r\n   nil nil nil nil nil nil nil] \"Matched\")] nil]]\r\n   {:error [nil [nil [nil (named [nil nil nil nil nil [nil (named (not (matches-some-precondition? false)) \"Matched\")] nil nil nil nil nil nil nil] \"Matched\")] nil]]}\r\n\r\n                  core.clj: 4617  clojure.core/ex-info\r\n                  core.clj: 4617  clojure.core/ex-info\r\n                vhosts.clj:   52  bidi.vhosts/vhosts-model\r\n                vhosts.clj:   49  bidi.vhosts/vhosts-model\r\n               RestFn.java:  137  clojure.lang.RestFn/applyTo\r\n** <2016-11-27 Sun 11:02> Started repl from shell, this time src/yada\r\n(dev) ok\r\n(go) ok\r\n(reset) ok\r\n\r\n** <2016-11-27 Sun 11:03> started from emacs\r\nworked\r\n\r\n\r\n** <2016-11-27 Sun 12:05> started from emacs, same error as <2016-11-27 Sun 11:00>\r\n\r\n** <2016-11-27 Sun 12:40> started from emacs\r\nuser> (dev)\r\nCompilerException java.lang.RuntimeException: No such var: s/defschema, compiling:(phonebook/schema.clj:4:1)\r\nuser>\r\n\r\n** <2016-11-27 Sun 12:41> started from emacs, from a non-dropbox clone (yada2)\r\nuser> (dev)\r\nCompilerException java.lang.RuntimeException: No such var: charset/charset, compiling:(yada/body.clj:43:30)\r\nuser>\r\n\r\n\r\n** <2016-11-27 Sun 12:42> Stopped dropbox\r\n\r\n** <2016-11-27 Sun 12:42> started from emacs, from a non-dropbox clone (yada2)\r\nuser> (dev)\r\nCompilerException java.lang.RuntimeException: No such var: charset/charset, compiling:(yada/body.clj:43:30)\r\nuser>\r\n\r\n\r\n** <2016-11-27 Sun> started from shell - all ok\r\n\r\n** <2016-11-27 Sun 12:47> started from shell - all ok\r\n\r\n** <2016-11-27 Sun 12:49> started from shell - all ok\r\n\r\n** <2016-11-27 Sun 15:00> started from shell - all ok\r\n\r\n** <2016-11-27 Sun 15:07> started from shell in headless mode, connected via shell, still ok\r\n```\r\n\r\n## Steps to reproduce the problem\r\n\r\n```\r\n$ git clone git@github.com:juxt/yada\r\n```\r\n\r\nEnsure `[refactor-nrepl \"2.2.0\"]` is in your `.lein/profiles.clj`\r\n\r\nUsing emacs, CIDER 0.14.0, `clojure-jack-in`\r\nType `(dev)` from the REPL\r\n\r\n## Environment & Version information\r\n\r\n### clj-refactor.el and refactor-nrepl version information\r\n\r\n2.2.0\r\n\r\n### CIDER version information\r\n\r\n0.14.0\r\n\r\n*Include here the version string displayed when\r\nCIDER's REPL is launched. Here's an example:*\r\n\r\n```\r\n;; Connected to nREPL server - nrepl://localhost:39071\r\n;; CIDER 0.14.0 (Berlin), nREPL 0.2.12\r\n;; Clojure 1.8.0, Java 1.8.0_112\r\n```\r\n\r\n### Leiningen or Boot version\r\n\r\n2.7.1\r\n\r\n### Emacs version\r\n\r\n25.1.1\r\n\r\n### Operating system\r\n\r\nArch Linux - kernel version 4.8.11-1-ARCH x86_64\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/119","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/119/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/119/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/119/events","html_url":"https://github.com/juxt/yada/issues/119","id":174444500,"node_id":"MDU6SXNzdWUxNzQ0NDQ1MDA=","number":119,"title":"Incorrect use of memoize in yada.media-type","user":{"login":"imrekoszo","id":1116295,"node_id":"MDQ6VXNlcjExMTYyOTU=","avatar_url":"https://avatars0.githubusercontent.com/u/1116295?v=4","gravatar_id":"","url":"https://api.github.com/users/imrekoszo","html_url":"https://github.com/imrekoszo","followers_url":"https://api.github.com/users/imrekoszo/followers","following_url":"https://api.github.com/users/imrekoszo/following{/other_user}","gists_url":"https://api.github.com/users/imrekoszo/gists{/gist_id}","starred_url":"https://api.github.com/users/imrekoszo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imrekoszo/subscriptions","organizations_url":"https://api.github.com/users/imrekoszo/orgs","repos_url":"https://api.github.com/users/imrekoszo/repos","events_url":"https://api.github.com/users/imrekoszo/events{/privacy}","received_events_url":"https://api.github.com/users/imrekoszo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-01T06:13:56Z","updated_at":"2016-09-02T06:53:58Z","closed_at":"2016-09-02T06:53:58Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"At https://github.com/juxt/yada/blob/master/src/yada/media_type.clj#L29 and https://github.com/juxt/yada/blob/master/src/yada/media_type.clj#L48 I believe memoize is used incorrectly resulting in no actual memoization happening when those functions are called. Given the comments pointing out the possibility of a memory exhaustion attack, this might actually be a good thing.\n\nFrom https://clojuredocs.org/clojure.core/memoize : \n\n> Returns a memoized version of a referentially transparent function (...)\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/61","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/61/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/61/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/61/events","html_url":"https://github.com/juxt/yada/issues/61","id":134916432,"node_id":"MDU6SXNzdWUxMzQ5MTY0MzI=","number":61,"title":"Content Security problems with the yada website","user":{"login":"Frozenlock","id":1152041,"node_id":"MDQ6VXNlcjExNTIwNDE=","avatar_url":"https://avatars1.githubusercontent.com/u/1152041?v=4","gravatar_id":"","url":"https://api.github.com/users/Frozenlock","html_url":"https://github.com/Frozenlock","followers_url":"https://api.github.com/users/Frozenlock/followers","following_url":"https://api.github.com/users/Frozenlock/following{/other_user}","gists_url":"https://api.github.com/users/Frozenlock/gists{/gist_id}","starred_url":"https://api.github.com/users/Frozenlock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frozenlock/subscriptions","organizations_url":"https://api.github.com/users/Frozenlock/orgs","repos_url":"https://api.github.com/users/Frozenlock/repos","events_url":"https://api.github.com/users/Frozenlock/events{/privacy}","received_events_url":"https://api.github.com/users/Frozenlock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-02-19T16:59:52Z","updated_at":"2016-09-07T13:06:11Z","closed_at":"2016-09-07T13:06:11Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Both Chromium and Firefox refuses to load a bunch of resources because of this.\n\nExample error message from the console:\n\n> Refused to load the stylesheet 'http://yada.juxt.pro/bootstrap/css/bootstrap.min.css' because it violates the following Content Security Policy directive: \"default-src https: data: 'unsafe-inline' 'unsafe-eval'\". Note that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/edge/issues/15","repository_url":"https://api.github.com/repos/juxt/edge","labels_url":"https://api.github.com/repos/juxt/edge/issues/15/labels{/name}","comments_url":"https://api.github.com/repos/juxt/edge/issues/15/comments","events_url":"https://api.github.com/repos/juxt/edge/issues/15/events","html_url":"https://github.com/juxt/edge/issues/15","id":167205143,"node_id":"MDU6SXNzdWUxNjcyMDUxNDM=","number":15,"title":"Possible bug with port","user":{"login":"jamesmintram","id":108040,"node_id":"MDQ6VXNlcjEwODA0MA==","avatar_url":"https://avatars2.githubusercontent.com/u/108040?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesmintram","html_url":"https://github.com/jamesmintram","followers_url":"https://api.github.com/users/jamesmintram/followers","following_url":"https://api.github.com/users/jamesmintram/following{/other_user}","gists_url":"https://api.github.com/users/jamesmintram/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesmintram/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesmintram/subscriptions","organizations_url":"https://api.github.com/users/jamesmintram/orgs","repos_url":"https://api.github.com/users/jamesmintram/repos","events_url":"https://api.github.com/users/jamesmintram/events{/privacy}","received_events_url":"https://api.github.com/users/jamesmintram/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-07-23T21:49:21Z","updated_at":"2016-07-23T21:51:27Z","closed_at":"2016-07-23T21:51:26Z","author_association":"NONE","active_lock_reason":null,"body":"https://github.com/juxt/edge/blob/master/src/edge/web_server.clj#L94\n\n`listener (yada/listener vhosts-model {:port port})]`\n\nShould that just be: \n\n`listener (yada/listener vhosts-model port)]`\nor\n`listener (yada/listener vhosts-model (:port listener))]`\n\nAs is the line below?\n\n`(infof \"Started web-server on port %s\" (:port listener))`\n\nOr have I missed something :)\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/13","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/13/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/13/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/13/events","html_url":"https://github.com/juxt/yada/issues/13","id":85989211,"node_id":"MDU6SXNzdWU4NTk4OTIxMQ==","number":13,"title":"Bidi's ->TaggedMatch doesn't work and breaks swagger","user":{"login":"Frozenlock","id":1152041,"node_id":"MDQ6VXNlcjExNTIwNDE=","avatar_url":"https://avatars1.githubusercontent.com/u/1152041?v=4","gravatar_id":"","url":"https://api.github.com/users/Frozenlock","html_url":"https://github.com/Frozenlock","followers_url":"https://api.github.com/users/Frozenlock/followers","following_url":"https://api.github.com/users/Frozenlock/following{/other_user}","gists_url":"https://api.github.com/users/Frozenlock/gists{/gist_id}","starred_url":"https://api.github.com/users/Frozenlock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frozenlock/subscriptions","organizations_url":"https://api.github.com/users/Frozenlock/orgs","repos_url":"https://api.github.com/users/Frozenlock/repos","events_url":"https://api.github.com/users/Frozenlock/events{/privacy}","received_events_url":"https://api.github.com/users/Frozenlock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-06-08T02:10:19Z","updated_at":"2016-09-07T13:09:07Z","closed_at":"2016-09-07T13:09:07Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"A path with `->TaggedMatch` will not behave like vanilla `bidi` if 'swaggerized'.\n\n`path-for` will stop working AND the resource will disappear from the swagger UI.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/75","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/75/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/75/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/75/events","html_url":"https://github.com/juxt/yada/issues/75","id":141755426,"node_id":"MDU6SXNzdWUxNDE3NTU0MjY=","number":75,"title":"Direct memory exhaustion large multipart upload","user":{"login":"mfikes","id":1723464,"node_id":"MDQ6VXNlcjE3MjM0NjQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1723464?v=4","gravatar_id":"","url":"https://api.github.com/users/mfikes","html_url":"https://github.com/mfikes","followers_url":"https://api.github.com/users/mfikes/followers","following_url":"https://api.github.com/users/mfikes/following{/other_user}","gists_url":"https://api.github.com/users/mfikes/gists{/gist_id}","starred_url":"https://api.github.com/users/mfikes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mfikes/subscriptions","organizations_url":"https://api.github.com/users/mfikes/orgs","repos_url":"https://api.github.com/users/mfikes/repos","events_url":"https://api.github.com/users/mfikes/events{/privacy}","received_events_url":"https://api.github.com/users/mfikes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2016-03-18T02:19:30Z","updated_at":"2016-08-13T13:53:55Z","closed_at":"2016-08-13T13:53:55Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"If you do a large multipart upload with your own `Partial` and `PartConsumer` implementations (which could stream to storage, but instead simply discard the uploaded data), then the system will exhaust direct memory within a few minutes.\n\nTo reproduce, first do `lein new foo` to create a blank project and add the following to the `:dependencies` vector in `project.clj`:\n\n```\n[aleph \"0.4.1-beta5\"]\n[bidi \"2.0.1\"]\n[yada \"1.1.2\"]\n```\n\nthen, start a REPL in that project and issue the following forms in the REPL:\n\n```\n(require '[aleph.http :refer [start-server]]\n         '[yada.yada :refer [resource]]\n         '[yada.aleph :refer [listener]]\n         '[yada.request-body :as request-body])\n\n(import (yada.multipart Partial PartConsumer))\n\n(defrecord MyPartial []\n  Partial\n  (continue [this _] (prn (java.util.Date.)) this)\n  (complete [_ state _] state))\n\n(defrecord MyPartConsumer []\n  PartConsumer\n  (consume-part [_ _ _])\n  (start-partial [_ _] (->MyPartial))\n  (part-coercion-matcher [_] {}))\n\n;; Hook in our own part consumer\n(let [original-impl (get-method request-body/process-request-body \"multipart/form-data\")]\n  (defmethod request-body/process-request-body \"multipart/form-data\"\n    [ctx body-stream media-type & args]\n    (let [new-ctx (assoc-in ctx [:options :part-consumer] (->MyPartConsumer))]\n      (apply original-impl new-ctx body-stream media-type args))))\n\n(listener\n  [\"/upload\"\n   (resource\n     {:methods\n      {:post\n       {:consumes \"multipart/form-data\"\n        :response (constantly nil)}}})]\n  {:port 3000})\n```\n\n(Note that the `process-request-body` multimethod is modified in lieu of `:options` setting.)\n\nNow, make a large file:\n\n```\ndd if=/dev/zero of=file.txt count=10240000 bs=1024\n```\n\nand upload it to the server started in the REPL:\n\n```\ncurl -F file=@file.txt http://localhost:3000/upload\n```\n\nTimestamps will be displayed in the REPL as chunks come in:\n\n```\n#inst \"2016-03-18T02:03:40.141-00:00\"\n#inst \"2016-03-18T02:03:40.188-00:00\"\n```\n\nafter a few minutes things will fail. On Linux, the exception will look like the following:\n\n```\n#\n# There is insufficient memory for the Java Runtime Environment to continue.\n# Native memory allocation (mmap) failed to map 3653632 bytes for committing reserved memory.\nJava HotSpot(TM) 64-Bit Server VM warning: INFO: os::commit_memory(0x00000000ff815000, 3653632, 0) failed; error='Cannot allocate memory' (errno=12)\n# An error report file with more information is saved as:\n# /home/vagrant/yada-dm/hs_err_pid3621.log\nException in thread \"Thread-3\" clojure.lang.ExceptionInfo: Subprocess failed {:exit-code 1}\n    at clojure.core$ex_info.invokeStatic(core.clj:4617)\n    at clojure.core$ex_info.invoke(core.clj:4617)\n    at leiningen.core.eval$fn__5625.invokeStatic(eval.clj:271)\n    at leiningen.core.eval$fn__5625.invoke(eval.clj:267)\n    at clojure.lang.MultiFn.invoke(MultiFn.java:233)\n    at leiningen.core.eval$eval_in_project.invokeStatic(eval.clj:373)\n    at leiningen.core.eval$eval_in_project.invoke(eval.clj:363)\n    at leiningen.repl$server$fn__11767.invoke(repl.clj:243)\n    at clojure.lang.AFn.applyToHelper(AFn.java:152)\n    at clojure.lang.AFn.applyTo(AFn.java:144)\n    at clojure.core$apply.invokeStatic(core.clj:646)\n    at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1881)\n    at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1881)\n    at clojure.lang.RestFn.invoke(RestFn.java:425)\n    at clojure.lang.AFn.applyToHelper(AFn.java:156)\n    at clojure.lang.RestFn.applyTo(RestFn.java:132)\n    at clojure.core$apply.invokeStatic(core.clj:650)\n    at clojure.core$bound_fn_STAR_$fn__4671.doInvoke(core.clj:1911)\n    at clojure.lang.RestFn.invoke(RestFn.java:397)\n    at clojure.lang.AFn.run(AFn.java:22)\n    at java.lang.Thread.run(Thread.java:745)\n\nSocketException The transport's socket appears to have lost its connection to the nREPL server\n    clojure.tools.nrepl.transport/bencode/fn--10128/fn--10129 (transport.clj:95)\n    clojure.tools.nrepl.transport/bencode/fn--10128 (transport.clj:95)\n    clojure.tools.nrepl.transport/fn-transport/fn--10100 (transport.clj:42)\n    clojure.core/binding-conveyor-fn/fn--4676 (core.clj:1938)\n    java.util.concurrent.FutureTask.run (FutureTask.java:266)\n    java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1142)\n    java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:617)\n    java.lang.Thread.run (Thread.java:745)\n```\n\nAnd on OS X you will see:\n\n```\nMar 17, 2016 6:46:51 PM clojure.tools.logging$eval420$fn__424 invoke\nWARNING: error in HTTP server\njava.lang.OutOfMemoryError: Direct buffer memory\n    at java.nio.Bits.reserveMemory(Bits.java:693)\n    at java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:123)\n    at java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:311)\n    at io.netty.buffer.PoolArena$DirectArena.newChunk(PoolArena.java:645)\n    at io.netty.buffer.PoolArena.allocateNormal(PoolArena.java:229)\n    at io.netty.buffer.PoolArena.allocate(PoolArena.java:213)\n    at io.netty.buffer.PoolArena.allocate(PoolArena.java:133)\n    at io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:262)\n    at io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:179)\n    at io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:170)\n    at io.netty.buffer.AbstractByteBufAllocator.ioBuffer(AbstractByteBufAllocator.java:131)\n    at io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate(DefaultMaxMessagesRecvByteBufAllocator.java:73)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:111)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:510)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:467)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:381)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:353)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:742)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\n```\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/99","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/99/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/99/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/99/events","html_url":"https://github.com/juxt/yada/issues/99","id":157409282,"node_id":"MDU6SXNzdWUxNTc0MDkyODI=","number":99,"title":"Wrong swagger-ui version hardcoded for the index.html","user":{"login":"Frozenlock","id":1152041,"node_id":"MDQ6VXNlcjExNTIwNDE=","avatar_url":"https://avatars1.githubusercontent.com/u/1152041?v=4","gravatar_id":"","url":"https://api.github.com/users/Frozenlock","html_url":"https://github.com/Frozenlock","followers_url":"https://api.github.com/users/Frozenlock/followers","following_url":"https://api.github.com/users/Frozenlock/following{/other_user}","gists_url":"https://api.github.com/users/Frozenlock/gists{/gist_id}","starred_url":"https://api.github.com/users/Frozenlock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frozenlock/subscriptions","organizations_url":"https://api.github.com/users/Frozenlock/orgs","repos_url":"https://api.github.com/users/Frozenlock/repos","events_url":"https://api.github.com/users/Frozenlock/events{/privacy}","received_events_url":"https://api.github.com/users/Frozenlock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-05-29T22:19:47Z","updated_at":"2016-06-08T17:26:44Z","closed_at":"2016-06-08T17:26:44Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Yada is currently relying on swagger-ui 2.1.4 in `project.clj`, but is using 2.1.3 in the code.\n\n``` clj\n(defn swaggered [routes & [template]]\n  (let [spec (swagger-spec routes (or template {}))]\n    (map->Swaggered\n     {:spec spec\n      :routes routes\n      :swagger-ui (handler (new-classpath-resource \"META-INF/resources/webjars/swagger-ui/2.1.3\"))\n      :spec-handlers\n      (into {}\n            (for [ct [\"application/edn\" \"application/json\" \"text/html\"]]\n              [ct (handler (swagger-spec-resource spec ct))]))})))\n```\n\nhttps://github.com/juxt/yada/blob/9896735fe98a5a339061429c23a2123513486a5e/src/yada/swagger.clj#L225\n\nThis causes a `404 not found` when a request is made to get the `index.html`.\n\nA temporary fix is to add `[org.webjars/swagger-ui \"2.1.3\"]` in your project dependency.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/88","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/88/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/88/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/88/events","html_url":"https://github.com/juxt/yada/issues/88","id":147933976,"node_id":"MDU6SXNzdWUxNDc5MzM5NzY=","number":88,"title":"yada doesn't accept \"application/transit+json; charset=utf-8\"","user":{"login":"Frozenlock","id":1152041,"node_id":"MDQ6VXNlcjExNTIwNDE=","avatar_url":"https://avatars1.githubusercontent.com/u/1152041?v=4","gravatar_id":"","url":"https://api.github.com/users/Frozenlock","html_url":"https://github.com/Frozenlock","followers_url":"https://api.github.com/users/Frozenlock/followers","following_url":"https://api.github.com/users/Frozenlock/following{/other_user}","gists_url":"https://api.github.com/users/Frozenlock/gists{/gist_id}","starred_url":"https://api.github.com/users/Frozenlock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frozenlock/subscriptions","organizations_url":"https://api.github.com/users/Frozenlock/orgs","repos_url":"https://api.github.com/users/Frozenlock/repos","events_url":"https://api.github.com/users/Frozenlock/events{/privacy}","received_events_url":"https://api.github.com/users/Frozenlock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-04-13T03:08:52Z","updated_at":"2016-04-21T15:36:44Z","closed_at":"2016-04-21T15:36:44Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"[cljs-ajax](https://github.com/JulianBirch/cljs-ajax) automatically adds `; charset=utf-8` to the accept header when using the transit format.\n\nThis causes Yada to return a 406 (not acceptable).\n\nA quick read of #56 left me with the impression that Yada is still supposed to return application/transit+json and drop the charset argument.\n\nIs this a bug? Perhaps there's some configuration one needs to add to be able to accept the `application/transit+json; charset=utf-8`?\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/41","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/41/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/41/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/41/events","html_url":"https://github.com/juxt/yada/issues/41","id":118297651,"node_id":"MDU6SXNzdWUxMTgyOTc2NTE=","number":41,"title":"yada/swaggered seems to think this regex is a part of the resource path","user":{"login":"imrekoszo","id":1116295,"node_id":"MDQ6VXNlcjExMTYyOTU=","avatar_url":"https://avatars0.githubusercontent.com/u/1116295?v=4","gravatar_id":"","url":"https://api.github.com/users/imrekoszo","html_url":"https://github.com/imrekoszo","followers_url":"https://api.github.com/users/imrekoszo/followers","following_url":"https://api.github.com/users/imrekoszo/following{/other_user}","gists_url":"https://api.github.com/users/imrekoszo/gists{/gist_id}","starred_url":"https://api.github.com/users/imrekoszo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imrekoszo/subscriptions","organizations_url":"https://api.github.com/users/imrekoszo/orgs","repos_url":"https://api.github.com/users/imrekoszo/repos","events_url":"https://api.github.com/users/imrekoszo/events{/privacy}","received_events_url":"https://api.github.com/users/imrekoszo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-11-22T23:21:16Z","updated_at":"2016-04-06T16:50:19Z","closed_at":"2016-04-06T16:50:19Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I have a resource where an email address is part of the path like \"/foo/by-email/aaaa@example.com\"\n\nA bidi route accepting this with `:email` as a route param would look like:\n\n``` clojure\n[[\"/foo/\" [#\".+\\@.+\\..+\" :email]] :foo]\n```\n\nNote the regex format for the `:email` param which is required by bidi to parse the email as a route param. This is explained in https://github.com/juxt/bidi/issues/98#issuecomment-158816665\n\nWhen I created a `yada/swaggered` api on top of such a routing I got an error saying Pattern does not implement the `encode` method of `yada.swagger/SwaggerPath` which makes me think yada/swaggered thinks the regex in the above example is a separate path element from `:email`. For now I fixed it in my project with:\n\n``` clojure\n(extend-protocol yada.swagger/SwaggerPath\n  java.util.regex.Pattern (encode [_] nil))\n```\n\nBut I doubt this is the right thing to do in the long term.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/68","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/68/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/68/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/68/events","html_url":"https://github.com/juxt/yada/issues/68","id":137359305,"node_id":"MDU6SXNzdWUxMzczNTkzMDU=","number":68,"title":"Typo in project.clj","user":{"login":"Malabarba","id":453029,"node_id":"MDQ6VXNlcjQ1MzAyOQ==","avatar_url":"https://avatars3.githubusercontent.com/u/453029?v=4","gravatar_id":"","url":"https://api.github.com/users/Malabarba","html_url":"https://github.com/Malabarba","followers_url":"https://api.github.com/users/Malabarba/followers","following_url":"https://api.github.com/users/Malabarba/following{/other_user}","gists_url":"https://api.github.com/users/Malabarba/gists{/gist_id}","starred_url":"https://api.github.com/users/Malabarba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Malabarba/subscriptions","organizations_url":"https://api.github.com/users/Malabarba/orgs","repos_url":"https://api.github.com/users/Malabarba/repos","events_url":"https://api.github.com/users/Malabarba/events{/privacy}","received_events_url":"https://api.github.com/users/Malabarba/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-02-29T20:14:24Z","updated_at":"2016-03-07T12:04:51Z","closed_at":"2016-03-07T12:04:51Z","author_association":"NONE","active_lock_reason":null,"body":"On this line: https://github.com/juxt/yada/blob/master/project.clj#L23\nIt looks like :exclusions is miss-typed.\n\nCheers\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/26","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/26/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/26/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/26/events","html_url":"https://github.com/juxt/yada/issues/26","id":114596577,"node_id":"MDU6SXNzdWUxMTQ1OTY1Nzc=","number":26,"title":"Return body from PUT or POST","user":{"login":"stijnopheide","id":1864762,"node_id":"MDQ6VXNlcjE4NjQ3NjI=","avatar_url":"https://avatars0.githubusercontent.com/u/1864762?v=4","gravatar_id":"","url":"https://api.github.com/users/stijnopheide","html_url":"https://github.com/stijnopheide","followers_url":"https://api.github.com/users/stijnopheide/followers","following_url":"https://api.github.com/users/stijnopheide/following{/other_user}","gists_url":"https://api.github.com/users/stijnopheide/gists{/gist_id}","starred_url":"https://api.github.com/users/stijnopheide/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stijnopheide/subscriptions","organizations_url":"https://api.github.com/users/stijnopheide/orgs","repos_url":"https://api.github.com/users/stijnopheide/repos","events_url":"https://api.github.com/users/stijnopheide/events{/privacy}","received_events_url":"https://api.github.com/users/stijnopheide/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-11-02T13:45:42Z","updated_at":"2016-03-10T06:49:06Z","closed_at":"2016-03-08T12:02:52Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Currently it's impossible to return a body that contains e.g. a map of data from a PUT or POST method.\n\n```\nSEVERE: error sending body of type  clojure.lang.PersistentArrayMap\njava.lang.IllegalArgumentException: Don't know how to convert class clojure.lang.PersistentArrayMap into (stream-of io.netty.buffer.ByteBuf)\n    at byte_streams$convert.invoke(byte_streams.clj:187)\n    at aleph.netty$to_byte_buf_stream.invoke(netty.clj:170)\n    at aleph.http.core$send_streaming_body.invoke(core.clj:277)\n    at aleph.http.core$eval24414$send_message__24421$fn__24422.invoke(core.clj:353)\n    at aleph.http.core$eval24414$send_message__24421.invoke(core.clj:352)\n    at aleph.http.server$eval24451$send_response__24456$f__24005__auto____24460.invoke(server.clj:124)\n    at aleph.http.server$eval24451$send_response__24456$fn__24463.invoke(server.clj:117)\n    at clojure.lang.AFn.run(AFn.java:22)\n    at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:339)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:356)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:742)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\nThe reason is that there is no body conversion in PUT/POST as it is done in GetMethod/request.\n\nIs this something yada intends to support? The HTTP spec allows for either referencing the newly created/updated entity or actually specifying it.\n\nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\nSection 10.2.1 200 OK\n_POST an entity describing or containing the result of the action;_\n\nThere's no mention about PUT 200 or 201 other than _The newly created resource can be referenced by the URI(s) returned in the entity of the response, with the most specific URI for the resource given by a Location header field. The response SHOULD include an entity containing a list of resource characteristics and location(s) from which the user or user agent can choose the one most appropriate._\n\nAs this impacts all methods that can return a body, I'm not sure how you'd like to pull that out of the GetMethod.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/aleph-io/aleph/issues/231","repository_url":"https://api.github.com/repos/aleph-io/aleph","labels_url":"https://api.github.com/repos/aleph-io/aleph/issues/231/labels{/name}","comments_url":"https://api.github.com/repos/aleph-io/aleph/issues/231/comments","events_url":"https://api.github.com/repos/aleph-io/aleph/issues/231/events","html_url":"https://github.com/aleph-io/aleph/issues/231","id":143975086,"node_id":"MDU6SXNzdWUxNDM5NzUwODY=","number":231,"title":"Livelock when consuming from wrapped body stream","user":{"login":"mfikes","id":1723464,"node_id":"MDQ6VXNlcjE3MjM0NjQ=","avatar_url":"https://avatars1.githubusercontent.com/u/1723464?v=4","gravatar_id":"","url":"https://api.github.com/users/mfikes","html_url":"https://github.com/mfikes","followers_url":"https://api.github.com/users/mfikes/followers","following_url":"https://api.github.com/users/mfikes/following{/other_user}","gists_url":"https://api.github.com/users/mfikes/gists{/gist_id}","starred_url":"https://api.github.com/users/mfikes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mfikes/subscriptions","organizations_url":"https://api.github.com/users/mfikes/orgs","repos_url":"https://api.github.com/users/mfikes/repos","events_url":"https://api.github.com/users/mfikes/events{/privacy}","received_events_url":"https://api.github.com/users/mfikes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-03-28T13:14:37Z","updated_at":"2016-03-28T16:59:33Z","closed_at":"2016-03-28T16:59:33Z","author_association":"NONE","active_lock_reason":null,"body":"I had previously mentioned a livelock issue in https://github.com/ztellman/aleph/issues/230#issuecomment-201917017\n\nI'm unable to produce a minimal repro that doesn't involve any downstream code, but I'll share the details that I have found, in hopes that it is useful.\n\nI have code (which is using Bidi/Yada with Aleph, with `raw-stream?` set to `true`), which fairly reliably exhibits a livelock (where data being sent via curl stops being sent, CPU usage drops to zero, _etc._). This is all on OS X.\n\nThis occurs with the current Aleph betas but does not occur with `0.4.0`.\n\nWhen the livelock occurs (which is usually within minutes of starting a large HTTP multipart POST, but can also occur with small POSTs, if I try enough of them), it always involves the thread reading from the `InputStream` being stuck with this stack trace (with the bottom of the stack elided—it involves Cheshire consuming from the steam):\n\n```\nName: Thread-42610\nState: WAITING on java.util.concurrent.CountDownLatch$Sync@1341473\nTotal blocked: 0  Total waited: 17\n\nStack trace: \nsun.misc.Unsafe.park(Native Method)\njava.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\njava.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)\njava.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)\njava.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)\njava.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)\nmanifold.deferred.Deferred.deref(deferred.clj:439)\nclojure.core$deref.invokeStatic(core.clj:2228)\nclojure.core$deref.invoke(core.clj:2214)\nbyte_streams.pushback_stream.SynchronizedPushbackByteStream.read(pushback_stream.clj:113)\nbyte_streams.InputStream.read(InputStream.java:50)\nsun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)\nsun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)\nsun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)\n   - locked java.io.InputStreamReader@14903a84\njava.io.InputStreamReader.read(InputStreamReader.java:184)\njava.io.BufferedReader.fill(BufferedReader.java:161)\njava.io.BufferedReader.read1(BufferedReader.java:212)\njava.io.BufferedReader.read(BufferedReader.java:286)\n   - locked java.io.InputStreamReader@14903a84\n```\n\nMy code essentially takes the `body-stream` and converts it to an `InputStream` \n\n```\n(bs/to-input-stream body-stream) \n```\n\nThis `InputStream` is then consumed in my code, (it is a stream of JSON, parsed with Cheshire's `parsed-seq`). This is done in a separate thread, with my code returning a `promise` immediately to Yada's handler with the `promise` being delivered by the parsing thread when the stream has been consumed.\n\nWhat is crucial to this is that `body-stream` is not `(:body req)`, but involves a little extra wrapping being done in Yada here (including @malcolmsparks as he may be interested in this):\n\nhttps://github.com/juxt/yada/blob/5e2b160027d33979571b5211363a26da0b6bbe43/src/yada/interceptors.clj#L182\n\nSo, my code ends up consuming from an input stream that effectively is built using code like\n\n```\n(bs/to-input-stream (stream/map bs/to-byte-array (bs/to-byte-buffers (:body req))))\n```\n\nas opposed to the simpler\n\n```\n(bs/to-input-stream (:body req)) \n```\n\nIf I revise the Yada code to eliminate the extra conversions, my issue reliably goes away (never occurs), and with the wrappings the issue reliably occurs.\n\n(As an aside, this is issue no longer affects me, as I'm now using a mechanism in Yada that allows me to specify a consumer function which then operates directly on `(:body req)`, but logging this issue nevertheless, because I'm fairly certain a bug is lurking in here that would benefit being squashed.)\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/aleph-io/aleph/issues/224","repository_url":"https://api.github.com/repos/aleph-io/aleph","labels_url":"https://api.github.com/repos/aleph-io/aleph/issues/224/labels{/name}","comments_url":"https://api.github.com/repos/aleph-io/aleph/issues/224/comments","events_url":"https://api.github.com/repos/aleph-io/aleph/issues/224/events","html_url":"https://github.com/aleph-io/aleph/issues/224","id":141811650,"node_id":"MDU6SXNzdWUxNDE4MTE2NTA=","number":224,"title":"java.lang.OutOfMemoryError: Direct buffer memory errors","user":{"login":"malcolmsparks","id":163131,"node_id":"MDQ6VXNlcjE2MzEzMQ==","avatar_url":"https://avatars2.githubusercontent.com/u/163131?v=4","gravatar_id":"","url":"https://api.github.com/users/malcolmsparks","html_url":"https://github.com/malcolmsparks","followers_url":"https://api.github.com/users/malcolmsparks/followers","following_url":"https://api.github.com/users/malcolmsparks/following{/other_user}","gists_url":"https://api.github.com/users/malcolmsparks/gists{/gist_id}","starred_url":"https://api.github.com/users/malcolmsparks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malcolmsparks/subscriptions","organizations_url":"https://api.github.com/users/malcolmsparks/orgs","repos_url":"https://api.github.com/users/malcolmsparks/repos","events_url":"https://api.github.com/users/malcolmsparks/events{/privacy}","received_events_url":"https://api.github.com/users/malcolmsparks/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-03-18T09:12:32Z","updated_at":"2016-03-26T18:56:38Z","closed_at":"2016-03-26T18:56:38Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Related to https://github.com/juxt/yada/issues/75\n\nwe're seeing \n\n```\njava.lang.OutOfMemoryError: Direct buffer memory\n```\n\nand \n\n```\n#\n# There is insufficient memory for the Java Runtime Environment to continue.\n# Native memory allocation (mmap) failed to map 3653632 bytes for committing reserved memory.\nJava HotSpot(TM) 64-Bit Server VM warning: INFO: os::commit_memory(0x00000000ff815000, 3653632, 0) failed; error='Cannot allocate memory' (errno=12)\n# An error report file with more information is saved as:\n```\n\nwhen streaming request bodies via manifold from aleph.\n\nI'm using `manifold.stream/reduce` over the incoming stream (with raw-streams?set to true). Each buffer is subject to a `byte-streams/to-byte-buffer` which I thought decremented the reference count.\n\nVersions are:\n\n``` clojure\n[aleph \"0.4.1-beta5\"]\n[byte-streams \"0.2.1\"]\n[manifold \"0.1.2\"]\n```\n\nI've been printing out the refCnt field of the ByteBufs from the stream and they appear quite high (3-6) but I'm not sure what is 'normal' here. Could this be a bug in Netty?\n\nAlso, JVM options are:\n\n```\n:jvm-opts [\"-Xms1g\" \"-Xmx1g\" \"-server\" \"-Dio.netty.leakDetectionLevel=advanced\"]\n```\n\nBut I'm not seeing any leak detection messages from Netty's leak detector.\n\nI'm a bit stumped. My current strategy is to replace netty+aleph with xnio+undertow to prove that the issue is not in manifold, but this might be misguided.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/64","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/64/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/64/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/64/events","html_url":"https://github.com/juxt/yada/issues/64","id":135624546,"node_id":"MDU6SXNzdWUxMzU2MjQ1NDY=","number":64,"title":"Testing function `response-for` doesn't accept map responses","user":{"login":"Frozenlock","id":1152041,"node_id":"MDQ6VXNlcjExNTIwNDE=","avatar_url":"https://avatars1.githubusercontent.com/u/1152041?v=4","gravatar_id":"","url":"https://api.github.com/users/Frozenlock","html_url":"https://github.com/Frozenlock","followers_url":"https://api.github.com/users/Frozenlock/followers","following_url":"https://api.github.com/users/Frozenlock/following{/other_user}","gists_url":"https://api.github.com/users/Frozenlock/gists{/gist_id}","starred_url":"https://api.github.com/users/Frozenlock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Frozenlock/subscriptions","organizations_url":"https://api.github.com/users/Frozenlock/orgs","repos_url":"https://api.github.com/users/Frozenlock/repos","events_url":"https://api.github.com/users/Frozenlock/events{/privacy}","received_events_url":"https://api.github.com/users/Frozenlock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-02-23T03:55:31Z","updated_at":"2016-02-24T15:16:02Z","closed_at":"2016-02-23T05:50:24Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The testing function `response-for` (as described in the [manual](http://yada.juxt.pro/manual/235_testing.md)) chokes on maps:\n\n```\nIllegalArgumentException Don't know how to convert class clojure.lang.PersistentArrayMap into class java.lang.String  byte-streams/convert (byte_streams.clj:196)\n```\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/53","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/53/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/53/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/53/events","html_url":"https://github.com/juxt/yada/issues/53","id":131088738,"node_id":"MDU6SXNzdWUxMzEwODg3Mzg=","number":53,"title":"Swagger bidi match problem","user":{"login":"timur-han","id":4758965,"node_id":"MDQ6VXNlcjQ3NTg5NjU=","avatar_url":"https://avatars0.githubusercontent.com/u/4758965?v=4","gravatar_id":"","url":"https://api.github.com/users/timur-han","html_url":"https://github.com/timur-han","followers_url":"https://api.github.com/users/timur-han/followers","following_url":"https://api.github.com/users/timur-han/following{/other_user}","gists_url":"https://api.github.com/users/timur-han/gists{/gist_id}","starred_url":"https://api.github.com/users/timur-han/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/timur-han/subscriptions","organizations_url":"https://api.github.com/users/timur-han/orgs","repos_url":"https://api.github.com/users/timur-han/repos","events_url":"https://api.github.com/users/timur-han/events{/privacy}","received_events_url":"https://api.github.com/users/timur-han/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-03T17:03:41Z","updated_at":"2016-02-03T20:48:30Z","closed_at":"2016-02-03T20:48:30Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, \n\nIs this a bug or am I doing something wrong?\n\n(def route [\"\" {\"/api\" (y/swaggered\n                        {:info {:title \"test\"\n                                :version \"0.1\"\n                                :description \"Bug\"}\n                         :basePath \"/api\"}\n                        [\"/v1\" (yada.yada/yada \"a\")])}])\n\n(bidi.bidi/match-route route \"/api\") -> nil\n\n(bidi.bidi/match-route route \"/api/\") -> {:handler #object[yada.swagger.Swaggered$reify__41225 0x35792c1 \"yada.swagger.Swaggered$reify__41225@35792c1\"]}\n\nRegards,\n\nTimur\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/56","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/56/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/56/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/56/events","html_url":"https://github.com/juxt/yada/issues/56","id":131963699,"node_id":"MDU6SXNzdWUxMzE5NjM2OTk=","number":56,"title":"Produces doesn't result in charset in content type","user":{"login":"mdaley","id":856081,"node_id":"MDQ6VXNlcjg1NjA4MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/856081?v=4","gravatar_id":"","url":"https://api.github.com/users/mdaley","html_url":"https://github.com/mdaley","followers_url":"https://api.github.com/users/mdaley/followers","following_url":"https://api.github.com/users/mdaley/following{/other_user}","gists_url":"https://api.github.com/users/mdaley/gists{/gist_id}","starred_url":"https://api.github.com/users/mdaley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdaley/subscriptions","organizations_url":"https://api.github.com/users/mdaley/orgs","repos_url":"https://api.github.com/users/mdaley/repos","events_url":"https://api.github.com/users/mdaley/events{/privacy}","received_events_url":"https://api.github.com/users/mdaley/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-02-07T12:32:09Z","updated_at":"2016-04-15T07:44:34Z","closed_at":"2016-04-15T07:44:34Z","author_association":"NONE","active_lock_reason":null,"body":"Hello, I can't say I'm certain about this, but I'm wondering why, when I specify a charset in produces for a resource, the response doesn't include the charset in the content type of the response?  My example is this (probably not the best place for it, but it shows the problem):\n\nI changed the hello-world example to have a new resource:\n\n``` clojure\n...\n(defn say-hello-json [ctx]\n  {:say \"hello\" :p (get-in ctx [:parameters :query :p])})\n....\n(defn hello-json []\n  (yada\n   (resource\n    {:methods\n     {:get\n      {:parameters {:query {:p String}}\n       :produces [{:media-type \"application/json\"\n                   :charset \"utf-8\"}]\n       :response say-hello-json}}}))) \n...\n(routes\n   ...\n   [\"hello-json\" (tag (hello-json) ::hello-json)]\n   ...\n)\n```\n\nand I created a new test in `helloworld_test.clj` like this:\n\n``` clojure\n(deftest json-test\n  (let [resource (hello/hello-json)\n        response @(resource (request :get \"/?p=bob\"))\n        headers (:headers response)]\n    (is (= 200 (:status response)))\n    (is (= (to-string (:body response)) \"{\\\"say\\\":\\\"hello\\\",\\\"p\\\":\\\"bob\\\"}\"))\n    (is (= (get-in response [:headers \"content-type\"]) \"application/json;charset=utf-8\"))))\n```\n\nMy thinking is that, as I specified the resource to have `:produces` with `:charset \"utf-8`, the response should have a content-type of `application/json;charset-utf-8`.  However the response only has the content-type `application/json`.\n\nAnd my question is: is this a bug?  Or not?\n\nAlso, another point, I wonder why the actual body has a trailing `\\n`?\n\nIf you look at my branch https://github.com/mdaley/yada you'll be able to see my check-in.\n\nIf this is a problem, if you give me some pointers, I'd be more than willing to be involved in fixing it.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/9","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/9/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/9/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/9/events","html_url":"https://github.com/juxt/yada/issues/9","id":77715330,"node_id":"MDU6SXNzdWU3NzcxNTMzMA==","number":9,"title":"Problems with CORS","user":{"login":"danielytics","id":2631410,"node_id":"MDQ6VXNlcjI2MzE0MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/2631410?v=4","gravatar_id":"","url":"https://api.github.com/users/danielytics","html_url":"https://github.com/danielytics","followers_url":"https://api.github.com/users/danielytics/followers","following_url":"https://api.github.com/users/danielytics/following{/other_user}","gists_url":"https://api.github.com/users/danielytics/gists{/gist_id}","starred_url":"https://api.github.com/users/danielytics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielytics/subscriptions","organizations_url":"https://api.github.com/users/danielytics/orgs","repos_url":"https://api.github.com/users/danielytics/repos","events_url":"https://api.github.com/users/danielytics/events{/privacy}","received_events_url":"https://api.github.com/users/danielytics/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-05-18T16:19:29Z","updated_at":"2016-02-05T09:48:22Z","closed_at":"2016-02-04T21:58:55Z","author_association":"NONE","active_lock_reason":null,"body":"CORS seems to have a few issues right now. Going by this comment in the source[1], I understand this is still a work in progress, but here are the two issues I've encountered so far anyway in case its helpful:\n1. I get this error when doing a cross-origin request from Chrome: `Request header field Content-Type is not allowed by Access-Control-Allow-Headers.` I was using `cljs-ajax` to perform the requests and it automatically sends `Content-Type`, I believe. Maybe the headers list used in https://github.com/juxt/yada/blob/master/src/yada/core.clj#L129 should be pulled from the context, if provided?\n2. Preflight requests trigger the authorization function (which then fails for me because the requests do not contain the credentials my auth function looks for). Perhaps `OPTION` requests should bypass the `:authorization` step?\n\n[1] `CORS support: build this in, make allow-origin first-class, which headers should be allowed should be a hook (with default)`\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/juxt/yada/issues/31","repository_url":"https://api.github.com/repos/juxt/yada","labels_url":"https://api.github.com/repos/juxt/yada/issues/31/labels{/name}","comments_url":"https://api.github.com/repos/juxt/yada/issues/31/comments","events_url":"https://api.github.com/repos/juxt/yada/issues/31/events","html_url":"https://github.com/juxt/yada/issues/31","id":115558538,"node_id":"MDU6SXNzdWUxMTU1NTg1Mzg=","number":31,"title":"Confused about compositional relationships & protocols","user":{"login":"kovasb","id":184241,"node_id":"MDQ6VXNlcjE4NDI0MQ==","avatar_url":"https://avatars0.githubusercontent.com/u/184241?v=4","gravatar_id":"","url":"https://api.github.com/users/kovasb","html_url":"https://github.com/kovasb","followers_url":"https://api.github.com/users/kovasb/followers","following_url":"https://api.github.com/users/kovasb/following{/other_user}","gists_url":"https://api.github.com/users/kovasb/gists{/gist_id}","starred_url":"https://api.github.com/users/kovasb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kovasb/subscriptions","organizations_url":"https://api.github.com/users/kovasb/orgs","repos_url":"https://api.github.com/users/kovasb/repos","events_url":"https://api.github.com/users/kovasb/events{/privacy}","received_events_url":"https://api.github.com/users/kovasb/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-11-06T18:13:14Z","updated_at":"2016-02-04T21:54:46Z","closed_at":"2016-02-04T21:54:46Z","author_association":"NONE","active_lock_reason":null,"body":"Very cool project!\n\nThis is a documentation issue. I've spent about a day reading all the docs, source and example code. I'm still pretty confused about the fundamentals. \n\nThe main issue is that there are a lot of protocols, and multiple layers of abstraction. Bidi, Yada, and their Modular companions. There are several things that seem to abstract Ring for example. There are multiple things that get coerced into other things. Some docs explain what can go directly into what would be helpful. \n\nSimple example of confusion:\n\nI see RouteProvider used a lot. I thought I could just drop something implementing RouteProvider into a bidi route tree. Doesn't seem to work. \n\nI'm also pretty confused about all the protocols implemented by Handler, versus things like WebRequest and the various flavors of ring wrapping. \n\nIn general the execution model is unclear (when all these protocols would be invoked during a) creating the master ring handler, and b) during request processing. \n","performed_via_github_app":null,"score":1.0}]}
0

