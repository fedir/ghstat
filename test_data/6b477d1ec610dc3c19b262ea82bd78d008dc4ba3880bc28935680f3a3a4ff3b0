HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:10:23 GMT
Link: <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2FSergioBenitez%2Frocket+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2FSergioBenitez%2Frocket+type%3Aissue+state%3Aclosed&page=12>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: D297:B55F:1E3F863:22D3F40:5FB01D8E
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 29
X-Ratelimit-Reset: 1605377483
X-Ratelimit-Used: 1
X-Xss-Protection: 1; mode=block

1939f
{"total_count":344,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/rust-analyzer/rust-analyzer/issues/6481","repository_url":"https://api.github.com/repos/rust-analyzer/rust-analyzer","labels_url":"https://api.github.com/repos/rust-analyzer/rust-analyzer/issues/6481/labels{/name}","comments_url":"https://api.github.com/repos/rust-analyzer/rust-analyzer/issues/6481/comments","events_url":"https://api.github.com/repos/rust-analyzer/rust-analyzer/issues/6481/events","html_url":"https://github.com/rust-analyzer/rust-analyzer/issues/6481","id":737867079,"node_id":"MDU6SXNzdWU3Mzc4NjcwNzk=","number":6481,"title":"unresolved import for package in a git subfolder","user":{"login":"imerkle","id":19769364,"node_id":"MDQ6VXNlcjE5NzY5MzY0","avatar_url":"https://avatars2.githubusercontent.com/u/19769364?v=4","gravatar_id":"","url":"https://api.github.com/users/imerkle","html_url":"https://github.com/imerkle","followers_url":"https://api.github.com/users/imerkle/followers","following_url":"https://api.github.com/users/imerkle/following{/other_user}","gists_url":"https://api.github.com/users/imerkle/gists{/gist_id}","starred_url":"https://api.github.com/users/imerkle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/imerkle/subscriptions","organizations_url":"https://api.github.com/users/imerkle/orgs","repos_url":"https://api.github.com/users/imerkle/repos","events_url":"https://api.github.com/users/imerkle/events{/privacy}","received_events_url":"https://api.github.com/users/imerkle/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-11-06T15:55:30Z","updated_at":"2020-11-06T15:57:20Z","closed_at":"2020-11-06T15:57:20Z","author_association":"NONE","active_lock_reason":null,"body":"main.rs\r\n\r\n`use rocket_contrib::json::Json;` //unresolved import\r\n\r\ncargo.toml\r\n\r\n`rocket_contrib = {git=\"https://github.com/SergioBenitez/Rocket/\"}`\r\n\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1460","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1460/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1460/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1460/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/1460","id":730714743,"node_id":"MDU6SXNzdWU3MzA3MTQ3NDM=","number":1460,"title":"rocket::error::Error doesn't impl std::error::Error","user":{"login":"krojew","id":1268573,"node_id":"MDQ6VXNlcjEyNjg1NzM=","avatar_url":"https://avatars2.githubusercontent.com/u/1268573?v=4","gravatar_id":"","url":"https://api.github.com/users/krojew","html_url":"https://github.com/krojew","followers_url":"https://api.github.com/users/krojew/followers","following_url":"https://api.github.com/users/krojew/following{/other_user}","gists_url":"https://api.github.com/users/krojew/gists{/gist_id}","starred_url":"https://api.github.com/users/krojew/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/krojew/subscriptions","organizations_url":"https://api.github.com/users/krojew/orgs","repos_url":"https://api.github.com/users/krojew/repos","events_url":"https://api.github.com/users/krojew/events{/privacy}","received_events_url":"https://api.github.com/users/krojew/received_events","type":"User","site_admin":false},"labels":[{"id":758541123,"node_id":"MDU6TGFiZWw3NTg1NDExMjM=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/deficiency","name":"deficiency","color":"fc2929","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-10-27T18:39:38Z","updated_at":"2020-10-27T23:12:10Z","closed_at":"2020-10-27T23:12:10Z","author_association":"NONE","active_lock_reason":null,"body":"The latest master of rocket does not impl std::error::Error for rocket::error::Error, which breaks code which assumes this is the case, as it has been before. The change happened in https://github.com/SergioBenitez/Rocket/commit/1fb061496d0234f84495723e6c95590064778785#diff-048cda3b92569433792f51aafda255e1e6cc0e89e27401c5505bcb31c5d652e9.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1469","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1469/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1469/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1469/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/1469","id":737525118,"node_id":"MDU6SXNzdWU3Mzc1MjUxMTg=","number":1469,"title":"Rocket 0.5.0-dev deadlocks on futex when compiled with x86_64-unknown-linux-musl target right after binding port","user":{"login":"yasammez","id":11943709,"node_id":"MDQ6VXNlcjExOTQzNzA5","avatar_url":"https://avatars1.githubusercontent.com/u/11943709?v=4","gravatar_id":"","url":"https://api.github.com/users/yasammez","html_url":"https://github.com/yasammez","followers_url":"https://api.github.com/users/yasammez/followers","following_url":"https://api.github.com/users/yasammez/following{/other_user}","gists_url":"https://api.github.com/users/yasammez/gists{/gist_id}","starred_url":"https://api.github.com/users/yasammez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yasammez/subscriptions","organizations_url":"https://api.github.com/users/yasammez/orgs","repos_url":"https://api.github.com/users/yasammez/repos","events_url":"https://api.github.com/users/yasammez/events{/privacy}","received_events_url":"https://api.github.com/users/yasammez/received_events","type":"User","site_admin":false},"labels":[{"id":343542073,"node_id":"MDU6TGFiZWwzNDM1NDIwNzM=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/invalid","name":"invalid","color":"e6e6e6","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-11-06T07:01:18Z","updated_at":"2020-11-09T11:52:24Z","closed_at":"2020-11-09T06:12:21Z","author_association":"NONE","active_lock_reason":null,"body":"rustc --version\r\n```\r\nrustc 1.47.0 (18bv6b4f0 2020-10-07)\r\n```\r\n\r\nrocket version from Cargo.lock\r\n```\r\nname = \"rocket\"\r\nversion = \"0.5.0-dev\"\r\nsource = \"git+https://github.com/SergioBenitez/Rocket#2f98299272a2a196a3d053918ebd542e03abfc70\"\r\n```\r\n\r\nMinimal example\r\n\r\n**Cargo.toml**\r\n```\r\n[package]\r\nname = \"minimal\"\r\nversion = \"0.1.0\"\r\nauthors = [\"Liv Fischer\"]\r\nedition = \"2018\"\r\n\r\n[dependencies]\r\nrocket = { git = \"https://github.com/SergioBenitez/Rocket\" }\r\n```\r\n\r\n**main.rs**\r\n```\r\n#[macro_use] extern crate rocket;\r\n\r\n#[get(\"/health\")]\r\nfn health() -> &'static str {\r\n  \"Up\"\r\n}\r\n\r\n#1347 fn rocket() -> rocket::Rocket {\r\n  rocket::ignite()\r\n    .mount(\"/\", routes![health])\r\n}\r\n```\r\n\r\nCompiling and running this on x86_64-pc-windows-gnu in cygwin works fine. But compiling with `cargo build --target x86_64-unknown-linux-musl --release` (debug build seems fine) hangs indefinitely.\r\n\r\n**Expected behaviour**\r\n```\r\nConfigured for debug.\r\n    => address: 127.0.0.1\r\n    => port: 8000\r\n    => workers: 16\r\n    => log level: normal\r\n    => secret key: [zero]\r\n    => limits: forms = 32KiB\r\n    => cli colors: true\r\n    => keep-alive: 5s\r\n    => tls: disabled\r\nMounting /:\r\n    => GET /health (health)\r\n```\r\n\r\n**Actual behaviour**\r\n\r\n```\r\n```\r\n\r\n**strace output (truncated)**\r\n```\r\nepoll_ctl(3, EPOLL_CTL_ADD, 6, {EPOLLIN|EPOLLPRI|EPOLLOUT|EPOLLET, {u32=0, u64=0}}) = 0\r\nbrk(0x564de1356000)                     = 0x564de1356000\r\nsocketpair(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0, [7, 8]) = 0\r\nbrk(0x564de1357000)                     = 0x564de1357000\r\nrt_sigaction(SIGINT, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\nrt_sigaction(SIGINT, {sa_handler=0x564de08a8b10, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO|SA_NOCLDSTOP, sa_restorer=0x564de08f5716}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\nfcntl(7, F_DUPFD_CLOEXEC, 0)            = 9\r\nfcntl(9, F_SETFD, FD_CLOEXEC)           = 0\r\nepoll_ctl(3, EPOLL_CTL_ADD, 9, {EPOLLIN|EPOLLPRI|EPOLLOUT|EPOLLET, {u32=1, u64=1}}) = 0\r\ngetsockname(6, {sa_family=AF_INET, sin_port=htons(8000), sin_addr=inet_addr(\"127.0.0.1\")}, [128->16]) = 0\r\nfutex(0x7ffe331e9284, FUTEX_WAIT_PRIVATE, 2, NULL\r\n```\r\nNote that this is in fact the end of the strace output, it cuts off just in the middle of the `futex` syscall.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1468","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1468/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1468/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1468/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/1468","id":737524740,"node_id":"MDU6SXNzdWU3Mzc1MjQ3NDA=","number":1468,"title":"Rocket 0.5 deadlocks on startup with x86_64-unknown-linux-musl target","user":{"login":"yasammez","id":11943709,"node_id":"MDQ6VXNlcjExOTQzNzA5","avatar_url":"https://avatars1.githubusercontent.com/u/11943709?v=4","gravatar_id":"","url":"https://api.github.com/users/yasammez","html_url":"https://github.com/yasammez","followers_url":"https://api.github.com/users/yasammez/followers","following_url":"https://api.github.com/users/yasammez/following{/other_user}","gists_url":"https://api.github.com/users/yasammez/gists{/gist_id}","starred_url":"https://api.github.com/users/yasammez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yasammez/subscriptions","organizations_url":"https://api.github.com/users/yasammez/orgs","repos_url":"https://api.github.com/users/yasammez/repos","events_url":"https://api.github.com/users/yasammez/events{/privacy}","received_events_url":"https://api.github.com/users/yasammez/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-11-06T07:00:27Z","updated_at":"2020-11-06T07:08:58Z","closed_at":"2020-11-06T07:08:58Z","author_association":"NONE","active_lock_reason":null,"body":"rustc --version\r\n```\r\nrustc 1.47.0 (18bv6b4f0 2020-10-07)\r\n```\r\n\r\nrocket version from Cargo.lock\r\n```\r\nname = \"rocket\"\r\nversion = \"0.5.0-dev\"\r\nsource = \"git+https://github.com/SergioBenitez/Rocket#2f98299272a2a196a3d053918ebd542e03abfc70\"\r\n```\r\n\r\nMinimal example\r\n\r\n**Cargo.toml**\r\n```\r\n[package]\r\nname = \"minimal\"\r\nversion = \"0.1.0\"\r\nauthors = [\"Liv Fischer\"]\r\nedition = \"2018\"\r\n\r\n[dependencies]\r\nrocket = { git = \"https://github.com/SergioBenitez/Rocket\" }\r\n```\r\n\r\n**main.rs**\r\n```\r\n#[macro_use] extern crate rocket;\r\n\r\n#[get(\"/health\")]\r\nfn health() -> &'static str {\r\n  \"Up\"\r\n}\r\n\r\n#1347 fn rocket() -> rocket::Rocket {\r\n  rocket::ignite()\r\n    .mount(\"/\", routes![health])\r\n}\r\n```\r\n\r\nCompiling and running this on x86_64-pc-windows-gnu in cygwin works fine. But compiling with `cargo build --target x86_64-unknown-linux-musl` (debug and release configuration) hangs indefinitely.\r\n\r\n**Expected behaviour**\r\n```\r\nConfigured for debug.\r\n    => address: 127.0.0.1\r\n    => port: 8000\r\n    => workers: 16\r\n    => log level: normal\r\n    => secret key: [zero]\r\n    => limits: forms = 32KiB\r\n    => cli colors: true\r\n    => keep-alive: 5s\r\n    => tls: disabled\r\nMounting /:\r\n    => GET /health (health)\r\n```\r\n\r\n**Actual behaviour**\r\n\r\n```\r\n```\r\n\r\n**strace output (truncated)**\r\n```\r\nepoll_ctl(3, EPOLL_CTL_ADD, 6, {EPOLLIN|EPOLLPRI|EPOLLOUT|EPOLLET, {u32=0, u64=0}}) = 0\r\nbrk(0x564de1356000)                     = 0x564de1356000\r\nsocketpair(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0, [7, 8]) = 0\r\nbrk(0x564de1357000)                     = 0x564de1357000\r\nrt_sigaction(SIGINT, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\nrt_sigaction(SIGINT, {sa_handler=0x564de08a8b10, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO|SA_NOCLDSTOP, sa_restorer=0x564de08f5716}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\nfcntl(7, F_DUPFD_CLOEXEC, 0)            = 9\r\nfcntl(9, F_SETFD, FD_CLOEXEC)           = 0\r\nepoll_ctl(3, EPOLL_CTL_ADD, 9, {EPOLLIN|EPOLLPRI|EPOLLOUT|EPOLLET, {u32=1, u64=1}}) = 0\r\ngetsockname(6, {sa_family=AF_INET, sin_port=htons(8000), sin_addr=inet_addr(\"127.0.0.1\")}, [128->16]) = 0\r\nfutex(0x7ffe331e9284, FUTEX_WAIT_PRIVATE, 2, NULL\r\n```\r\nNote that this is in fact the end of the strace output, it cuts off just in the middle of the `futex` syscall.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/kellpossible/cargo-i18n/issues/40","repository_url":"https://api.github.com/repos/kellpossible/cargo-i18n","labels_url":"https://api.github.com/repos/kellpossible/cargo-i18n/issues/40/labels{/name}","comments_url":"https://api.github.com/repos/kellpossible/cargo-i18n/issues/40/comments","events_url":"https://api.github.com/repos/kellpossible/cargo-i18n/issues/40/events","html_url":"https://github.com/kellpossible/cargo-i18n/issues/40","id":708091979,"node_id":"MDU6SXNzdWU3MDgwOTE5Nzk=","number":40,"title":"Integration with web frameworks","user":{"login":"xliiv","id":298994,"node_id":"MDQ6VXNlcjI5ODk5NA==","avatar_url":"https://avatars3.githubusercontent.com/u/298994?v=4","gravatar_id":"","url":"https://api.github.com/users/xliiv","html_url":"https://github.com/xliiv","followers_url":"https://api.github.com/users/xliiv/followers","following_url":"https://api.github.com/users/xliiv/following{/other_user}","gists_url":"https://api.github.com/users/xliiv/gists{/gist_id}","starred_url":"https://api.github.com/users/xliiv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xliiv/subscriptions","organizations_url":"https://api.github.com/users/xliiv/orgs","repos_url":"https://api.github.com/users/xliiv/repos","events_url":"https://api.github.com/users/xliiv/events{/privacy}","received_events_url":"https://api.github.com/users/xliiv/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-24T11:31:44Z","updated_at":"2020-09-27T09:49:34Z","closed_at":"2020-09-27T09:49:34Z","author_association":"NONE","active_lock_reason":null,"body":"Just finished testing this crate for a CLI use case and works as expected (`gettext` variant), so great work and thanks for it :)\r\n\r\nNow, I'm wondering how could this be integrated with popular frameworks, like\r\n1. https://github.com/SergioBenitez/Rocket/\r\n2. https://github.com/actix/actix-web\r\n\r\nAll hints are welcome","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1436","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1436/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1436/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1436/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/1436","id":706353697,"node_id":"MDU6SXNzdWU3MDYzNTM2OTc=","number":1436,"title":"rocket_contrib::database does not generate Deref for type","user":{"login":"jl-a","id":54054438,"node_id":"MDQ6VXNlcjU0MDU0NDM4","avatar_url":"https://avatars3.githubusercontent.com/u/54054438?v=4","gravatar_id":"","url":"https://api.github.com/users/jl-a","html_url":"https://github.com/jl-a","followers_url":"https://api.github.com/users/jl-a/followers","following_url":"https://api.github.com/users/jl-a/following{/other_user}","gists_url":"https://api.github.com/users/jl-a/gists{/gist_id}","starred_url":"https://api.github.com/users/jl-a/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jl-a/subscriptions","organizations_url":"https://api.github.com/users/jl-a/orgs","repos_url":"https://api.github.com/users/jl-a/repos","events_url":"https://api.github.com/users/jl-a/events{/privacy}","received_events_url":"https://api.github.com/users/jl-a/received_events","type":"User","site_admin":false},"labels":[{"id":343542075,"node_id":"MDU6TGFiZWwzNDM1NDIwNzU=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/question","name":"question","color":"cc317c","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-22T12:47:54Z","updated_at":"2020-09-22T20:41:54Z","closed_at":"2020-09-22T20:41:54Z","author_association":"NONE","active_lock_reason":null,"body":"**Rocket version**: 0.5.0-dev from Github\r\n\r\n**rustc version**: 1.46.0\r\n\r\n**Operating System**: Manjaro Linux 20.1, kernel 5.8.6-1\r\n\r\n**Description:**\r\n\r\nI created a database connection from the [async docs](https://api.rocket.rs/async/rocket_contrib/databases/index.html) for diesel_postgres_pool (also tried for postgres_pool).\r\n\r\n```rust\r\n#[database(\"postgres_conn\")]\r\npub struct Db( diesel::PgConnection );\r\n```\r\n\r\nWhen attempting to dereference my database struct and access the inner connection type, the compiler threw the error:\r\n\r\n> `type 'Db' cannot be dereferenced`.\r\n\r\nThe particular code that threw the error:\r\n\r\n```rust\r\nlet atlases = match atlas_pages::table\r\n    .select( ( ... ) )\r\n    .filter( ... )\r\n    .load::<atlas::Summary>( &*conn ) // error at &*conn\r\n{\r\n    Ok( a )  => a,\r\n    Err( _ ) => Vec::new(),\r\n}\r\n```\r\n\r\nThe docs indicated that a `Deref` implementation would be automatically generated for the Db type, but it appears that it has not. I tried for both diesel_postgres_pool and postgres_pool, and the error appeared in both cases.\r\n\r\n**Further details**\r\n\r\nFollowing are relevant bits and bobs to trace the code flow.\r\n\r\nCargo.toml:\r\n\r\n```toml\r\n[dependencies]\r\nrocket = { git = \"https://github.com/SergioBenitez/Rocket\" }\r\n[dependencies.rocket_contrib]\r\ngit = \"https://github.com/SergioBenitez/Rocket\"\r\ndefault-features = false\r\nfeatures = [\"diesel_postgres_pool\"]\r\n```\r\n\r\nRocket.toml\r\n\r\n```toml\r\n[ global.databases ]\r\npostgres_conn = { url = \"...\" }\r\n```\r\n\r\nmain.rs\r\n\r\n```rust\r\nmod atlas;\r\n...\r\n#[macro_use]\r\nextern crate rocket;\r\n#[macro_use]\r\nextern crate rocket_contrib;\r\n#[macro_use]\r\nextern crate diesel;\r\n\r\nuse rocket::http::CookieJar;\r\n...\r\npub mod schema;\r\n\r\n#[database(\"postgres_conn\")]\r\npub struct Db( diesel::PgConnection );\r\n...\r\n#[post(\"/atlas.list\")]\r\nasync fn atlas_list( conn: Db, cookies: &CookieJar<'_> ) -> ResponseJson {\r\n    atlas::list( conn, cookies ).await\r\n}\r\n...\r\n#[launch]\r\nfn rocket() -> rocket::Rocket {\r\n    rocket::ignite()\r\n    .mount( \"/\", routes![\r\n        atlas_list\r\n    ] )\r\n    .attach( Db::fairing() )\r\n}\r\n```\r\n\r\natlas.rs\r\n```rust\r\nuse crate::atlas;\r\nuse crate::Db;\r\nuse rocket_contrib::databases::diesel::{ self, prelude::* };\r\n...\r\npub async fn list( conn: Db, cookies: &CookieJar<'_> ) -> ResponseJson {\r\n    use crate::schema::atlas_pages;\r\n    let atlases = match atlas_pages::table\r\n        .select( (\r\n            atlas_pages::atlas_id,\r\n            atlas_pages::title,\r\n            atlas_pages::image,\r\n         ) )\r\n        .order( atlas_pages::title.desc() )\r\n        .filter( atlas_pages::page_id.eq( \"index\" ) )\r\n        .load::<atlas::Summary>( &*conn ) // Error here\r\n    {\r\n        Ok( a )  => a,\r\n        Err( _ ) => Vec::new(),\r\n    };\r\n...\r\n```\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/mfinancecombr/wallet-api/issues/9","repository_url":"https://api.github.com/repos/mfinancecombr/wallet-api","labels_url":"https://api.github.com/repos/mfinancecombr/wallet-api/issues/9/labels{/name}","comments_url":"https://api.github.com/repos/mfinancecombr/wallet-api/issues/9/comments","events_url":"https://api.github.com/repos/mfinancecombr/wallet-api/issues/9/events","html_url":"https://github.com/mfinancecombr/wallet-api/issues/9","id":695318783,"node_id":"MDU6SXNzdWU2OTUzMTg3ODM=","number":9,"title":"Port code to newest mongodb driver","user":{"login":"kov","id":1271291,"node_id":"MDQ6VXNlcjEyNzEyOTE=","avatar_url":"https://avatars0.githubusercontent.com/u/1271291?v=4","gravatar_id":"","url":"https://api.github.com/users/kov","html_url":"https://github.com/kov","followers_url":"https://api.github.com/users/kov/followers","following_url":"https://api.github.com/users/kov/following{/other_user}","gists_url":"https://api.github.com/users/kov/gists{/gist_id}","starred_url":"https://api.github.com/users/kov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kov/subscriptions","organizations_url":"https://api.github.com/users/kov/orgs","repos_url":"https://api.github.com/users/kov/repos","events_url":"https://api.github.com/users/kov/events{/privacy}","received_events_url":"https://api.github.com/users/kov/received_events","type":"User","site_admin":false},"labels":[{"id":2312337779,"node_id":"MDU6TGFiZWwyMzEyMzM3Nzc5","url":"https://api.github.com/repos/mfinancecombr/wallet-api/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-07T18:05:21Z","updated_at":"2020-09-08T13:54:00Z","closed_at":"2020-09-08T13:54:00Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The more recent stable mongodb driver is less quirky. The reason I used 0.3.12 is because that was supported out of the box by Rocket https://rocket.rs/v0.4/guide/state/#databases\r\n\r\nNothing stops us from creating our own managed state, though. Another thing we can consider is updating Rocket's own builtin support to work with newer mongo - https://github.com/SergioBenitez/Rocket/issues/1117\r\n\r\nBy the way, at the moment we have a thread using a separate way to get a connection. Reworking this code should enable us to streamline WalletDB::get_connection() as well and make everyone use the same pool.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/davidpdrsn/graphql-app-example/issues/66","repository_url":"https://api.github.com/repos/davidpdrsn/graphql-app-example","labels_url":"https://api.github.com/repos/davidpdrsn/graphql-app-example/issues/66/labels{/name}","comments_url":"https://api.github.com/repos/davidpdrsn/graphql-app-example/issues/66/comments","events_url":"https://api.github.com/repos/davidpdrsn/graphql-app-example/issues/66/events","html_url":"https://github.com/davidpdrsn/graphql-app-example/issues/66","id":715167588,"node_id":"MDU6SXNzdWU3MTUxNjc1ODg=","number":66,"title":"Unable to run setup script completely","user":{"login":"onx2","id":23039725,"node_id":"MDQ6VXNlcjIzMDM5NzI1","avatar_url":"https://avatars1.githubusercontent.com/u/23039725?v=4","gravatar_id":"","url":"https://api.github.com/users/onx2","html_url":"https://github.com/onx2","followers_url":"https://api.github.com/users/onx2/followers","following_url":"https://api.github.com/users/onx2/following{/other_user}","gists_url":"https://api.github.com/users/onx2/gists{/gist_id}","starred_url":"https://api.github.com/users/onx2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onx2/subscriptions","organizations_url":"https://api.github.com/users/onx2/orgs","repos_url":"https://api.github.com/users/onx2/repos","events_url":"https://api.github.com/users/onx2/events{/privacy}","received_events_url":"https://api.github.com/users/onx2/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-10-05T21:15:23Z","updated_at":"2020-10-06T15:59:41Z","closed_at":"2020-10-06T07:17:08Z","author_association":"NONE","active_lock_reason":null,"body":"Hi! I'm just starting out with Rust so this is all _very_ new to me so I wanted to say thanks for creating this example repo, it's been helpful :smile: \r\n\r\nI am hitting an error when running `bash bin/setup` though - have you seen or know about this error?\r\n\r\n```  bash\r\nCompiling rocket_http v0.4.5\r\nerror: proc macro panicked\r\n   --> /home/onx2/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket_http-0.4.5/src/parse/uri/parser.rs:119:34\r\n    |\r\n119 |             let path_and_query = pear_try!(path_and_query(is_pchar));\r\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    |\r\n    = help: message: called `Option::unwrap()` on a `None` value\r\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `rocket_http`\r\n\r\nTo learn more, run the command again with --verbose.\r\nwarning: build failed, waiting for other jobs to finish...\r\n^C  Building [====================================================>  ] 195/201: diesel \r\n```\r\n\r\n\r\nAs an aside, I had to change the database url in the setup script to include the user and password, so something like this:\r\n```bash\r\necho DATABASE_URL=postgres://username:password@localhost/graphql-app-example >> .env\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1452","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1452/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1452/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1452/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/1452","id":723838178,"node_id":"MDU6SXNzdWU3MjM4MzgxNzg=","number":1452,"title":"Warning message when using asynchronous rocket on main branch","user":{"login":"thedewpoint","id":3211587,"node_id":"MDQ6VXNlcjMyMTE1ODc=","avatar_url":"https://avatars0.githubusercontent.com/u/3211587?v=4","gravatar_id":"","url":"https://api.github.com/users/thedewpoint","html_url":"https://github.com/thedewpoint","followers_url":"https://api.github.com/users/thedewpoint/followers","following_url":"https://api.github.com/users/thedewpoint/following{/other_user}","gists_url":"https://api.github.com/users/thedewpoint/gists{/gist_id}","starred_url":"https://api.github.com/users/thedewpoint/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thedewpoint/subscriptions","organizations_url":"https://api.github.com/users/thedewpoint/orgs","repos_url":"https://api.github.com/users/thedewpoint/repos","events_url":"https://api.github.com/users/thedewpoint/events{/privacy}","received_events_url":"https://api.github.com/users/thedewpoint/received_events","type":"User","site_admin":false},"labels":[{"id":343542075,"node_id":"MDU6TGFiZWwzNDM1NDIwNzU=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/question","name":"question","color":"cc317c","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-10-17T20:06:21Z","updated_at":"2020-10-18T02:16:01Z","closed_at":"2020-10-18T02:16:01Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, I'll preface this by saying I'm new to rust in general as well as rocket, so judge this with a grain of salt (feedback very welcomed). I wanted to do a small learner project so I'm using a simple mongodb connection. I've uploaded the entire repo here:\r\nhttps://github.com/thedewpoint/expense-api/blob/main/src/main.rs\r\n\r\nI was able to get everything working, but whenever I build I receive a warning message\r\nwarning: unused `std::result::Result` that must be used\r\n  --> src/main.rs:31:5\r\n   |\r\n31 |     rocket::ignite().mount(\"/\", routes![index,test]).launch().await;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(unused_must_use)]` on by default\r\n   = note: this `Result` may be an `Err` variant, which should be handled\r\n\r\n\r\nI could add that attribute (or whatever its called) to disable the linting but i want to keep it on. Am I doing something inherently wrong? I've spent a couple hours just digging through the rocket documentation as well as googling and haven't found any examples that use the async api and explicitly call this out. Any advice would be appreciated.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/kreibaum/pacosako/issues/12","repository_url":"https://api.github.com/repos/kreibaum/pacosako","labels_url":"https://api.github.com/repos/kreibaum/pacosako/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/kreibaum/pacosako/issues/12/comments","events_url":"https://api.github.com/repos/kreibaum/pacosako/issues/12/events","html_url":"https://github.com/kreibaum/pacosako/issues/12","id":602748484,"node_id":"MDU6SXNzdWU2MDI3NDg0ODQ=","number":12,"title":"Use sqlx for the database layer.","user":{"login":"kreibaum","id":48726499,"node_id":"MDQ6VXNlcjQ4NzI2NDk5","avatar_url":"https://avatars0.githubusercontent.com/u/48726499?v=4","gravatar_id":"","url":"https://api.github.com/users/kreibaum","html_url":"https://github.com/kreibaum","followers_url":"https://api.github.com/users/kreibaum/followers","following_url":"https://api.github.com/users/kreibaum/following{/other_user}","gists_url":"https://api.github.com/users/kreibaum/gists{/gist_id}","starred_url":"https://api.github.com/users/kreibaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kreibaum/subscriptions","organizations_url":"https://api.github.com/users/kreibaum/orgs","repos_url":"https://api.github.com/users/kreibaum/repos","events_url":"https://api.github.com/users/kreibaum/events{/privacy}","received_events_url":"https://api.github.com/users/kreibaum/received_events","type":"User","site_admin":false},"labels":[{"id":2223446972,"node_id":"MDU6TGFiZWwyMjIzNDQ2OTcy","url":"https://api.github.com/repos/kreibaum/pacosako/labels/refactoring","name":"refactoring","color":"7bf2ce","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-04-19T15:45:24Z","updated_at":"2020-10-29T21:53:39Z","closed_at":"2020-10-29T21:53:39Z","author_association":"OWNER","active_lock_reason":null,"body":"I think sqlx would be a great way to clean up my database access. Later with 0.4 it will get support for migrations which will be even better.\r\n\r\nhttps://github.com/launchbadge/sqlx","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1408","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1408/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1408/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1408/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/1408","id":676638257,"node_id":"MDU6SXNzdWU2NzY2MzgyNTc=","number":1408,"title":"The Json example does not compile against master","user":{"login":"CapnOrange","id":69318907,"node_id":"MDQ6VXNlcjY5MzE4OTA3","avatar_url":"https://avatars3.githubusercontent.com/u/69318907?v=4","gravatar_id":"","url":"https://api.github.com/users/CapnOrange","html_url":"https://github.com/CapnOrange","followers_url":"https://api.github.com/users/CapnOrange/followers","following_url":"https://api.github.com/users/CapnOrange/following{/other_user}","gists_url":"https://api.github.com/users/CapnOrange/gists{/gist_id}","starred_url":"https://api.github.com/users/CapnOrange/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CapnOrange/subscriptions","organizations_url":"https://api.github.com/users/CapnOrange/orgs","repos_url":"https://api.github.com/users/CapnOrange/repos","events_url":"https://api.github.com/users/CapnOrange/events{/privacy}","received_events_url":"https://api.github.com/users/CapnOrange/received_events","type":"User","site_admin":false},"labels":[{"id":343542073,"node_id":"MDU6TGFiZWwzNDM1NDIwNzM=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/invalid","name":"invalid","color":"e6e6e6","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-08-11T07:08:10Z","updated_at":"2020-08-11T17:44:02Z","closed_at":"2020-08-11T17:37:03Z","author_association":"NONE","active_lock_reason":null,"body":"# Bug Report\r\n\r\nNot able to run the JSON example (https://github.com/SergioBenitez/Rocket/tree/master/examples/json) against master branch.\r\n\r\n1. Rocket version: https://github.com/SergioBenitez/Rocket/tree/master (0.5.0-dev)\r\n2. OSX 10.15.5\r\n3. Multiple instances(6) of `error[E0277]`:\r\n```\r\n  --> examples/json/src/main.rs:28:16\r\n      |\r\n28 | fn new(id: ID, message: Json<Message>, map: State<'_, MessageMap>) -> JsonValue {\r\n      |                ^^^^^^^^^^^^^^^^^^^^^^ the trait `rocket::data::FromData` is not implemented for `rocket_contrib::json::Json<Message>`\r\n      |\r\n      = note: required because of the requirements on the impl of `rocket::data::FromTransformedData<'_>` for `rocket_contrib::json::Json<Message>`\r\n```\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/casbin/casbin-rs/issues/93","repository_url":"https://api.github.com/repos/casbin/casbin-rs","labels_url":"https://api.github.com/repos/casbin/casbin-rs/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/casbin/casbin-rs/issues/93/comments","events_url":"https://api.github.com/repos/casbin/casbin-rs/issues/93/events","html_url":"https://github.com/casbin/casbin-rs/issues/93","id":595577966,"node_id":"MDU6SXNzdWU1OTU1Nzc5NjY=","number":93,"title":"Make a Casbin middleware for Rocket.rs","user":{"login":"hsluoyz","id":3787410,"node_id":"MDQ6VXNlcjM3ODc0MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/3787410?v=4","gravatar_id":"","url":"https://api.github.com/users/hsluoyz","html_url":"https://github.com/hsluoyz","followers_url":"https://api.github.com/users/hsluoyz/followers","following_url":"https://api.github.com/users/hsluoyz/following{/other_user}","gists_url":"https://api.github.com/users/hsluoyz/gists{/gist_id}","starred_url":"https://api.github.com/users/hsluoyz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hsluoyz/subscriptions","organizations_url":"https://api.github.com/users/hsluoyz/orgs","repos_url":"https://api.github.com/users/hsluoyz/repos","events_url":"https://api.github.com/users/hsluoyz/events{/privacy}","received_events_url":"https://api.github.com/users/hsluoyz/received_events","type":"User","site_admin":false},"labels":[{"id":1499879080,"node_id":"MDU6TGFiZWwxNDk5ODc5MDgw","url":"https://api.github.com/repos/casbin/casbin-rs/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":{"login":"hsluoyz","id":3787410,"node_id":"MDQ6VXNlcjM3ODc0MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/3787410?v=4","gravatar_id":"","url":"https://api.github.com/users/hsluoyz","html_url":"https://github.com/hsluoyz","followers_url":"https://api.github.com/users/hsluoyz/followers","following_url":"https://api.github.com/users/hsluoyz/following{/other_user}","gists_url":"https://api.github.com/users/hsluoyz/gists{/gist_id}","starred_url":"https://api.github.com/users/hsluoyz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hsluoyz/subscriptions","organizations_url":"https://api.github.com/users/hsluoyz/orgs","repos_url":"https://api.github.com/users/hsluoyz/repos","events_url":"https://api.github.com/users/hsluoyz/events{/privacy}","received_events_url":"https://api.github.com/users/hsluoyz/received_events","type":"User","site_admin":false},"assignees":[{"login":"hsluoyz","id":3787410,"node_id":"MDQ6VXNlcjM3ODc0MTA=","avatar_url":"https://avatars0.githubusercontent.com/u/3787410?v=4","gravatar_id":"","url":"https://api.github.com/users/hsluoyz","html_url":"https://github.com/hsluoyz","followers_url":"https://api.github.com/users/hsluoyz/followers","following_url":"https://api.github.com/users/hsluoyz/following{/other_user}","gists_url":"https://api.github.com/users/hsluoyz/gists{/gist_id}","starred_url":"https://api.github.com/users/hsluoyz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hsluoyz/subscriptions","organizations_url":"https://api.github.com/users/hsluoyz/orgs","repos_url":"https://api.github.com/users/hsluoyz/repos","events_url":"https://api.github.com/users/hsluoyz/events{/privacy}","received_events_url":"https://api.github.com/users/hsluoyz/received_events","type":"User","site_admin":false},{"login":"hackerchai","id":5574651,"node_id":"MDQ6VXNlcjU1NzQ2NTE=","avatar_url":"https://avatars3.githubusercontent.com/u/5574651?v=4","gravatar_id":"","url":"https://api.github.com/users/hackerchai","html_url":"https://github.com/hackerchai","followers_url":"https://api.github.com/users/hackerchai/followers","following_url":"https://api.github.com/users/hackerchai/following{/other_user}","gists_url":"https://api.github.com/users/hackerchai/gists{/gist_id}","starred_url":"https://api.github.com/users/hackerchai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hackerchai/subscriptions","organizations_url":"https://api.github.com/users/hackerchai/orgs","repos_url":"https://api.github.com/users/hackerchai/repos","events_url":"https://api.github.com/users/hackerchai/events{/privacy}","received_events_url":"https://api.github.com/users/hackerchai/received_events","type":"User","site_admin":false}],"milestone":null,"comments":23,"created_at":"2020-04-07T04:16:42Z","updated_at":"2020-08-26T11:28:18Z","closed_at":"2020-08-26T11:28:09Z","author_association":"MEMBER","active_lock_reason":null,"body":"As I know, Actix and Rocket.rs the top 2 web frameworks in Rust world. We already made a Actix middleware, see: https://github.com/casbin/casbin-rs/issues/92\r\n\r\nThe next step would be making a Casbin middleware for Rocket.rs. It means a lot to us and also Rocket.rs users.\r\n\r\nThe Rocket.rs community already has urgent need for a good authorization system, see: https://github.com/SergioBenitez/Rocket/issues/8 and other `auth` issues opened in their repo: https://github.com/SergioBenitez/Rocket/search?q=auth&type=Issues","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/kartevonmorgen/openfairdb/issues/271","repository_url":"https://api.github.com/repos/kartevonmorgen/openfairdb","labels_url":"https://api.github.com/repos/kartevonmorgen/openfairdb/issues/271/labels{/name}","comments_url":"https://api.github.com/repos/kartevonmorgen/openfairdb/issues/271/comments","events_url":"https://api.github.com/repos/kartevonmorgen/openfairdb/issues/271/events","html_url":"https://github.com/kartevonmorgen/openfairdb/issues/271","id":657205504,"node_id":"MDU6SXNzdWU2NTcyMDU1MDQ=","number":271,"title":"Fix CI","user":{"login":"flosse","id":276043,"node_id":"MDQ6VXNlcjI3NjA0Mw==","avatar_url":"https://avatars2.githubusercontent.com/u/276043?v=4","gravatar_id":"","url":"https://api.github.com/users/flosse","html_url":"https://github.com/flosse","followers_url":"https://api.github.com/users/flosse/followers","following_url":"https://api.github.com/users/flosse/following{/other_user}","gists_url":"https://api.github.com/users/flosse/gists{/gist_id}","starred_url":"https://api.github.com/users/flosse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/flosse/subscriptions","organizations_url":"https://api.github.com/users/flosse/orgs","repos_url":"https://api.github.com/users/flosse/repos","events_url":"https://api.github.com/users/flosse/events{/privacy}","received_events_url":"https://api.github.com/users/flosse/received_events","type":"User","site_admin":false},"labels":[{"id":1778550183,"node_id":"MDU6TGFiZWwxNzc4NTUwMTgz","url":"https://api.github.com/repos/kartevonmorgen/openfairdb/labels/43%20Developer","name":"43 Developer","color":"ff9389","default":false,"description":"Functions relevant for developer and consortium-Partners"},{"id":274155253,"node_id":"MDU6TGFiZWwyNzQxNTUyNTM=","url":"https://api.github.com/repos/kartevonmorgen/openfairdb/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-15T09:29:50Z","updated_at":"2020-08-13T10:53:13Z","closed_at":"2020-08-13T10:53:13Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"We should either fix the travis builds or switch to GitHub CI.\r\n\r\nThis is how rocket uses GitHub: https://github.com/SergioBenitez/Rocket/blob/master/.github/workflows/test.yml","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/lambda-fairy/maud/issues/206","repository_url":"https://api.github.com/repos/lambda-fairy/maud","labels_url":"https://api.github.com/repos/lambda-fairy/maud/issues/206/labels{/name}","comments_url":"https://api.github.com/repos/lambda-fairy/maud/issues/206/comments","events_url":"https://api.github.com/repos/lambda-fairy/maud/issues/206/events","html_url":"https://github.com/lambda-fairy/maud/issues/206","id":676523655,"node_id":"MDU6SXNzdWU2NzY1MjM2NTU=","number":206,"title":"webframwork Rcoket Integration Error","user":{"login":"Piping","id":12042284,"node_id":"MDQ6VXNlcjEyMDQyMjg0","avatar_url":"https://avatars3.githubusercontent.com/u/12042284?v=4","gravatar_id":"","url":"https://api.github.com/users/Piping","html_url":"https://github.com/Piping","followers_url":"https://api.github.com/users/Piping/followers","following_url":"https://api.github.com/users/Piping/following{/other_user}","gists_url":"https://api.github.com/users/Piping/gists{/gist_id}","starred_url":"https://api.github.com/users/Piping/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Piping/subscriptions","organizations_url":"https://api.github.com/users/Piping/orgs","repos_url":"https://api.github.com/users/Piping/repos","events_url":"https://api.github.com/users/Piping/events{/privacy}","received_events_url":"https://api.github.com/users/Piping/received_events","type":"User","site_admin":false},"labels":[{"id":158306399,"node_id":"MDU6TGFiZWwxNTgzMDYzOTk=","url":"https://api.github.com/repos/lambda-fairy/maud/labels/question","name":"question","color":"cc317c","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-11T02:03:26Z","updated_at":"2020-09-06T12:39:28Z","closed_at":"2020-09-06T12:39:28Z","author_association":"NONE","active_lock_reason":null,"body":"I have tired to use maud with git-repo of Rocket, using the example `examples/pastebin/src/main.rs`, but rust compiler produces the following errors:\r\n\r\n```bash \r\nerror[E0277]: the trait bound `hello::maud::PreEscaped<std::string::String>: rocket::response::Responder<'_, '_>` is not satisfied\r\n  --> examples/pastebin/src/main.rs:98:37\r\n   |\r\n98 | fn hello<'a>(name: Cow<'a, str>) -> Markup {\r\n   |                                     ^^^^^^ the trait `rocket::response::Responder<'_, '_>` is not implemented for `hello::maud::PreEscaped<std::string::String>`\r\n   |\r\n   = note: required by `rocket::handler::<impl rocket::outcome::Outcome<rocket::Response<'o>, rocket::http::Status, rocket::Data>>::from`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `pastebin`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nIs this something can be fixed in maud or in my code? Thanks","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/approvers/members-db-rust/issues/16","repository_url":"https://api.github.com/repos/approvers/members-db-rust","labels_url":"https://api.github.com/repos/approvers/members-db-rust/issues/16/labels{/name}","comments_url":"https://api.github.com/repos/approvers/members-db-rust/issues/16/comments","events_url":"https://api.github.com/repos/approvers/members-db-rust/issues/16/events","html_url":"https://github.com/approvers/members-db-rust/issues/16","id":694097505,"node_id":"MDU6SXNzdWU2OTQwOTc1MDU=","number":16,"title":"Specify charset UTF-8 on Content-Type header","user":{"login":"siketyan","id":12772118,"node_id":"MDQ6VXNlcjEyNzcyMTE4","avatar_url":"https://avatars3.githubusercontent.com/u/12772118?v=4","gravatar_id":"","url":"https://api.github.com/users/siketyan","html_url":"https://github.com/siketyan","followers_url":"https://api.github.com/users/siketyan/followers","following_url":"https://api.github.com/users/siketyan/following{/other_user}","gists_url":"https://api.github.com/users/siketyan/gists{/gist_id}","starred_url":"https://api.github.com/users/siketyan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siketyan/subscriptions","organizations_url":"https://api.github.com/users/siketyan/orgs","repos_url":"https://api.github.com/users/siketyan/repos","events_url":"https://api.github.com/users/siketyan/events{/privacy}","received_events_url":"https://api.github.com/users/siketyan/received_events","type":"User","site_admin":false},"labels":[{"id":2171688222,"node_id":"MDU6TGFiZWwyMTcxNjg4MjIy","url":"https://api.github.com/repos/approvers/members-db-rust/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":{"login":"siketyan","id":12772118,"node_id":"MDQ6VXNlcjEyNzcyMTE4","avatar_url":"https://avatars3.githubusercontent.com/u/12772118?v=4","gravatar_id":"","url":"https://api.github.com/users/siketyan","html_url":"https://github.com/siketyan","followers_url":"https://api.github.com/users/siketyan/followers","following_url":"https://api.github.com/users/siketyan/following{/other_user}","gists_url":"https://api.github.com/users/siketyan/gists{/gist_id}","starred_url":"https://api.github.com/users/siketyan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siketyan/subscriptions","organizations_url":"https://api.github.com/users/siketyan/orgs","repos_url":"https://api.github.com/users/siketyan/repos","events_url":"https://api.github.com/users/siketyan/events{/privacy}","received_events_url":"https://api.github.com/users/siketyan/received_events","type":"User","site_admin":false},"assignees":[{"login":"siketyan","id":12772118,"node_id":"MDQ6VXNlcjEyNzcyMTE4","avatar_url":"https://avatars3.githubusercontent.com/u/12772118?v=4","gravatar_id":"","url":"https://api.github.com/users/siketyan","html_url":"https://github.com/siketyan","followers_url":"https://api.github.com/users/siketyan/followers","following_url":"https://api.github.com/users/siketyan/following{/other_user}","gists_url":"https://api.github.com/users/siketyan/gists{/gist_id}","starred_url":"https://api.github.com/users/siketyan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siketyan/subscriptions","organizations_url":"https://api.github.com/users/siketyan/orgs","repos_url":"https://api.github.com/users/siketyan/repos","events_url":"https://api.github.com/users/siketyan/events{/privacy}","received_events_url":"https://api.github.com/users/siketyan/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2020-09-05T14:30:57Z","updated_at":"2020-09-16T03:13:43Z","closed_at":"2020-09-16T03:13:43Z","author_association":"MEMBER","active_lock_reason":null,"body":"```diff\r\n- Content-Type: application/json\r\n+ Content-Type: application/json; charset=utf-8\r\n```\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1466","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1466/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1466/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1466/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/1466","id":736191604,"node_id":"MDU6SXNzdWU3MzYxOTE2MDQ=","number":1466,"title":"Tokio shutdown issue with async tests","user":{"login":"knutin","id":364484,"node_id":"MDQ6VXNlcjM2NDQ4NA==","avatar_url":"https://avatars2.githubusercontent.com/u/364484?v=4","gravatar_id":"","url":"https://api.github.com/users/knutin","html_url":"https://github.com/knutin","followers_url":"https://api.github.com/users/knutin/followers","following_url":"https://api.github.com/users/knutin/following{/other_user}","gists_url":"https://api.github.com/users/knutin/gists{/gist_id}","starred_url":"https://api.github.com/users/knutin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knutin/subscriptions","organizations_url":"https://api.github.com/users/knutin/orgs","repos_url":"https://api.github.com/users/knutin/repos","events_url":"https://api.github.com/users/knutin/events{/privacy}","received_events_url":"https://api.github.com/users/knutin/received_events","type":"User","site_admin":false},"labels":[{"id":758541123,"node_id":"MDU6TGFiZWw3NTg1NDExMjM=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/deficiency","name":"deficiency","color":"fc2929","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"jebrosen","id":7102588,"node_id":"MDQ6VXNlcjcxMDI1ODg=","avatar_url":"https://avatars0.githubusercontent.com/u/7102588?v=4","gravatar_id":"","url":"https://api.github.com/users/jebrosen","html_url":"https://github.com/jebrosen","followers_url":"https://api.github.com/users/jebrosen/followers","following_url":"https://api.github.com/users/jebrosen/following{/other_user}","gists_url":"https://api.github.com/users/jebrosen/gists{/gist_id}","starred_url":"https://api.github.com/users/jebrosen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jebrosen/subscriptions","organizations_url":"https://api.github.com/users/jebrosen/orgs","repos_url":"https://api.github.com/users/jebrosen/repos","events_url":"https://api.github.com/users/jebrosen/events{/privacy}","received_events_url":"https://api.github.com/users/jebrosen/received_events","type":"User","site_admin":false},"assignees":[{"login":"jebrosen","id":7102588,"node_id":"MDQ6VXNlcjcxMDI1ODg=","avatar_url":"https://avatars0.githubusercontent.com/u/7102588?v=4","gravatar_id":"","url":"https://api.github.com/users/jebrosen","html_url":"https://github.com/jebrosen","followers_url":"https://api.github.com/users/jebrosen/followers","following_url":"https://api.github.com/users/jebrosen/following{/other_user}","gists_url":"https://api.github.com/users/jebrosen/gists{/gist_id}","starred_url":"https://api.github.com/users/jebrosen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jebrosen/subscriptions","organizations_url":"https://api.github.com/users/jebrosen/orgs","repos_url":"https://api.github.com/users/jebrosen/repos","events_url":"https://api.github.com/users/jebrosen/events{/privacy}","received_events_url":"https://api.github.com/users/jebrosen/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2020-11-04T15:09:44Z","updated_at":"2020-11-05T22:44:07Z","closed_at":"2020-11-05T22:44:07Z","author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\nI'm running into an issue with async tests when a Postgres database fairing is attached. Without the database fairing, I do not observe this problem.\r\n\r\nTests fail with the message below. The test itself actually runs, so I'm guessing this is caused by some `drop`. I can attach the full stacktrace if helpful.\r\n```\r\nthread 'tests::this_will_fail' panicked at 'Cannot drop a runtime in a context where blocking is not allowed. This happens when a runtime is dropped from within an asynchronous context.', /Users/knutin/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/shutdown.rs:49:21\r\n```\r\n\r\nVersions:\r\n* Rust: 1.47.0, stable\r\n* Rocket version: `2f98299272a2a196a3d053918ebd542e03abfc70`\r\n* Rocket contrib with `features = [\"postgres_pool\"]`\r\n\r\nHere's a repository which reproduces the problem: https://github.com/knutin/rocket-test-bug To use this repo you need a local Postgres instance. Edit `Rocket.toml` with your exact connection details.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1444","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1444/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1444/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1444/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/1444","id":715586056,"node_id":"MDU6SXNzdWU3MTU1ODYwNTY=","number":1444,"title":"Compilation of hello world fails on macOS catalina","user":{"login":"neilyoung","id":731020,"node_id":"MDQ6VXNlcjczMTAyMA==","avatar_url":"https://avatars2.githubusercontent.com/u/731020?v=4","gravatar_id":"","url":"https://api.github.com/users/neilyoung","html_url":"https://github.com/neilyoung","followers_url":"https://api.github.com/users/neilyoung/followers","following_url":"https://api.github.com/users/neilyoung/following{/other_user}","gists_url":"https://api.github.com/users/neilyoung/gists{/gist_id}","starred_url":"https://api.github.com/users/neilyoung/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neilyoung/subscriptions","organizations_url":"https://api.github.com/users/neilyoung/orgs","repos_url":"https://api.github.com/users/neilyoung/repos","events_url":"https://api.github.com/users/neilyoung/events{/privacy}","received_events_url":"https://api.github.com/users/neilyoung/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-06T11:31:26Z","updated_at":"2020-10-06T11:43:08Z","closed_at":"2020-10-06T11:43:08Z","author_association":"NONE","active_lock_reason":null,"body":"Should be self-explanatory:\r\n\r\n```\r\n~/Documents/Rust $ git clone https://github.com/SergioBenitez/Rocket\r\nCloning into 'Rocket'...\r\nremote: Enumerating objects: 22785, done.\r\nremote: Total 22785 (delta 0), reused 0 (delta 0), pack-reused 22785\r\nReceiving objects: 100% (22785/22785), 4.48 MiB | 1.00 MiB/s, done.\r\nResolving deltas: 100% (14191/14191), done.\r\n~/Documents/Rust $ cd Rocket/\r\n~/Documents/Rust/Rocket $ git checkout v0.4.5\r\nNote: switching to 'v0.4.5'.\r\n\r\nYou are in 'detached HEAD' state. You can look around, make experimental\r\nchanges and commit them, and you can discard any commits you make in this\r\nstate without impacting any branches by switching back to a branch.\r\n\r\nIf you want to create a new branch to retain commits you create, you may\r\ndo so (now or later) by using -c with the switch command. Example:\r\n\r\n  git switch -c <new-branch-name>\r\n\r\nOr undo this operation with:\r\n\r\n  git switch -\r\n\r\nTurn off this advice by setting config variable advice.detachedHead to false\r\n\r\nHEAD is now at 4683407f New version: 0.4.5.\r\n~/Documents/Rust/Rocket $ cd examples/hello_world\r\n~/Documents/Rust/Rocket/examples/hello_world $ cargo run\r\n    Updating crates.io index\r\n  Downloaded atty v0.2.14\r\n  Downloaded hmac v0.7.1\r\n  Downloaded log v0.3.9\r\n  Downloaded mime v0.2.6\r\n  Downloaded generic-array v0.12.3\r\n  Downloaded sha2 v0.8.2\r\n  Downloaded pear v0.1.4\r\n  Downloaded ghash v0.2.3\r\n  Downloaded subtle v1.0.0\r\n  Downloaded unicode-xid v0.1.0\r\n  Downloaded traitobject v0.1.0\r\n  Downloaded time v0.1.44\r\n  Downloaded hkdf v0.8.0\r\n  Downloaded universal-hash v0.3.0\r\n  Downloaded toml v0.4.10\r\n  Downloaded quote v0.6.13\r\n  Downloaded url v1.7.2\r\n  Downloaded zeroize v1.1.1\r\n  Downloaded block-buffer v0.7.3\r\n  Downloaded version_check v0.1.5\r\n  Downloaded glob v0.3.0\r\n  Downloaded aead v0.2.0\r\n  Downloaded yansi v0.5.0\r\n  Downloaded pear_codegen v0.1.4\r\n  Downloaded hyper v0.10.16\r\n  Downloaded aes-soft v0.3.3\r\n  Downloaded polyval v0.3.3\r\n  Downloaded proc-macro2 v0.4.30\r\n  Downloaded unicase v1.4.2\r\n  Downloaded crypto-mac v0.7.0\r\n  Downloaded devise v0.2.0\r\n  Downloaded block-cipher-trait v0.6.2\r\n  Downloaded cookie v0.11.3\r\n  Downloaded devise_codegen v0.2.0\r\n  Downloaded digest v0.8.1\r\n  Downloaded subtle v2.3.0\r\n  Downloaded fake-simd v0.1.2\r\n  Downloaded safemem v0.3.3\r\n  Downloaded opaque-debug v0.2.3\r\n  Downloaded typeable v0.1.2\r\n  Downloaded smallvec v1.4.2\r\n  Downloaded hashbrown v0.9.1\r\n  Downloaded devise_core v0.2.0\r\n  Downloaded language-tags v0.2.2\r\n  Downloaded indexmap v1.6.0\r\n  Downloaded block-padding v0.1.5\r\n  Downloaded byte-tools v0.3.1\r\n  Downloaded percent-encoding v1.0.1\r\n  Downloaded base64 v0.9.3\r\n  Downloaded syn v0.15.44\r\n  Downloaded state v0.4.1\r\n  Downloaded aes-gcm v0.5.0\r\n  Downloaded idna v0.1.5\r\n  Downloaded aes v0.3.2\r\n  Downloaded libc v0.2.79\r\n  Downloaded 55 crates (2.2 MB) in 2.61s\r\n   Compiling typenum v1.12.0\r\n   Compiling cfg-if v0.1.10\r\n   Compiling libc v0.2.79\r\n   Compiling byteorder v1.3.4\r\n   Compiling proc-macro2 v0.4.30\r\n   Compiling version_check v0.9.2\r\n   Compiling yansi v0.5.0\r\n   Compiling unicode-xid v0.1.0\r\n   Compiling syn v0.15.44\r\n   Compiling getrandom v0.1.15\r\n   Compiling log v0.4.11\r\n   Compiling subtle v2.3.0\r\n   Compiling opaque-debug v0.2.3\r\n   Compiling tinyvec v0.3.4\r\n   Compiling byte-tools v0.3.1\r\n   Compiling matches v0.1.8\r\n   Compiling bitflags v1.2.1\r\n   Compiling subtle v1.0.0\r\n   Compiling version_check v0.1.5\r\n   Compiling ppv-lite86 v0.2.9\r\n   Compiling httparse v1.3.4\r\n   Compiling autocfg v1.0.1\r\n   Compiling percent-encoding v1.0.1\r\n   Compiling zeroize v1.1.1\r\n   Compiling fake-simd v0.1.2\r\n   Compiling safemem v0.3.3\r\n   Compiling hashbrown v0.9.1\r\n   Compiling base64 v0.12.3\r\n   Compiling typeable v0.1.2\r\n   Compiling language-tags v0.2.2\r\n   Compiling traitobject v0.1.0\r\n   Compiling serde v1.0.116\r\n   Compiling percent-encoding v2.1.0\r\n   Compiling state v0.4.1\r\n   Compiling smallvec v1.4.2\r\n   Compiling memchr v2.3.3\r\n   Compiling glob v0.3.0\r\n   Compiling pear_codegen v0.1.4\r\n   Compiling rocket_codegen v0.4.5 (/Users/decades/Documents/Rust/Rocket/core/codegen)\r\n   Compiling rocket v0.4.5 (/Users/decades/Documents/Rust/Rocket/core/lib)\r\n   Compiling unicode-normalization v0.1.13\r\n   Compiling block-padding v0.1.5\r\n   Compiling unicode-bidi v0.3.4\r\n   Compiling unicase v1.4.2\r\n   Compiling indexmap v1.6.0\r\nerror: failed to run custom build command for `pear_codegen v0.1.4`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `/Users/decades/Documents/Rust/Rocket/target/debug/build/pear_codegen-5e461e7207beefe3/build-script-build` (exit code: 101)\r\n  --- stderr\r\n  Error: Pear requires a 'dev' or 'nightly' version of rustc.\r\n  Installed version: 1.46.0 (2020-08-24)\r\n  Minimum required:  1.31.0-nightly (2018-10-05)\r\n  thread 'main' panicked at 'Aborting compilation due to incompatible compiler.', /Users/decades/.cargo/registry/src/github.com-1ecc6299db9ec823/pear_codegen-0.1.4/build.rs:24:13\r\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: build failed\r\n~/Documents/Rust/Rocket/examples/hello_world $ \r\n```\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/shepmaster/snafu/issues/60","repository_url":"https://api.github.com/repos/shepmaster/snafu","labels_url":"https://api.github.com/repos/shepmaster/snafu/issues/60/labels{/name}","comments_url":"https://api.github.com/repos/shepmaster/snafu/issues/60/comments","events_url":"https://api.github.com/repos/shepmaster/snafu/issues/60/events","html_url":"https://github.com/shepmaster/snafu/issues/60","id":437110723,"node_id":"MDU6SXNzdWU0MzcxMTA3MjM=","number":60,"title":"Raw identifier not supported in the `display` attribute","user":{"login":"hellow554","id":921462,"node_id":"MDQ6VXNlcjkyMTQ2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/921462?v=4","gravatar_id":"","url":"https://api.github.com/users/hellow554","html_url":"https://github.com/hellow554","followers_url":"https://api.github.com/users/hellow554/followers","following_url":"https://api.github.com/users/hellow554/following{/other_user}","gists_url":"https://api.github.com/users/hellow554/gists{/gist_id}","starred_url":"https://api.github.com/users/hellow554/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hellow554/subscriptions","organizations_url":"https://api.github.com/users/hellow554/orgs","repos_url":"https://api.github.com/users/hellow554/repos","events_url":"https://api.github.com/users/hellow554/events{/privacy}","received_events_url":"https://api.github.com/users/hellow554/received_events","type":"User","site_admin":false},"labels":[{"id":1210152121,"node_id":"MDU6TGFiZWwxMjEwMTUyMTIx","url":"https://api.github.com/repos/shepmaster/snafu/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"},{"id":1348647727,"node_id":"MDU6TGFiZWwxMzQ4NjQ3NzI3","url":"https://api.github.com/repos/shepmaster/snafu/labels/upstream","name":"upstream","color":"8b2ee8","default":false,"description":"Related to a third-party component"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2019-04-25T09:56:08Z","updated_at":"2020-11-06T14:22:26Z","closed_at":"2020-11-06T14:22:26Z","author_association":"NONE","active_lock_reason":null,"body":"Using snafu version 0.2.3 does not support [raw identifiers](https://doc.rust-lang.org/stable/rust-by-example/compatibility/raw_identifiers.html) (e.g. `r#type`).\r\n\r\nThis does not work currently:\r\n```rust\r\nuse snafu::Snafu;\r\n\r\n#[derive(Debug, Snafu)]\r\nenum Error {\r\n    #[snafu(display(\"{}\", r#type))]\r\n    Oc { r#type: String }\r\n}\r\n```\r\n\r\n```\r\ncargo build\r\n   Compiling proc-macro2 v0.4.28\r\n   Compiling libc v0.2.51\r\n   Compiling cc v1.0.35\r\n   Compiling unicode-xid v0.1.0\r\n   Compiling syn v0.15.32\r\n   Compiling autocfg v0.1.2\r\n   Compiling cfg-if v0.1.7\r\n   Compiling rustc-demangle v0.1.14\r\n   Compiling backtrace v0.3.15\r\n   Compiling backtrace-sys v0.1.28\r\n   Compiling quote v0.6.12\r\n   Compiling snafu-derive v0.2.3\r\n   Compiling snafu v0.2.3\r\n   Compiling foo v0.1.0 (/tmp/tmp.mSGf3U1WvR/foo)\r\nerror: expected expression\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: Could not compile `foo`.\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/briansmith/ring/issues/867","repository_url":"https://api.github.com/repos/briansmith/ring","labels_url":"https://api.github.com/repos/briansmith/ring/issues/867/labels{/name}","comments_url":"https://api.github.com/repos/briansmith/ring/issues/867/comments","events_url":"https://api.github.com/repos/briansmith/ring/issues/867/events","html_url":"https://github.com/briansmith/ring/issues/867","id":464923425,"node_id":"MDU6SXNzdWU0NjQ5MjM0MjU=","number":867,"title":"Building Ring for Docker Alpine Targets Fails","user":{"login":"marceloboeira","id":1898225,"node_id":"MDQ6VXNlcjE4OTgyMjU=","avatar_url":"https://avatars3.githubusercontent.com/u/1898225?v=4","gravatar_id":"","url":"https://api.github.com/users/marceloboeira","html_url":"https://github.com/marceloboeira","followers_url":"https://api.github.com/users/marceloboeira/followers","following_url":"https://api.github.com/users/marceloboeira/following{/other_user}","gists_url":"https://api.github.com/users/marceloboeira/gists{/gist_id}","starred_url":"https://api.github.com/users/marceloboeira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marceloboeira/subscriptions","organizations_url":"https://api.github.com/users/marceloboeira/orgs","repos_url":"https://api.github.com/users/marceloboeira/repos","events_url":"https://api.github.com/users/marceloboeira/events{/privacy}","received_events_url":"https://api.github.com/users/marceloboeira/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-07-07T07:23:38Z","updated_at":"2020-10-28T02:27:12Z","closed_at":"2019-07-08T06:36:28Z","author_association":"NONE","active_lock_reason":null,"body":"Building Rocket for Alpine Targets Fails \r\n\r\n```\r\nCARGO_CFG_TARGET_FEATURE = Some(\"crt-static,fxsr,mmx,sse,sse2\")\r\nrunning \"musl-gcc\" \"-O3\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"-m64\" \"-static\" \"-I\" \"include\" \"-Wall\" \"-Wextra\" \"-pedantic\" \"-pedantic-errors\" \"-Wall\" \"-Wextra\" \"-Wcast-align\" \"-Wcast-qual\" \"-Wenum\r\n-compare\" \"-Wfloat-equal\" \"-Wformat=2\" \"-Winline\" \"-Winvalid-pch\" \"-Wmissing-declarations\" \"-Wmissing-field-initializers\" \"-Wmissing-include-dirs\" \"-Wredundant-decls\" \"-Wshadow\" \"-Wsign-compare\" \"-Wundef\" \"-W\r\nuninitialized\" \"-Wwrite-strings\" \"-fno-strict-aliasing\" \"-fvisibility=hidden\" \"-Wno-cast-align\" \"-fstack-protector\" \"-g3\" \"-U_FORTIFY_SOURCE\" \"-DNDEBUG\" \"-D_XOPEN_SOURCE=700\" \"-c\" \"-o/home/kurz/target/x86_64-\r\nunknown-linux-musl/release/build/ring-8c492a09f80a0133/out/aes-x86_64-elf.o\" \"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/ring-0.13.5/pregenerated/aes-x86_64-elf.S\"\r\n\r\n--- stderr\r\nthread 'main' panicked at 'failed to execute [\"musl-gcc\" \"-O3\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"-m64\" \"-static\" \"-I\" \"include\" \"-Wall\" \"-Wextra\" \"-pedantic\" \"-pedantic-errors\" \"-Wall\" \"-Wextra\r\n\" \"-Wcast-align\" \"-Wcast-qual\" \"-Wenum-compare\" \"-Wfloat-equal\" \"-Wformat=2\" \"-Winline\" \"-Winvalid-pch\" \"-Wmissing-declarations\" \"-Wmissing-field-initializers\" \"-Wmissing-include-dirs\" \"-Wredundant-decls\" \"-W\r\nshadow\" \"-Wsign-compare\" \"-Wundef\" \"-Wuninitialized\" \"-Wwrite-strings\" \"-fno-strict-aliasing\" \"-fvisibility=hidden\" \"-Wno-cast-align\" \"-fstack-protector\" \"-g3\" \"-U_FORTIFY_SOURCE\" \"-DNDEBUG\" \"-D_XOPEN_SOURCE=\r\n700\" \"-c\" \"-o/home/kurz/target/x86_64-unknown-linux-musl/release/build/ring-8c492a09f80a0133/out/aes-x86_64-elf.o\" \"/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/ring-0.13.5/pregenerated/aes-x86_6\r\n4-elf.S\"]: No such file or directory (os error 2)', /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/ring-0.13.5/build.rs:642:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\n\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: build failed\r\nThe command '/bin/sh -c cargo build --bins --release --target x86_64-unknown-linux-musl' returned a non-zero code: 101\r\n```\r\n\r\nMore info\r\nhttps://gist.github.com/marceloboeira/478e02894f817afb093b073a2e7466c6\r\n\r\nAs seen here: https://github.com/SergioBenitez/Rocket/issues/1046","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ctz/rustls/issues/377","repository_url":"https://api.github.com/repos/ctz/rustls","labels_url":"https://api.github.com/repos/ctz/rustls/issues/377/labels{/name}","comments_url":"https://api.github.com/repos/ctz/rustls/issues/377/comments","events_url":"https://api.github.com/repos/ctz/rustls/issues/377/events","html_url":"https://github.com/ctz/rustls/issues/377","id":639254628,"node_id":"MDU6SXNzdWU2MzkyNTQ2Mjg=","number":377,"title":"visibility of OwnedTrustAnchor ","user":{"login":"dingelish","id":1870436,"node_id":"MDQ6VXNlcjE4NzA0MzY=","avatar_url":"https://avatars3.githubusercontent.com/u/1870436?v=4","gravatar_id":"","url":"https://api.github.com/users/dingelish","html_url":"https://github.com/dingelish","followers_url":"https://api.github.com/users/dingelish/followers","following_url":"https://api.github.com/users/dingelish/following{/other_user}","gists_url":"https://api.github.com/users/dingelish/gists{/gist_id}","starred_url":"https://api.github.com/users/dingelish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dingelish/subscriptions","organizations_url":"https://api.github.com/users/dingelish/orgs","repos_url":"https://api.github.com/users/dingelish/repos","events_url":"https://api.github.com/users/dingelish/events{/privacy}","received_events_url":"https://api.github.com/users/dingelish/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-06-15T23:33:07Z","updated_at":"2020-10-13T00:55:24Z","closed_at":"2020-07-18T12:59:29Z","author_association":"NONE","active_lock_reason":null,"body":"Hi ctz,\r\n\r\nOur team is using rustls to terminate TLS connections under the [spiffe](https://spiffe.io/) framework. rustls works pretty well and we all like it! The only problem in our implementation is that we have to use `OwnedTrustAnchor::to_trust_anchor` to verify certificates, while `OwnedTrustAnchor` is not a `pub`ed structure. We're using an internal fork of rustls and wonder if you can make it public. It'll be the best if we can use it directly from crates.io and we don't mind feature gating. Really appreciate your help. Thanks!\r\n\r\nBest,\r\nYu","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/819","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/819/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/819/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/819/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/819","id":378373977,"node_id":"MDU6SXNzdWUzNzgzNzM5Nzc=","number":819,"title":"[Feature] ContentType helpers","user":{"login":"alexbowers","id":842974,"node_id":"MDQ6VXNlcjg0Mjk3NA==","avatar_url":"https://avatars1.githubusercontent.com/u/842974?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbowers","html_url":"https://github.com/alexbowers","followers_url":"https://api.github.com/users/alexbowers/followers","following_url":"https://api.github.com/users/alexbowers/following{/other_user}","gists_url":"https://api.github.com/users/alexbowers/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbowers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbowers/subscriptions","organizations_url":"https://api.github.com/users/alexbowers/orgs","repos_url":"https://api.github.com/users/alexbowers/repos","events_url":"https://api.github.com/users/alexbowers/events{/privacy}","received_events_url":"https://api.github.com/users/alexbowers/received_events","type":"User","site_admin":false},"labels":[{"id":442152232,"node_id":"MDU6TGFiZWw0NDIxNTIyMzI=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/request","name":"request","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-11-07T16:45:32Z","updated_at":"2020-10-21T01:56:39Z","closed_at":"2020-10-21T01:56:38Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Feature Requests\r\n\r\nCurrently on ContentType there are several helpers already provided, `is_javascript`, `is_png` etc.\r\n\r\nHaving an `is_image` and `is_video` would be useful as a way to group together `png, gif,...` etc\r\n\r\nhttps://api.rocket.rs/rocket/http/struct.ContentType.html","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/the-benchmarker/web-frameworks/issues/2057","repository_url":"https://api.github.com/repos/the-benchmarker/web-frameworks","labels_url":"https://api.github.com/repos/the-benchmarker/web-frameworks/issues/2057/labels{/name}","comments_url":"https://api.github.com/repos/the-benchmarker/web-frameworks/issues/2057/comments","events_url":"https://api.github.com/repos/the-benchmarker/web-frameworks/issues/2057/events","html_url":"https://github.com/the-benchmarker/web-frameworks/issues/2057","id":539910370,"node_id":"MDU6SXNzdWU1Mzk5MTAzNzA=","number":2057,"title":"why doesn't exist  Rocket.rs !!??","user":{"login":"javidoweb","id":16517833,"node_id":"MDQ6VXNlcjE2NTE3ODMz","avatar_url":"https://avatars3.githubusercontent.com/u/16517833?v=4","gravatar_id":"","url":"https://api.github.com/users/javidoweb","html_url":"https://github.com/javidoweb","followers_url":"https://api.github.com/users/javidoweb/followers","following_url":"https://api.github.com/users/javidoweb/following{/other_user}","gists_url":"https://api.github.com/users/javidoweb/gists{/gist_id}","starred_url":"https://api.github.com/users/javidoweb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/javidoweb/subscriptions","organizations_url":"https://api.github.com/users/javidoweb/orgs","repos_url":"https://api.github.com/users/javidoweb/repos","events_url":"https://api.github.com/users/javidoweb/events{/privacy}","received_events_url":"https://api.github.com/users/javidoweb/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-12-18T20:36:01Z","updated_at":"2020-07-17T07:32:00Z","closed_at":"2019-12-19T06:00:07Z","author_association":"NONE","active_lock_reason":null,"body":"<!-- \r\n  Thanks for suggesting a new framework. Our goal is to compare framework, and anyone is welcomed ;-)\r\n  :warning: Any frameworks here need a routing feature\r\n\r\n  To help use maintaining this project, please add some informations about tht framework\r\n  Language : Use a label (or ping @waghanza if there is no appropriate one)\r\n  Author : To ping ;-) (and ask for help for implementation)\r\n  A link : Github repo, bitbucket, wesite, blog ...\r\n-->\r\n\r\n+ Language : Rust\r\n+ Repo : https://github.com/SergioBenitez/Rocket\r\n+ Author : SergioBenitez\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1387","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1387/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1387/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1387/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/1387","id":664044953,"node_id":"MDU6SXNzdWU2NjQwNDQ5NTM=","number":1387,"title":"Returning useful error message back to client when request JSON data can't be deserialized?","user":{"login":"rainyday","id":491434,"node_id":"MDQ6VXNlcjQ5MTQzNA==","avatar_url":"https://avatars1.githubusercontent.com/u/491434?v=4","gravatar_id":"","url":"https://api.github.com/users/rainyday","html_url":"https://github.com/rainyday","followers_url":"https://api.github.com/users/rainyday/followers","following_url":"https://api.github.com/users/rainyday/following{/other_user}","gists_url":"https://api.github.com/users/rainyday/gists{/gist_id}","starred_url":"https://api.github.com/users/rainyday/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rainyday/subscriptions","organizations_url":"https://api.github.com/users/rainyday/orgs","repos_url":"https://api.github.com/users/rainyday/repos","events_url":"https://api.github.com/users/rainyday/events{/privacy}","received_events_url":"https://api.github.com/users/rainyday/received_events","type":"User","site_admin":false},"labels":[{"id":343542067,"node_id":"MDU6TGFiZWwzNDM1NDIwNjc=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/duplicate","name":"duplicate","color":"cccccc","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-22T20:56:14Z","updated_at":"2020-07-23T23:24:02Z","closed_at":"2020-07-23T01:44:35Z","author_association":"NONE","active_lock_reason":null,"body":"Rocket version: 0.4.5\r\n\r\nGiven a route like the one below that takes a Json request body:\r\n\r\n```rust\r\n#[post(\"/\", format = \"json\", data = \"<data>\")]\r\nfn my_route(data: Json<MyData>) -> ...\r\n```\r\n\r\nIf the user submits an invalid request body to an endpoint like the one listed below it returns a generic 422 error page. I'd like to return some more useful information, such as the text of the serde deserialization error to give the user a hint as to what is wrong with their request. I looked at catchers guide to see if there's a way to get at the error generated processing the request but can't figure out how to do this.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/alepez/devand/issues/8","repository_url":"https://api.github.com/repos/alepez/devand","labels_url":"https://api.github.com/repos/alepez/devand/issues/8/labels{/name}","comments_url":"https://api.github.com/repos/alepez/devand/issues/8/comments","events_url":"https://api.github.com/repos/alepez/devand/issues/8/events","html_url":"https://github.com/alepez/devand/issues/8","id":635571098,"node_id":"MDU6SXNzdWU2MzU1NzEwOTg=","number":8,"title":"Add  template layout","user":{"login":"alepez","id":877244,"node_id":"MDQ6VXNlcjg3NzI0NA==","avatar_url":"https://avatars0.githubusercontent.com/u/877244?v=4","gravatar_id":"","url":"https://api.github.com/users/alepez","html_url":"https://github.com/alepez","followers_url":"https://api.github.com/users/alepez/followers","following_url":"https://api.github.com/users/alepez/following{/other_user}","gists_url":"https://api.github.com/users/alepez/gists{/gist_id}","starred_url":"https://api.github.com/users/alepez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alepez/subscriptions","organizations_url":"https://api.github.com/users/alepez/orgs","repos_url":"https://api.github.com/users/alepez/repos","events_url":"https://api.github.com/users/alepez/events{/privacy}","received_events_url":"https://api.github.com/users/alepez/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-09T16:14:10Z","updated_at":"2020-06-09T21:07:11Z","closed_at":"2020-06-09T21:07:11Z","author_association":"OWNER","active_lock_reason":null,"body":"With handlebars, see https://github.com/SergioBenitez/Rocket/tree/v0.4/examples/handlebars_templates","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1403","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1403/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1403/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1403/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/1403","id":671833582,"node_id":"MDU6SXNzdWU2NzE4MzM1ODI=","number":1403,"title":"sqlite_pool + confliflicting dependencies on r2d2_sqlite version","user":{"login":"ajvok","id":19605038,"node_id":"MDQ6VXNlcjE5NjA1MDM4","avatar_url":"https://avatars2.githubusercontent.com/u/19605038?v=4","gravatar_id":"","url":"https://api.github.com/users/ajvok","html_url":"https://github.com/ajvok","followers_url":"https://api.github.com/users/ajvok/followers","following_url":"https://api.github.com/users/ajvok/following{/other_user}","gists_url":"https://api.github.com/users/ajvok/gists{/gist_id}","starred_url":"https://api.github.com/users/ajvok/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajvok/subscriptions","organizations_url":"https://api.github.com/users/ajvok/orgs","repos_url":"https://api.github.com/users/ajvok/repos","events_url":"https://api.github.com/users/ajvok/events{/privacy}","received_events_url":"https://api.github.com/users/ajvok/received_events","type":"User","site_admin":false},"labels":[{"id":343542067,"node_id":"MDU6TGFiZWwzNDM1NDIwNjc=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/duplicate","name":"duplicate","color":"cccccc","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-08-03T06:37:15Z","updated_at":"2020-08-03T06:43:51Z","closed_at":"2020-08-03T06:43:42Z","author_association":"NONE","active_lock_reason":null,"body":"Can't use sqlite_pool due to conflicting version dependencies on rusqlite.\r\n\r\nMy .toml has rusqlite = \"0.16.0\" as per the rocket documentation.\r\nHowever rocket_contrib v0.4.5 depends on `r2d2_sqlite v0.6.0` which depends on  `rusqlite v0.14.0`\r\nIs there a way to get around this? Thanks.\r\n\r\n\r\n>  1. The version of Rocket you're using. Ensure it's the latest, if possible.\r\n\r\nRocket 0.4.5\r\n\r\n>  2. The operating system (distribution and version) where the issue occurs.\r\n\r\nDebian 10\r\n\r\n>  3. A brief description of the bug that includes:\r\n\r\nI'm trying to use sqlite_pool.\r\nAs per https://rocket.rs/v0.4/guide/state/#databases I'm using rusqlite 0.16 with rusqlite::Connection\r\n\r\nThis fails to build as...\r\n\r\nerror: multiple packages link to native library `sqlite3`, but a native library can be linked only once\r\n\r\npackage `libsqlite3-sys v0.9.1`\r\n    ... which is depended on by `rusqlite v0.14.0`\r\n    ... which is depended on by `r2d2_sqlite v0.6.0`\r\n    ... which is depended on by `rocket_contrib v0.4.5`\r\n    ... which is depended on by `web v0.1.0 (mytest)`\r\nlinks to native library `sqlite3`\r\n\r\npackage `libsqlite3-sys v0.11.1`\r\n    ... which is depended on by `rusqlite v0.16.0`\r\n    ... which is depended on by `web v0.1.0 (mytest)`\r\nalso links to native library `sqlite3`\r\n\r\n\r\n \r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/852","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/852/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/852/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/852/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/852","id":389061706,"node_id":"MDU6SXNzdWUzODkwNjE3MDY=","number":852,"title":"Revamp Configuration","user":{"login":"svenstaro","id":1664,"node_id":"MDQ6VXNlcjE2NjQ=","avatar_url":"https://avatars0.githubusercontent.com/u/1664?v=4","gravatar_id":"","url":"https://api.github.com/users/svenstaro","html_url":"https://github.com/svenstaro","followers_url":"https://api.github.com/users/svenstaro/followers","following_url":"https://api.github.com/users/svenstaro/following{/other_user}","gists_url":"https://api.github.com/users/svenstaro/gists{/gist_id}","starred_url":"https://api.github.com/users/svenstaro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/svenstaro/subscriptions","organizations_url":"https://api.github.com/users/svenstaro/orgs","repos_url":"https://api.github.com/users/svenstaro/repos","events_url":"https://api.github.com/users/svenstaro/events{/privacy}","received_events_url":"https://api.github.com/users/svenstaro/received_events","type":"User","site_admin":false},"labels":[{"id":343542068,"node_id":"MDU6TGFiZWwzNDM1NDIwNjg=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/SergioBenitez/Rocket/milestones/8","html_url":"https://github.com/SergioBenitez/Rocket/milestone/8","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/milestones/8/labels","id":2300325,"node_id":"MDk6TWlsZXN0b25lMjMwMDMyNQ==","number":8,"title":"0.5.0","description":null,"creator":{"login":"SergioBenitez","id":1480321,"node_id":"MDQ6VXNlcjE0ODAzMjE=","avatar_url":"https://avatars3.githubusercontent.com/u/1480321?v=4","gravatar_id":"","url":"https://api.github.com/users/SergioBenitez","html_url":"https://github.com/SergioBenitez","followers_url":"https://api.github.com/users/SergioBenitez/followers","following_url":"https://api.github.com/users/SergioBenitez/following{/other_user}","gists_url":"https://api.github.com/users/SergioBenitez/gists{/gist_id}","starred_url":"https://api.github.com/users/SergioBenitez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SergioBenitez/subscriptions","organizations_url":"https://api.github.com/users/SergioBenitez/orgs","repos_url":"https://api.github.com/users/SergioBenitez/repos","events_url":"https://api.github.com/users/SergioBenitez/events{/privacy}","received_events_url":"https://api.github.com/users/SergioBenitez/received_events","type":"User","site_admin":false},"open_issues":5,"closed_issues":16,"state":"open","created_at":"2017-02-05T07:58:22Z","updated_at":"2020-10-21T03:38:20Z","due_on":null,"closed_at":null},"comments":9,"created_at":"2018-12-09T20:40:04Z","updated_at":"2020-10-21T02:28:29Z","closed_at":"2020-10-21T02:27:34Z","author_association":"NONE","active_lock_reason":null,"body":"As per discussion on IRC, I think the config file handling should be revamped. The current three fixed environment system doesn't scale and if you need more you have to work around that limit. That's not nice. Also, the current extras aren't typed and are cumbersome to use.\r\n\r\nBelow are some general goals that a new system should fulfill.\r\n\r\n## Goals\r\n\r\n- [x] Get rid of the current rigid enum `Environment` structure.\r\n- [x] Allow the config to be provided via environment variables, a single config file, separate config files, or plain code.\r\n- [x] Allow for default environments still but you should easily be able to define your own set of environments.\r\n- [x] Allow for strongly typed user configs (instead of the current `extras`).\r\n\r\n## Considerations\r\n\r\n- Maybe use [config-rs](https://github.com/mehcode/config-rs)?\r\n- The current three environments fulfill the purposes of providing a bunch of defaults as well as safety checks. If we get rid of those rigid environments and if the environment are dynamic, it won't be possible to do this for a specific pre-defined environment anymore. Therefore, in order to keep a safety switch on by default, I propose we make everything safe by default. For local development (and perhaps tests and such) where we don't care about safe defaults, we can have a `ROCKET_DEBUG` env var. Since the configs are isomorphic, this will translate to `config.debug` in code.\r\n- Generally speaking, I don't think we should be talking about _Rocket_ configuration but about _app_ configuration and Rocket should then just be able to take what it needs from the app configuration.\r\n\r\n  Currently the user is supposed to stuff all of their custom config into Rocket like it's a weird thing to have extra config. I think this is the wrong way around. Rather than that, there should some general app config and Rocket should just take from that whatever it needs (like port, address, etc). For instance, if we provided a TOML config file, we might have this in our new, Rocket-unspecific `app.toml`:\r\n\r\n  ```\r\n  [general]\r\n  app_name = \"hello\"\r\n  twitter_api_key = \"something\"\r\n\r\n  [rocket]\r\n  address = \"0.0.0.0\"\r\n  port = 8080\r\n  ```\r\n\r\n  This illustration obviously glances over the problem with environments but it's how I imagine this to work. Likewise, if we're talking about environment variables, the above example would look like this:\r\n\r\n  ```\r\n  APP_NAME=\"hello\"\r\n  TWITTER_API_KEY=\"something\"\r\n  ROCKET_ADDRESS=\"0.0.0.0\"\r\n  ROCKET_PORT=8080\r\n  ```\r\n- Provide sane default environments and stay compatible with the current solution by having `rocket::ignite()` do essentially the same thing as now but then also have `rocket::ignite_with_config(???)` which would allow for custom configuration. I'm not quite sure what to pass in there yet as I do not just want it to be a single file of some sort. Perhaps a `HashMap` as provided by config-rs?\r\n\r\n## Past discussions\r\n\r\nThis issue takes some inspiration from #145 and #317. There are also #290 and #677 which would be addressed by this.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1064","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1064/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1064/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1064/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/1064","id":475945556,"node_id":"MDU6SXNzdWU0NzU5NDU1NTY=","number":1064,"title":"Can Template::custom() take an FnOnce?","user":{"login":"ascclemens","id":955250,"node_id":"MDQ6VXNlcjk1NTI1MA==","avatar_url":"https://avatars0.githubusercontent.com/u/955250?v=4","gravatar_id":"","url":"https://api.github.com/users/ascclemens","html_url":"https://github.com/ascclemens","followers_url":"https://api.github.com/users/ascclemens/followers","following_url":"https://api.github.com/users/ascclemens/following{/other_user}","gists_url":"https://api.github.com/users/ascclemens/gists{/gist_id}","starred_url":"https://api.github.com/users/ascclemens/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ascclemens/subscriptions","organizations_url":"https://api.github.com/users/ascclemens/orgs","repos_url":"https://api.github.com/users/ascclemens/repos","events_url":"https://api.github.com/users/ascclemens/events{/privacy}","received_events_url":"https://api.github.com/users/ascclemens/received_events","type":"User","site_admin":false},"labels":[{"id":442152232,"node_id":"MDU6TGFiZWw0NDIxNTIyMzI=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/request","name":"request","color":"fbca04","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"jebrosen","id":7102588,"node_id":"MDQ6VXNlcjcxMDI1ODg=","avatar_url":"https://avatars0.githubusercontent.com/u/7102588?v=4","gravatar_id":"","url":"https://api.github.com/users/jebrosen","html_url":"https://github.com/jebrosen","followers_url":"https://api.github.com/users/jebrosen/followers","following_url":"https://api.github.com/users/jebrosen/following{/other_user}","gists_url":"https://api.github.com/users/jebrosen/gists{/gist_id}","starred_url":"https://api.github.com/users/jebrosen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jebrosen/subscriptions","organizations_url":"https://api.github.com/users/jebrosen/orgs","repos_url":"https://api.github.com/users/jebrosen/repos","events_url":"https://api.github.com/users/jebrosen/events{/privacy}","received_events_url":"https://api.github.com/users/jebrosen/received_events","type":"User","site_admin":false},"assignees":[{"login":"jebrosen","id":7102588,"node_id":"MDQ6VXNlcjcxMDI1ODg=","avatar_url":"https://avatars0.githubusercontent.com/u/7102588?v=4","gravatar_id":"","url":"https://api.github.com/users/jebrosen","html_url":"https://github.com/jebrosen","followers_url":"https://api.github.com/users/jebrosen/followers","following_url":"https://api.github.com/users/jebrosen/following{/other_user}","gists_url":"https://api.github.com/users/jebrosen/gists{/gist_id}","starred_url":"https://api.github.com/users/jebrosen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jebrosen/subscriptions","organizations_url":"https://api.github.com/users/jebrosen/orgs","repos_url":"https://api.github.com/users/jebrosen/repos","events_url":"https://api.github.com/users/jebrosen/events{/privacy}","received_events_url":"https://api.github.com/users/jebrosen/received_events","type":"User","site_admin":false}],"milestone":null,"comments":10,"created_at":"2019-08-02T00:38:24Z","updated_at":"2020-11-04T10:54:39Z","closed_at":"2020-11-04T10:54:39Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rocket version: 0.4.2\r\nSteps I've taken to answer the question myself: looked at the source and mentally examined the needs of such a closure.\r\nDocumentation I believe should include an answer: none.\r\n\r\nBasically, see title. Is there a need for `Template::custom()` to take `Fn` instead of `FnOnce`?\r\n\r\nI would like to initialise some values and do error handling outside of the closure, then move a value inside the closure and use it there. Unfortunately, this is not possible, since the type is not `Copy` nor `Clone`.\r\n\r\n```rust\r\nfn main() {\r\n  // not copy or clone\r\n  let something = do_some_initialisation();\r\n\r\n  rocket::ignite()\r\n    .attach(Template::custom(move |engines| {\r\n      // move `something` in here\r\n    })\r\n    .launch();\r\n}\r\n```\r\n\r\nThis is currently impossible due to the constraints of `Fn`.\r\n\r\nIf `Template::custom()` can take an `FnOnce`, I'd be happy to PR such a change. :)","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/w4/bin/issues/14","repository_url":"https://api.github.com/repos/w4/bin","labels_url":"https://api.github.com/repos/w4/bin/issues/14/labels{/name}","comments_url":"https://api.github.com/repos/w4/bin/issues/14/comments","events_url":"https://api.github.com/repos/w4/bin/issues/14/events","html_url":"https://github.com/w4/bin/issues/14","id":651283220,"node_id":"MDU6SXNzdWU2NTEyODMyMjA=","number":14,"title":"Dockerfile does not build","user":{"login":"dabeeeenster","id":173290,"node_id":"MDQ6VXNlcjE3MzI5MA==","avatar_url":"https://avatars2.githubusercontent.com/u/173290?v=4","gravatar_id":"","url":"https://api.github.com/users/dabeeeenster","html_url":"https://github.com/dabeeeenster","followers_url":"https://api.github.com/users/dabeeeenster/followers","following_url":"https://api.github.com/users/dabeeeenster/following{/other_user}","gists_url":"https://api.github.com/users/dabeeeenster/gists{/gist_id}","starred_url":"https://api.github.com/users/dabeeeenster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dabeeeenster/subscriptions","organizations_url":"https://api.github.com/users/dabeeeenster/orgs","repos_url":"https://api.github.com/users/dabeeeenster/repos","events_url":"https://api.github.com/users/dabeeeenster/events{/privacy}","received_events_url":"https://api.github.com/users/dabeeeenster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-07-06T06:25:24Z","updated_at":"2020-07-07T15:08:28Z","closed_at":"2020-07-07T15:08:28Z","author_association":"NONE","active_lock_reason":null,"body":"Getting this when running `docker build`:\r\n\r\n```\r\n   Compiling rocket_http v0.5.0-dev (https://github.com/SergioBenitez/Rocket?branch=async#78c8ac8c)\r\n   Compiling askama_shared v0.9.1\r\nerror: proc macro panicked\r\n   --> /usr/local/cargo/git/checkouts/rocket-8bf16d9ca7e90bdc/78c8ac8/core/http/src/parse/uri/parser.rs:119:34\r\n    |\r\n119 |             let path_and_query = pear_try!(path_and_query(is_pchar));\r\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    |\r\n    = help: message: called `Option::unwrap()` on a `None` value\r\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `rocket_http`.\r\n\r\nTo learn more, run the command again with --verbose.\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: build failed\r\nThe command '/bin/sh -c cargo +nightly build --release' returned a non-zero code: 101\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/kreibaum/pacosako/issues/14","repository_url":"https://api.github.com/repos/kreibaum/pacosako","labels_url":"https://api.github.com/repos/kreibaum/pacosako/issues/14/labels{/name}","comments_url":"https://api.github.com/repos/kreibaum/pacosako/issues/14/comments","events_url":"https://api.github.com/repos/kreibaum/pacosako/issues/14/events","html_url":"https://github.com/kreibaum/pacosako/issues/14","id":638162529,"node_id":"MDU6SXNzdWU2MzgxNjI1Mjk=","number":14,"title":"Can't connect to websocket on gitpod","user":{"login":"kreibaum","id":48726499,"node_id":"MDQ6VXNlcjQ4NzI2NDk5","avatar_url":"https://avatars0.githubusercontent.com/u/48726499?v=4","gravatar_id":"","url":"https://api.github.com/users/kreibaum","html_url":"https://github.com/kreibaum","followers_url":"https://api.github.com/users/kreibaum/followers","following_url":"https://api.github.com/users/kreibaum/following{/other_user}","gists_url":"https://api.github.com/users/kreibaum/gists{/gist_id}","starred_url":"https://api.github.com/users/kreibaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kreibaum/subscriptions","organizations_url":"https://api.github.com/users/kreibaum/orgs","repos_url":"https://api.github.com/users/kreibaum/repos","events_url":"https://api.github.com/users/kreibaum/events{/privacy}","received_events_url":"https://api.github.com/users/kreibaum/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-06-13T13:30:05Z","updated_at":"2020-06-13T14:07:52Z","closed_at":"2020-06-13T14:07:52Z","author_association":"OWNER","active_lock_reason":null,"body":"Our websocket connection opens on ws://localhost:3012 which is then remapped by gitpod to wss://3012-uuid.gitpod.io:443 while the frontend assumes the websocket to live at ws://8080-uuid.gitpod.io:3012.\r\n\r\nhttps://github.com/gitpod-io/gitpod/issues/435\r\n\r\nWe can't host the websocket on the same port as the rocket webserver until rocket supports websockets.\r\n\r\nhttps://github.com/SergioBenitez/Rocket/issues/90","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1185","repository_url":"https://api.github.com/repos/SergioBenitez/Rocket","labels_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1185/labels{/name}","comments_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1185/comments","events_url":"https://api.github.com/repos/SergioBenitez/Rocket/issues/1185/events","html_url":"https://github.com/SergioBenitez/Rocket/issues/1185","id":536734515,"node_id":"MDU6SXNzdWU1MzY3MzQ1MTU=","number":1185,"title":"Shouldn't hyper::header::Authorization be in headers instead of items?","user":{"login":"InstinctBas","id":43229372,"node_id":"MDQ6VXNlcjQzMjI5Mzcy","avatar_url":"https://avatars3.githubusercontent.com/u/43229372?v=4","gravatar_id":"","url":"https://api.github.com/users/InstinctBas","html_url":"https://github.com/InstinctBas","followers_url":"https://api.github.com/users/InstinctBas/followers","following_url":"https://api.github.com/users/InstinctBas/following{/other_user}","gists_url":"https://api.github.com/users/InstinctBas/gists{/gist_id}","starred_url":"https://api.github.com/users/InstinctBas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/InstinctBas/subscriptions","organizations_url":"https://api.github.com/users/InstinctBas/orgs","repos_url":"https://api.github.com/users/InstinctBas/repos","events_url":"https://api.github.com/users/InstinctBas/events{/privacy}","received_events_url":"https://api.github.com/users/InstinctBas/received_events","type":"User","site_admin":false},"labels":[{"id":758541123,"node_id":"MDU6TGFiZWw3NTg1NDExMjM=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/deficiency","name":"deficiency","color":"fc2929","default":false,"description":null},{"id":567172509,"node_id":"MDU6TGFiZWw1NjcxNzI1MDk=","url":"https://api.github.com/repos/SergioBenitez/Rocket/labels/upstream","name":"upstream","color":"0052cc","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2019-12-12T03:24:24Z","updated_at":"2020-07-30T06:01:14Z","closed_at":"2020-07-30T06:01:14Z","author_association":"NONE","active_lock_reason":null,"body":"I'm getting a compilation error on this code:\r\n```\r\nlet client = Client::new(rocket()).expect(\"valid rocket instance\");\r\nlet mut response = client\r\n\t.get(\"/someurl\")\r\n\t.header(header::Host {\r\n\t\thostname: hostname.to_owned(),\r\n\t\tport: None,\r\n\t})\r\n\t.header(header::Authorization(\r\n\t\theader::Bearer { token: token.to_owned() }\r\n\t))\r\n\t.dispatch();\r\n```\r\n\r\nWhich is:\r\n```\r\nthe trait `std::convert::From<rocket::http::hyper::header::Authorization<rocket::http::hyper::header::Bearer>>` is not implemented for `rocket::http::Header<'static>`\r\n```\r\nIf I understand the code here:\r\nhttps://github.com/SergioBenitez/Rocket/blob/master/core/http/src/hyper.rs#L49\r\ncorrectly, shouldn't Authorization be in `import_hyper_headers!` instead of `import_hyper_items!` ?\r\n","performed_via_github_app":null,"score":1.0}]}
0

