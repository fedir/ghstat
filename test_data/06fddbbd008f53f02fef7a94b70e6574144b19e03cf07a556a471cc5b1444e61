HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:08:19 GMT
Link: <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fweavejester%2Fcompojure+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fweavejester%2Fcompojure+type%3Aissue+state%3Aclosed&page=3>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: D164:5C52:203717B:2511266:5FB01D12
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 28
X-Ratelimit-Reset: 1605377359
X-Ratelimit-Used: 2
X-Xss-Protection: 1; mode=block

19c37
{"total_count":61,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/nginx-clojure/nginx-clojure/issues/182","repository_url":"https://api.github.com/repos/nginx-clojure/nginx-clojure","labels_url":"https://api.github.com/repos/nginx-clojure/nginx-clojure/issues/182/labels{/name}","comments_url":"https://api.github.com/repos/nginx-clojure/nginx-clojure/issues/182/comments","events_url":"https://api.github.com/repos/nginx-clojure/nginx-clojure/issues/182/events","html_url":"https://github.com/nginx-clojure/nginx-clojure/issues/182","id":244995648,"node_id":"MDU6SXNzdWUyNDQ5OTU2NDg=","number":182,"title":"Old compojure dependecy","user":{"login":"SergeyKozachenko","id":1427311,"node_id":"MDQ6VXNlcjE0MjczMTE=","avatar_url":"https://avatars2.githubusercontent.com/u/1427311?v=4","gravatar_id":"","url":"https://api.github.com/users/SergeyKozachenko","html_url":"https://github.com/SergeyKozachenko","followers_url":"https://api.github.com/users/SergeyKozachenko/followers","following_url":"https://api.github.com/users/SergeyKozachenko/following{/other_user}","gists_url":"https://api.github.com/users/SergeyKozachenko/gists{/gist_id}","starred_url":"https://api.github.com/users/SergeyKozachenko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SergeyKozachenko/subscriptions","organizations_url":"https://api.github.com/users/SergeyKozachenko/orgs","repos_url":"https://api.github.com/users/SergeyKozachenko/repos","events_url":"https://api.github.com/users/SergeyKozachenko/events{/privacy}","received_events_url":"https://api.github.com/users/SergeyKozachenko/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/nginx-clojure/nginx-clojure/milestones/16","html_url":"https://github.com/nginx-clojure/nginx-clojure/milestone/16","labels_url":"https://api.github.com/repos/nginx-clojure/nginx-clojure/milestones/16/labels","id":4780993,"node_id":"MDk6TWlsZXN0b25lNDc4MDk5Mw==","number":16,"title":"0.5.0","description":"","creator":{"login":"xfeep","id":6120241,"node_id":"MDQ6VXNlcjYxMjAyNDE=","avatar_url":"https://avatars3.githubusercontent.com/u/6120241?v=4","gravatar_id":"","url":"https://api.github.com/users/xfeep","html_url":"https://github.com/xfeep","followers_url":"https://api.github.com/users/xfeep/followers","following_url":"https://api.github.com/users/xfeep/following{/other_user}","gists_url":"https://api.github.com/users/xfeep/gists{/gist_id}","starred_url":"https://api.github.com/users/xfeep/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xfeep/subscriptions","organizations_url":"https://api.github.com/users/xfeep/orgs","repos_url":"https://api.github.com/users/xfeep/repos","events_url":"https://api.github.com/users/xfeep/events{/privacy}","received_events_url":"https://api.github.com/users/xfeep/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":9,"state":"closed","created_at":"2019-10-24T15:51:16Z","updated_at":"2019-11-12T16:40:42Z","due_on":null,"closed_at":"2019-11-11T08:24:47Z"},"comments":10,"created_at":"2017-07-24T07:38:05Z","updated_at":"2019-10-26T16:24:04Z","closed_at":"2019-10-26T16:24:03Z","author_association":"NONE","active_lock_reason":null,"body":"`NginxEmbedServer` spins off with old version of compojure, which still has the middleware ordering bug (https://github.com/weavejester/compojure/pull/157).\r\n\r\n>nginx-clojure for some reason depends on compojure 1.1.6, which is really ancient.\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/weavejester/compojure/issues/191","repository_url":"https://api.github.com/repos/weavejester/compojure","labels_url":"https://api.github.com/repos/weavejester/compojure/issues/191/labels{/name}","comments_url":"https://api.github.com/repos/weavejester/compojure/issues/191/comments","events_url":"https://api.github.com/repos/weavejester/compojure/issues/191/events","html_url":"https://github.com/weavejester/compojure/issues/191","id":522983296,"node_id":"MDU6SXNzdWU1MjI5ODMyOTY=","number":191,"title":"access :compojure/route in the response object","user":{"login":"rutchkiwi","id":512819,"node_id":"MDQ6VXNlcjUxMjgxOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/512819?v=4","gravatar_id":"","url":"https://api.github.com/users/rutchkiwi","html_url":"https://github.com/rutchkiwi","followers_url":"https://api.github.com/users/rutchkiwi/followers","following_url":"https://api.github.com/users/rutchkiwi/following{/other_user}","gists_url":"https://api.github.com/users/rutchkiwi/gists{/gist_id}","starred_url":"https://api.github.com/users/rutchkiwi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rutchkiwi/subscriptions","organizations_url":"https://api.github.com/users/rutchkiwi/orgs","repos_url":"https://api.github.com/users/rutchkiwi/repos","events_url":"https://api.github.com/users/rutchkiwi/events{/privacy}","received_events_url":"https://api.github.com/users/rutchkiwi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-11-14T16:53:31Z","updated_at":"2019-11-14T17:59:20Z","closed_at":"2019-11-14T17:48:29Z","author_association":"NONE","active_lock_reason":null,"body":"First of all, thanks for this great library!\r\n\r\nI would like to access the `:compojure/route` object in a ring middleware \"outside\" of defroutes.\r\n\r\nThis would allow me to automatically log, and get automatically get request timings on a route level.\r\n\r\nFor example:\r\n```clojure\r\n(defn request-logging [handler]\r\n  (fn [request]\r\n    (let [\r\n          tic-ns   (. System (nanoTime))\r\n          response (handler request)\r\n          toc-ns   (. System (nanoTime))\r\n          time-ms  (float (/ (- toc-ns tic-ns) 1000000))]\r\n       (jdbc/insert db \"logs\" {:route (response :compojure/route) :time time-ms}\r\n      response)))\r\n\r\n(defroutes app-routes\r\n     (GET \"/product/:productid\" request\r\n        (format \"viewing product %s\" (get-in (request [:params :productid]))\r\n\r\n(def app \r\n  (-> app-routes request-logging))\r\n```\r\n\r\n(not actually working code but illustrates my point)\r\n\r\nOnce I have done that, I'd be able to automatically show the average response times of different routes by some sql like \r\n```sql\r\nselect route, avg(time) from logs group by route\r\n```\r\nNote that I want the average time of all product requests, not separate entries for each product.\r\n\r\n---\r\n\r\nI believe this could be accomplished by modifying this line: https://github.com/weavejester/compojure/blob/bb2fcc7ffdc910555d24ff64a8e7ffacb2c1c478/src/compojure/core.clj#L137\r\n\r\ninto something like this:\r\n\r\n```clojure\r\n(let [response (handler (assoc request :compojure/route route-info))]\r\n  (assoc response :compojure/route route-info))\r\n```\r\n\r\nWould you be open to a PR like this? Or is there perhaps already a way to accomplish this withoutout any changes to compojure?\r\n   \r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/seancorfield/clj-new/issues/22","repository_url":"https://api.github.com/repos/seancorfield/clj-new","labels_url":"https://api.github.com/repos/seancorfield/clj-new/issues/22/labels{/name}","comments_url":"https://api.github.com/repos/seancorfield/clj-new/issues/22/comments","events_url":"https://api.github.com/repos/seancorfield/clj-new/issues/22/events","html_url":"https://github.com/seancorfield/clj-new/issues/22","id":476482948,"node_id":"MDU6SXNzdWU0NzY0ODI5NDg=","number":22,"title":"compojure template fails to create deps.edn","user":{"login":"jr0cket","id":250870,"node_id":"MDQ6VXNlcjI1MDg3MA==","avatar_url":"https://avatars2.githubusercontent.com/u/250870?v=4","gravatar_id":"","url":"https://api.github.com/users/jr0cket","html_url":"https://github.com/jr0cket","followers_url":"https://api.github.com/users/jr0cket/followers","following_url":"https://api.github.com/users/jr0cket/following{/other_user}","gists_url":"https://api.github.com/users/jr0cket/gists{/gist_id}","starred_url":"https://api.github.com/users/jr0cket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jr0cket/subscriptions","organizations_url":"https://api.github.com/users/jr0cket/orgs","repos_url":"https://api.github.com/users/jr0cket/repos","events_url":"https://api.github.com/users/jr0cket/events{/privacy}","received_events_url":"https://api.github.com/users/jr0cket/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-08-03T19:38:38Z","updated_at":"2019-08-03T20:00:55Z","closed_at":"2019-08-03T19:57:44Z","author_association":"NONE","active_lock_reason":null,"body":"Using the https://github.com/weavejester/compojure-template to create projects with clj-new fails to create a `deps.edn` file.\r\n\r\n`clojure -A:new compojure practicalli/compojure-website`\r\n\r\nThis creates the following project files, but a `deps.edn` file is not created.\r\n```\r\ncompojure-website-cli\r\n├── project.clj\r\n├── README.md\r\n├── resources\r\n│   └── public\r\n├── src\r\n│   └── practicalli\r\n│       └── compojure_website\r\n│           └── handler.clj\r\n└── test\r\n    └── practicalli\r\n        └── compojure_website\r\n            └── handler_test.clj\r\n```\r\n\r\nUsing the multi-segment name the same files are produced, without the `deps.edn` file again\r\n\r\n`clojure -A:new compojure practicalli.my-website `\r\n\r\nUsing the following leiningen command, the same project files are created and content in all files are identical.\r\n\r\n`lein new compojure practicalli/compojure-website`\r\n\r\n`clj-new` version 0.7.6 is used by adding an alias to the `$HOME/.clojure/deps.edn` file\r\n\r\n```\r\n :aliases\r\n {:new {:extra-deps {seancorfield/clj-new\r\n                     {:mvn/version \"0.7.6\"}}\r\n        :main-opts  [\"-m\" \"clj-new.create\"]}}\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/fsantiag/sonar-clojure/issues/28","repository_url":"https://api.github.com/repos/fsantiag/sonar-clojure","labels_url":"https://api.github.com/repos/fsantiag/sonar-clojure/issues/28/labels{/name}","comments_url":"https://api.github.com/repos/fsantiag/sonar-clojure/issues/28/comments","events_url":"https://api.github.com/repos/fsantiag/sonar-clojure/issues/28/events","html_url":"https://github.com/fsantiag/sonar-clojure/issues/28","id":427169473,"node_id":"MDU6SXNzdWU0MjcxNjk0NzM=","number":28,"title":"Plugin doesnt work","user":{"login":"uehlbran","id":33069395,"node_id":"MDQ6VXNlcjMzMDY5Mzk1","avatar_url":"https://avatars1.githubusercontent.com/u/33069395?v=4","gravatar_id":"","url":"https://api.github.com/users/uehlbran","html_url":"https://github.com/uehlbran","followers_url":"https://api.github.com/users/uehlbran/followers","following_url":"https://api.github.com/users/uehlbran/following{/other_user}","gists_url":"https://api.github.com/users/uehlbran/gists{/gist_id}","starred_url":"https://api.github.com/users/uehlbran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uehlbran/subscriptions","organizations_url":"https://api.github.com/users/uehlbran/orgs","repos_url":"https://api.github.com/users/uehlbran/repos","events_url":"https://api.github.com/users/uehlbran/events{/privacy}","received_events_url":"https://api.github.com/users/uehlbran/received_events","type":"User","site_admin":false},"labels":[{"id":901768707,"node_id":"MDU6TGFiZWw5MDE3Njg3MDc=","url":"https://api.github.com/repos/fsantiag/sonar-clojure/labels/bug","name":"bug","color":"d73a4a","default":true,"description":"Something isn't working"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2019-03-29T20:39:58Z","updated_at":"2019-05-27T03:31:34Z","closed_at":"2019-05-27T03:31:34Z","author_association":"NONE","active_lock_reason":null,"body":"**Describe the bug**\r\nI've tried running SonarQube versions (6.7.6, 7.0, 7.1, and 7.4) and none of the information from this plugin is reaching SonarQube. I've tried multiple Clojure libraries, and tons of different build options, but nothing changes. Your instructions appear to be out of date, but I'm not sure this is really a big issue. Most of those libraries you recommend are ether broken, have changed or some other variation that is causing issues, but after digging through conf files and error reports for the past 2 days I resolved those issues (not your fault of course). However, no information is still reaching SonarQube.\r\n\r\n**How to reproduce**\r\nFollow your directions on a fresh install of sonarqube.\r\n\r\n**Expected behavior**\r\nI expected it to actually show things like lines of code and other information. The normal stuff. It did not :(.\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/weavejester/compojure/issues/68","repository_url":"https://api.github.com/repos/weavejester/compojure","labels_url":"https://api.github.com/repos/weavejester/compojure/issues/68/labels{/name}","comments_url":"https://api.github.com/repos/weavejester/compojure/issues/68/comments","events_url":"https://api.github.com/repos/weavejester/compojure/issues/68/events","html_url":"https://github.com/weavejester/compojure/issues/68","id":8514386,"node_id":"MDU6SXNzdWU4NTE0Mzg2","number":68,"title":"How to check if any routes match?","user":{"login":"sjl","id":58365,"node_id":"MDQ6VXNlcjU4MzY1","avatar_url":"https://avatars0.githubusercontent.com/u/58365?v=4","gravatar_id":"","url":"https://api.github.com/users/sjl","html_url":"https://github.com/sjl","followers_url":"https://api.github.com/users/sjl/followers","following_url":"https://api.github.com/users/sjl/following{/other_user}","gists_url":"https://api.github.com/users/sjl/gists{/gist_id}","starred_url":"https://api.github.com/users/sjl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sjl/subscriptions","organizations_url":"https://api.github.com/users/sjl/orgs","repos_url":"https://api.github.com/users/sjl/repos","events_url":"https://api.github.com/users/sjl/events{/privacy}","received_events_url":"https://api.github.com/users/sjl/received_events","type":"User","site_admin":false},"labels":[{"id":3043,"node_id":"MDU6TGFiZWwzMDQz","url":"https://api.github.com/repos/weavejester/compojure/labels/feature","name":"feature","color":"207de5","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2012-11-20T18:05:41Z","updated_at":"2019-02-07T19:24:04Z","closed_at":"2017-05-29T20:55:28Z","author_association":"NONE","active_lock_reason":null,"body":"Is there a way to take a handler defined with `defroutes` and check if a given\nURI (or request map) would get routed to something without actually performing\nit?\n\nHere's the use case: I want to normalize trailing slashes correctly.  In\na nutshell, I need to write a middleware that does the following:\n- If the given request matches a route, just pass it through and do nothing else.\n- Otherwise, _if and only if the request + a trailing slash would route somewhere_, return a 301 to that URI.\n- Otherwise 404.\n\nIt's easy to just always return a redirect when you get a 404 back, but this is\nbad because requesting `/bad-url` will return a `301 MOVED PERMANENTLY` to\n`/bad-url/` which actually ends up 404'ing.  I want to 404 at the original URL\nin that case.\n\nSo I need a way to check if a given URI (or request map) would route to\na handler without actually running it through for real.\n\nJust matching `/foo/?` is not a solution, because then `/foo/` and `/foo` are\ntwo distinct URLs that point to the same thing, which is bad.  The non-canonical\none should get 301'ed to the canonical one.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/yncoder/yncoder.github.io/issues/44","repository_url":"https://api.github.com/repos/yncoder/yncoder.github.io","labels_url":"https://api.github.com/repos/yncoder/yncoder.github.io/issues/44/labels{/name}","comments_url":"https://api.github.com/repos/yncoder/yncoder.github.io/issues/44/comments","events_url":"https://api.github.com/repos/yncoder/yncoder.github.io/issues/44/events","html_url":"https://github.com/yncoder/yncoder.github.io/issues/44","id":258065579,"node_id":"MDU6SXNzdWUyNTgwNjU1Nzk=","number":44,"title":"准备 Clojure 开发环境","user":{"login":"ZhangRGK","id":4213847,"node_id":"MDQ6VXNlcjQyMTM4NDc=","avatar_url":"https://avatars1.githubusercontent.com/u/4213847?v=4","gravatar_id":"","url":"https://api.github.com/users/ZhangRGK","html_url":"https://github.com/ZhangRGK","followers_url":"https://api.github.com/users/ZhangRGK/followers","following_url":"https://api.github.com/users/ZhangRGK/following{/other_user}","gists_url":"https://api.github.com/users/ZhangRGK/gists{/gist_id}","starred_url":"https://api.github.com/users/ZhangRGK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZhangRGK/subscriptions","organizations_url":"https://api.github.com/users/ZhangRGK/orgs","repos_url":"https://api.github.com/users/ZhangRGK/repos","events_url":"https://api.github.com/users/ZhangRGK/events{/privacy}","received_events_url":"https://api.github.com/users/ZhangRGK/received_events","type":"User","site_admin":false},"labels":[{"id":704304396,"node_id":"MDU6TGFiZWw3MDQzMDQzOTY=","url":"https://api.github.com/repos/yncoder/yncoder.github.io/labels/%E5%AD%A6%E4%B9%A0","name":"学习","color":"61a74c","default":false,"description":null},{"id":148498055,"node_id":"MDU6TGFiZWwxNDg0OTgwNTU=","url":"https://api.github.com/repos/yncoder/yncoder.github.io/labels/%E6%8A%80%E6%9C%AF","name":"技术","color":"84b6eb","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-09-15T14:46:45Z","updated_at":"2018-12-31T08:38:00Z","closed_at":"2018-12-31T08:38:00Z","author_association":"MEMBER","active_lock_reason":null,"body":"## 安装 Oracle Java\r\n\r\n这个就不详细说了，安装 Java 的教程实在是太多了。\r\n\r\n同时别忘了配置好环境变量。\r\n\r\n## 安装 lein\r\n\r\n[leiningen](https://leiningen.org/) 是 Clojure 的项目管理工具。\r\n\r\n简单的说就是 gradle 之于 Java 的感觉\r\n\r\n### mac\r\n~~~\r\nbrew install leiningen\r\n~~~\r\n\r\n### linux\r\n\r\n跟随 leiningen 首页的指示安装即可\r\n\r\n### terminal 科学上网特别麻烦的 linux\r\n\r\n- 去 github 上下载最新的 release: [地址](https://github.com/technomancy/leiningen/releases);\r\n- 创建目录 `~/.lein/self-installs`\r\n- 把下载下来的 zip 文件重命名成 .jar 放到 self-installs 目录下 `mv leiningen-<version>-standalone.zip ~/.lein/self-installs/leiningen-<version>-standalone.jar`\r\n- 把官网的脚本保存成 /usr/local/bin/lein\r\n\r\n## 使用 lein\r\n\r\n~~~\r\nlein repl\r\n~~~\r\n\r\n~~~\r\nlein new my-project\r\n~~~\r\n\r\n## 编辑器\r\n\r\n- 编辑器推荐: VSCode 并且安装 Clojure 插件\r\n- IDE推荐: [cursive](https://cursive-ide.com/)\r\n\r\nEmacs 和 Vim 大神我就不多做推荐啦\r\n\r\n以上就是入门搭建开发环境的过程。\r\n\r\n对 Clojure 感兴趣的同学请给我留言支持。\r\n\r\n*顺便邀请本群最熟悉 Clojure 的纯哥( @gc87  )推荐一些入门书籍*","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/aleph-io/aleph/issues/424","repository_url":"https://api.github.com/repos/aleph-io/aleph","labels_url":"https://api.github.com/repos/aleph-io/aleph/issues/424/labels{/name}","comments_url":"https://api.github.com/repos/aleph-io/aleph/issues/424/comments","events_url":"https://api.github.com/repos/aleph-io/aleph/issues/424/events","html_url":"https://github.com/aleph-io/aleph/issues/424","id":379339887,"node_id":"MDU6SXNzdWUzNzkzMzk4ODc=","number":424,"title":"Aleph HTTP server stops serving requests","user":{"login":"ricardoekm","id":747894,"node_id":"MDQ6VXNlcjc0Nzg5NA==","avatar_url":"https://avatars0.githubusercontent.com/u/747894?v=4","gravatar_id":"","url":"https://api.github.com/users/ricardoekm","html_url":"https://github.com/ricardoekm","followers_url":"https://api.github.com/users/ricardoekm/followers","following_url":"https://api.github.com/users/ricardoekm/following{/other_user}","gists_url":"https://api.github.com/users/ricardoekm/gists{/gist_id}","starred_url":"https://api.github.com/users/ricardoekm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ricardoekm/subscriptions","organizations_url":"https://api.github.com/users/ricardoekm/orgs","repos_url":"https://api.github.com/users/ricardoekm/repos","events_url":"https://api.github.com/users/ricardoekm/events{/privacy}","received_events_url":"https://api.github.com/users/ricardoekm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2018-11-09T22:11:56Z","updated_at":"2018-11-11T05:38:37Z","closed_at":"2018-11-11T05:12:59Z","author_association":"NONE","active_lock_reason":null,"body":"We're replacing HTTP Kit by Aleph in an open source project ([restQL-core](https://github.com/B2W-BIT/restQL-server) and [restQL-server](https://github.com/B2W-BIT/restQL-server)) seeking performance and reliability improvements. \r\n\r\nWe're facing an issue where after a high load Aleph HTTP server stops serving requests, even hours after the load stops. It gets stuck in 503 error 503 Service Unavailable, like there's no more executors available. The only way to fix it is to restart the java process.\r\n\r\nTaking a thread dump, we've noticed that 2048 threads are stuck the following stack trace. 2048 is the max number of executors we're using. So indeed the pool is getting stucked and is being exhausted.\r\n\r\n```\r\njava.lang.Thread.State: WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x000000071ff00198> (a java.util.concurrent.CountDownLatch$Sync)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)\r\n        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)\r\n        at manifold.deferred.Deferred.deref(deferred.clj:441)\r\n        at clojure.core$deref.invokeStatic(core.clj:2228)\r\n        at clojure.core$deref.invoke(core.clj:2214)\r\n        at compojure.response$fn__233.invokeStatic(response.clj:51)\r\n        at compojure.response$fn__233.invoke(response.clj:35)\r\n        at compojure.response$fn__179$G__174__186.invoke(response.clj:7)\r\n        at compojure.response$fn__229.invokeStatic(response.clj:47)\r\n        at compojure.response$fn__229.invoke(response.clj:35)\r\n        at compojure.response$fn__179$G__174__186.invoke(response.clj:7)\r\n        at compojure.core$wrap_response$fn__622.invoke(core.clj:158)\r\n        at compojure.core$wrap_route_middleware$fn__606.invoke(core.clj:128)\r\n        at compojure.core$wrap_route_info$fn__611.invoke(core.clj:137)\r\n        at compojure.core$wrap_route_matches$fn__615.invoke(core.clj:146)\r\n        at compojure.core$routing$fn__630.invoke(core.clj:185)\r\n        at clojure.core$some.invokeStatic(core.clj:2592)\r\n        at clojure.core$some.invoke(core.clj:2583)\r\n        at compojure.core$routing.invokeStatic(core.clj:185)\r\n        at compojure.core$routing.doInvoke(core.clj:182)\r\n        at clojure.lang.RestFn.applyTo(RestFn.java:139)\r\n        at clojure.core$apply.invokeStatic(core.clj:648)\r\n        at clojure.core$apply.invoke(core.clj:641)\r\n        at compojure.core$routes$fn__634.invoke(core.clj:192)\r\n        at restql.server.exception_handler$wrap_exception_handling$fn__1266.invoke(exception_handler.clj:14)\r\n```\r\n\r\nThe ring handler line hanging is [wrap_response(core.clj:158)](https://github.com/B2W-BIT/restQL-server/blob/master/src/restql/server/async_handler.clj#L213) which in turn invokes Compoure default routes handler. It seems to be waiting deref of manifold, which in turn is created by Aleph HTTP client.\r\n\r\nOur interation with Aleph/Manifold is basic the below for the [server part](https://github.com/B2W-BIT/restQL-server/blob/master/src/restql/server/async_handler.clj):\r\n```clojure\r\n; Workaround Compojure thread blocking\r\n(extend-protocol Renderable\r\n  manifold.deferred.IDeferred\r\n  (render [d _] d))\r\n...\r\n    (m-stream/take!\r\n      (m-stream/->source\r\n        (go\r\n          (alt!\r\n            result-ch ([result]\r\n                        (log/debug {:time    (- (System/currentTimeMillis) time-before)\r\n                                :success true}\r\n                          \"restQL Query finished\")\r\n                        result)\r\n            error-ch ([err]\r\n                        (log/error {:time    (- (System/currentTimeMillis) time-before)\r\n                                :success false}\r\n                          \"restQL Query finished\")\r\n                        err)))))))\r\n```\r\n\r\nFor the [client part]( \r\nhttps://github.com/B2W-BIT/restQL-core/blob/master/src/main/restql/core/async_request.clj#L191):\r\n```clojure\r\n        request-map     {:url                (:url request)\r\n                          :request-method     (:http-method request)\r\n                          :content-type       \"application/json\"\r\n                          :resource           (:resource request)\r\n                          :connection-timeout request-timeout\r\n                          :request-timeout    request-timeout\r\n                          :read-timeout       request-timeout\r\n                          :query-params       (into (:query-params request) forward-params)\r\n                          :headers            (:headers request)\r\n                          :time               time-before\r\n                          :body               (some-> request :post-body)\r\n                          :pool               client-connection-pool\r\n                          :pool-timeout       request-timeout}]\r\n     (log/debug request-map \"Preparing request\")\r\n     ; Before Request hook\r\n     (hook/execute-hook query-opts :before-request request-map)\r\n     (d/on-realized (http/request request-map)\r\n                    #(request-respond-callback %\r\n                                              :request request\r\n                                              :request-timeout request-timeout\r\n                                              :query-opts query-opts\r\n                                              :time-before time-before\r\n                                              :output-ch output-ch)\r\n                    #(request-error-callback %\r\n                                              :request request\r\n                                              :request-timeout request-timeout\r\n                                              :query-opts query-opts\r\n                                              :time-before time-before\r\n                                              :output-ch output-ch)))))\r\n```\r\n\r\nGiven all timeouts are configured, there should be no reason for the deref be hanging forever. \r\n\r\nAny idea on what's might be going on or any troubleshooting tip?\r\n\r\nAny help is appreciated. Thanks a lot!\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/mogenslund/liquid/issues/20","repository_url":"https://api.github.com/repos/mogenslund/liquid","labels_url":"https://api.github.com/repos/mogenslund/liquid/issues/20/labels{/name}","comments_url":"https://api.github.com/repos/mogenslund/liquid/issues/20/comments","events_url":"https://api.github.com/repos/mogenslund/liquid/issues/20/events","html_url":"https://github.com/mogenslund/liquid/issues/20","id":364016379,"node_id":"MDU6SXNzdWUzNjQwMTYzNzk=","number":20,"title":"Move API doc to use Clojure doc tool","user":{"login":"tom-adsfund","id":3634745,"node_id":"MDQ6VXNlcjM2MzQ3NDU=","avatar_url":"https://avatars2.githubusercontent.com/u/3634745?v=4","gravatar_id":"","url":"https://api.github.com/users/tom-adsfund","html_url":"https://github.com/tom-adsfund","followers_url":"https://api.github.com/users/tom-adsfund/followers","following_url":"https://api.github.com/users/tom-adsfund/following{/other_user}","gists_url":"https://api.github.com/users/tom-adsfund/gists{/gist_id}","starred_url":"https://api.github.com/users/tom-adsfund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tom-adsfund/subscriptions","organizations_url":"https://api.github.com/users/tom-adsfund/orgs","repos_url":"https://api.github.com/users/tom-adsfund/repos","events_url":"https://api.github.com/users/tom-adsfund/events{/privacy}","received_events_url":"https://api.github.com/users/tom-adsfund/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-09-26T13:00:33Z","updated_at":"2018-09-27T21:10:45Z","closed_at":"2018-09-27T21:10:45Z","author_association":"NONE","active_lock_reason":null,"body":"I find the plain text on the website very hard to read!","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/metosin/reitit/issues/98","repository_url":"https://api.github.com/repos/metosin/reitit","labels_url":"https://api.github.com/repos/metosin/reitit/issues/98/labels{/name}","comments_url":"https://api.github.com/repos/metosin/reitit/issues/98/comments","events_url":"https://api.github.com/repos/metosin/reitit/issues/98/events","html_url":"https://github.com/metosin/reitit/issues/98","id":329762753,"node_id":"MDU6SXNzdWUzMjk3NjI3NTM=","number":98,"title":"Ring handler response coercion","user":{"login":"ikitommi","id":567532,"node_id":"MDQ6VXNlcjU2NzUzMg==","avatar_url":"https://avatars1.githubusercontent.com/u/567532?v=4","gravatar_id":"","url":"https://api.github.com/users/ikitommi","html_url":"https://github.com/ikitommi","followers_url":"https://api.github.com/users/ikitommi/followers","following_url":"https://api.github.com/users/ikitommi/following{/other_user}","gists_url":"https://api.github.com/users/ikitommi/gists{/gist_id}","starred_url":"https://api.github.com/users/ikitommi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ikitommi/subscriptions","organizations_url":"https://api.github.com/users/ikitommi/orgs","repos_url":"https://api.github.com/users/ikitommi/repos","events_url":"https://api.github.com/users/ikitommi/events{/privacy}","received_events_url":"https://api.github.com/users/ikitommi/received_events","type":"User","site_admin":false},"labels":[{"id":663476877,"node_id":"MDU6TGFiZWw2NjM0NzY4Nzc=","url":"https://api.github.com/repos/metosin/reitit/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-06-06T08:22:33Z","updated_at":"2018-08-27T15:52:01Z","closed_at":"2018-08-27T15:52:01Z","author_association":"MEMBER","active_lock_reason":null,"body":"With most Clojure ring-web libs, one can return anything from a handler and it get's coerced into a valid Ring Response:\r\n\r\n* Compojure: https://github.com/weavejester/compojure/blob/master/src/compojure/response.clj\r\n* Duct: https://github.com/duct-framework/module.web/blob/master/src/duct/handler/static.clj#L16\r\n\r\nReitit-ring should support something like this too, as otherwise, one has to always return a valid ring response map from handlers.\r\n\r\n# Suggestion\r\n\r\n* have a protocol `IntoResponse` and a middleware in `reitit.ring` to do this\r\n\r\nOptions how to integrate:\r\n\r\n# Easy\r\n\r\n*  by default, prepend that into all middleware chains by the `ring-router`\r\n*  configurable via `ring-router` options `::ring/wrap-handler`?\r\n\r\n# Simple\r\n\r\n* user must prepend the default middleware into al chains (via `::middleware/transform` option)\r\n* better control of what is happening?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/venantius/darg/issues/8","repository_url":"https://api.github.com/repos/venantius/darg","labels_url":"https://api.github.com/repos/venantius/darg/issues/8/labels{/name}","comments_url":"https://api.github.com/repos/venantius/darg/issues/8/comments","events_url":"https://api.github.com/repos/venantius/darg/issues/8/events","html_url":"https://github.com/venantius/darg/issues/8","id":41552009,"node_id":"MDU6SXNzdWU0MTU1MjAwOQ==","number":8,"title":"Set up Compojure","user":{"login":"venantius","id":1824859,"node_id":"MDQ6VXNlcjE4MjQ4NTk=","avatar_url":"https://avatars2.githubusercontent.com/u/1824859?v=4","gravatar_id":"","url":"https://api.github.com/users/venantius","html_url":"https://github.com/venantius","followers_url":"https://api.github.com/users/venantius/followers","following_url":"https://api.github.com/users/venantius/following{/other_user}","gists_url":"https://api.github.com/users/venantius/gists{/gist_id}","starred_url":"https://api.github.com/users/venantius/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/venantius/subscriptions","organizations_url":"https://api.github.com/users/venantius/orgs","repos_url":"https://api.github.com/users/venantius/repos","events_url":"https://api.github.com/users/venantius/events{/privacy}","received_events_url":"https://api.github.com/users/venantius/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-08-30T01:42:09Z","updated_at":"2018-05-26T13:01:01Z","closed_at":"2014-08-30T21:29:49Z","author_association":"OWNER","active_lock_reason":null,"body":"This is a subtask of #5 - we should use the `darg.core` namespace to set up some Compojure routes.\n\nhttps://github.com/weavejester/compojure\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/weavejester/compojure/issues/179","repository_url":"https://api.github.com/repos/weavejester/compojure","labels_url":"https://api.github.com/repos/weavejester/compojure/issues/179/labels{/name}","comments_url":"https://api.github.com/repos/weavejester/compojure/issues/179/comments","events_url":"https://api.github.com/repos/weavejester/compojure/issues/179/events","html_url":"https://github.com/weavejester/compojure/issues/179","id":292579467,"node_id":"MDU6SXNzdWUyOTI1Nzk0Njc=","number":179,"title":"Release with updated Ring?","user":{"login":"joephayes","id":2363198,"node_id":"MDQ6VXNlcjIzNjMxOTg=","avatar_url":"https://avatars1.githubusercontent.com/u/2363198?v=4","gravatar_id":"","url":"https://api.github.com/users/joephayes","html_url":"https://github.com/joephayes","followers_url":"https://api.github.com/users/joephayes/followers","following_url":"https://api.github.com/users/joephayes/following{/other_user}","gists_url":"https://api.github.com/users/joephayes/gists{/gist_id}","starred_url":"https://api.github.com/users/joephayes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joephayes/subscriptions","organizations_url":"https://api.github.com/users/joephayes/orgs","repos_url":"https://api.github.com/users/joephayes/repos","events_url":"https://api.github.com/users/joephayes/events{/privacy}","received_events_url":"https://api.github.com/users/joephayes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-01-29T22:10:35Z","updated_at":"2018-04-16T19:34:54Z","closed_at":"2018-04-15T01:48:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Now that https://github.com/weavejester/compojure/pull/178 has been merged, would it be possible to get a release? Happy to assist in anyway I can, just let me know.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/twosigma/Cook/issues/711","repository_url":"https://api.github.com/repos/twosigma/Cook","labels_url":"https://api.github.com/repos/twosigma/Cook/issues/711/labels{/name}","comments_url":"https://api.github.com/repos/twosigma/Cook/issues/711/comments","events_url":"https://api.github.com/repos/twosigma/Cook/issues/711/events","html_url":"https://github.com/twosigma/Cook/issues/711","id":292915266,"node_id":"MDU6SXNzdWUyOTI5MTUyNjY=","number":711,"title":"/info endpoint \"start-time\" value is wrong","user":{"login":"DaoWen","id":1783674,"node_id":"MDQ6VXNlcjE3ODM2NzQ=","avatar_url":"https://avatars3.githubusercontent.com/u/1783674?v=4","gravatar_id":"","url":"https://api.github.com/users/DaoWen","html_url":"https://github.com/DaoWen","followers_url":"https://api.github.com/users/DaoWen/followers","following_url":"https://api.github.com/users/DaoWen/following{/other_user}","gists_url":"https://api.github.com/users/DaoWen/gists{/gist_id}","starred_url":"https://api.github.com/users/DaoWen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaoWen/subscriptions","organizations_url":"https://api.github.com/users/DaoWen/orgs","repos_url":"https://api.github.com/users/DaoWen/repos","events_url":"https://api.github.com/users/DaoWen/events{/privacy}","received_events_url":"https://api.github.com/users/DaoWen/received_events","type":"User","site_admin":false},"labels":[{"id":259278617,"node_id":"MDU6TGFiZWwyNTkyNzg2MTc=","url":"https://api.github.com/repos/twosigma/Cook/labels/bug","name":"bug","color":"e42929","default":true,"description":""}],"state":"closed","locked":false,"assignee":{"login":"DaoWen","id":1783674,"node_id":"MDQ6VXNlcjE3ODM2NzQ=","avatar_url":"https://avatars3.githubusercontent.com/u/1783674?v=4","gravatar_id":"","url":"https://api.github.com/users/DaoWen","html_url":"https://github.com/DaoWen","followers_url":"https://api.github.com/users/DaoWen/followers","following_url":"https://api.github.com/users/DaoWen/following{/other_user}","gists_url":"https://api.github.com/users/DaoWen/gists{/gist_id}","starred_url":"https://api.github.com/users/DaoWen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaoWen/subscriptions","organizations_url":"https://api.github.com/users/DaoWen/orgs","repos_url":"https://api.github.com/users/DaoWen/repos","events_url":"https://api.github.com/users/DaoWen/events{/privacy}","received_events_url":"https://api.github.com/users/DaoWen/received_events","type":"User","site_admin":false},"assignees":[{"login":"DaoWen","id":1783674,"node_id":"MDQ6VXNlcjE3ODM2NzQ=","avatar_url":"https://avatars3.githubusercontent.com/u/1783674?v=4","gravatar_id":"","url":"https://api.github.com/users/DaoWen","html_url":"https://github.com/DaoWen","followers_url":"https://api.github.com/users/DaoWen/followers","following_url":"https://api.github.com/users/DaoWen/following{/other_user}","gists_url":"https://api.github.com/users/DaoWen/gists{/gist_id}","starred_url":"https://api.github.com/users/DaoWen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaoWen/subscriptions","organizations_url":"https://api.github.com/users/DaoWen/orgs","repos_url":"https://api.github.com/users/DaoWen/repos","events_url":"https://api.github.com/users/DaoWen/events{/privacy}","received_events_url":"https://api.github.com/users/DaoWen/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2018-01-30T19:51:56Z","updated_at":"2018-02-01T15:51:59Z","closed_at":"2018-02-01T15:51:59Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The `start-time` value retrieved from the `/info` endpoint is the time of the request rather than the time the server started up. This appears to be a weird \"feature\" of Liberator/Compojure, where the endpoint specification is re-evaluated on each request: https://github.com/weavejester/compojure/issues/148","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/weavejester/compojure/issues/181","repository_url":"https://api.github.com/repos/weavejester/compojure","labels_url":"https://api.github.com/repos/weavejester/compojure/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/weavejester/compojure/issues/181/comments","events_url":"https://api.github.com/repos/weavejester/compojure/issues/181/events","html_url":"https://github.com/weavejester/compojure/issues/181","id":299239766,"node_id":"MDU6SXNzdWUyOTkyMzk3NjY=","number":181,"title":"HEAD requests assume the response is a `clojure.lang.Associative`","user":{"login":"richardcordova","id":36714862,"node_id":"MDQ6VXNlcjM2NzE0ODYy","avatar_url":"https://avatars1.githubusercontent.com/u/36714862?v=4","gravatar_id":"","url":"https://api.github.com/users/richardcordova","html_url":"https://github.com/richardcordova","followers_url":"https://api.github.com/users/richardcordova/followers","following_url":"https://api.github.com/users/richardcordova/following{/other_user}","gists_url":"https://api.github.com/users/richardcordova/gists{/gist_id}","starred_url":"https://api.github.com/users/richardcordova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/richardcordova/subscriptions","organizations_url":"https://api.github.com/users/richardcordova/orgs","repos_url":"https://api.github.com/users/richardcordova/repos","events_url":"https://api.github.com/users/richardcordova/events{/privacy}","received_events_url":"https://api.github.com/users/richardcordova/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-02-22T06:46:24Z","updated_at":"2018-02-24T22:47:34Z","closed_at":"2018-02-24T22:47:34Z","author_association":"NONE","active_lock_reason":null,"body":"Most of the routing logic is agnostic as to the form of the response. This has allowed me to pass around a channel as the response, which works well in almost all cases.\r\n\r\nHEAD requests are an exception to this as seen in https://github.com/weavejester/compojure/blob/master/src/compojure/core.clj#L33\r\n\r\nCould this restriction be relaxed while preserving the existing semantics?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/metosin/compojure-api/issues/326","repository_url":"https://api.github.com/repos/metosin/compojure-api","labels_url":"https://api.github.com/repos/metosin/compojure-api/issues/326/labels{/name}","comments_url":"https://api.github.com/repos/metosin/compojure-api/issues/326/comments","events_url":"https://api.github.com/repos/metosin/compojure-api/issues/326/events","html_url":"https://github.com/metosin/compojure-api/issues/326","id":244977747,"node_id":"MDU6SXNzdWUyNDQ5Nzc3NDc=","number":326,"title":"No warning if old version of Compojure is used","user":{"login":"ikitommi","id":567532,"node_id":"MDQ6VXNlcjU2NzUzMg==","avatar_url":"https://avatars1.githubusercontent.com/u/567532?v=4","gravatar_id":"","url":"https://api.github.com/users/ikitommi","html_url":"https://github.com/ikitommi","followers_url":"https://api.github.com/users/ikitommi/followers","following_url":"https://api.github.com/users/ikitommi/following{/other_user}","gists_url":"https://api.github.com/users/ikitommi/gists{/gist_id}","starred_url":"https://api.github.com/users/ikitommi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ikitommi/subscriptions","organizations_url":"https://api.github.com/users/ikitommi/orgs","repos_url":"https://api.github.com/users/ikitommi/repos","events_url":"https://api.github.com/users/ikitommi/events{/privacy}","received_events_url":"https://api.github.com/users/ikitommi/received_events","type":"User","site_admin":false},"labels":[{"id":73728032,"node_id":"MDU6TGFiZWw3MzcyODAzMg==","url":"https://api.github.com/repos/metosin/compojure-api/labels/bug","name":"bug","color":"fc2929","default":true,"description":null},{"id":73728037,"node_id":"MDU6TGFiZWw3MzcyODAzNw==","url":"https://api.github.com/repos/metosin/compojure-api/labels/wontfix","name":"wontfix","color":"ffffff","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-07-24T05:48:11Z","updated_at":"2017-11-18T08:55:55Z","closed_at":"2017-11-18T08:55:55Z","author_association":"MEMBER","active_lock_reason":null,"body":"If one uses compojure without https://github.com/weavejester/compojure/pull/157, it will silently break things like response coercion.\r\n\r\nsolution:\r\na) inline the fixed version\r\nb) ensure that fixed version is used\r\nc) something else\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/metosin/compojure-api/issues/363","repository_url":"https://api.github.com/repos/metosin/compojure-api","labels_url":"https://api.github.com/repos/metosin/compojure-api/issues/363/labels{/name}","comments_url":"https://api.github.com/repos/metosin/compojure-api/issues/363/comments","events_url":"https://api.github.com/repos/metosin/compojure-api/issues/363/events","html_url":"https://github.com/metosin/compojure-api/issues/363","id":277529757,"node_id":"MDU6SXNzdWUyNzc1Mjk3NTc=","number":363,"title":"What is the purpose of vector in handler definition?","user":{"login":"alehatsman","id":3405704,"node_id":"MDQ6VXNlcjM0MDU3MDQ=","avatar_url":"https://avatars2.githubusercontent.com/u/3405704?v=4","gravatar_id":"","url":"https://api.github.com/users/alehatsman","html_url":"https://github.com/alehatsman","followers_url":"https://api.github.com/users/alehatsman/followers","following_url":"https://api.github.com/users/alehatsman/following{/other_user}","gists_url":"https://api.github.com/users/alehatsman/gists{/gist_id}","starred_url":"https://api.github.com/users/alehatsman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alehatsman/subscriptions","organizations_url":"https://api.github.com/users/alehatsman/orgs","repos_url":"https://api.github.com/users/alehatsman/repos","events_url":"https://api.github.com/users/alehatsman/events{/privacy}","received_events_url":"https://api.github.com/users/alehatsman/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-11-28T20:37:42Z","updated_at":"2017-11-28T20:45:35Z","closed_at":"2017-11-28T20:44:43Z","author_association":"NONE","active_lock_reason":null,"body":"Hello,\r\n\r\n```clojure\r\n(GET \"/ping\" [] ; <-- What is the purpose of that vector? \r\n  {:summary \"Ping request handler\"\r\n   :return (st/spec spec/string?)}\r\n  (r/ok \"pong\"))\r\n```\r\n\r\nI was trying to find something in examples, but query params and body in post requests do not use it. So it seems that it is kind of \"vestigial organ\" for me. And if so, i don't want to write that empty vector again and again.\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/jwillem/var-tool/issues/2","repository_url":"https://api.github.com/repos/jwillem/var-tool","labels_url":"https://api.github.com/repos/jwillem/var-tool/issues/2/labels{/name}","comments_url":"https://api.github.com/repos/jwillem/var-tool/issues/2/comments","events_url":"https://api.github.com/repos/jwillem/var-tool/issues/2/events","html_url":"https://github.com/jwillem/var-tool/issues/2","id":221191454,"node_id":"MDU6SXNzdWUyMjExOTE0NTQ=","number":2,"title":"POC Server","user":{"login":"jwillem","id":8223764,"node_id":"MDQ6VXNlcjgyMjM3NjQ=","avatar_url":"https://avatars1.githubusercontent.com/u/8223764?v=4","gravatar_id":"","url":"https://api.github.com/users/jwillem","html_url":"https://github.com/jwillem","followers_url":"https://api.github.com/users/jwillem/followers","following_url":"https://api.github.com/users/jwillem/following{/other_user}","gists_url":"https://api.github.com/users/jwillem/gists{/gist_id}","starred_url":"https://api.github.com/users/jwillem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwillem/subscriptions","organizations_url":"https://api.github.com/users/jwillem/orgs","repos_url":"https://api.github.com/users/jwillem/repos","events_url":"https://api.github.com/users/jwillem/events{/privacy}","received_events_url":"https://api.github.com/users/jwillem/received_events","type":"User","site_admin":false},"labels":[{"id":590916251,"node_id":"MDU6TGFiZWw1OTA5MTYyNTE=","url":"https://api.github.com/repos/jwillem/var-tool/labels/Clojure","name":"Clojure","color":"0052cc","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-04-12T08:43:33Z","updated_at":"2017-10-03T17:11:01Z","closed_at":"2017-10-03T17:11:01Z","author_association":"OWNER","active_lock_reason":null,"body":"- websocket\r\n  - channel with tagged messages\r\n  - one channel per user\r\n  - _or_ multiple channels per user, one channel per node\r\n  - using iterator on log-file\r\n\r\n- passing docker-log to websocket-channel or bypassing trough file\r\n\r\n- creation of docker containers on connection\r\n  - destroy on disconnect","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/weavejester/compojure/issues/173","repository_url":"https://api.github.com/repos/weavejester/compojure","labels_url":"https://api.github.com/repos/weavejester/compojure/issues/173/labels{/name}","comments_url":"https://api.github.com/repos/weavejester/compojure/issues/173/comments","events_url":"https://api.github.com/repos/weavejester/compojure/issues/173/events","html_url":"https://github.com/weavejester/compojure/issues/173","id":258737975,"node_id":"MDU6SXNzdWUyNTg3Mzc5NzU=","number":173,"title":"How to defined nested routes with `wrap-json-body`","user":{"login":"LukasRychtecky","id":585068,"node_id":"MDQ6VXNlcjU4NTA2OA==","avatar_url":"https://avatars3.githubusercontent.com/u/585068?v=4","gravatar_id":"","url":"https://api.github.com/users/LukasRychtecky","html_url":"https://github.com/LukasRychtecky","followers_url":"https://api.github.com/users/LukasRychtecky/followers","following_url":"https://api.github.com/users/LukasRychtecky/following{/other_user}","gists_url":"https://api.github.com/users/LukasRychtecky/gists{/gist_id}","starred_url":"https://api.github.com/users/LukasRychtecky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LukasRychtecky/subscriptions","organizations_url":"https://api.github.com/users/LukasRychtecky/orgs","repos_url":"https://api.github.com/users/LukasRychtecky/repos","events_url":"https://api.github.com/users/LukasRychtecky/events{/privacy}","received_events_url":"https://api.github.com/users/LukasRychtecky/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-09-19T08:33:08Z","updated_at":"2017-09-25T12:34:41Z","closed_at":"2017-09-25T12:34:41Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, thank you for this library.\r\n\r\nI run into an issue when having more routes wrapped into `wrap-json-body`.\r\n\r\n```clojure\r\n(context \"/transactions\" []\r\n  (wrap-json-body\r\n    (POST \"/\" [:as request]\r\n      ...)))\r\n\r\n(context \"/transactions/:id\" [id]\r\n  (wrap-json-body\r\n    (PUT \"/\" [:as request]\r\n      ...)))\r\n```\r\n\r\nSecond route's body will be `nil`, because of `InputStream` (as it's pointed here https://github.com/weavejester/compojure/wiki/Common-Problems#a-middleware-tries-to-read-the-body-of-a-request-but-finds-it-empty).\r\n\r\nHow can I define these routes?\r\n\r\nThanks for an answer.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/metosin/compojure-api/issues/247","repository_url":"https://api.github.com/repos/metosin/compojure-api","labels_url":"https://api.github.com/repos/metosin/compojure-api/issues/247/labels{/name}","comments_url":"https://api.github.com/repos/metosin/compojure-api/issues/247/comments","events_url":"https://api.github.com/repos/metosin/compojure-api/issues/247/events","html_url":"https://github.com/metosin/compojure-api/issues/247","id":167824888,"node_id":"MDU6SXNzdWUxNjc4MjQ4ODg=","number":247,"title":"Go async (with Ring 1.6.0 & Compojure betas)","user":{"login":"ikitommi","id":567532,"node_id":"MDQ6VXNlcjU2NzUzMg==","avatar_url":"https://avatars1.githubusercontent.com/u/567532?v=4","gravatar_id":"","url":"https://api.github.com/users/ikitommi","html_url":"https://github.com/ikitommi","followers_url":"https://api.github.com/users/ikitommi/followers","following_url":"https://api.github.com/users/ikitommi/following{/other_user}","gists_url":"https://api.github.com/users/ikitommi/gists{/gist_id}","starred_url":"https://api.github.com/users/ikitommi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ikitommi/subscriptions","organizations_url":"https://api.github.com/users/ikitommi/orgs","repos_url":"https://api.github.com/users/ikitommi/repos","events_url":"https://api.github.com/users/ikitommi/events{/privacy}","received_events_url":"https://api.github.com/users/ikitommi/received_events","type":"User","site_admin":false},"labels":[{"id":73728034,"node_id":"MDU6TGFiZWw3MzcyODAzNA==","url":"https://api.github.com/repos/metosin/compojure-api/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null}],"state":"closed","locked":false,"assignee":{"login":"miikka","id":34607,"node_id":"MDQ6VXNlcjM0NjA3","avatar_url":"https://avatars3.githubusercontent.com/u/34607?v=4","gravatar_id":"","url":"https://api.github.com/users/miikka","html_url":"https://github.com/miikka","followers_url":"https://api.github.com/users/miikka/followers","following_url":"https://api.github.com/users/miikka/following{/other_user}","gists_url":"https://api.github.com/users/miikka/gists{/gist_id}","starred_url":"https://api.github.com/users/miikka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miikka/subscriptions","organizations_url":"https://api.github.com/users/miikka/orgs","repos_url":"https://api.github.com/users/miikka/repos","events_url":"https://api.github.com/users/miikka/events{/privacy}","received_events_url":"https://api.github.com/users/miikka/received_events","type":"User","site_admin":false},"assignees":[{"login":"miikka","id":34607,"node_id":"MDQ6VXNlcjM0NjA3","avatar_url":"https://avatars3.githubusercontent.com/u/34607?v=4","gravatar_id":"","url":"https://api.github.com/users/miikka","html_url":"https://github.com/miikka","followers_url":"https://api.github.com/users/miikka/followers","following_url":"https://api.github.com/users/miikka/following{/other_user}","gists_url":"https://api.github.com/users/miikka/gists{/gist_id}","starred_url":"https://api.github.com/users/miikka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miikka/subscriptions","organizations_url":"https://api.github.com/users/miikka/orgs","repos_url":"https://api.github.com/users/miikka/repos","events_url":"https://api.github.com/users/miikka/events{/privacy}","received_events_url":"https://api.github.com/users/miikka/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/metosin/compojure-api/milestones/4","html_url":"https://github.com/metosin/compojure-api/milestone/4","labels_url":"https://api.github.com/repos/metosin/compojure-api/milestones/4/labels","id":2086364,"node_id":"MDk6TWlsZXN0b25lMjA4NjM2NA==","number":4,"title":"2.0.0","description":"The final major version of compojure-api.","creator":{"login":"ikitommi","id":567532,"node_id":"MDQ6VXNlcjU2NzUzMg==","avatar_url":"https://avatars1.githubusercontent.com/u/567532?v=4","gravatar_id":"","url":"https://api.github.com/users/ikitommi","html_url":"https://github.com/ikitommi","followers_url":"https://api.github.com/users/ikitommi/followers","following_url":"https://api.github.com/users/ikitommi/following{/other_user}","gists_url":"https://api.github.com/users/ikitommi/gists{/gist_id}","starred_url":"https://api.github.com/users/ikitommi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ikitommi/subscriptions","organizations_url":"https://api.github.com/users/ikitommi/orgs","repos_url":"https://api.github.com/users/ikitommi/repos","events_url":"https://api.github.com/users/ikitommi/events{/privacy}","received_events_url":"https://api.github.com/users/ikitommi/received_events","type":"User","site_admin":false},"open_issues":1,"closed_issues":18,"state":"open","created_at":"2016-10-22T10:32:33Z","updated_at":"2019-12-22T09:27:09Z","due_on":"2019-12-01T08:00:00Z","closed_at":null},"comments":9,"created_at":"2016-07-27T10:45:47Z","updated_at":"2017-05-19T15:55:36Z","closed_at":"2017-05-19T15:55:36Z","author_association":"MEMBER","active_lock_reason":null,"body":"- https://github.com/weavejester/compojure/blob/master/HISTORY.md#160-beta1-2016-07-22\r\n\r\n* [x] wrap-exceptions\r\n* [x] wrap-options\r\n* [x] tests\r\n* [x] map `manifold.deferred/deferred` (not a direct dependency)\r\n* [x] map `core.async` channels (not a direct dependency)\r\n* [x] Sample app\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/weavejester/compojure/issues/169","repository_url":"https://api.github.com/repos/weavejester/compojure","labels_url":"https://api.github.com/repos/weavejester/compojure/issues/169/labels{/name}","comments_url":"https://api.github.com/repos/weavejester/compojure/issues/169/comments","events_url":"https://api.github.com/repos/weavejester/compojure/issues/169/events","html_url":"https://github.com/weavejester/compojure/issues/169","id":232752379,"node_id":"MDU6SXNzdWUyMzI3NTIzNzk=","number":169,"title":"wrap-routes produces unexpected ordering of middleware","user":{"login":"RutledgePaulV","id":4924856,"node_id":"MDQ6VXNlcjQ5MjQ4NTY=","avatar_url":"https://avatars3.githubusercontent.com/u/4924856?v=4","gravatar_id":"","url":"https://api.github.com/users/RutledgePaulV","html_url":"https://github.com/RutledgePaulV","followers_url":"https://api.github.com/users/RutledgePaulV/followers","following_url":"https://api.github.com/users/RutledgePaulV/following{/other_user}","gists_url":"https://api.github.com/users/RutledgePaulV/gists{/gist_id}","starred_url":"https://api.github.com/users/RutledgePaulV/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RutledgePaulV/subscriptions","organizations_url":"https://api.github.com/users/RutledgePaulV/orgs","repos_url":"https://api.github.com/users/RutledgePaulV/repos","events_url":"https://api.github.com/users/RutledgePaulV/events{/privacy}","received_events_url":"https://api.github.com/users/RutledgePaulV/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-06-01T02:58:14Z","updated_at":"2017-06-01T03:11:50Z","closed_at":"2017-06-01T03:09:47Z","author_association":"NONE","active_lock_reason":null,"body":"Hi James,\r\n\r\nThis is likely just a failure on my part to understand how wrap-routes is supposed to work, but I was hoping you could clarify. Usually I define my routes using a thread macro and then applying a series of middleware with the understanding that later middleware receive the request earlier. Now, sometimes I want these middleware to only run if it matches a known route so I use wrap-routes. Once I introduce wrap-routes into the equation, the ordering of my middleware gets rather messed up in a way I wouldn't expect! \r\n\r\nVersion: 1.5.1\r\n\r\n\r\nI would expect:\r\n\r\nAll my non wrap-routes middleware to execute first and then if the route matches, my wrap-routes middleware to execute in the same order as they were defined. However, instead the wrap-routes middleware actually execute in the opposite order compared to the order my other middleware execute in.\r\n\r\nI have a small test case to reproduce:\r\n\r\n```clojure\r\n(ns ring-middleware-ordering.core\r\n  (:require [compojure.core :refer :all]\r\n            [ring.util.response :as response]\r\n            [ring.adapter.jetty :as jetty]))\r\n\r\n\r\n(defroutes application\r\n  (GET \"/\" request\r\n       (->\r\n         (response/response \"Hello, World\")\r\n         (response/content-type \"text/plain\"))))\r\n\r\n\r\n(defn ordering [handler order]\r\n  (fn [request]\r\n    (println \"Before request:\" order)\r\n    (let [response (handler request)]\r\n      (println \"Before response:\" order)\r\n      response)))\r\n\r\n\r\n(defn wrap-with-middleware [routes]\r\n  (-> routes\r\n      (ordering 1)\r\n      (ordering 2)\r\n      (wrap-routes #(ordering % 3))\r\n      (wrap-routes #(ordering % 4))\r\n      (ordering 5)))\r\n\r\n\r\n(defn -main [& args]\r\n  (jetty/run-jetty\r\n    (wrap-with-middleware application)\r\n    {:port 3000}))\r\n\r\n(-main)\r\n```\r\n\r\nWhen hitting the route, the above logs:\r\n\r\n```\r\nBefore request: 5\r\nBefore request: 2\r\nBefore request: 1\r\nBefore request: 3\r\nBefore request: 4\r\nBefore response: 4\r\nBefore response: 3\r\nBefore response: 1\r\nBefore response: 2\r\nBefore response: 5\r\n```\r\n\r\nI would expect:\r\n```\r\nBefore request: 5\r\nBefore request: 2\r\nBefore request: 1\r\nBefore request: 4\r\nBefore request: 3\r\nBefore response: 3\r\nBefore response: 4\r\nBefore response: 1\r\nBefore response: 2\r\nBefore response: 5\r\n```\r\n\r\nIs this intentional behavior? Would you consider changing this? (I realize that changing ordering of execution of middleware may have subtle downstream impacts).","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/weavejester/compojure/issues/158","repository_url":"https://api.github.com/repos/weavejester/compojure","labels_url":"https://api.github.com/repos/weavejester/compojure/issues/158/labels{/name}","comments_url":"https://api.github.com/repos/weavejester/compojure/issues/158/comments","events_url":"https://api.github.com/repos/weavejester/compojure/issues/158/events","html_url":"https://github.com/weavejester/compojure/issues/158","id":209059628,"node_id":"MDU6SXNzdWUyMDkwNTk2Mjg=","number":158,"title":"Missing info about site-defaults in \"Destructuring Syntax\" wiki page","user":{"login":"jumarko","id":1083629,"node_id":"MDQ6VXNlcjEwODM2Mjk=","avatar_url":"https://avatars0.githubusercontent.com/u/1083629?v=4","gravatar_id":"","url":"https://api.github.com/users/jumarko","html_url":"https://github.com/jumarko","followers_url":"https://api.github.com/users/jumarko/followers","following_url":"https://api.github.com/users/jumarko/following{/other_user}","gists_url":"https://api.github.com/users/jumarko/gists{/gist_id}","starred_url":"https://api.github.com/users/jumarko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jumarko/subscriptions","organizations_url":"https://api.github.com/users/jumarko/orgs","repos_url":"https://api.github.com/users/jumarko/repos","events_url":"https://api.github.com/users/jumarko/events{/privacy}","received_events_url":"https://api.github.com/users/jumarko/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-02-21T07:09:16Z","updated_at":"2017-02-23T05:04:10Z","closed_at":"2017-02-21T15:38:16Z","author_association":"NONE","active_lock_reason":null,"body":"The example given on [Destructuring Syntax](https://github.com/weavejester/compojure/wiki/Destructuring-Syntax) page is missing the information that it's necessary to wrap handler with site-defaults or api-defaults to make destructuring works for query params:\r\n\r\n```\r\n(GET \"/user/:id\" [id greeting]\r\n  (str \"<h1>\" greeting \" user \" id \"</h1>\"))\r\n```\r\n\r\nI've found following stackoverflow thread: http://stackoverflow.com/questions/8963213/accessing-compojure-query-string\r\nThey say it was handled in defroutes macro automatically but it's no longer the case.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/metosin/compojure-api/issues/241","repository_url":"https://api.github.com/repos/metosin/compojure-api","labels_url":"https://api.github.com/repos/metosin/compojure-api/issues/241/labels{/name}","comments_url":"https://api.github.com/repos/metosin/compojure-api/issues/241/comments","events_url":"https://api.github.com/repos/metosin/compojure-api/issues/241/events","html_url":"https://github.com/metosin/compojure-api/issues/241","id":164883297,"node_id":"MDU6SXNzdWUxNjQ4ODMyOTc=","number":241,"title":"middleware init is executed for each request","user":{"login":"yogsototh","id":93899,"node_id":"MDQ6VXNlcjkzODk5","avatar_url":"https://avatars0.githubusercontent.com/u/93899?v=4","gravatar_id":"","url":"https://api.github.com/users/yogsototh","html_url":"https://github.com/yogsototh","followers_url":"https://api.github.com/users/yogsototh/followers","following_url":"https://api.github.com/users/yogsototh/following{/other_user}","gists_url":"https://api.github.com/users/yogsototh/gists{/gist_id}","starred_url":"https://api.github.com/users/yogsototh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yogsototh/subscriptions","organizations_url":"https://api.github.com/users/yogsototh/orgs","repos_url":"https://api.github.com/users/yogsototh/repos","events_url":"https://api.github.com/users/yogsototh/events{/privacy}","received_events_url":"https://api.github.com/users/yogsototh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-07-11T16:49:23Z","updated_at":"2016-10-23T16:10:28Z","closed_at":"2016-07-11T17:09:31Z","author_association":"NONE","active_lock_reason":null,"body":"If you look at this code:\n\nhttps://gist.github.com/yogsototh/7ae1911e54147e7d5ac43f1b377663f5\n\neach request prints \"INIT HANDLER\".\nI believe it should only be printed once.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ring-clojure/ring-defaults/issues/10","repository_url":"https://api.github.com/repos/ring-clojure/ring-defaults","labels_url":"https://api.github.com/repos/ring-clojure/ring-defaults/issues/10/labels{/name}","comments_url":"https://api.github.com/repos/ring-clojure/ring-defaults/issues/10/comments","events_url":"https://api.github.com/repos/ring-clojure/ring-defaults/issues/10/events","html_url":"https://github.com/ring-clojure/ring-defaults/issues/10","id":54968962,"node_id":"MDU6SXNzdWU1NDk2ODk2Mg==","number":10,"title":"Problem with wrap-defaults site-defaults and compojure wrap-routes","user":{"login":"theophilusx","id":1594409,"node_id":"MDQ6VXNlcjE1OTQ0MDk=","avatar_url":"https://avatars0.githubusercontent.com/u/1594409?v=4","gravatar_id":"","url":"https://api.github.com/users/theophilusx","html_url":"https://github.com/theophilusx","followers_url":"https://api.github.com/users/theophilusx/followers","following_url":"https://api.github.com/users/theophilusx/following{/other_user}","gists_url":"https://api.github.com/users/theophilusx/gists{/gist_id}","starred_url":"https://api.github.com/users/theophilusx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theophilusx/subscriptions","organizations_url":"https://api.github.com/users/theophilusx/orgs","repos_url":"https://api.github.com/users/theophilusx/repos","events_url":"https://api.github.com/users/theophilusx/events{/privacy}","received_events_url":"https://api.github.com/users/theophilusx/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2015-01-21T02:18:03Z","updated_at":"2017-01-13T04:06:13Z","closed_at":"2015-02-11T20:58:26Z","author_association":"NONE","active_lock_reason":null,"body":"Have a problem when using compojure wrap-routes to associate middleware with specific routes. Only seems to occure when using the site-defaults related config i.e. api-defaults seems to not exhibit this issue.\n\nAppears that the wrap-defaults is blowing away the response codes when a page is not found. i.e.\n\n```\n$ curl -v http://localhost:3000/q\n* Hostname was NOT found in DNS cache\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 3000 (#0)\n> GET /q HTTP/1.1\n> User-Agent: curl/7.35.0\n> Host: localhost:3000\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n< Date: Wed, 21 Jan 2015 02:10:24 GMT\n< X-Content-Type-Options: nosniff\n< X-Frame-Options: SAMEORIGIN\n< X-XSS-Protection: 1; mode=block\n< Content-Length: 0\n* Server Jetty(7.6.8.v20121106) is not blacklisted\n< Server: Jetty(7.6.8.v20121106)\n< \n* Connection #0 to host localhost left intact\n```\n\ninstead of\n\n```\n$ curl -v http://localhost:3000/q\n* Hostname was NOT found in DNS cache\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 3000 (#0)\n> GET /q HTTP/1.1\n> User-Agent: curl/7.35.0\n> Host: localhost:3000\n> Accept: */*\n> \n< HTTP/1.1 404 Not Found\n< Date: Wed, 21 Jan 2015 02:12:49 GMT\n< Content-Type: text/html;charset=UTF-8\n< Content-Length: 9\n* Server Jetty(7.6.8.v20121106) is not blacklisted\n< Server: Jetty(7.6.8.v20121106)\n< \n* Connection #0 to host localhost left intact\nSorry, No%                                                                  \n```\n\nProcedure to reporduce -\n1. lein new compojure ctest\n2. ran lein ancient and updated dependency versions to latest \n3. created the following handler.clj\n\n``` clojure\n(ns cc.core.handler\n  (:require [compojure.core :refer :all]\n            [compojure.route :as route]\n            [ring.middleware.defaults :refer [wrap-defaults site-defaults\n                                              api-defaults]]))\n\n(defroutes api-routes\n  (GET \"/api\" [] \"API endpoint\")\n  (ANY \"/api/order/calc\" [] \"Calc endpint\")\n  (ANY \"/api/order/place\" [] \"Place endpoint\"))\n\n(defroutes app-routes\n  (GET \"/\" [] \"Hello World\")\n  (route/resources \"/\"))\n\n(defroutes no-page\n  (route/not-found \"Sorry, No\"))\n\n(defn mw [hdlr msg]\n  (fn [req]\n    (println msg)\n    (hdlr req)))\n\n(def app\n  (routes (-> api-routes\n              (wrap-routes wrap-defaults api-defaults))\n          (-> app-routes\n              (wrap-routes wrap-defaults api-defaults))\n          no-page))\n\n```\n\nIf you change the second wrap-defaults to use site-defaults, the problem is triggered.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/weavejester/compojure/issues/150","repository_url":"https://api.github.com/repos/weavejester/compojure","labels_url":"https://api.github.com/repos/weavejester/compojure/issues/150/labels{/name}","comments_url":"https://api.github.com/repos/weavejester/compojure/issues/150/comments","events_url":"https://api.github.com/repos/weavejester/compojure/issues/150/events","html_url":"https://github.com/weavejester/compojure/issues/150","id":152475722,"node_id":"MDU6SXNzdWUxNTI0NzU3MjI=","number":150,"title":"Parameter coercion of booleans","user":{"login":"khadiwala","id":529832,"node_id":"MDQ6VXNlcjUyOTgzMg==","avatar_url":"https://avatars3.githubusercontent.com/u/529832?v=4","gravatar_id":"","url":"https://api.github.com/users/khadiwala","html_url":"https://github.com/khadiwala","followers_url":"https://api.github.com/users/khadiwala/followers","following_url":"https://api.github.com/users/khadiwala/following{/other_user}","gists_url":"https://api.github.com/users/khadiwala/gists{/gist_id}","starred_url":"https://api.github.com/users/khadiwala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khadiwala/subscriptions","organizations_url":"https://api.github.com/users/khadiwala/orgs","repos_url":"https://api.github.com/users/khadiwala/repos","events_url":"https://api.github.com/users/khadiwala/events{/privacy}","received_events_url":"https://api.github.com/users/khadiwala/received_events","type":"User","site_admin":false},"labels":[{"id":3044,"node_id":"MDU6TGFiZWwzMDQ0","url":"https://api.github.com/repos/weavejester/compojure/labels/bug","name":"bug","color":"e11d21","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-05-02T03:20:55Z","updated_at":"2016-06-19T10:15:55Z","closed_at":"2016-06-19T10:15:55Z","author_association":"NONE","active_lock_reason":null,"body":"I have a route like this\n\n``` clojure\n(defroutes app-routes\n  (GET \"/foo/:bar\" [bar :<< Boolean/valueOf] \"success\"))\n```\n\nwhere I'm trying to coerce bar to a boolean. `/foo/true` is matched by this route, but `/foo/false` is not. What I'm guessing is happening is that because my coercion function is returning false, it is assumed to have failed. If I have that right, I think this is incorrect and only nil should be considered a failed match as indicated in the documentation here: https://github.com/weavejester/compojure/wiki/Destructuring-Syntax#parameter-coercion.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/http-kit/http-kit/issues/269","repository_url":"https://api.github.com/repos/http-kit/http-kit","labels_url":"https://api.github.com/repos/http-kit/http-kit/issues/269/labels{/name}","comments_url":"https://api.github.com/repos/http-kit/http-kit/issues/269/comments","events_url":"https://api.github.com/repos/http-kit/http-kit/issues/269/events","html_url":"https://github.com/http-kit/http-kit/issues/269","id":138371925,"node_id":"MDU6SXNzdWUxMzgzNzE5MjU=","number":269,"title":"file upload from clojurescript without manually parsing org.httpkit.BytesInputStream","user":{"login":"sonwh98","id":165692,"node_id":"MDQ6VXNlcjE2NTY5Mg==","avatar_url":"https://avatars1.githubusercontent.com/u/165692?v=4","gravatar_id":"","url":"https://api.github.com/users/sonwh98","html_url":"https://github.com/sonwh98","followers_url":"https://api.github.com/users/sonwh98/followers","following_url":"https://api.github.com/users/sonwh98/following{/other_user}","gists_url":"https://api.github.com/users/sonwh98/gists{/gist_id}","starred_url":"https://api.github.com/users/sonwh98/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sonwh98/subscriptions","organizations_url":"https://api.github.com/users/sonwh98/orgs","repos_url":"https://api.github.com/users/sonwh98/repos","events_url":"https://api.github.com/users/sonwh98/events{/privacy}","received_events_url":"https://api.github.com/users/sonwh98/received_events","type":"User","site_admin":false},"labels":[{"id":1229789,"node_id":"MDU6TGFiZWwxMjI5Nzg5","url":"https://api.github.com/repos/http-kit/http-kit/labels/question/usage","name":"question/usage","color":"cc317c","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-03-04T04:04:53Z","updated_at":"2016-04-06T05:52:02Z","closed_at":"2016-04-06T05:49:39Z","author_association":"NONE","active_lock_reason":null,"body":"I am trying to upload files from ClojureScript using XMLHttpRequest  without using a form.  The ClojureScript side is working as expected but on the httpkit side the body of the request contains a org.httpkit.BytesInputStream. The content of the org.httpkit.BytesInputStream contains the uploaded files.\nIs there a function that will parse the stream and give me back java.io.File(s) ?\n\nThere should have been tempfile, :size and :filename in the request map http://www.luminusweb.net/docs/routes.md#handling_file_uploads  that gives me access to the File\nbut my request does not have those keys.  Here is my request\n\n```\n{:cookies {}, :remote-addr 127.0.0.1, :params {}, :flash nil, :route-params {},\n :headers {origin http://localhost:8080, host localhost:8080,\n           user-agent  \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36\"\n           content-type \"multipart/form-data; boundary=foo\"\n           content-length 6780\n           referer \"http://localhost:8080/85.html\"\n           connection \"keep-alive\"\n           accept \"*/*\"\n           accept-language \"en-US,en;q=0.8,vi;q=0.6\"\n           accept-encoding gzip, deflate}\n :async-channel #object[org.httpkit.server.AsyncChannel 0x67604a36 /127.0.0.1:8080<->/127.0.0.1:55868],\n :server-port 8080, :content-length 6780,\n :form-params {},\n :compojure/route [:post /upload],\n :websocket? false,\n :session/key nil, :query-params {},\n :content-type \"multipart/form-data; boundary=foo\"\n :character-encoding \"utf8\"\n :uri \"/upload\"\n :server-name \"localhost\"\n :query-string nil\n :body #object[org.httpkit.BytesInputStream 0x2262d8be BytesInputStream[len=6780]],\n :multipart-params {},\n :scheme :http\n :request-method :post\n :session {}}\n```\n\nand if anyone is curious here is the reagent clojurescript snippet to do fileupload without a form\n\n```\n [:input {:name      \"file\" :type \"file\" :multiple \"multiple\"\n            :on-change (fn [evt]\n                         (let [files (-> evt .-target .-files util/to-array)\n                               http-request (js/XMLHttpRequest.)\n                               formData (js/FormData.)]\n\n                           (doseq [[index file] (util/with-index files)]\n                             (println index file)\n                             (.. formData (append (str \"file\" index) file)))\n\n                           (aset http-request \"onreadystatechange\" (fn [evt]\n                                                                     (if (= 4 (. http-request -readyState))\n                                                                       (js/console.log (. http-request -statusText)))\n                                                                     ))\n                           (. http-request open \"post\" \"/upload\" true)\n                           (. http-request setRequestHeader \"Content-Type\" \"multipart/form-data; boundary=foo\")\n                           (. http-request send formData)))}]\n```\n\nthe util namespace is refers to https://github.com/sonwh98/tily/blob/master/src/com/kaicode/tily.cljc\n\nOn the serverside:\n\n```\n(defn upload [request]\n  (println \"request\" request)\n\n  (let [content (.bytes (:body request))]\n    (with-open [out (io/output-stream (io/file\"/home/sto/tmp/bar.txt\"))]\n      (.write out content)\n      ))\n  {:status 200})\n\n(defroutes all-routes\n           (route/resources \"/\")\n           (POST \"/upload\" request (upload request))\n           )\n\n```\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/duct-framework/duct/issues/34","repository_url":"https://api.github.com/repos/duct-framework/duct","labels_url":"https://api.github.com/repos/duct-framework/duct/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/duct-framework/duct/issues/34/comments","events_url":"https://api.github.com/repos/duct-framework/duct/issues/34/events","html_url":"https://github.com/duct-framework/duct/issues/34","id":126323069,"node_id":"MDU6SXNzdWUxMjYzMjMwNjk=","number":34,"title":"Multiple POST endpoints bug","user":{"login":"lerouxrgd","id":6103291,"node_id":"MDQ6VXNlcjYxMDMyOTE=","avatar_url":"https://avatars0.githubusercontent.com/u/6103291?v=4","gravatar_id":"","url":"https://api.github.com/users/lerouxrgd","html_url":"https://github.com/lerouxrgd","followers_url":"https://api.github.com/users/lerouxrgd/followers","following_url":"https://api.github.com/users/lerouxrgd/following{/other_user}","gists_url":"https://api.github.com/users/lerouxrgd/gists{/gist_id}","starred_url":"https://api.github.com/users/lerouxrgd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lerouxrgd/subscriptions","organizations_url":"https://api.github.com/users/lerouxrgd/orgs","repos_url":"https://api.github.com/users/lerouxrgd/repos","events_url":"https://api.github.com/users/lerouxrgd/events{/privacy}","received_events_url":"https://api.github.com/users/lerouxrgd/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-01-13T02:08:31Z","updated_at":"2016-01-25T07:22:06Z","closed_at":"2016-01-20T04:34:00Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\n\nFirst of all thank you for `duct` it's a very simple and useful framework for structuring Clojure webapps !\nHowever I run into an issue when trying to assemble multiple endpoints containing at least one POST handler.\nI am also using `compojure-api` for defining handlers and I hope I am using it and `duct` correctly.\n\nI re-created my issue with a minimal repo:\nhttps://github.com/lerouxrgd/debug-duct\nBasically I created it like this:\n\n```\nlein new duct debug-duct\n```\n\nAdding compojure-api dependency to `project.clj`\n\n``` clj\n[metosin/compojure-api \"0.23.1\"]\n```\n\nFirst endpoint `plus.clj`\n\n``` clj\n(defn plus-endpoint [sys]\n  (api   \n   (context* \"\" []\n             (POST* \"/plus\" []\n                    :return {:total Long}\n                    :body-params [x :- Long, y :- Long]\n                    :summary \"x+y with body-parameters\"\n                    (ok {:total (+ x y)})))))\n```\n\nSecond endpoint `minus.clj`\n\n``` clj\n(defn minus-endpoint [sys]\n  (api\n   (context* \"\" []\n             (POST* \"/minus\" []\n                    :return {:total Long}\n                    :body-params [x :- Long, y :- Long]\n                    :summary \"x-y with body-parameters\"\n                    (ok {:total (- x y)})))))\n```\n\nCombining them in `system.clj`\n\n``` clj\n(defn new-system [config]\n  (let [config (meta-merge base-config config)]\n    (-> (component/system-map\n         :app  (handler-component (:app config))\n         :plus (endpoint-component plus-endpoint)\n         :minus (endpoint-component minus-endpoint)\n         :http (jetty-server (:http config)))\n        (component/system-using\n         {:http [:app]\n          :app  [:plus :minus]}))))\n```\n\nStarting it at the repl\n\n```\nlein repl\n(go)\n```\n\nAnd finally, the bug when trying to test it:\n\n```\ncurl -X POST --header \"Content-Type: application/json\" --header \"Accept: application/json\" -d \"{\n  \\\"y\\\": 1,\n  \\\"x\\\": 2\n}\" \"http://localhost:3000/plus\"\n```\n\nGives me\n\n```\n{\"errors\":\"(not (map? nil))\"}\n```\n\nI tried to remove one endpoint like this:\n\n``` clj\n(defn new-system [config]\n  (let [config (meta-merge base-config config)]\n    (-> (component/system-map\n         :app  (handler-component (:app config))\n         :plus (endpoint-component plus-endpoint)\n         #_:minus #_(endpoint-component minus-endpoint)\n         :http (jetty-server (:http config)))\n        (component/system-using\n         {:http [:app]\n          :app  [:plus #_:minus]}))))\n```\n\nRestarting it at the REPL\n\n```\n(reset)\n```\n\nNow when sending the same POST request with curl I get the expected response:\n\n```\n{\"total\":3}\n```\n\nAfter some debugging I realised that I get a `\"(not (map? nil))\"` because `:body` is actually empty; which I confirmed by trying to `slurp` its `#object[org.eclipse.jetty.server.HttpInputOverHTTP 0x5c8389 \"HttpInputOverHTTP@5c8389\"]`.\n\nHowever I am not sure to understand why the body input stream gets consummed somewhere before my handler.\n\nIs it a wrong manipulation from me, or is there something fishy with multiple endpoints/handlers and POST body input stream ?\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/metosin/compojure-api/issues/190","repository_url":"https://api.github.com/repos/metosin/compojure-api","labels_url":"https://api.github.com/repos/metosin/compojure-api/issues/190/labels{/name}","comments_url":"https://api.github.com/repos/metosin/compojure-api/issues/190/comments","events_url":"https://api.github.com/repos/metosin/compojure-api/issues/190/events","html_url":"https://github.com/metosin/compojure-api/issues/190","id":124490788,"node_id":"MDU6SXNzdWUxMjQ0OTA3ODg=","number":190,"title":"Compilation error on context* middleware metadata when middleware require args ","user":{"login":"rcanepa","id":3418513,"node_id":"MDQ6VXNlcjM0MTg1MTM=","avatar_url":"https://avatars0.githubusercontent.com/u/3418513?v=4","gravatar_id":"","url":"https://api.github.com/users/rcanepa","html_url":"https://github.com/rcanepa","followers_url":"https://api.github.com/users/rcanepa/followers","following_url":"https://api.github.com/users/rcanepa/following{/other_user}","gists_url":"https://api.github.com/users/rcanepa/gists{/gist_id}","starred_url":"https://api.github.com/users/rcanepa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rcanepa/subscriptions","organizations_url":"https://api.github.com/users/rcanepa/orgs","repos_url":"https://api.github.com/users/rcanepa/repos","events_url":"https://api.github.com/users/rcanepa/events{/privacy}","received_events_url":"https://api.github.com/users/rcanepa/received_events","type":"User","site_admin":false},"labels":[{"id":73728032,"node_id":"MDU6TGFiZWw3MzcyODAzMg==","url":"https://api.github.com/repos/metosin/compojure-api/labels/bug","name":"bug","color":"fc2929","default":true,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/metosin/compojure-api/milestones/2","html_url":"https://github.com/metosin/compojure-api/milestone/2","labels_url":"https://api.github.com/repos/metosin/compojure-api/milestones/2/labels","id":1495719,"node_id":"MDk6TWlsZXN0b25lMTQ5NTcxOQ==","number":2,"title":"1.0.0","description":"","creator":{"login":"Deraen","id":648087,"node_id":"MDQ6VXNlcjY0ODA4Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/648087?v=4","gravatar_id":"","url":"https://api.github.com/users/Deraen","html_url":"https://github.com/Deraen","followers_url":"https://api.github.com/users/Deraen/followers","following_url":"https://api.github.com/users/Deraen/following{/other_user}","gists_url":"https://api.github.com/users/Deraen/gists{/gist_id}","starred_url":"https://api.github.com/users/Deraen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Deraen/subscriptions","organizations_url":"https://api.github.com/users/Deraen/orgs","repos_url":"https://api.github.com/users/Deraen/repos","events_url":"https://api.github.com/users/Deraen/events{/privacy}","received_events_url":"https://api.github.com/users/Deraen/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":9,"state":"closed","created_at":"2016-01-10T21:24:56Z","updated_at":"2016-10-22T10:30:18Z","due_on":null,"closed_at":"2016-10-22T10:30:18Z"},"comments":5,"created_at":"2015-12-31T17:47:45Z","updated_at":"2016-01-21T16:10:54Z","closed_at":"2016-01-21T16:10:54Z","author_association":"NONE","active_lock_reason":null,"body":"Passing a middleware which requires additional arguments (besides the handler) to the `context*` `:middlewares` metadata throws a compilation error.\n\nI made a easy to replicate example using the lein new compojure-api command. The main file contains the following code:\n\n```\n(ns middlewares-issue.handler\n  (:require [compojure.api.sweet :refer :all]\n            [ring.util.http-response :refer :all]\n            [schema.core :as s]))\n\n(s/defschema Message {:message String})\n\n(defn mw-with-args [handler msg]\n  (fn [request]\n    (let [request (assoc request :dummy msg)]\n      (handler request))))\n\n(defn mw-wo-args [handler]\n  (fn [request]\n    (let [request (assoc request :foo \"bar\")]\n      (handler request))))\n\n(defapi app\n  (swagger-ui)\n  (swagger-docs\n    {:info {:title \"Middlewares-issue\"\n            :description \"Compojure Api example\"}\n     :tags [{:name \"hello\", :description \"says hello in Finnish\"}]})\n  (context* \"/hello\" []\n    :tags [\"hello\"]\n    :middlewares [(mw-with-args \"dummy\")]\n    (GET* \"/\" {:as request}\n          (ok (str (:dummy request) \" \" (:foo request))))))\n\n```\n\nThen, executing lein ring server-headless throws the following error:\n\n```\nException in thread \"main\" clojure.lang.ArityException: Wrong number of args (-3) passed to: handler/dummy-mw, compiling:(middlewares_issue/handler.clj:30:1)\n    at clojure.lang.Compiler.analyzeSeq(Compiler.java:6730)\n    at clojure.lang.Compiler.analyze(Compiler.java:6524)\n    at clojure.lang.Compiler.analyze(Compiler.java:6485)\n    at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3791)\n    at clojure.lang.Compiler.analyzeSeq(Compiler.java:6725)\n    at clojure.lang.Compiler.analyze(Compiler.java:6524)\n    at clojure.lang.Compiler.analyzeSeq(Compiler.java:6711)\n    at clojure.lang.Compiler.analyze(Compiler.java:6524)\n    at clojure.lang.Compiler.access$300(Compiler.java:38)\n    at clojure.lang.Compiler$DefExpr$Parser.parse(Compiler.java:577)\n    at clojure.lang.Compiler.analyzeSeq(Compiler.java:6723)\n    at clojure.lang.Compiler.analyze(Compiler.java:6524)\n    at clojure.lang.Compiler.analyze(Compiler.java:6485)\n    at clojure.lang.Compiler.eval(Compiler.java:6786)\n    at clojure.lang.Compiler.load(Compiler.java:7227)\n    at clojure.lang.RT.loadResourceScript(RT.java:371)\n    at clojure.lang.RT.loadResourceScript(RT.java:362)\n    at clojure.lang.RT.load(RT.java:446)\n    at clojure.lang.RT.load(RT.java:412)\n    at clojure.core$load$fn__5448.invoke(core.clj:5866)\n    at clojure.core$load.doInvoke(core.clj:5865)\n    at clojure.lang.RestFn.invoke(RestFn.java:408)\n    at clojure.core$load_one.invoke(core.clj:5671)\n    at clojure.core$load_lib$fn__5397.invoke(core.clj:5711)\n    at clojure.core$load_lib.doInvoke(core.clj:5710)\n    at clojure.lang.RestFn.applyTo(RestFn.java:142)\n    at clojure.core$apply.invoke(core.clj:632)\n    at clojure.core$load_libs.doInvoke(core.clj:5749)\n    at clojure.lang.RestFn.applyTo(RestFn.java:137)\n    at clojure.core$apply.invoke(core.clj:632)\n    at clojure.core$require.doInvoke(core.clj:5832)\n    at clojure.lang.RestFn.invoke(RestFn.java:421)\n    at user$eval5.invoke(form-init2689406130111808873.clj:1)\n    at clojure.lang.Compiler.eval(Compiler.java:6782)\n    at clojure.lang.Compiler.eval(Compiler.java:6771)\n    at clojure.lang.Compiler.load(Compiler.java:7227)\n    at clojure.lang.Compiler.loadFile(Compiler.java:7165)\n    at clojure.main$load_script.invoke(main.clj:275)\n    at clojure.main$init_opt.invoke(main.clj:280)\n    at clojure.main$initialize.invoke(main.clj:308)\n    at clojure.main$null_opt.invoke(main.clj:343)\n    at clojure.main$main.doInvoke(main.clj:421)\n    at clojure.lang.RestFn.invoke(RestFn.java:421)\n    at clojure.lang.Var.invoke(Var.java:383)\n    at clojure.lang.AFn.applyToHelper(AFn.java:156)\n    at clojure.lang.Var.applyTo(Var.java:700)\n    at clojure.main.main(main.java:37)\nCaused by: clojure.lang.ArityException: Wrong number of args (-3) passed to: handler/dummy-mw\n    at clojure.lang.Compiler.macroexpand1(Compiler.java:6636)\n    at clojure.lang.Compiler.analyzeSeq(Compiler.java:6709)\n    ... 46 more\nSubprocess failed\n```\n\nHowever, if I substitute the `:middlewares` metadata option for the `middlewares` macro, everything works as expected. Here you can see the replacement:\n\n```\n(defapi app\n  (swagger-ui)\n  (swagger-docs\n    {:info {:title \"Middlewares-issue\"\n            :description \"Compojure Api example\"}\n     :tags [{:name \"hello\", :description \"says hello in Finnish\"}]})\n  (context* \"/hello\" []\n    :tags [\"hello\"]\n    :middlewares [(mw-with-args \"dummy\")]\n    (GET* \"/\" {:as request}\n          (ok (str (:dummy request) \" \" (:foo request))))))\n```\n\nFinally, I have to say that this error only appears when I use a middleware which requires additional arguments besides the handler. In other words, this doesn't throw:\n\n```\n(defapi app\n  (swagger-ui)\n  (swagger-docs\n    {:info {:title \"Middlewares-issue\"\n            :description \"Compojure Api example\"}\n     :tags [{:name \"hello\", :description \"says hello in Finnish\"}]})\n  (context* \"/hello\" []\n    :tags [\"hello\"]\n    :middlewares [mw-wo-args]\n    (GET* \"/\" {:as request}\n          (ok (str (:dummy request) \" \" (:foo request))))))\n```\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/pandeiro/boot-http/issues/31","repository_url":"https://api.github.com/repos/pandeiro/boot-http","labels_url":"https://api.github.com/repos/pandeiro/boot-http/issues/31/labels{/name}","comments_url":"https://api.github.com/repos/pandeiro/boot-http/issues/31/comments","events_url":"https://api.github.com/repos/pandeiro/boot-http/issues/31/events","html_url":"https://github.com/pandeiro/boot-http/issues/31","id":118356943,"node_id":"MDU6SXNzdWUxMTgzNTY5NDM=","number":31,"title":"ring handler via compojure","user":{"login":"magomimmo","id":1448905,"node_id":"MDQ6VXNlcjE0NDg5MDU=","avatar_url":"https://avatars3.githubusercontent.com/u/1448905?v=4","gravatar_id":"","url":"https://api.github.com/users/magomimmo","html_url":"https://github.com/magomimmo","followers_url":"https://api.github.com/users/magomimmo/followers","following_url":"https://api.github.com/users/magomimmo/following{/other_user}","gists_url":"https://api.github.com/users/magomimmo/gists{/gist_id}","starred_url":"https://api.github.com/users/magomimmo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magomimmo/subscriptions","organizations_url":"https://api.github.com/users/magomimmo/orgs","repos_url":"https://api.github.com/users/magomimmo/repos","events_url":"https://api.github.com/users/magomimmo/events{/privacy}","received_events_url":"https://api.github.com/users/magomimmo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-11-23T10:48:14Z","updated_at":"2015-11-26T16:37:45Z","closed_at":"2015-11-23T11:44:41Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\nI'm pretty new to `boot`.  \n\nI'm trying without any success to pass a ring handler (by using `compojure` as well) to the `serve` task via the `:handler` option.\n\nIs there a reference boot project that demonstrated the above scenario? Could be a good idea to try to port the compojure getting started sample to boot?\n\nhttps://github.com/weavejester/compojure/wiki/Getting-Started\n\nand add static html page to `resources/public` folder to see what could be a valid `build.boot` file able to do the same thing?\n\nThanks so much for your help.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/weavejester/compojure/issues/148","repository_url":"https://api.github.com/repos/weavejester/compojure","labels_url":"https://api.github.com/repos/weavejester/compojure/issues/148/labels{/name}","comments_url":"https://api.github.com/repos/weavejester/compojure/issues/148/comments","events_url":"https://api.github.com/repos/weavejester/compojure/issues/148/events","html_url":"https://github.com/weavejester/compojure/issues/148","id":128603844,"node_id":"MDU6SXNzdWUxMjg2MDM4NDQ=","number":148,"title":"Context-macro recreating subroutes per request","user":{"login":"ikitommi","id":567532,"node_id":"MDQ6VXNlcjU2NzUzMg==","avatar_url":"https://avatars1.githubusercontent.com/u/567532?v=4","gravatar_id":"","url":"https://api.github.com/users/ikitommi","html_url":"https://github.com/ikitommi","followers_url":"https://api.github.com/users/ikitommi/followers","following_url":"https://api.github.com/users/ikitommi/following{/other_user}","gists_url":"https://api.github.com/users/ikitommi/gists{/gist_id}","starred_url":"https://api.github.com/users/ikitommi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ikitommi/subscriptions","organizations_url":"https://api.github.com/users/ikitommi/orgs","repos_url":"https://api.github.com/users/ikitommi/repos","events_url":"https://api.github.com/users/ikitommi/events{/privacy}","received_events_url":"https://api.github.com/users/ikitommi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-25T18:19:54Z","updated_at":"2016-01-26T08:06:09Z","closed_at":"2016-01-26T08:06:09Z","author_association":"NONE","active_lock_reason":null,"body":"Hi.\n\nWas bit surprised that the `context`-macro seems to recreate the (sub-)routes on every request. Is this intentional? Isn't there a way to just create the internal routes just once and reuse them?\n\n``` clj\n(require '[compojure.core :as c])\n\n(defmacro GET [& args]\n  `(do (println \"endpoint\" ~(first args)) (c/GET ~@args)))\n\n(println \"--- create a context ---\")\n(def app (c/context \"/a\" []\n           (c/context \"/b\" []\n             (GET \"/1\" [] (println \"..served /1\") \"ok\")\n             (GET \"/2\" [] \"ok\")\n             (GET \"/3\" [] \"ok\")\n             (GET \"/4\" [] \"ok\")\n             (GET \"/5\" [] \"ok\"))\n           (GET \"/6\" [] \"ok\")\n           (GET \"/7\" [] \"ok\")\n           (GET \"/8\" [] \"ok\")\n           (GET \"/9\" [] \"ok\")\n           (GET \"/10\" [] \"ok\")))\n\n(println \"--- handle route from 1-level deep ---\")\n(app {:request-method :get :uri \"/a/1\"})\n\n(println \"--- handle route from 2-levels deep ---\")\n(app {:request-method :get :uri \"/a/b/1\"})\n\n(println \"--- handle same route again ---\")\n(app {:request-method :get :uri \"/a/b/1\"})\n\n; --- create a context ---\n; --- handle route from 1-level deep ---\n; endpoint /6\n; endpoint /7\n; endpoint /8\n; endpoint /9\n; endpoint /10\n; --- handle route from 2-levels deep ---\n; endpoint /6\n; endpoint /7\n; endpoint /8\n; endpoint /9\n; endpoint /10\n; endpoint /1\n; endpoint /2\n; endpoint /3\n; endpoint /4\n; endpoint /5\n; ..served /1\n; --- handle same route again ---\n; endpoint /6\n; endpoint /7\n; endpoint /8\n; endpoint /9\n; endpoint /10\n; endpoint /1\n; endpoint /2\n; endpoint /3\n; endpoint /4\n; endpoint /5\n; ..served /1\n; => {:status 200, :headers {\"Content-Type\" \"text/html; charset=utf-8\"}, :body \"ok\"}\n```\n\nDid some simple benchmarking with criterium, a 3-level nested context takes x6 times longer to route than with flattened route. That's ok'ish, but thinking if there is some perf win waiting in here?\n\n(related https://github.com/weavejester/compojure/issues/133)\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/magomimmo/modern-cljs/issues/146","repository_url":"https://api.github.com/repos/magomimmo/modern-cljs","labels_url":"https://api.github.com/repos/magomimmo/modern-cljs/issues/146/labels{/name}","comments_url":"https://api.github.com/repos/magomimmo/modern-cljs/issues/146/comments","events_url":"https://api.github.com/repos/magomimmo/modern-cljs/issues/146/events","html_url":"https://github.com/magomimmo/modern-cljs/issues/146","id":31073429,"node_id":"MDU6SXNzdWUzMTA3MzQyOQ==","number":146,"title":"Error Running lein test: no class def found javax/servlet/http/HttpServletRequest","user":{"login":"mrwizard82d1","id":595422,"node_id":"MDQ6VXNlcjU5NTQyMg==","avatar_url":"https://avatars0.githubusercontent.com/u/595422?v=4","gravatar_id":"","url":"https://api.github.com/users/mrwizard82d1","html_url":"https://github.com/mrwizard82d1","followers_url":"https://api.github.com/users/mrwizard82d1/followers","following_url":"https://api.github.com/users/mrwizard82d1/following{/other_user}","gists_url":"https://api.github.com/users/mrwizard82d1/gists{/gist_id}","starred_url":"https://api.github.com/users/mrwizard82d1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrwizard82d1/subscriptions","organizations_url":"https://api.github.com/users/mrwizard82d1/orgs","repos_url":"https://api.github.com/users/mrwizard82d1/repos","events_url":"https://api.github.com/users/mrwizard82d1/events{/privacy}","received_events_url":"https://api.github.com/users/mrwizard82d1/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2014-04-08T14:10:52Z","updated_at":"2015-12-13T15:23:40Z","closed_at":"2015-12-13T15:23:40Z","author_association":"NONE","active_lock_reason":null,"body":"When completing tutorial 15, I encountered the following error running lein test:\n\nException in thread \"main\" java.lang.NoClassDefFoundError: javax/servlet/http/HttpServletRequest, compiling:(ring/middleware/multipart_params.clj:39:5)\n\nAfter some searching, I found the following on the compojure site: https://github.com/weavejester/compojure/issues/98.\n\nAs the note suggested, I added an explicit dependency on ring 1.2.1 and resolved the error.\n\nHere's the diff of my project.clj. It includes both the changes indicated in the tutorial and the explicit dependency on ring:\n\ndiff --git a/project.clj b/project.clj\nindex 0d1bbba..7f11013 100644\n--- a/project.clj\n+++ b/project.clj\n@@ -6,6 +6,11 @@\n\n   ;; Clojure and ClojureScript source code paths\n   :source-paths [\"src/clj\" \"src/cljs\" \"src/brepl\"]\n+\n-  ;; Unit test paths\n-  :test-paths [\"test/clj\"]\n  +\n-  ;; Project dependencies\n  :dependencies [[org.clojure/clojure \"1.6.0\"]\n                [org.clojure/clojurescript \"0.0-2202\"]\n                [compojure \"1.1.6\"]\n  @@ -16,7 +21,8 @@\n                [org.clojars.magomimmo/shoreleave-remote\n                 \"0.3.1-SNAPSHOT\"]\n                [com.cemerick/valip \"0.3.2\"]\n-                 [enlive \"1.1.5\"]]\n-                 [enlive \"1.1.5\"]\n- ```\n              [ring \"1.2.1\"]]\n  ```\n  \n  ;; Leiningen plugin to help building ClojureScript projects.\n  :plugins [[lein-cljsbuild \"1.0.3\"]\n  @@ -24,7 +30,9 @@\n  \n  ;; ClojureScript build configuration\n  :cljsbuild {:crossovers\n-              [valip.core valip.predicates modern-cljs.login.validators]  \n-              [valip.core valip.predicates\n-               modern-cljs.login.validators\n-               modern-cljs.shopping.validators]\n             :builds \n             {:dev\n              ;; For development, remove extraneous whitespace and\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/pandeiro/boot-http/issues/21","repository_url":"https://api.github.com/repos/pandeiro/boot-http","labels_url":"https://api.github.com/repos/pandeiro/boot-http/issues/21/labels{/name}","comments_url":"https://api.github.com/repos/pandeiro/boot-http/issues/21/comments","events_url":"https://api.github.com/repos/pandeiro/boot-http/issues/21/events","html_url":"https://github.com/pandeiro/boot-http/issues/21","id":88025809,"node_id":"MDU6SXNzdWU4ODAyNTgwOQ==","number":21,"title":"best way to add routes","user":{"login":"ioRekz","id":688774,"node_id":"MDQ6VXNlcjY4ODc3NA==","avatar_url":"https://avatars3.githubusercontent.com/u/688774?v=4","gravatar_id":"","url":"https://api.github.com/users/ioRekz","html_url":"https://github.com/ioRekz","followers_url":"https://api.github.com/users/ioRekz/followers","following_url":"https://api.github.com/users/ioRekz/following{/other_user}","gists_url":"https://api.github.com/users/ioRekz/gists{/gist_id}","starred_url":"https://api.github.com/users/ioRekz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ioRekz/subscriptions","organizations_url":"https://api.github.com/users/ioRekz/orgs","repos_url":"https://api.github.com/users/ioRekz/repos","events_url":"https://api.github.com/users/ioRekz/events{/privacy}","received_events_url":"https://api.github.com/users/ioRekz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-06-13T16:04:53Z","updated_at":"2015-10-04T16:36:04Z","closed_at":"2015-10-04T16:36:04Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\nI would like to redirect all requests to index.html or add some custom route.\nWhat's the best way to do it ?\nUse a custom ring handler ?\n","performed_via_github_app":null,"score":1.0}]}
0

