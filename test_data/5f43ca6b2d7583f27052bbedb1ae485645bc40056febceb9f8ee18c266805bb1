HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sun, 08 Apr 2018 22:38:10 GMT
Link: <https://api.github.com/search/issues?q=repo%3Acivetweb%2Fcivetweb+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Acivetweb%2Fcivetweb+type%3Aissue+state%3Aclosed&page=11>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CDBA:54B9:144C3C0:28CE629:5ACA99D1
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 7
X-Ratelimit-Reset: 1523227124
X-Runtime-Rack: 0.331002
X-Xss-Protection: 1; mode=block

8000
{"total_count":318,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/civetweb/civetweb/issues/605","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/605/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/605/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/605/events","html_url":"https://github.com/civetweb/civetweb/issues/605","id":311214863,"number":605,"title":"mg_handle_form_request  can call strchr with uninitialized data","user":{"login":"PandaChauve","id":5232914,"avatar_url":"https://avatars2.githubusercontent.com/u/5232914?v=4","gravatar_id":"","url":"https://api.github.com/users/PandaChauve","html_url":"https://github.com/PandaChauve","followers_url":"https://api.github.com/users/PandaChauve/followers","following_url":"https://api.github.com/users/PandaChauve/following{/other_user}","gists_url":"https://api.github.com/users/PandaChauve/gists{/gist_id}","starred_url":"https://api.github.com/users/PandaChauve/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PandaChauve/subscriptions","organizations_url":"https://api.github.com/users/PandaChauve/orgs","repos_url":"https://api.github.com/users/PandaChauve/repos","events_url":"https://api.github.com/users/PandaChauve/events{/privacy}","received_events_url":"https://api.github.com/users/PandaChauve/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-04-04T12:47:03Z","updated_at":"2018-04-06T18:49:42Z","closed_at":"2018-04-06T18:49:36Z","author_association":"NONE","body":"Hi,\r\nthere may be an issue with mg_handle_form_request (line 381 src/handle_form.inl),\r\nstrchr can be called with buf pointing to an uninitialized part of the original buffer.\r\n\r\nThe issue was found using valgrind (memcheck) on a custom integration of civet and can be reproduced easily.\r\n\r\n### Context :\r\nmg_handle_form_request is the first method used in a request_handler (using the cpp api but I don't think it has any impact). \r\nThe issue was found using the last release but I reproduced it using the last version of handle_form.inl (i didn't change anything else)\r\n\r\nThe data is form-url-encoded and the issue may be reproduced with content as simple as 1=1.\r\n\r\n### Behaviour:\r\nThe loop in the \"form url encoded\" part of the function is called. (lines 350 to 515)\r\nWe need to follow the content of \"buf\" and \"buf_fill\".\r\n \r\nAt the start buff isn't initialized, it will be filled by \"mg_read\" (ln 361)\r\n\"buf_fill\" will contain the size of the useful data in buff (ln 374)\r\n\r\nIf we're parsing the last parameter (or only one), we won't find & in \"buff \"thus \"end_of_key_value_pair_found\" is 0 (block ln 420 - 427)\r\n\r\nln461 buff is translated over itself (removing the buffer's useful part.) using memmove\r\nIt's ok, \"buf_fill\" is set to 0 (ln 464) => no useful data left in \"buf\"\r\n\r\nSince there's nothing to read any more, nothing happens until ln  509\r\n\"used\" should be 0 but isn't (next is computed before the memmove) and \"buf_fill\" is negative.\r\n\r\nFrom there we have bad stuff, \"buf_fill\" is cast to size_t (unsigned) => buf_fill > sizeof(buf) -1 (ln 358)\r\n\r\nThe next call to \"strchr\" is done with random data found in memory (ln381).\r\nIf the user is lucky, \"buf\" contains '0' and not '=' and we break line 384.\r\nif the user isn't I'm not sure but it's bad.\r\n\r\n### How to fix\r\nI still don't have a perfect understanding of this function (it's a bit long for a newcomer) but recomputing next after memmove may be enough ?\r\n```\r\n\t\t\t\tif (!end_of_key_value_pair_found) {\t\r\n\t\t\t\t\t\tused = next - buf;\t\r\n\t\t\t\t\t\tmemmove(buf,\t\r\n\t\t\t\t\t\t\tbuf + (size_t)used,\r\n\t\t\t\t\t\t\tsizeof(buf) - (size_t)used);\r\n\t\t\t\t\tbuf_fill -= (int)used;\r\n\t\t\t\t\tnext = buf;\r\n\t\t\t\t\tif ((size_t)buf_fill < (sizeof(buf) - 1)) {\r\n```\r\n(added next = buf)\r\n\r\nHave a nice day !","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/602","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/602/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/602/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/602/events","html_url":"https://github.com/civetweb/civetweb/issues/602","id":310003732,"number":602,"title":"Accessing CivetHandler's private member from mg_form_data_handler using C++","user":{"login":"mattdibi","id":22748355,"avatar_url":"https://avatars0.githubusercontent.com/u/22748355?v=4","gravatar_id":"","url":"https://api.github.com/users/mattdibi","html_url":"https://github.com/mattdibi","followers_url":"https://api.github.com/users/mattdibi/followers","following_url":"https://api.github.com/users/mattdibi/following{/other_user}","gists_url":"https://api.github.com/users/mattdibi/gists{/gist_id}","starred_url":"https://api.github.com/users/mattdibi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattdibi/subscriptions","organizations_url":"https://api.github.com/users/mattdibi/orgs","repos_url":"https://api.github.com/users/mattdibi/repos","events_url":"https://api.github.com/users/mattdibi/events{/privacy}","received_events_url":"https://api.github.com/users/mattdibi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-30T08:03:36Z","updated_at":"2018-04-03T07:46:20Z","closed_at":"2018-04-03T07:46:19Z","author_association":"NONE","body":"Hi,\r\nI encountered a problem using the C++ interface and I'm looking for some inputs on how to solve it.\r\nI have the following code structure:\r\n\r\n``` c++\r\n    int post_field_found(const char *key,\r\n            const char *filename,\r\n            char *path,\r\n            size_t pathlen,\r\n            void *user_data) {\r\n\r\n        if (filename && *filename)\r\n            return MG_FORM_FIELD_STORAGE_SKIP;\r\n\r\n        return MG_FORM_FIELD_STORAGE_GET;\r\n    }\r\n\r\n    int post_field_get(const char *key,\r\n            const char *value,\r\n            size_t valuelen,\r\n            void *user_data) {\r\n\r\n        if (key[0]) {\r\n            std::string par_name {key};\r\n            std::string par_value {value};\r\n\r\n            std::cout << par_name << \": \" << par_value.substr(0, valuelen) <<  \" \" << a_string << std::endl;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\nclass aHandler : public CivetHandler {\r\n  public:\r\n    bool handlePost(CivetServer *server, struct mg_connection *conn) {\r\n        try {\r\n            int ret;\r\n            struct mg_form_data_handler post_fdh = {post_field_found, post_field_get, 0, 0};\r\n\r\n            ret = mg_handle_form_request(conn, &post_fdh);\r\n\r\n            if(ret <= 0) throw std::runtime_error(\"POST error: no field found\");\r\n\r\n            mg_printf(conn, \"HTTP/1.1 204 No Content\\r\\nConnection: close\\r\\n\\r\\n\");\r\n        } catch (std::runtime_error e) {\r\n            mg_printf(conn, \"HTTP/1.1 400 Bad Request\\r\\nContent-Type: \"\r\n                    \"text/plain; charset=utf-8\\r\\nConnection: close\\r\\n\\r\\n\");\r\n            mg_printf(conn, \"%s\", e.what()); // Send error message\r\n        }\r\n\r\n        return true;\r\n    }\r\n private:\r\n    std::string a_string;\r\n};\r\n```\r\n\r\nI need to access the private members of the Handler class from the callback functions of the `mg_form_data_handler`.\r\n\r\nI thought of setting the callback function as `friend` of the handler class but I need to pass the handler object to access its members.\r\n\r\nSetting the callback functions as `static` I can compile but cannot access members of the class that are not `static`.\r\n\r\nSetting the callback function as private methods of the handler class I get the following:\r\n```\r\naHandler.h:124:91: error: cannot convert ‘aHandler::post_field_found’ from type ‘int (aHandler::)(const char*, const char*, char*, size_t, void*) {aka int (aHandler::)(const char*, const char*, char*, long unsigned int, void*)}’ to type ‘int (*)(const char*, const char*, char*, size_t, void*) {aka int (*)(const char*, const char*, char*, long unsigned int, void*)}’\r\n             struct mg_form_data_handler post_fdh = {post_field_found, post_field_get, 0, 0};\r\n```\r\nIs there a \"right\" way to do this? Am I missing something?\r\n\r\nEDIT: The main problem seems to be due to the fact that I need to declare the callback functions as members of the CivetHandler's class to access its private members, but this is not compatible to the declaration in the `mg_form_data_handler` that accepts pointer to functions that are not members of a class.","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/600","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/600/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/600/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/600/events","html_url":"https://github.com/civetweb/civetweb/issues/600","id":306839025,"number":600,"title":"using \"localhost:8080\" as listening_ports","user":{"login":"albertino80","id":13517963,"avatar_url":"https://avatars2.githubusercontent.com/u/13517963?v=4","gravatar_id":"","url":"https://api.github.com/users/albertino80","html_url":"https://github.com/albertino80","followers_url":"https://api.github.com/users/albertino80/followers","following_url":"https://api.github.com/users/albertino80/following{/other_user}","gists_url":"https://api.github.com/users/albertino80/gists{/gist_id}","starred_url":"https://api.github.com/users/albertino80/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/albertino80/subscriptions","organizations_url":"https://api.github.com/users/albertino80/orgs","repos_url":"https://api.github.com/users/albertino80/repos","events_url":"https://api.github.com/users/albertino80/events{/privacy}","received_events_url":"https://api.github.com/users/albertino80/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-20T12:10:09Z","updated_at":"2018-03-20T13:33:58Z","closed_at":"2018-03-20T13:33:58Z","author_association":"CONTRIBUTOR","body":"I'm embedding civetweb on win32 project.\r\n\r\nI need to bind `localhost` address on port `8080`, this is usefull because on windows using `localhost` instead of `127.0.0.1` does not require to open local firewal port (that is a strange request for a end user).\r\n\r\n```\r\nconst char *options[] = {\r\n        \"listening_ports\", \"localhost:8080\",\r\n...\r\n}\r\n```\r\nThe problem is with the function \r\n```\r\nstatic int\r\nis_ssl_port_used(const char *ports)\r\n```\r\nthat check for a 's' or 'r' character on port string, and string `localhost ` contains letter 's'\r\n\r\nSo i suggest to consider this implementation:\r\n```\r\n/* Is there any SSL port in use? */\r\nstatic int\r\nis_ssl_port_used(const char *ports)\r\n{\r\n\tif (ports) {\r\n            int portslen = (int)strlen(ports);\r\n            char prevIsNumber = 0;\r\n            for(int i=0; i<portslen; i++) {\r\n                if(prevIsNumber && (ports[i] == 's' || ports[i] == 'r'))\r\n                    return 1;\r\n                if(ports[i] >= '0' && ports[i] <= '9')\r\n                    prevIsNumber = 1;\r\n                else\r\n                    prevIsNumber = 0;\r\n            }\r\n        }\r\n\treturn 0;\r\n}\r\n```","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/598","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/598/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/598/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/598/events","html_url":"https://github.com/civetweb/civetweb/issues/598","id":303486485,"number":598,"title":"Response headers?","user":{"login":"irobayna","id":349175,"avatar_url":"https://avatars3.githubusercontent.com/u/349175?v=4","gravatar_id":"","url":"https://api.github.com/users/irobayna","html_url":"https://github.com/irobayna","followers_url":"https://api.github.com/users/irobayna/followers","following_url":"https://api.github.com/users/irobayna/following{/other_user}","gists_url":"https://api.github.com/users/irobayna/gists{/gist_id}","starred_url":"https://api.github.com/users/irobayna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/irobayna/subscriptions","organizations_url":"https://api.github.com/users/irobayna/orgs","repos_url":"https://api.github.com/users/irobayna/repos","events_url":"https://api.github.com/users/irobayna/events{/privacy}","received_events_url":"https://api.github.com/users/irobayna/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-08T13:52:46Z","updated_at":"2018-03-12T20:06:44Z","closed_at":"2018-03-12T20:06:44Z","author_association":"NONE","body":"I'm new to CivetWeb and I am trying to figure out how to send different headers back to the client.  \r\n\r\nI'm sending an HTTP error back which appears to work via:\r\n\r\n```\r\nmg_send_http_error(pConn, 422, \"%s\\r\\n\", ErrBuf);\r\n```\r\nand then send headers back via:\r\n```\r\n\tmg_printf(pConn, \"Access-Control-Allow-Origin: *\\r\\n\");\r\n\tmg_printf(pConn, \"Access-Control-Allow-Methods: POST\\r\\n\");\r\n\tmg_printf(pConn, \"Access-Control-Allow-Headers: Content-Type\\r\\n\");\r\n\tmg_printf(pConn, \"Access-Control-Allow-Headers: X-Requested-With\\r\\n\");\r\n```\r\nwhich sends them on the body not the header.\r\n\r\nWhat am I missing?\r\n\r\nHere is the output via curl:\r\n```\r\n< HTTP/1.1 422 Unproccessable entity\r\n< Cache-Control: no-cache, no-store, must-revalidate, private, max-age=0\r\n< Pragma: no-cache\r\n< Expires: 0\r\n< Content-Type: text/plain; charset=utf-8\r\n< Date: Thu, 08 Mar 2018 13:44:17 GMT\r\n< Connection: close\r\n```\r\nright output which should be:\r\n```\r\n< HTTP/1.1 422 Unprocessable Entity\r\n< Access-Control-Allow-Origin: *\r\n< Access-Control-Allow-Methods: POST\r\n< Access-Control-Allow-Headers: Content-Type\r\n< Access-Control-Allow-Headers: X-Requested-With\r\n< Content-Type: application/json; charset=utf-8\r\n< Transfer-Encoding: chunked\r\n<\r\n```\r\n\r\nThank you\r\n","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/595","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/595/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/595/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/595/events","html_url":"https://github.com/civetweb/civetweb/issues/595","id":300960655,"number":595,"title":"Is there a way to dynamically generate some data while using document root?","user":{"login":"tamertemizer","id":14349978,"avatar_url":"https://avatars3.githubusercontent.com/u/14349978?v=4","gravatar_id":"","url":"https://api.github.com/users/tamertemizer","html_url":"https://github.com/tamertemizer","followers_url":"https://api.github.com/users/tamertemizer/followers","following_url":"https://api.github.com/users/tamertemizer/following{/other_user}","gists_url":"https://api.github.com/users/tamertemizer/gists{/gist_id}","starred_url":"https://api.github.com/users/tamertemizer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tamertemizer/subscriptions","organizations_url":"https://api.github.com/users/tamertemizer/orgs","repos_url":"https://api.github.com/users/tamertemizer/repos","events_url":"https://api.github.com/users/tamertemizer/events{/privacy}","received_events_url":"https://api.github.com/users/tamertemizer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2018-02-28T10:00:03Z","updated_at":"2018-03-07T18:24:07Z","closed_at":"2018-03-07T13:40:55Z","author_association":"NONE","body":"We have a web application that receives information from the database and prints it to the web page. Most of the pages are static but each page has data that needs to be dynamically generated with the information from the database. Do I need to create handlers for each page or is there a way to use document root for the static parts of the pages and use handlers only for the dynamic parts? \r\n\r\nI am trying to avoid embedding all of the static html code to the civetweb.","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/593","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/593/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/593/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/593/events","html_url":"https://github.com/civetweb/civetweb/issues/593","id":297704044,"number":593,"title":"WSS Client example?","user":{"login":"CrackerHax","id":6037535,"avatar_url":"https://avatars1.githubusercontent.com/u/6037535?v=4","gravatar_id":"","url":"https://api.github.com/users/CrackerHax","html_url":"https://github.com/CrackerHax","followers_url":"https://api.github.com/users/CrackerHax/followers","following_url":"https://api.github.com/users/CrackerHax/following{/other_user}","gists_url":"https://api.github.com/users/CrackerHax/gists{/gist_id}","starred_url":"https://api.github.com/users/CrackerHax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CrackerHax/subscriptions","organizations_url":"https://api.github.com/users/CrackerHax/orgs","repos_url":"https://api.github.com/users/CrackerHax/repos","events_url":"https://api.github.com/users/CrackerHax/events{/privacy}","received_events_url":"https://api.github.com/users/CrackerHax/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2018-02-16T07:48:13Z","updated_at":"2018-02-17T09:08:59Z","closed_at":"2018-02-16T11:11:15Z","author_association":"NONE","body":"Looks like a lot of the old examples don't work anymore and a lot of ssl code has changed. Any chance to get an example for TLS websocket clients? Shouldn't mg_connect_websocket_client with 'use_ssl' \"just work\"?","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/588","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/588/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/588/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/588/events","html_url":"https://github.com/civetweb/civetweb/issues/588","id":293221856,"number":588,"title":"mg_set_request_handler race condition","user":{"login":"hcodina","id":33450401,"avatar_url":"https://avatars3.githubusercontent.com/u/33450401?v=4","gravatar_id":"","url":"https://api.github.com/users/hcodina","html_url":"https://github.com/hcodina","followers_url":"https://api.github.com/users/hcodina/followers","following_url":"https://api.github.com/users/hcodina/following{/other_user}","gists_url":"https://api.github.com/users/hcodina/gists{/gist_id}","starred_url":"https://api.github.com/users/hcodina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hcodina/subscriptions","organizations_url":"https://api.github.com/users/hcodina/orgs","repos_url":"https://api.github.com/users/hcodina/repos","events_url":"https://api.github.com/users/hcodina/events{/privacy}","received_events_url":"https://api.github.com/users/hcodina/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2018-01-31T16:23:25Z","updated_at":"2018-02-07T20:11:24Z","closed_at":"2018-02-07T20:11:24Z","author_association":"NONE","body":"A race condition exist between removing an handler using `mg_set_request_handler`\r\nand a worker thread using this handler.\r\n\r\nOn the worker thread (handle_request function) : \r\n``` \r\nget_request_handler(conn,is_websocket_request,&callback_handler,...);\r\n...\r\ncallback_handler(conn, callback_data);\r\n```\r\n\r\nBetween the call to `get_request_handler` to retreive handler and the handler call `callback_handler(conn, callback_data)`, `mg_set_request_handler` can be called, modifying the handler (callback_data, callback) or simply removing it.\r\nThe handler called is in this case obsolete and associated data (callback_data) can be invalid.\r\n\r\nA protection should be done in order to avoid modifying an handler between `get_request_handler` and its call.\r\n\r\nNot that this will probably imply that 'mg_set_request_handler' should not be called from an handler (deadlock).\r\n\r\nA rwlock (I am not sure about rwlock presence on windows) can be used to improve performance in this case and allowing multiple handlers running in parallel.\r\n\r\nhandle_request : \r\n```\r\npthread_rwlock_rdlock(conn->ctx->rwlock);\r\nget_request_handler(conn,is_websocket_request,&callback_handler,...);\r\n...\r\ncallback_handler(conn, callback_data);\r\npthread_rwlock_unlock(conn->ctx->rwlock);\r\n```\r\n\r\nmg_set_request_handler :\r\n```\r\npthread_rwlock_wrlock(conn->ctx->rwlock);\r\n... actual code ...\r\npthread_rwlock_unlock(conn->ctx->rwlock);\r\n```\r\nAnd so call mg_set_request_handler from an handler is forbidden.\r\n\r\nHope this could help in civetweb improvements.\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/586","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/586/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/586/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/586/events","html_url":"https://github.com/civetweb/civetweb/issues/586","id":292488797,"number":586,"title":"Possible WebSocket opcode issues?","user":{"login":"oldmancoyote","id":3923312,"avatar_url":"https://avatars1.githubusercontent.com/u/3923312?v=4","gravatar_id":"","url":"https://api.github.com/users/oldmancoyote","html_url":"https://github.com/oldmancoyote","followers_url":"https://api.github.com/users/oldmancoyote/followers","following_url":"https://api.github.com/users/oldmancoyote/following{/other_user}","gists_url":"https://api.github.com/users/oldmancoyote/gists{/gist_id}","starred_url":"https://api.github.com/users/oldmancoyote/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oldmancoyote/subscriptions","organizations_url":"https://api.github.com/users/oldmancoyote/orgs","repos_url":"https://api.github.com/users/oldmancoyote/repos","events_url":"https://api.github.com/users/oldmancoyote/events{/privacy}","received_events_url":"https://api.github.com/users/oldmancoyote/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2018-01-29T17:14:21Z","updated_at":"2018-03-29T21:24:00Z","closed_at":"2018-03-29T21:23:54Z","author_association":"CONTRIBUTOR","body":"I was wondering if the WebSocket portion of the code adheres to the RFC-6455 specification. \r\n\r\nAfter hooking up Wireshark WebSocket sniffer, we're seeing occasional pong '0xA' opcodes coming out of the traffic, that have not been proceeded by a ping opcode '0x9'. According to the specification, either client or server can issue a ping, but it must be proceeded by the pong opcode. Our client who is using our application will see a disconnection message coming out of the client as well. And according to the spec, the server should be the only one to issue a disconnect.\r\n\r\nThanks!","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/585","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/585/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/585/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/585/events","html_url":"https://github.com/civetweb/civetweb/issues/585","id":291588771,"number":585,"title":"Error on Android when start server","user":{"login":"prsolucoes","id":395096,"avatar_url":"https://avatars3.githubusercontent.com/u/395096?v=4","gravatar_id":"","url":"https://api.github.com/users/prsolucoes","html_url":"https://github.com/prsolucoes","followers_url":"https://api.github.com/users/prsolucoes/followers","following_url":"https://api.github.com/users/prsolucoes/following{/other_user}","gists_url":"https://api.github.com/users/prsolucoes/gists{/gist_id}","starred_url":"https://api.github.com/users/prsolucoes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prsolucoes/subscriptions","organizations_url":"https://api.github.com/users/prsolucoes/orgs","repos_url":"https://api.github.com/users/prsolucoes/repos","events_url":"https://api.github.com/users/prsolucoes/events{/privacy}","received_events_url":"https://api.github.com/users/prsolucoes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-01-25T14:29:24Z","updated_at":"2018-01-26T19:51:33Z","closed_at":"2018-01-26T19:51:33Z","author_association":"NONE","body":"Hi,\r\n\r\nIm trying use my library inside android and getting this error:\r\n\r\n```\r\nCaused by: java.lang.RuntimeException: null context when constructing CivetServer. Possible problem binding to port.\r\n```\r\n\r\nIt is working on mac/linux, but not on Android.\r\n\r\nThe code is here:\r\nhttps://github.com/prsolucoes/epubreader/blob/master/dependency-server/build/source/cpp/EpubReaderServerImpl.cpp\r\n\r\nAnd the library:\r\nhttps://github.com/prsolucoes/epubreader/tree/master/build/android\r\n\r\nCan anyone help me?\r\n\r\nThanks.","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/584","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/584/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/584/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/584/events","html_url":"https://github.com/civetweb/civetweb/issues/584","id":291463418,"number":584,"title":"Error on tvOS","user":{"login":"prsolucoes","id":395096,"avatar_url":"https://avatars3.githubusercontent.com/u/395096?v=4","gravatar_id":"","url":"https://api.github.com/users/prsolucoes","html_url":"https://github.com/prsolucoes","followers_url":"https://api.github.com/users/prsolucoes/followers","following_url":"https://api.github.com/users/prsolucoes/following{/other_user}","gists_url":"https://api.github.com/users/prsolucoes/gists{/gist_id}","starred_url":"https://api.github.com/users/prsolucoes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prsolucoes/subscriptions","organizations_url":"https://api.github.com/users/prsolucoes/orgs","repos_url":"https://api.github.com/users/prsolucoes/repos","events_url":"https://api.github.com/users/prsolucoes/events{/privacy}","received_events_url":"https://api.github.com/users/prsolucoes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-01-25T06:24:16Z","updated_at":"2018-03-29T21:22:49Z","closed_at":"2018-03-29T21:22:44Z","author_association":"NONE","body":"Im trying compiling it to tvOS, but get these errors:\r\n\r\n```\r\n/Users/paulo/Developer/workspaces/cpp/epubreader/thirdparty/civetweb/src/civetweb.c:5451:13: error: 'fork' is unavailable: not available on tvOS\r\n        if ((pid = fork()) == -1) {\r\n                   ^\r\nIn file included from /Users/paulo/Developer/workspaces/cpp/epubreader/thirdparty/civetweb/src/civetweb.c:660:\r\n/Applications/Xcode.app/Contents/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS11.2.sdk/usr/include/unistd.h:446:8: note: 'fork' has been explicitly marked unavailable here\r\npid_t    fork(void) __WATCHOS_PROHIBITED __TVOS_PROHIBITED;\r\n         ^\r\n/Users/paulo/Developer/workspaces/cpp/epubreader/thirdparty/civetweb/src/civetweb.c:5502:11: error: 'execle' is unavailable: not available on tvOS\r\n                                (void)execle(prog, prog, NULL, envp);\r\n                                      ^\r\nIn file included from /Users/paulo/Developer/workspaces/cpp/epubreader/thirdparty/civetweb/src/civetweb.c:660:\r\n/Applications/Xcode.app/Contents/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS11.2.sdk/usr/include/unistd.h:441:6: note: 'execle' has been explicitly marked unavailable here\r\nint      execle(const char * __path, const char * __arg0, ...) __WATCHOS_PROHIBITED __TVOS_PROHIBITED;\r\n         ^\r\n/Users/paulo/Developer/workspaces/cpp/epubreader/thirdparty/civetweb/src/civetweb.c:5509:11: error: 'execle' is unavailable: not available on tvOS\r\n                                (void)execle(interp, interp, prog, NULL, envp);\r\n                                      ^\r\nIn file included from /Users/paulo/Developer/workspaces/cpp/epubreader/thirdparty/civetweb/src/civetweb.c:660:\r\n/Applications/Xcode.app/Contents/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS11.2.sdk/usr/include/unistd.h:441:6: note: 'execle' has been explicitly marked unavailable here\r\nint      execle(const char * __path, const char * __arg0, ...) __WATCHOS_PROHIBITED __TVOS_PROHIBITED;\r\n         ^\r\n```\r\n\r\nCan anyone help me?","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/583","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/583/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/583/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/583/events","html_url":"https://github.com/civetweb/civetweb/issues/583","id":291212994,"number":583,"title":"Add missing functions for wolfssl integration","user":{"login":"extergnoto","id":26484354,"avatar_url":"https://avatars2.githubusercontent.com/u/26484354?v=4","gravatar_id":"","url":"https://api.github.com/users/extergnoto","html_url":"https://github.com/extergnoto","followers_url":"https://api.github.com/users/extergnoto/followers","following_url":"https://api.github.com/users/extergnoto/following{/other_user}","gists_url":"https://api.github.com/users/extergnoto/gists{/gist_id}","starred_url":"https://api.github.com/users/extergnoto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/extergnoto/subscriptions","organizations_url":"https://api.github.com/users/extergnoto/orgs","repos_url":"https://api.github.com/users/extergnoto/repos","events_url":"https://api.github.com/users/extergnoto/events{/privacy}","received_events_url":"https://api.github.com/users/extergnoto/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2018-01-24T13:42:36Z","updated_at":"2018-02-26T19:34:55Z","closed_at":"2018-02-26T12:53:24Z","author_association":"NONE","body":"Wolfssl´s openssl emulation misses some functions.\r\nThe code below works for me with civetweb 1.10 and wolfssl 3.12.\r\n\r\n```C\r\n#include <wolfssl/openssl/ssl.h>\r\n#include <wolfssl/openssl/err.h>\r\n#include <wolfssl/openssl/crypto.h>\r\n#include <wolfssl/openssl/x509.h>\r\n#include <wolfssl/openssl/pem.h>\r\n\r\n// For WOLFSSL_X509\r\n#include <wolfssl_lib/wolfssl/wolfssl/internal.h>\r\n\r\n#define 
8000
i2d_X509   cw_i2d_X509\r\n#define EVP_Digest cw_EVP_Digest\r\n\r\n/// \\brief  i2d_X509 has no valid implementation in wolfssl\r\n///\r\n/// The letters i and d in for example i2d_X509 stand for \"internal\" (that is an internal C structure)\r\n/// and \" DER \". So that i2d_X509 converts from internal to DER.\r\n///\r\n/// For OpenSSL 0.9.7 and later if *out is NULL memory will be allocated for a buffer and the encoded\r\n/// data written to it. In this case *out is not incremented and it points to the start of the data\r\n/// just written.\r\nint cw_i2d_X509(struct WOLFSSL_X509 *x, unsigned char **out)\r\n{\r\n   if (!x || !x->derCert) {\r\n      return -1;\r\n   }\r\n\r\n   const int ret = (int)x->derCert->length;\r\n\r\n   if (out && (ret > 0)) {\r\n      if (*out == NULL) {\r\n         *out = mg_malloc(ret);\r\n      }\r\n      if (*out != NULL) {\r\n         memcpy(*out, x->derCert->buffer, ret);\r\n      }\r\n   }\r\n\r\n   return ret;\r\n}\r\n\r\n/// \\brief  EVP_Digest not in wolfssl\r\nint cw_EVP_Digest(const void *data, size_t count,\r\n   unsigned char *md, unsigned int *size, const EVP_MD *type,\r\n   ENGINE *impl)\r\n{\r\n   EVP_MD_CTX *ctx = EVP_MD_CTX_new();\r\n   int ret;\r\n\r\n   if (ctx == NULL)\r\n      return 0;\r\n\r\n   // EVP_MD_CTX_set_flags(ctx, EVP_MD_CTX_FLAG_ONESHOT);\r\n   ret = EVP_DigestInit_ex(ctx, type, impl)\r\n      && EVP_DigestUpdate(ctx, data, count)\r\n      && EVP_DigestFinal_ex(ctx, md, size);\r\n   EVP_MD_CTX_free(ctx);\r\n\r\n   return ret;\r\n}\r\n\r\n/*\r\n * the variable SSL_OP_NO_TLSv1_1 is not defined within the context of wolfssl\r\n * but since the methods using the value are all stubs, we can define it\r\n * arbitrarily and it will not have any consequences\r\n */\r\n#define SSL_OP_NO_TLSv1_1 (0x10000000L)\r\n```","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/582","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/582/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/582/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/582/events","html_url":"https://github.com/civetweb/civetweb/issues/582","id":290888315,"number":582,"title":"Feature request: Means to replace mg_cry() and log_access() totally by an own implemention","user":{"login":"extergnoto","id":26484354,"avatar_url":"https://avatars2.githubusercontent.com/u/26484354?v=4","gravatar_id":"","url":"https://api.github.com/users/extergnoto","html_url":"https://github.com/extergnoto","followers_url":"https://api.github.com/users/extergnoto/followers","following_url":"https://api.github.com/users/extergnoto/following{/other_user}","gists_url":"https://api.github.com/users/extergnoto/gists{/gist_id}","starred_url":"https://api.github.com/users/extergnoto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/extergnoto/subscriptions","organizations_url":"https://api.github.com/users/extergnoto/orgs","repos_url":"https://api.github.com/users/extergnoto/repos","events_url":"https://api.github.com/users/extergnoto/events{/privacy}","received_events_url":"https://api.github.com/users/extergnoto/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2018-01-23T15:50:59Z","updated_at":"2018-02-26T19:35:20Z","closed_at":"2018-02-26T12:55:01Z","author_association":"NONE","body":"Is it possible to add a define or some other means to replace mg_cry() and log_access() totally by an own implemention.\r\n\r\nThe reason is, that I have a very limited embedded system. The big string buffers created on the stack are not suitable and I don´t use file based logging, but a system logging facility.\r\n\r\nIdeally the user defined functions should be implemented in an extra file (.c or .inl).\r\n\r\nAt them moment, I have replaced the functions, but this introduces some merge effort with each new version of civetweb.","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/580","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/580/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/580/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/580/events","html_url":"https://github.com/civetweb/civetweb/issues/580","id":289625169,"number":580,"title":"Option to set the server charset","user":{"login":"PhilLab","id":1710255,"avatar_url":"https://avatars3.githubusercontent.com/u/1710255?v=4","gravatar_id":"","url":"https://api.github.com/users/PhilLab","html_url":"https://github.com/PhilLab","followers_url":"https://api.github.com/users/PhilLab/followers","following_url":"https://api.github.com/users/PhilLab/following{/other_user}","gists_url":"https://api.github.com/users/PhilLab/gists{/gist_id}","starred_url":"https://api.github.com/users/PhilLab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PhilLab/subscriptions","organizations_url":"https://api.github.com/users/PhilLab/orgs","repos_url":"https://api.github.com/users/PhilLab/repos","events_url":"https://api.github.com/users/PhilLab/events{/privacy}","received_events_url":"https://api.github.com/users/PhilLab/received_events","type":"User","site_admin":false},"labels":[{"id":215181297,"url":"https://api.github.com/repos/civetweb/civetweb/labels/Status:%20waiting%20for%20info%20from%20submitter","name":"Status: waiting for info from submitter","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2018-01-18T13:17:44Z","updated_at":"2018-02-08T17:12:38Z","closed_at":"2018-02-08T17:12:38Z","author_association":"CONTRIBUTOR","body":"As my backend is not fully utf-8 capable, I want to configure civetweb such that all clients connecting to it know to communicate e.g. in ISO-8859-1 (ANSI)","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/577","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/577/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/577/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/577/events","html_url":"https://github.com/civetweb/civetweb/issues/577","id":289137105,"number":577,"title":"I do not understand how to build a project with support for websockets in the vs ?","user":{"login":"heiheshang","id":111087,"avatar_url":"https://avatars1.githubusercontent.com/u/111087?v=4","gravatar_id":"","url":"https://api.github.com/users/heiheshang","html_url":"https://github.com/heiheshang","followers_url":"https://api.github.com/users/heiheshang/followers","following_url":"https://api.github.com/users/heiheshang/following{/other_user}","gists_url":"https://api.github.com/users/heiheshang/gists{/gist_id}","starred_url":"https://api.github.com/users/heiheshang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/heiheshang/subscriptions","organizations_url":"https://api.github.com/users/heiheshang/orgs","repos_url":"https://api.github.com/users/heiheshang/repos","events_url":"https://api.github.com/users/heiheshang/events{/privacy}","received_events_url":"https://api.github.com/users/heiheshang/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2018-01-17T04:08:57Z","updated_at":"2018-03-29T21:26:53Z","closed_at":"2018-03-29T21:26:46Z","author_association":"NONE","body":"I do not understand how to build a project with support for websockets in the vs ?","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/574","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/574/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/574/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/574/events","html_url":"https://github.com/civetweb/civetweb/issues/574","id":286353786,"number":574,"title":"Any tips for getting server-sent events to work?","user":{"login":"colmartofus","id":25486458,"avatar_url":"https://avatars1.githubusercontent.com/u/25486458?v=4","gravatar_id":"","url":"https://api.github.com/users/colmartofus","html_url":"https://github.com/colmartofus","followers_url":"https://api.github.com/users/colmartofus/followers","following_url":"https://api.github.com/users/colmartofus/following{/other_user}","gists_url":"https://api.github.com/users/colmartofus/gists{/gist_id}","starred_url":"https://api.github.com/users/colmartofus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/colmartofus/subscriptions","organizations_url":"https://api.github.com/users/colmartofus/orgs","repos_url":"https://api.github.com/users/colmartofus/repos","events_url":"https://api.github.com/users/colmartofus/events{/privacy}","received_events_url":"https://api.github.com/users/colmartofus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-01-05T17:30:30Z","updated_at":"2018-01-11T09:08:26Z","closed_at":"2018-01-11T09:08:26Z","author_association":"CONTRIBUTOR","body":"I use to use server-sent events in my application: https://hpbn.co/server-sent-events-sse/\r\n\r\nI've been able to implement this with libsoup but I want to use Civet. My relevant soup code:\r\n\r\n```\r\nconnection->finished = false;\r\nconnection->nextIdentifier = 0;\r\nconnection->msg = msg;\r\nconnection->server = server;\r\ng_signal_connect(msg, \"finished\", G_CALLBACK(on_finished), connection.get());\r\nself->connectionsMutex.lock();\r\nself->connections.push_back(connection);\r\nself->connectionsMutex.unlock();\r\n```\r\n\r\nFor Civet:\r\n\r\n- Is `SO_KEEPALIVE` automatically active if `Connection: Keep-Alive` is in the header text?\r\n- Do I have to keep the connection alive myself or will this happen automatically?\r\n- How to have an onFinished callback?\r\n\r\nMy current code:\r\n\r\n```\r\nbool DetectionMetadataHandler::handleGet(CivetServer *server, struct mg_connection *conn) {\r\n  mg_printf(conn,\r\n            \"HTTP/1.1 200 OK\\r\\n\"\r\n            \"Cache-Control: no-cache\\r\\n\"\r\n            \"Content-Type: text/event-stream\\r\\n\"\r\n            \"Transfer-Encoding: chunked\\r\\n\"\r\n            \"Connection: Keep-Alive\\r\\n\\r\\n\");\r\n  return true;\r\n}\r\n```\r\nAny tips?","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/572","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/572/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/572/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/572/events","html_url":"https://github.com/civetweb/civetweb/issues/572","id":286029027,"number":572,"title":"HTTP responses overwriting each other","user":{"login":"jbmonroe","id":1607804,"avatar_url":"https://avatars2.githubusercontent.com/u/1607804?v=4","gravatar_id":"","url":"https://api.github.com/users/jbmonroe","html_url":"https://github.com/jbmonroe","followers_url":"https://api.github.com/users/jbmonroe/followers","following_url":"https://api.github.com/users/jbmonroe/following{/other_user}","gists_url":"https://api.github.com/users/jbmonroe/gists{/gist_id}","starred_url":"https://api.github.com/users/jbmonroe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbmonroe/subscriptions","organizations_url":"https://api.github.com/users/jbmonroe/orgs","repos_url":"https://api.github.com/users/jbmonroe/repos","events_url":"https://api.github.com/users/jbmonroe/events{/privacy}","received_events_url":"https://api.github.com/users/jbmonroe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-01-04T15:53:13Z","updated_at":"2018-01-16T19:44:57Z","closed_at":"2018-01-16T03:23:53Z","author_association":"NONE","body":"I'm not sure if this is a defect, or an issue with the way I've written my application--so here goes nothing.\r\n\r\nMy application manages a data store and serves a page to multiple users at once.  The page loads two scripts--let's call them $.js and work.js from the local server.  They have to be local because of security requirements at the site.  I've derived some classes via CivetHandler to handle the routes, and one of those handles scripts.  The work.js file requires some \"macro replacement\" before going out to the caller, and $.js doesn't.  For convenience I'm just letting CivetWeb handle both.\r\n\r\nI know that anything derived from CivetHandler has to be thread-safe, and I reviewed my code again this morning to make sure I'm enforcing that, and I believe I am.  Nevertheless, sometimes I see the browser issuing overlapping requests for both $.js and work.js, and my log says they're both being handled--but $.js goes back to the caller as an empty stream, and work.js goes back as both scripts, separated by a redundant HTTP/1.1 header between the two scripts.\r\n\r\nThe browser is not impressed.  (Neither is QA.) \r\n\r\nSo, on the topic of reentrancy and thread-safety, should I be ensuring that--even though there are two instances of the script handler class, each presumably with a separate mg_connection, handling the requests--only one instance of a script handler is allowed to call mg_write at a time?  I might even have to elevate it to the \"parent\" class that derives from CivetHandler, as the issue might occur during overlapping calls from separate users.   The docs for mg_write() don't say that it should be tied to an exclusion mechanism, but mg_lock_connection() and mg_lock_context() exist--and the docs don't appear to suggest that they should always be bracketing calls to mg_write().  I don't know what I'm seeing here, so I'd appreciate any guidance that anyone has on how to handle this.","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/571","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/571/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/571/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/571/events","html_url":"https://github.com/civetweb/civetweb/issues/571","id":286005162,"number":571,"title":"Embended file resources","user":{"login":"BigJoe01","id":1074255,"avatar_url":"https://avatars2.githubusercontent.com/u/1074255?v=4","gravatar_id":"","url":"https://api.github.com/users/BigJoe01","html_url":"https://github.com/BigJoe01","followers_url":"https://api.github.com/users/BigJoe01/followers","following_url":"https://api.github.com/users/BigJoe01/following{/other_user}","gists_url":"https://api.github.com/users/BigJoe01/gists{/gist_id}","starred_url":"https://api.github.com/users/BigJoe01/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BigJoe01/subscriptions","organizations_url":"https://api.github.com/users/BigJoe01/orgs","repos_url":"https://api.github.com/users/BigJoe01/repos","events_url":"https://api.github.com/users/BigJoe01/events{/privacy}","received_events_url":"https://api.github.com/users/BigJoe01/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-01-04T14:38:39Z","updated_at":"2018-01-04T19:41:22Z","closed_at":"2018-01-04T19:41:22Z","author_association":"CONTRIBUTOR","body":"Hi,\r\nI need a little help, have any support for serve files from memory?\r\n\r\nRegards","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/570","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/570/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/570/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/570/events","html_url":"https://github.com/civetweb/civetweb/issues/570","id":283879949,"number":570,"title":"Race condition when stopping server with ongoing websocket connection","user":{"login":"extergnoto","id":26484354,"avatar_url":"https://avatars2.githubusercontent.com/u/26484354?v=4","gravatar_id":"","url":"https://api.github.com/users/extergnoto","html_url":"https://github.com/extergnoto","followers_url":"https://api.github.com/users/extergnoto/followers","following_url":"https://api.github.com/users/extergnoto/following{/other_user}","gists_url":"https://api.github.com/users/extergnoto/gists{/gist_id}","starred_url":"https://api.github.com/users/extergnoto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/extergnoto/subscriptions","organizations_url":"https://api.github.com/users/extergnoto/orgs","repos_url":"https://api.github.com/users/extergnoto/repos","events_url":"https://api.github.com/users/extergnoto/events{/privacy}","received_events_url":"https://api.github.com/users/extergnoto/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-12-21T13:19:59Z","updated_at":"2018-01-22T18:59:05Z","closed_at":"2018-01-22T09:07:48Z","author_association":"NONE","body":"I am using version 1.10, but master is the same.\r\n\r\nThe following race condition causes a dead lock:\r\n- When stop is called with a websocket connection running, the master thread raises the signal, but the worker thread misses it, because it is processing the websocket.\r\n- Afterwards, when the worker either recognizes the stop flag or the closed socket, it enters consume_socket() again. There it blocks on the event forever. \r\n- The master thread waits in join forever.\r\n\r\nIs it really necessary to enter consume_socket() again when the stop_flag is already set?\r\nI think the commentary in worker_thread_run() is not up to date any more.\r\n","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/568","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/568/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/568/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/568/events","html_url":"https://github.com/civetweb/civetweb/issues/568","id":283272332,"number":568,"title":"Questions on global lock in mg_init_library","user":{"login":"extergnoto","id":26484354,"avatar_url":"https://avatars2.githubusercontent.com/u/26484354?v=4","gravatar_id":"","url":"https://api.github.com/users/extergnoto","html_url":"https://github.com/extergnoto","followers_url":"https://api.github.com/users/extergnoto/followers","following_url":"https://api.github.com/users/extergnoto/following{/other_user}","gists_url":"https://api.github.com/users/extergnoto/gists{/gist_id}","starred_url":"https://api.github.com/users/extergnoto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/extergnoto/subscriptions","organizations_url":"https://api.github.com/users/extergnoto/orgs","repos_url":"https://api.github.com/users/extergnoto/repos","events_url":"https://api.github.com/users/extergnoto/events{/privacy}","received_events_url":"https://api.github.com/users/extergnoto/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-12-19T15:34:07Z","updated_at":"2018-01-22T19:04:23Z","closed_at":"2018-01-22T09:40:23Z","author_association":"NONE","body":"The following code is from trunk, but 1.10 is basically the same.\r\n\r\n1) I think an unlock is missing in case of error (see UNLOCK_ON_ERROR)\r\n2) The global mutex is created with default attributes. At least on my system this means non recursive. I get a dead lock, because the mutex is locked again in mg_atomic_inc.\r\n\r\n```C\r\nunsigned\r\nmg_init_library(unsigned features)\r\n{\r\n#if !defined(NO_SSL)\r\n\tchar ebuf[128];\r\n#endif\r\n\r\n\tunsigned features_to_init = mg_check_feature(features & 0xFFu);\r\n\tunsigned features_inited = features_to_init;\r\n\r\n\tif (mg_init_library_called <= 0) {\r\n\t\t/* Not initialized yet */\r\n\t\tif (0 != pthread_mutex_init(&global_lock_mutex, NULL)) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\tmg_global_lock();\r\n\r\n\tif (mg_init_library_called <= 0) {\r\n\t\tif (0 != pthread_key_create(&sTlsKey, tls_dtor)) {\r\n\t\t\t/* Fatal error - abort start. However, this situation should\r\n\t\t\t * never occur in practice. */\r\n#ifdef UNLOCK_ON_ERROR\r\n                       mg_global_unlock();\r\n#endif\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n#if defined(_WIN32) && !defined(__SYMBIAN32__)\r\n\t\tInitializeCriticalSection(&global_log_file_lock);\r\n#endif /* _WIN32 && !__SYMBIAN32__ */\r\n#if !defined(_WIN32)\r\n\t\tpthread_mutexattr_init(&pthread_mutex_attr);\r\n\t\tpthread_mutexattr_settype(&pthread_mutex_attr, PTHREAD_MUTEX_RECURSIVE);\r\n#endif\r\n\r\n#if defined(USE_LUA)\r\n\t\tlua_init_optional_libraries();\r\n#endif\r\n\t}\r\n\r\n\r\n#if !defined(NO_SSL)\r\n\tif (features_to_init & MG_FEATURES_SSL) {\r\n\t\tif (!mg_ssl_initialized) {\r\n\t\t\tif (initialize_ssl(ebuf, sizeof(ebuf))) {\r\n\t\t\t\tmg_ssl_initialized = 1;\r\n\t\t\t} else {\r\n\t\t\t\t(void)ebuf;\r\n\t\t\t\tDEBUG_TRACE(\"Initializing SSL failed: %s\", ebuf);\r\n\t\t\t\tfeatures_inited &= ~(2u);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t/* ssl already initialized */\r\n\t\t}\r\n\t}\r\n#endif\r\n\r\n\t/* Start WinSock for Windows */\r\n\tif (mg_init_library_called <= 0) {\r\n#if defined(_WIN32) && !defined(__SYMBIAN32__)\r\n\t\tWSADATA data;\r\n\t\tWSAStartup(MAKEWORD(2, 2), &data);\r\n#endif /* _WIN32 && !__SYMBIAN32__ */\r\n\t\tmg_init_library_called = 1;\r\n\t} else {\r\n\t\tmg_init_library_called++;\r\n\t}\r\n\r\n\tmg_global_unlock();\r\n\r\n\treturn features_inited;\r\n}\r\n```","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/563","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/563/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/563/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/563/events","html_url":"https://github.com/civetweb/civetweb/issues/563","id":281662803,"number":563,"title":"Better use reentrant version of gmtime and localtime","user":{"login":"extergnoto","id":26484354,"avatar_url":"https://avatars2.githubusercontent.com/u/26484354?v=4","gravatar_id":"","url":"https://api.github.com/users/extergnoto","html_url":"https://github.com/extergnoto","followers_url":"https://api.github.com/users/extergnoto/followers","following_url":"https://api.github.com/users/extergnoto/following{/other_user}","gists_url":"https://api.github.com/users/extergnoto/gists{/gist_id}","starred_url":"https://api.github.com/users/extergnoto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/extergnoto/subscriptions","organizations_url":"https://api.github.com/users/extergnoto/orgs","repos_url":"https://api.github.com/users/extergnoto/repos","events_url":"https://api.github.com/users/extergnoto/events{/privacy}","received_events_url":"https://api.github.com/users/extergnoto/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-12-13T08:27:38Z","updated_at":"2018-01-22T19:04:42Z","closed_at":"2018-01-22T09:42:18Z","author_association":"NONE","body":"gmtime and localtime are not reentrant.\r\nOn my system I even don´t have the non-reentrant version.\r\n\r\nFind below patches for two of civetweb´s functions. Code changes are encapsulated in preprocessor definition REENTANT_TIME.\r\n\r\n```C\r\n\r\nstatic void\r\ngmt_time_string(char *buf, size_t buf_len, time_t *t)\r\n{\r\n#ifndef REENTRANT_TIME\r\n    struct tm *tm;\r\n\r\n\ttm = ((t != NULL) ? gmtime(t) : NULL);\r\n\tif (tm != NULL) {\r\n#else\r\n\tstruct tm _tm;\r\n\tstruct tm *tm = &_tm;\r\n\r\n\tif (t != NULL) {\r\n\t\tgmtime_r( t, tm );\r\n#endif \r\n\t\tstrftime(buf, buf_len, \"%a, %d %b %Y %H:%M:%S GMT\", tm);\r\n\t} else {\r\n\t\tmg_strlcpy(buf, \"Thu, 01 Jan 1970 00:00:00 GMT\", buf_len);\r\n\t\tbuf[buf_len - 1] = '\\0';\r\n\t}\r\n}\r\n\r\nstatic int\r\nprint_dir_entry(struct de *de)\r\n{\r\n\tsize_t hrefsize;\r\n\tchar *href;\r\n\tchar size[64], mod[64];\r\n#ifdef REENTRANT_TIME\r\n\tstruct tm _tm;\r\n\tstruct tm *tm = &_tm;\r\n#elif\r\n    struct tm *tm;\r\n#endif \r\n\r\n\threfsize = PATH_MAX * 3; /* worst case */\r\n\thref = (char *)mg_malloc(hrefsize);\r\n\tif (href == NULL) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (de->file.is_directory) {\r\n\t\tmg_snprintf(de->conn,\r\n\t\t            NULL, /* Buffer is big enough */\r\n\t\t            size,\r\n\t\t            sizeof(size),\r\n\t\t            \"%s\",\r\n\t\t            \"[DIRECTORY]\");\r\n\t} else {\r\n\t\t/* We use (signed) cast below because MSVC 6 compiler cannot\r\n\t\t * convert unsigned __int64 to double. Sigh. */\r\n\t\tif (de->file.size < 1024) {\r\n\t\t\tmg_snprintf(de->conn,\r\n\t\t\t            NULL, /* Buffer is big enough */\r\n\t\t\t            size,\r\n\t\t\t            sizeof(size),\r\n\t\t\t            \"%d\",\r\n\t\t\t            (int)de->file.size);\r\n\t\t} else if (de->file.size < 0x100000) {\r\n\t\t\tmg_snprintf(de->conn,\r\n\t\t\t            NULL, /* Buffer is big enough */\r\n\t\t\t            size,\r\n\t\t\t            sizeof(size),\r\n\t\t\t            \"%.1fk\",\r\n\t\t\t            (double)de->file.size / 1024.0);\r\n\t\t} else if (de->file.size < 0x40000000) {\r\n\t\t\tmg_snprintf(de->conn,\r\n\t\t\t            NULL, /* Buffer is big enough */\r\n\t\t\t            size,\r\n\t\t\t            sizeof(size),\r\n\t\t\t            \"%.1fM\",\r\n\t\t\t            (double)de->file.size / 1048576);\r\n\t\t} else {\r\n\t\t\tmg_snprintf(de->conn,\r\n\t\t\t            NULL, /* Buffer is big enough */\r\n\t\t\t            size,\r\n\t\t\t            sizeof(size),\r\n\t\t\t            \"%.1fG\",\r\n\t\t\t            (double)de->file.size / 1073741824);\r\n\t\t}\r\n\t}\r\n\r\n\t/* Note: mg_snprintf will not cause a buffer overflow above.\r\n\t * So, string truncation checks are not required here. */\r\n\r\n#ifdef REENTRANT_TIME\r\n\tlocaltime_r(&de->file.last_modified, tm );\r\n#else \r\n\ttm = localtime(&de->file.last_modified);\r\n#endif\r\n\tif (tm != NULL) {\r\n\t\tstrftime(mod, sizeof(mod), \"%d-%b-%Y %H:%M\", tm);\r\n\t} else {\r\n\t\tmg_strlcpy(mod, \"01-Jan-1970 00:00\", sizeof(mod));\r\n\t\tmod[sizeof(mod) - 1] = '\\0';\r\n\t}\r\n\tmg_url_encode(de->file_name, href, hrefsize);\r\n\tmg_printf(de->conn,\r\n\t          \"<tr><td><a href=\\\"%s%s%s\\\">%s%s</a></td>\"\r\n\t          \"<td>&nbsp;%s</td><td>&nbsp;&nbsp;%s</td></tr>\\n\",\r\n\t          de->conn->request_info.local_uri,\r\n\t          href,\r\n\t          de->file.is_directory ? \"/\" : \"\",\r\n\t          de->file_name,\r\n\t          de->file.is_directory ? \"/\" : \"\",\r\n\t          mod,\r\n\t          size);\r\n\tmg_free(href);\r\n\treturn 0;\r\n}\r\n\r\n```\r\n\r\nFor systems not having the reentrant version, it is easy to provide dummies:\r\n\r\n```C\r\nstruct tm *gmtime_r(const time_t *restrict timer, struct tm *restrict result) \r\n{\r\n    *result = *gmtime(timer);\r\n    return result;\r\n}\r\n```\r\n(Edit: Added format for code)\r\n","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/561","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/561/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/561/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/561/events","html_url":"https://github.com/civetweb/civetweb/issues/561","id":279481333,"number":561,"title":"Compile Warning in GCC 6.3.0","user":{"login":"marcoafo","id":10882156,"avatar_url":"https://avatars1.githubusercontent.com/u/10882156?v=4","gravatar_id":"","url":"https://api.github.com/users/marcoafo","html_url":"https://github.com/marcoafo","followers_url":"https://api.github.com/users/marcoafo/followers","following_url":"https://api.github.com/users/marcoafo/following{/other_user}","gists_url":"https://api.github.com/users/marcoafo/gists{/gist_id}","starred_url":"https://api.github.com/users/marcoafo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marcoafo/subscriptions","organizations_url":"https://api.github.com/users/marcoafo/orgs","repos_url":"https://api.github.com/users/marcoafo/repos","events_url":"https://api.github.com/users/marcoafo/events{/privacy}","received_events_url":"https://api.github.com/users/marcoafo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-12-05T18:28:33Z","updated_at":"2018-01-16T19:44:02Z","closed_at":"2018-01-16T13:51:49Z","author_association":"NONE","body":"Hi there,\r\n\r\nRecently I started to use civetweb in gcc 6.3, like this:\r\n\r\n`$ gcc --version`\r\n`gcc (Debian 6.3.0-18) 6.3.0 20170516`\r\n`$ gcc -c -Wall -I./source/ -o /tmp/civetweb.o ./source/civetweb.c`\r\n\r\nBut I don't remember seeing the warning below.\r\n\r\n`./source/civetweb.c: In function ‘mg_get_system_info_impl’:`\r\n`./source/civetweb.c:17862:32: warning: ‘-Werror’ is not an option that controls warnings [-Wpragmas]`\r\n` #pragma GCC diagnostic ignored \"-Werror\"`\r\n\r\nEverything works as expected, but this keeps nagging on the screen. It seems that removing the line works fine too, but I suppose it's there for a reason. The piece of code is this:\r\n\r\n`#if defined(__GNUC__)`\r\n`#pragma GCC diagnostic push`\r\n`/* Disable bogus compiler warning -Wdate-time */`\r\n`#pragma GCC diagnostic ignored \"-Wall\"`\r\n`#pragma GCC diagnostic ignored \"-Werror\"    <-- this is the line`\r\n`#endif`\r\n\r\nI just want to share this.\r\n\r\nThanks!\r\nMarco","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/560","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/560/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/560/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/560/events","html_url":"https://github.com/civetweb/civetweb/issues/560","id":279289776,"number":560,"title":"Optional logging of mg_send_http_error() calls","user":{"login":"nfrmtkr","id":21101655,"avatar_url":"https://avatars2.githubusercontent.com/u/21101655?v=4","gravatar_id":"","url":"https://api.github.com/users/nfrmtkr","html_url":"https://github.com/nfrmtkr","followers_url":"https://api.github.com/users/nfrmtkr/followers","following_url":"https://api.github.com/users/nfrmtkr/following{/other_user}","gists_url":"https://api.github.com/users/nfrmtkr/gists{/gist_id}","starred_url":"https://api.github.com/users/nfrmtkr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nfrmtkr/subscriptions","organizations_url":"https://api.github.com/users/nfrmtkr/orgs","repos_url":"https://api.github.com/users/nfrmtkr/repos","events_url":"https://api.github.com/users/nfrmtkr/events{/privacy}","received_events_url":"https://api.github.com/users/nfrmtkr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-12-05T08:40:54Z","updated_at":"2018-03-29T21:28:39Z","closed_at":"2018-03-29T21:28:33Z","author_association":"CONTRIBUTOR","body":"In order to trouble shoot malfromed requests and all other sorts of issues which are handled inernally and don't lead to a call to begin_request(), it would nice to have an optional mg_cry call inside mg_send_http_error() function. With a mg_cry in mg_send_http_err
5449
or() we can use log_message callback in order to get informed about all HTTP errors returned back to the client. During normal operation this feature is usually switched of, but in case of trouble shooting in production environments with many users this will be of help.\r\n\r\nAn altermative would be an encancement of callback http_error. The information provided \"const char *fmt, ...\" would allow to report more details about the http_error. The status code itself is not enough. The error text provided to mg_send_http_error() contains useful information.\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/557","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/557/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/557/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/557/events","html_url":"https://github.com/civetweb/civetweb/issues/557","id":276622042,"number":557,"title":"Civetweb 1.10: Changed behavior regarding existing index files and \"301 Moved Permanently\"","user":{"login":"nfrmtkr","id":21101655,"avatar_url":"https://avatars2.githubusercontent.com/u/21101655?v=4","gravatar_id":"","url":"https://api.github.com/users/nfrmtkr","html_url":"https://github.com/nfrmtkr","followers_url":"https://api.github.com/users/nfrmtkr/followers","following_url":"https://api.github.com/users/nfrmtkr/following{/other_user}","gists_url":"https://api.github.com/users/nfrmtkr/gists{/gist_id}","starred_url":"https://api.github.com/users/nfrmtkr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nfrmtkr/subscriptions","organizations_url":"https://api.github.com/users/nfrmtkr/orgs","repos_url":"https://api.github.com/users/nfrmtkr/repos","events_url":"https://api.github.com/users/nfrmtkr/events{/privacy}","received_events_url":"https://api.github.com/users/nfrmtkr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2017-11-24T13:49:21Z","updated_at":"2018-03-29T21:31:41Z","closed_at":"2018-03-29T21:31:41Z","author_association":"CONTRIBUTOR","body":"We moved from 1.9.1 to 1.10 and detected following incompatible behavior.\r\n\r\nImagine following directory structure:\r\n\r\n./webroot\r\n./webroot/app1\r\n./webroot/app1/index.html\r\n\r\nThe document_root is set to ./webroot.\r\n\r\nand we open http://localhost/app1\r\n\r\nIn 1.91. we get:\r\n\r\nHTTP/1.1 301 Moved Permanently\r\nLocation: /app1/\r\nDate: Fri, 24 Nov 2017 09:35:45 GMT\r\nContent-Length: 0\r\n\r\nThe browser implicitely executes another GET request on http://localhost:5000/xwa/ (slash append) and loading index file as well as subsequent files for our app (css json etc,) works fine.\r\n\r\nBut in 1.10 we get the index.html file returned directly and loading subsequent files lead to 404 because the \"Location\" hasn't changed.\r\n\r\nI am not sure if the new or old behavior is correct. If the new behavior is a bug, how we can fix it. If the old behavior was a bug, how can I achieve to change the \"Location\".","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/552","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/552/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/552/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/552/events","html_url":"https://github.com/civetweb/civetweb/issues/552","id":274112257,"number":552,"title":"mg_stop with secure websocket is crashing civetweb","user":{"login":"grunk","id":243629,"avatar_url":"https://avatars1.githubusercontent.com/u/243629?v=4","gravatar_id":"","url":"https://api.github.com/users/grunk","html_url":"https://github.com/grunk","followers_url":"https://api.github.com/users/grunk/followers","following_url":"https://api.github.com/users/grunk/following{/other_user}","gists_url":"https://api.github.com/users/grunk/gists{/gist_id}","starred_url":"https://api.github.com/users/grunk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/grunk/subscriptions","organizations_url":"https://api.github.com/users/grunk/orgs","repos_url":"https://api.github.com/users/grunk/repos","events_url":"https://api.github.com/users/grunk/events{/privacy}","received_events_url":"https://api.github.com/users/grunk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-11-15T10:50:12Z","updated_at":"2017-11-17T07:31:25Z","closed_at":"2017-11-17T07:31:25Z","author_association":"NONE","body":"Hi,\r\n\r\nWhen i close civetweb (embedded in C++ app) via `mg_stop()` while a secure websocket (wss://) is still open and used by a browser i got a SIGPIPE (Broken pipe) in `close_connection()`\r\n\r\nMore specifically it's the call to SSL_shutdown() that seems to be the problem : \r\n```\r\n#ifndef NO_SSL\r\n\tif (conn->ssl != NULL) {\r\n\t\t/* Run SSL_shutdown twice to ensure completly close SSL connection\r\n\t\t */\r\n\t\tSSL_shutdown(conn->ssl); // This causing the crash\r\n\t\tSSL_free(conn->ssl);\r\n/* Avoid CRYPTO_cleanup_all_ex_data(); See discussion:\r\n * https://wiki.openssl.org/index.php/Talk:Library_Initialization */\r\n```\r\n\r\nI'am able to reproduce this problem only on Linux (ubuntu 17.04) but not on Windows. \r\nCivetWeb 1.10 (downloaded from the tag) with -DNO_SSL_DL\r\nOpenSSL 1.0.2h\r\nNote : if the browser is closed before civetweb , everything works fine.\r\n\r\nThis is an extract of my websocket which basically just doing a ping/pong : \r\n\r\n```\r\nbool HandlerWSStatus::handleData(CivetServer* /*server*/, mg_connection* conn, int flags, char* data, size_t data_len)\r\n{\r\n\tint indexSocket = FindSocketId(conn);\r\n\r\n\tif (indexSocket == -1)\r\n\t\treturn false;\r\n\r\n\tif (flags & 0x80)\r\n\t{\r\n\t\tflags &= 0x7f;\r\n\t\tswitch (flags)\r\n\t\t{\r\n\t\tcase WEBSOCKET_OPCODE_CONTINUATION:\r\n\t\t\tTRACE(\"CONTINUATION STATUS \\n\");\r\n\t\t\tbreak;\r\n\t\tcase WEBSOCKET_OPCODE_TEXT:\r\n\t\t{\r\n\t\t\t//TRACE(\"WEBSOCKET_OPCODE_TEXT STATUS \\n\");\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t\t\r\n\t\tcase WEBSOCKET_OPCODE_BINARY:\r\n\t\t\tTRACE(\"BINARY STATUS \\n\");\r\n\t\t\tbreak;\r\n\t\tcase WEBSOCKET_OPCODE_CONNECTION_CLOSE:\r\n\t\t{\r\n\t\t\tif (mWsConnections[indexSocket].webSocketState != static_cast<int>(WSState::CLOSING)) {\r\n\t\t\t\tmg_lock_connection(conn);\r\n\t\t\t\tmg_websocket_write(conn, WEBSOCKET_OPCODE_CONNECTION_CLOSE, data, data_len);\r\n\t\t\t\tmg_unlock_connection(conn);\r\n\t\t\t\tmWsConnections[indexSocket].webSocketState = static_cast<int>(WSState::CLOSING);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t\t\r\n\t\tcase WEBSOCKET_OPCODE_PING:\r\n\t\t\tmg_lock_connection(conn);\r\n\t\t\tmg_websocket_write(conn, WEBSOCKET_OPCODE_PONG, data, data_len);\r\n\t\t\tmg_unlock_connection(conn);\r\n\t\t\tbreak;\r\n\t\tcase WEBSOCKET_OPCODE_PONG:\r\n\t\t\tTRACE(\"PING STATUS \\n\");\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tTRACE(\"DEFAULT STATUS : %02x\\n\", flags);\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/536","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/536/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/536/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/536/events","html_url":"https://github.com/civetweb/civetweb/issues/536","id":264265688,"number":536,"title":"SSL_CTX_set_info_callback VS 2015","user":{"login":"grunk","id":243629,"avatar_url":"https://avatars1.githubusercontent.com/u/243629?v=4","gravatar_id":"","url":"https://api.github.com/users/grunk","html_url":"https://github.com/grunk","followers_url":"https://api.github.com/users/grunk/followers","following_url":"https://api.github.com/users/grunk/following{/other_user}","gists_url":"https://api.github.com/users/grunk/gists{/gist_id}","starred_url":"https://api.github.com/users/grunk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/grunk/subscriptions","organizations_url":"https://api.github.com/users/grunk/orgs","repos_url":"https://api.github.com/users/grunk/repos","events_url":"https://api.github.com/users/grunk/events{/privacy}","received_events_url":"https://api.github.com/users/grunk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-10-10T15:09:14Z","updated_at":"2017-10-11T06:40:10Z","closed_at":"2017-10-11T06:40:10Z","author_association":"NONE","body":"Hi,\r\n\r\ni'm trying to update to the recent 1.10 version but i have an error with visual studio 2015 on SSL_CTX_set_info_callback.\r\nThe comment above the line seems to claim that it could cause a warning , but in my case i got an error : \r\n\r\n> C2664\t'void SSL_CTX_set_info_callback(SSL_CTX *,void (__cdecl *)(const SSL *,int,int))': cannot convert argument 2 from 'void (__cdecl *)(SSL *,int,int)' to 'void (__cdecl *)(const SSL *,int,int)'\tvendor\tD:\\C++\\Projets\\a\\src\\cpp\\vendor\\civetweb.cpp\t14324\r\n\r\nWhat can i do to fix that ? (it's compiling by simply commenting it out but i guess this this not a viable solution).\r\n\r\nThanks ;)\t\r\n","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/532","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/532/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/532/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/532/events","html_url":"https://github.com/civetweb/civetweb/issues/532","id":263709028,"number":532,"title":"SourceForge download defaults to 1.9.1 for Windows","user":{"login":"Vhati","id":2262621,"avatar_url":"https://avatars1.githubusercontent.com/u/2262621?v=4","gravatar_id":"","url":"https://api.github.com/users/Vhati","html_url":"https://github.com/Vhati","followers_url":"https://api.github.com/users/Vhati/followers","following_url":"https://api.github.com/users/Vhati/following{/other_user}","gists_url":"https://api.github.com/users/Vhati/gists{/gist_id}","starred_url":"https://api.github.com/users/Vhati/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Vhati/subscriptions","organizations_url":"https://api.github.com/users/Vhati/orgs","repos_url":"https://api.github.com/users/Vhati/repos","events_url":"https://api.github.com/users/Vhati/events{/privacy}","received_events_url":"https://api.github.com/users/Vhati/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-10-08T10:48:07Z","updated_at":"2017-10-11T20:54:11Z","closed_at":"2017-10-11T20:54:11Z","author_association":"NONE","body":"![sourceforge_button](https://user-images.githubusercontent.com/2262621/31316094-04463c22-abf4-11e7-913f-ba439bb0b183.png)\r\n\r\nClicking \"Browse All Files\" shows 1.10 is available. It's just not the default release.","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/531","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/531/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/531/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/531/events","html_url":"https://github.com/civetweb/civetweb/issues/531","id":263494091,"number":531,"title":"Allow access to mg_connection.SSL","user":{"login":"nfrmtkr","id":21101655,"avatar_url":"https://avatars2.githubusercontent.com/u/21101655?v=4","gravatar_id":"","url":"https://api.github.com/users/nfrmtkr","html_url":"https://github.com/nfrmtkr","followers_url":"https://api.github.com/users/nfrmtkr/followers","following_url":"https://api.github.com/users/nfrmtkr/following{/other_user}","gists_url":"https://api.github.com/users/nfrmtkr/gists{/gist_id}","starred_url":"https://api.github.com/users/nfrmtkr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nfrmtkr/subscriptions","organizations_url":"https://api.github.com/users/nfrmtkr/orgs","repos_url":"https://api.github.com/users/nfrmtkr/repos","events_url":"https://api.github.com/users/nfrmtkr/events{/privacy}","received_events_url":"https://api.github.com/users/nfrmtkr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-10-06T15:58:08Z","updated_at":"2017-10-13T16:29:48Z","closed_at":"2017-10-13T16:29:32Z","author_association":"CONTRIBUTOR","body":"In past we added a local patch to civetweb in order to get access to the SSL member in structure mg_connection. We made this by adding following function:\r\n\r\nvoid *mg_get_ssl(struct mg_connection *conn) { return conn->ssl; };\r\n\r\nWe use the SSL structure in order to get full access to the certificate information. We intend to access the fields of \"X509v3 extensions\". \r\n\r\nI see mg_client_cert is part of mg_request_info. It includes a few fields from the certificate. What about adding SSL* to the mg_request_info structure or the mg_client_cert structure?\r\n\r\nI am not sure if the mg_client_cert structure is much of help in all cases. Data is created and destroyed for each request, wether it is used or not. I guess it would be enough to provide SSL* in mg_request_info and users of the civetweb API are responsible to get the required data from it. ","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/530","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/530/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/530/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/530/events","html_url":"https://github.com/civetweb/civetweb/issues/530","id":263252923,"number":530,"title":"possible issue with mg_get_header used as a client","user":{"login":"AndreyArsov","id":9951845,"avatar_url":"https://avatars0.githubusercontent.com/u/9951845?v=4","gravatar_id":"","url":"https://api.github.com/users/AndreyArsov","html_url":"https://github.com/AndreyArsov","followers_url":"https://api.github.com/users/AndreyArsov/followers","following_url":"https://api.github.com/users/AndreyArsov/following{/other_user}","gists_url":"https://api.github.com/users/AndreyArsov/gists{/gist_id}","starred_url":"https://api.github.com/users/AndreyArsov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndreyArsov/subscriptions","organizations_url":"https://api.github.com/users/AndreyArsov/orgs","repos_url":"https://api.github.com/users/AndreyArsov/repos","events_url":"https://api.github.com/users/AndreyArsov/events{/privacy}","received_events_url":"https://api.github.com/users/AndreyArsov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-10-05T20:18:58Z","updated_at":"2017-10-08T04:24:42Z","closed_at":"2017-10-08T04:24:42Z","author_association":"NONE","body":"I am using civetweb as a client through mg_client_connect.\r\nWhen I ask for headers the num_headers variable from request_info is used which is 0.\r\nThe response_info.http_headers seem to be properly populated.\r\n\r\nIs this a bug? When I replace with response_info.num_headers it seems to work.\r\n\r\n```\r\nconst char *\r\nmg_get_header(const struct mg_connection *conn, const char *name)\r\n{\r\n\tif (!conn) {\r\n\t\treturn NULL;\r\n\t}\r\n\tif (conn->connection_type == CONNECTION_TYPE_REQUEST) {\r\n\t\treturn get_header(conn->request_info.http_headers,\r\n\t\t                  conn->request_info.num_headers,\r\n\t\t                  name);\r\n\t}\r\n\tif (conn->connection_type == CONNECTION_TYPE_RESPONSE) {\r\n\t\t**return get_header(conn->response_info.http_headers,\r\n\t\t                  conn->request_info.num_headers,\r\n\t\t                  name);**\r\n\t}\r\n\treturn NULL;\r\n}\r\n\r\n```","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/527","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/527/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/527/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/527/events","html_url":"https://github.com/civetweb/civetweb/issues/527","id":262993370,"number":527,"title":"civetweb: setgid/groups/uid should only happen once","user":{"login":"kmroz","id":1338891,"avatar_url":"https://avatars3.githubusercontent.com/u/1338891?v=4","gravatar_id":"","url":"https://api.github.com/users/kmroz","html_url":"https://github.com/kmroz","followers_url":"https://api.github.com/users/kmroz/followers","following_url":"https://api.github.com/users/kmroz/following{/other_user}","gists_url":"https://api.github.com/users/kmroz/gists{/gist_id}","starred_url":"https://api.github.com/users/kmroz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kmroz/subscriptions","organizations_url":"https://api.github.com/users/kmroz/orgs","repos_url":"https://api.github.com/users/kmroz/repos","events_url":"https://api.github.com/users/kmroz/events{/privacy}","received_events_url":"https://api.github.com/users/kmroz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-10-05T03:21:09Z","updated_at":"2017-10-05T18:06:25Z","closed_at":"2017-10-05T18:06:25Z","author_association":"CONTRIBUTOR","body":"civetweb should drop permissions, if applicable, only once. This allows for multiple instances to be started by an application.","score":1.0},{"url":"https://api.github.com/repos/civetweb/civetweb/issues/526","repository_url":"https://api.github.com/repos/civetweb/civetweb","labels_url":"https://api.github.com/repos/civetweb/civetweb/issues/526/labels{/name}","comments_url":"https://api.github.com/repos/civetweb/civetweb/issues/526/comments","events_url":"https://api.github.com/repos/civetweb/civetweb/issues/526/events","html_url":"https://github.com/civetweb/civetweb/issues/526","id":262819095,"number":526,"title":"Provide own SSL_CTX","user":{"login":"nfrmtkr","id":21101655,"avatar_url":"https://avatars2.githubusercontent.com/u/21101655?v=4","gravatar_id":"","url":"https://api.github.com/users/nfrmtkr","html_url":"https://github.com/nfrmtkr","followers_url":"https://api.github.com/users/nfrmtkr/followers","following_url":"https://api.github.com/users/nfrmtkr/following{/other_user}","gists_url":"https://api.github.com/users/nfrmtkr/gists{/gist_id}","starred_url":"https://api.github.com/users/nfrmtkr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nfrmtkr/subscriptions","organizations_url":"https://api.github.com/users/nfrmtkr/orgs","repos_url":"https://api.github.com/users/nfrmtkr/repos","events_url":"https://api.github.com/users/nfrmtkr/events{/privacy}","received_events_url":"https://api.github.com/users/nfrmtkr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2017-10-04T14:56:32Z","updated_at":"2017-10-11T20:52:28Z","closed_at":"2017-10-11T20:52:28Z","author_association":"CONTRIBUTOR","body":"We use our own open SSL configuration and initialization infrastructure in order to have a common way of configuration and behaviour for various SSL sockets (not only civetweb). In past we patched civetweb set_ssl_option() function by setting ctx->ssl_ctx = ctx->user_data. The user_data we've set to our initialized SSL_CTX pointer. Of cource the uninitialize_ssl() function requires patches as well in order to avoid deleting the SSL_CTX.\r\n\r\nI've tried to use the init_ssl callback, but this is used for certificate creation, only. With this I cannot replace the SSL_CTX. What is the best way of adding selfmaintained SSL_CTX to civetweb. \r\n\r\nRough idea:  \r\nAdd a new callback \r\n\r\nint (*init_ssl_ctx)( void **ssl_context, void *user_data );\r\n\r\nMaybe user_data isn't required. If this callback returns 0 then civetweb creates the context. If this callback returns 1 then the ssl_context pointer is set by the callback function. The return code -1 inidcats an error.\r\n\r\nThis callback will be called in set_ssl_option right after the check for if (!ctx).\r\nAn int ssl_ctx_extern member will be added mg_context structure. It inidcates if the SSL_CTX has been created outside civetweb. This will be checked in uninitialize_ssl() in order to avoid deleteing the ssl_ctx stored in mg_context structure.\r\n\r\nIf we aggree about the way support can be added, I would prepare a pull request. \r\nPlease let me know about your ideas and suggestions.\r\n","score":1.0}]}
0

