HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:06:09 GMT
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CFAB:F441:1042A:1A1CF:5FB01C90
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 5
X-Ratelimit-Reset: 1605377196
X-Ratelimit-Used: 25
X-Xss-Protection: 1; mode=block

a7e4
{"total_count":17,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/jruby/jruby/issues/1146","repository_url":"https://api.github.com/repos/jruby/jruby","labels_url":"https://api.github.com/repos/jruby/jruby/issues/1146/labels{/name}","comments_url":"https://api.github.com/repos/jruby/jruby/issues/1146/comments","events_url":"https://api.github.com/repos/jruby/jruby/issues/1146/events","html_url":"https://github.com/jruby/jruby/issues/1146","id":21347294,"node_id":"MDU6SXNzdWUyMTM0NzI5NA==","number":1146,"title":"Include bundler in JRuby distribution","user":{"login":"mdekstrand","id":186612,"node_id":"MDQ6VXNlcjE4NjYxMg==","avatar_url":"https://avatars1.githubusercontent.com/u/186612?v=4","gravatar_id":"","url":"https://api.github.com/users/mdekstrand","html_url":"https://github.com/mdekstrand","followers_url":"https://api.github.com/users/mdekstrand/followers","following_url":"https://api.github.com/users/mdekstrand/following{/other_user}","gists_url":"https://api.github.com/users/mdekstrand/gists{/gist_id}","starred_url":"https://api.github.com/users/mdekstrand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdekstrand/subscriptions","organizations_url":"https://api.github.com/users/mdekstrand/orgs","repos_url":"https://api.github.com/users/mdekstrand/repos","events_url":"https://api.github.com/users/mdekstrand/events{/privacy}","received_events_url":"https://api.github.com/users/mdekstrand/received_events","type":"User","site_admin":false},"labels":[{"id":62081818,"node_id":"MDU6TGFiZWw2MjA4MTgxOA==","url":"https://api.github.com/repos/jruby/jruby/labels/packaging","name":"packaging","color":"5319e7","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/jruby/jruby/milestones/12","html_url":"https://github.com/jruby/jruby/milestone/12","labels_url":"https://api.github.com/repos/jruby/jruby/milestones/12/labels","id":350036,"node_id":"MDk6TWlsZXN0b25lMzUwMDM2","number":12,"title":"Won't Fix","description":"Bugs that are recognized as issues, but won't or can't be fixed in JRuby should go here.","creator":{"login":"headius","id":10135,"node_id":"MDQ6VXNlcjEwMTM1","avatar_url":"https://avatars3.githubusercontent.com/u/10135?v=4","gravatar_id":"","url":"https://api.github.com/users/headius","html_url":"https://github.com/headius","followers_url":"https://api.github.com/users/headius/followers","following_url":"https://api.github.com/users/headius/following{/other_user}","gists_url":"https://api.github.com/users/headius/gists{/gist_id}","starred_url":"https://api.github.com/users/headius/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/headius/subscriptions","organizations_url":"https://api.github.com/users/headius/orgs","repos_url":"https://api.github.com/users/headius/repos","events_url":"https://api.github.com/users/headius/events{/privacy}","received_events_url":"https://api.github.com/users/headius/received_events","type":"User","site_admin":false},"open_issues":6,"closed_issues":205,"state":"open","created_at":"2013-06-06T19:53:15Z","updated_at":"2020-11-13T18:08:36Z","due_on":null,"closed_at":null},"comments":61,"created_at":"2013-10-21T21:51:41Z","updated_at":"2018-12-03T21:15:50Z","closed_at":"2018-12-03T21:15:50Z","author_association":"NONE","active_lock_reason":null,"body":"The JRuby distribution includes a few tools already, such as rake. It'd be very useful for at least some use cases for JRuby to also include bundler.\n\nI'm using JRuby to bootstrap some projects (generally nanoc website builds) so that they can be fully run with nothing but a JDK. Right now, that bootstrap is:\n1. Download jruby (either from jruby.org, or via Maven)\n2. Use JRuby's `gem` to install bundler somewhere in the local directory\n3. Use the freshly-installed `bundle` to install the rest of the project's dependencies from the `Gemfile`\n\nIf JRuby's binary distribution and `jruby-complete` contained Bundler, I could entirely eliminate step 2.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/soveran/cuba/issues/89","repository_url":"https://api.github.com/repos/soveran/cuba","labels_url":"https://api.github.com/repos/soveran/cuba/issues/89/labels{/name}","comments_url":"https://api.github.com/repos/soveran/cuba/issues/89/comments","events_url":"https://api.github.com/repos/soveran/cuba/issues/89/events","html_url":"https://github.com/soveran/cuba/issues/89","id":256155076,"node_id":"MDU6SXNzdWUyNTYxNTUwNzY=","number":89,"title":"add json support","user":{"login":"lostpupil","id":2015695,"node_id":"MDQ6VXNlcjIwMTU2OTU=","avatar_url":"https://avatars3.githubusercontent.com/u/2015695?v=4","gravatar_id":"","url":"https://api.github.com/users/lostpupil","html_url":"https://github.com/lostpupil","followers_url":"https://api.github.com/users/lostpupil/followers","following_url":"https://api.github.com/users/lostpupil/following{/other_user}","gists_url":"https://api.github.com/users/lostpupil/gists{/gist_id}","starred_url":"https://api.github.com/users/lostpupil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostpupil/subscriptions","organizations_url":"https://api.github.com/users/lostpupil/orgs","repos_url":"https://api.github.com/users/lostpupil/repos","events_url":"https://api.github.com/users/lostpupil/events{/privacy}","received_events_url":"https://api.github.com/users/lostpupil/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-09-08T06:39:41Z","updated_at":"2017-12-19T02:31:46Z","closed_at":"2017-12-19T02:31:46Z","author_association":"NONE","active_lock_reason":null,"body":"Normally, I can call routes by\r\n\r\n```\r\ncurl -XPOST localhost:3000/api -d \"a=123\"\r\n```\r\n\r\nAnd I notice most client request library call a api default using json payload.\r\n\r\nSo, Is there any plan to add that to the cuba?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/soveran/cuba/issues/90","repository_url":"https://api.github.com/repos/soveran/cuba","labels_url":"https://api.github.com/repos/soveran/cuba/issues/90/labels{/name}","comments_url":"https://api.github.com/repos/soveran/cuba/issues/90/comments","events_url":"https://api.github.com/repos/soveran/cuba/issues/90/events","html_url":"https://github.com/soveran/cuba/issues/90","id":274299520,"node_id":"MDU6SXNzdWUyNzQyOTk1MjA=","number":90,"title":"Improve performance by caching regexes?","user":{"login":"asterite","id":209371,"node_id":"MDQ6VXNlcjIwOTM3MQ==","avatar_url":"https://avatars0.githubusercontent.com/u/209371?v=4","gravatar_id":"","url":"https://api.github.com/users/asterite","html_url":"https://github.com/asterite","followers_url":"https://api.github.com/users/asterite/followers","following_url":"https://api.github.com/users/asterite/following{/other_user}","gists_url":"https://api.github.com/users/asterite/gists{/gist_id}","starred_url":"https://api.github.com/users/asterite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asterite/subscriptions","organizations_url":"https://api.github.com/users/asterite/orgs","repos_url":"https://api.github.com/users/asterite/repos","events_url":"https://api.github.com/users/asterite/events{/privacy}","received_events_url":"https://api.github.com/users/asterite/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-11-15T20:49:16Z","updated_at":"2017-11-21T16:21:00Z","closed_at":"2017-11-21T16:21:00Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi @soveran! ðŸ˜„ \r\n\r\nI noticed that to consume segments a regex is created each and every time the segment tries to be matched:\r\n\r\nhttps://github.com/soveran/cuba/blob/f66109654ff1c16ee46060330738a902c7a1a7fc/lib/cuba.rb#L214\r\n\r\nSo I made this benchmark:\r\n\r\n```ruby\r\nrequire_relative \"./lib/cuba\"\r\n\r\nCuba.define do\r\n  on \"users\" do\r\n    on \":id\" do |id|\r\n      on root do\r\n        res.write \"User #{id}\"\r\n      end\r\n\r\n      on \"projects\" do\r\n        on \":project_id\" do |project_id|\r\n          res.write \"User #{id}, Project #{project_id}\"\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nenv1 = { \"PATH_INFO\" => \"/users/1\", \"SCRIPT_NAME\" => \"/\" }\r\nenv2 = { \"PATH_INFO\" => \"/users/1/projects/2\", \"SCRIPT_NAME\" => \"/\" }\r\n\r\ntime = Time.now\r\n30_000.times do\r\n  Cuba.call(env1)\r\n  Cuba.call(env2)\r\nend\r\nputs Time.now - time\r\n```\r\n\r\nOn my machine it takes about 4 seconds to complete.\r\n\r\nNow I cache the regexes with this diff:\r\n\r\n```diff\r\ndiff --git a/lib/cuba.rb b/lib/cuba.rb\r\nindex b12e9f3..b4090fe 100644\r\n--- a/lib/cuba.rb\r\n+++ b/lib/cuba.rb\r\n@@ -5,6 +5,7 @@ class Cuba\r\n   EMPTY   = \"\".freeze\r\n   SEGMENT = \"([^\\\\/]+)\".freeze\r\n   DEFAULT = \"text/html; charset=utf-8\".freeze\r\n+  REGEXES = Hash.new { |h, pattern| h[pattern] = /\\A\\/(#{pattern})(\\/|\\z)/ }\r\n \r\n   class Response\r\n     LOCATION = \"Location\".freeze\r\n@@ -211,7 +212,7 @@ class Cuba\r\n   private :try\r\n \r\n   def consume(pattern)\r\n-    matchdata = env[Rack::PATH_INFO].match(/\\A\\/(#{pattern})(\\/|\\z)/)\r\n+    matchdata = env[Rack::PATH_INFO].match(REGEXES[pattern])\r\n \r\n     return false unless matchdata\r\n ```\r\n\r\nI run the snippet above and it now takes 2 seconds.\r\n\r\n**Twice as fast!**\r\n\r\nDo you think this is a good change? I think it's harmless: the routes of an app are fixed (not dynamic) so that REGEXES hash will reach a reasonable maximum size. Plus it can help with routes like \":id\" where they might be used in several places.\r\n\r\nWhat do you think?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/soveran/cuba/issues/84","repository_url":"https://api.github.com/repos/soveran/cuba","labels_url":"https://api.github.com/repos/soveran/cuba/issues/84/labels{/name}","comments_url":"https://api.github.com/repos/soveran/cuba/issues/84/comments","events_url":"https://api.github.com/repos/soveran/cuba/issues/84/events","html_url":"https://github.com/soveran/cuba/issues/84","id":194520703,"node_id":"MDU6SXNzdWUxOTQ1MjA3MDM=","number":84,"title":"All existing routes?","user":{"login":"lostpupil","id":2015695,"node_id":"MDQ6VXNlcjIwMTU2OTU=","avatar_url":"https://avatars3.githubusercontent.com/u/2015695?v=4","gravatar_id":"","url":"https://api.github.com/users/lostpupil","html_url":"https://github.com/lostpupil","followers_url":"https://api.github.com/users/lostpupil/followers","following_url":"https://api.github.com/users/lostpupil/following{/other_user}","gists_url":"https://api.github.com/users/lostpupil/gists{/gist_id}","starred_url":"https://api.github.com/users/lostpupil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lostpupil/subscriptions","organizations_url":"https://api.github.com/users/lostpupil/orgs","repos_url":"https://api.github.com/users/lostpupil/repos","events_url":"https://api.github.com/users/lostpupil/events{/privacy}","received_events_url":"https://api.github.com/users/lostpupil/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-12-09T06:04:18Z","updated_at":"2016-12-09T07:40:39Z","closed_at":"2016-12-09T07:40:39Z","author_association":"NONE","active_lock_reason":null,"body":"Is there a way to find all existing routes like rake routes?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/soveran/cuba/issues/73","repository_url":"https://api.github.com/repos/soveran/cuba","labels_url":"https://api.github.com/repos/soveran/cuba/issues/73/labels{/name}","comments_url":"https://api.github.com/repos/soveran/cuba/issues/73/comments","events_url":"https://api.github.com/repos/soveran/cuba/issues/73/events","html_url":"https://github.com/soveran/cuba/issues/73","id":128942011,"node_id":"MDU6SXNzdWUxMjg5NDIwMTE=","number":73,"title":"Strict-Transport-Security header in Cuba::Safe::SecureHeaders is dangerously strict!","user":{"login":"grempe","id":117,"node_id":"MDQ6VXNlcjExNw==","avatar_url":"https://avatars1.githubusercontent.com/u/117?v=4","gravatar_id":"","url":"https://api.github.com/users/grempe","html_url":"https://github.com/grempe","followers_url":"https://api.github.com/users/grempe/followers","following_url":"https://api.github.com/users/grempe/following{/other_user}","gists_url":"https://api.github.com/users/grempe/gists{/gist_id}","starred_url":"https://api.github.com/users/grempe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/grempe/subscriptions","organizations_url":"https://api.github.com/users/grempe/orgs","repos_url":"https://api.github.com/users/grempe/repos","events_url":"https://api.github.com/users/grempe/events{/privacy}","received_events_url":"https://api.github.com/users/grempe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-01-26T21:04:53Z","updated_at":"2016-08-10T22:37:19Z","closed_at":"2016-01-27T08:00:30Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The setting of the 'Strict-Transport-Security' security header is by default set to:\n\n```\n\"Strict-Transport-Security\" => \"max-age=631138519; includeSubdomains; preload\"\n```\n\nThe use of this header is good, but for a default setting (encouraged to use in the docs with no explanation of its repercussions) it is far to strict and could cause a developers **other** websites to inadvertently become inaccessible for **long** periods of time to any browser that visits the SecureHeader Cuba app over HTTPS.\n\nIn detail:\n\n```\nmax-age=631138519;\n```\n\nThis is good to set, but it is set for a **very** long period for a developer that may only be in testing mode.  This value represents 20.013 years. That means that any browser that successfully visits that site will never allow it to be visited over a non-secure HTTP connection for at least 20 years. The only way to reset is for the server to set it to '0' explicitly and then the browser user has to visit the site again. I would suggest a more reasonable value of 1 month, or 2628000 seconds.\n\n```\nincludeSubdomains\n```\n\nThis is an optional value and it has potentially far-reaching effects and should not be included in a default setup.  By setting this, you are telling every browser that visits this site over an HTTPS connection successfully (even once) that **ALL SUBDOMAINS** of this domain shall also be **REQUIRED** to visit over an https connection.  So for example, if there is a pre-existing `www.example.com` website which does not have a TLS certificate, and then the developer of this Cuba mini-app decides to setup this secure little mini-site on HTTPS. From now on every browser that visited the mini-site will refuse to load the www site over simple HTTP since it is not protected by TLS!! This (spec optional) setting should be removed from Cuba's defaults.\n\n```\npreload\n```\n\npreload is another optional part of the spec, and is dangerous to include in a default setup.  By having this set you are requesting (or allowing to be requested) that this domain be **permanently** hard-coded into the Chrome browser (and others who use their service) that they should only be allowed to see the site over HTTPS. This setting, when present, might allow an attacker to add the site on the HSTS preload site (https://hstspreload.appspot.com) and force **all** Chrome users to only allow access to this domain, and all sub-domains, over HTTPS. This option should also be removed from the defaults.\n\nAll of this is well documented here:\n\nhttps://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security\n\nTwitter Secure Headers project, also does not use the optional attributes:\n\nhttps://github.com/twitter/secureheaders\n\nYou should also include instructions for how to override specific security settings as appropriate for a Cuba app in the docs. I am doing so in my Cuba app with something like this which seems to be working as expected:\n\n```\nrequire 'cuba'\nrequire 'cuba/safe'\n...\nCuba.plugin Cuba::Safe::SecureHeaders\nCuba.settings[:default_headers].merge!({\"Strict-Transport-Security\" => \"max-age=2628000\"})\n...\nCuba.define do\n  ...\nend\n```\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/soveran/cuba/issues/77","repository_url":"https://api.github.com/repos/soveran/cuba","labels_url":"https://api.github.com/repos/soveran/cuba/issues/77/labels{/name}","comments_url":"https://api.github.com/repos/soveran/cuba/issues/77/comments","events_url":"https://api.github.com/repos/soveran/cuba/issues/77/events","html_url":"https://github.com/soveran/cuba/issues/77","id":158196506,"node_id":"MDU6SXNzdWUxNTgxOTY1MDY=","number":77,"title":"Not all HTTP methods are supported","user":{"login":"firoxer","id":5222805,"node_id":"MDQ6VXNlcjUyMjI4MDU=","avatar_url":"https://avatars0.githubusercontent.com/u/5222805?v=4","gravatar_id":"","url":"https://api.github.com/users/firoxer","html_url":"https://github.com/firoxer","followers_url":"https://api.github.com/users/firoxer/followers","following_url":"https://api.github.com/users/firoxer/following{/other_user}","gists_url":"https://api.github.com/users/firoxer/gists{/gist_id}","starred_url":"https://api.github.com/users/firoxer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/firoxer/subscriptions","organizations_url":"https://api.github.com/users/firoxer/orgs","repos_url":"https://api.github.com/users/firoxer/repos","events_url":"https://api.github.com/users/firoxer/events{/privacy}","received_events_url":"https://api.github.com/users/firoxer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-06-02T17:30:52Z","updated_at":"2016-06-09T12:49:46Z","closed_at":"2016-06-09T12:49:46Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I noticed that matching for OPTIONS requests is not supported. I checked the source for Cuba and found out that matching for the existing methods is simple sugar on top of Rack (https://github.com/soveran/cuba/blob/master/lib/cuba.rb#L328-L331). I tried adding OPTIONS and the other missing HTTP methods in the same manner as the other methods have been implemented and it worked well.\n\nI commited the new methods in my fork. There were no tests related to HTTP methods, so I didn't write any. The fork is ready for merge.\n\nI think the added methods are a worthwhile patch. IMO, they are not a new feature but an extension to an existing one. The addition doesn't interfere with Cuba's minimalistic approach.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/soveran/cuba/issues/69","repository_url":"https://api.github.com/repos/soveran/cuba","labels_url":"https://api.github.com/repos/soveran/cuba/issues/69/labels{/name}","comments_url":"https://api.github.com/repos/soveran/cuba/issues/69/comments","events_url":"https://api.github.com/repos/soveran/cuba/issues/69/events","html_url":"https://github.com/soveran/cuba/issues/69","id":105824196,"node_id":"MDU6SXNzdWUxMDU4MjQxOTY=","number":69,"title":"404 default Content-Type not set","user":{"login":"dkullmann","id":422899,"node_id":"MDQ6VXNlcjQyMjg5OQ==","avatar_url":"https://avatars0.githubusercontent.com/u/422899?v=4","gravatar_id":"","url":"https://api.github.com/users/dkullmann","html_url":"https://github.com/dkullmann","followers_url":"https://api.github.com/users/dkullmann/followers","following_url":"https://api.github.com/users/dkullmann/following{/other_user}","gists_url":"https://api.github.com/users/dkullmann/gists{/gist_id}","starred_url":"https://api.github.com/users/dkullmann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkullmann/subscriptions","organizations_url":"https://api.github.com/users/dkullmann/orgs","repos_url":"https://api.github.com/users/dkullmann/repos","events_url":"https://api.github.com/users/dkullmann/events{/privacy}","received_events_url":"https://api.github.com/users/dkullmann/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-09-10T14:41:09Z","updated_at":"2016-05-17T08:00:41Z","closed_at":"2016-05-17T08:00:41Z","author_association":"NONE","active_lock_reason":null,"body":"The `Content-Type` isn't being set when a `404` occurs on our application, which means that plain text is rendered: http://cl.ly/image/1f401k340S29\n\nIs this the intended default behavior?\n\nI believe that the way it works is all 200's have a default `Content-Type` of `text/html` if not otherwise set, but other status codes have no `Content-Type` at all ([see here](https://github.com/soveran/cuba/blob/8e0e77d8a20cdce7ffdf78d4b92d63d2f68c8bb6/lib/cuba.rb#L197))\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/jeremyevans/roda/issues/63","repository_url":"https://api.github.com/repos/jeremyevans/roda","labels_url":"https://api.github.com/repos/jeremyevans/roda/issues/63/labels{/name}","comments_url":"https://api.github.com/repos/jeremyevans/roda/issues/63/comments","events_url":"https://api.github.com/repos/jeremyevans/roda/issues/63/events","html_url":"https://github.com/jeremyevans/roda/issues/63","id":142253011,"node_id":"MDU6SXNzdWUxNDIyNTMwMTE=","number":63,"title":"Make Roda its own project (rather than a Cuba fork) so that it can be searched","user":{"login":"camjackson","id":1930451,"node_id":"MDQ6VXNlcjE5MzA0NTE=","avatar_url":"https://avatars0.githubusercontent.com/u/1930451?v=4","gravatar_id":"","url":"https://api.github.com/users/camjackson","html_url":"https://github.com/camjackson","followers_url":"https://api.github.com/users/camjackson/followers","following_url":"https://api.github.com/users/camjackson/following{/other_user}","gists_url":"https://api.github.com/users/camjackson/gists{/gist_id}","starred_url":"https://api.github.com/users/camjackson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camjackson/subscriptions","organizations_url":"https://api.github.com/users/camjackson/orgs","repos_url":"https://api.github.com/users/camjackson/repos","events_url":"https://api.github.com/users/camjackson/events{/privacy}","received_events_url":"https://api.github.com/users/camjackson/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-03-21T04:22:02Z","updated_at":"2016-03-21T07:49:29Z","closed_at":"2016-03-21T05:12:17Z","author_association":"NONE","active_lock_reason":null,"body":"This error message is really annoying:\n\n<img width=\"493\" alt=\"screen shot 2016-03-21 at 3 21 13 pm\" src=\"https://cloud.githubusercontent.com/assets/1930451/13910574/a039a18a-ef78-11e5-8683-64a81bdd1d6a.png\">\n\nWould you consider fully detaching roda from cuba?\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/soveran/cuba/issues/65","repository_url":"https://api.github.com/repos/soveran/cuba","labels_url":"https://api.github.com/repos/soveran/cuba/issues/65/labels{/name}","comments_url":"https://api.github.com/repos/soveran/cuba/issues/65/comments","events_url":"https://api.github.com/repos/soveran/cuba/issues/65/events","html_url":"https://github.com/soveran/cuba/issues/65","id":90687581,"node_id":"MDU6SXNzdWU5MDY4NzU4MQ==","number":65,"title":"List of \"routes\" declared in the app","user":{"login":"rhymes","id":146201,"node_id":"MDQ6VXNlcjE0NjIwMQ==","avatar_url":"https://avatars3.githubusercontent.com/u/146201?v=4","gravatar_id":"","url":"https://api.github.com/users/rhymes","html_url":"https://github.com/rhymes","followers_url":"https://api.github.com/users/rhymes/followers","following_url":"https://api.github.com/users/rhymes/following{/other_user}","gists_url":"https://api.github.com/users/rhymes/gists{/gist_id}","starred_url":"https://api.github.com/users/rhymes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rhymes/subscriptions","organizations_url":"https://api.github.com/users/rhymes/orgs","repos_url":"https://api.github.com/users/rhymes/repos","events_url":"https://api.github.com/users/rhymes/events{/privacy}","received_events_url":"https://api.github.com/users/rhymes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-06-24T14:13:50Z","updated_at":"2016-01-15T13:10:37Z","closed_at":"2016-01-15T13:10:37Z","author_association":"NONE","active_lock_reason":null,"body":"It would be awesome to have a sort of `rake routes` to have the list of the defined URL that the Cuba app can match on.\n\nIf you give me some pointers into the code I can try to code it myself and submit a PR.\n\nThanks!\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/soveran/cuba/issues/57","repository_url":"https://api.github.com/repos/soveran/cuba","labels_url":"https://api.github.com/repos/soveran/cuba/issues/57/labels{/name}","comments_url":"https://api.github.com/repos/soveran/cuba/issues/57/comments","events_url":"https://api.github.com/repos/soveran/cuba/issues/57/events","html_url":"https://github.com/soveran/cuba/issues/57","id":53914396,"node_id":"MDU6SXNzdWU1MzkxNDM5Ng==","number":57,"title":"[OT] - Thank you","user":{"login":"elcuervo","id":139659,"node_id":"MDQ6VXNlcjEzOTY1OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/139659?v=4","gravatar_id":"","url":"https://api.github.com/users/elcuervo","html_url":"https://github.com/elcuervo","followers_url":"https://api.github.com/users/elcuervo/followers","following_url":"https://api.github.com/users/elcuervo/following{/other_user}","gists_url":"https://api.github.com/users/elcuervo/gists{/gist_id}","starred_url":"https://api.github.com/users/elcuervo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elcuervo/subscriptions","organizations_url":"https://api.github.com/users/elcuervo/orgs","repos_url":"https://api.github.com/users/elcuervo/repos","events_url":"https://api.github.com/users/elcuervo/events{/privacy}","received_events_url":"https://api.github.com/users/elcuervo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-01-09T21:01:32Z","updated_at":"2015-01-21T10:19:59Z","closed_at":"2015-01-21T10:19:59Z","author_association":"NONE","active_lock_reason":null,"body":"Hi! I'm one of the many users that love Cuba. I also have the pleasure to know you and enjoy all of your work and products but now I want to show my gratitude in a public manner. \n\nThis OT and useless issue it's just my dumb way to say thank you for the work you do, the support to the community and the lesscode initiative that makes a bunch of us happy.\n\nNext time I'll buy you a coffee and give you a hug.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/soveran/cuba/issues/47","repository_url":"https://api.github.com/repos/soveran/cuba","labels_url":"https://api.github.com/repos/soveran/cuba/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/soveran/cuba/issues/47/comments","events_url":"https://api.github.com/repos/soveran/cuba/issues/47/events","html_url":"https://github.com/soveran/cuba/issues/47","id":39741949,"node_id":"MDU6SXNzdWUzOTc0MTk0OQ==","number":47,"title":"When running sample test, I get: cannot load such file -- cutest (LoadError)","user":{"login":"treeder","id":75826,"node_id":"MDQ6VXNlcjc1ODI2","avatar_url":"https://avatars3.githubusercontent.com/u/75826?v=4","gravatar_id":"","url":"https://api.github.com/users/treeder","html_url":"https://github.com/treeder","followers_url":"https://api.github.com/users/treeder/followers","following_url":"https://api.github.com/users/treeder/following{/other_user}","gists_url":"https://api.github.com/users/treeder/gists{/gist_id}","starred_url":"https://api.github.com/users/treeder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/treeder/subscriptions","organizations_url":"https://api.github.com/users/treeder/orgs","repos_url":"https://api.github.com/users/treeder/repos","events_url":"https://api.github.com/users/treeder/events{/privacy}","received_events_url":"https://api.github.com/users/treeder/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-08-07T16:16:32Z","updated_at":"2014-08-09T21:27:52Z","closed_at":"2014-08-09T21:27:52Z","author_association":"NONE","active_lock_reason":null,"body":"```\n/Library/Ruby/Site/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require': cannot load such file -- cutest (LoadError)\n        from /Library/Ruby/Site/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require'\n        from /Library/Ruby/Gems/2.0.0/gems/cuba-3.1.1/lib/cuba/test.rb:2:in `<top (required)>'\n        from /Library/Ruby/Site/2.0.0/rubygems/core_ext/kernel_require.rb:135:in `require'\n        from /Library/Ruby/Site/2.0.0/rubygems/core_ext/kernel_require.rb:135:in `rescue in require'\n        from /Library/Ruby/Site/2.0.0/rubygems/core_ext/kernel_require.rb:144:in `require'\n```\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/djanowski/cutest/issues/9","repository_url":"https://api.github.com/repos/djanowski/cutest","labels_url":"https://api.github.com/repos/djanowski/cutest/issues/9/labels{/name}","comments_url":"https://api.github.com/repos/djanowski/cutest/issues/9/comments","events_url":"https://api.github.com/repos/djanowski/cutest/issues/9/events","html_url":"https://github.com/djanowski/cutest/issues/9","id":8272087,"node_id":"MDU6SXNzdWU4MjcyMDg3","number":9,"title":"no longer works in non-fork() environments","user":{"login":"luislavena","id":4182,"node_id":"MDQ6VXNlcjQxODI=","avatar_url":"https://avatars2.githubusercontent.com/u/4182?v=4","gravatar_id":"","url":"https://api.github.com/users/luislavena","html_url":"https://github.com/luislavena","followers_url":"https://api.github.com/users/luislavena/followers","following_url":"https://api.github.com/users/luislavena/following{/other_user}","gists_url":"https://api.github.com/users/luislavena/gists{/gist_id}","starred_url":"https://api.github.com/users/luislavena/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luislavena/subscriptions","organizations_url":"https://api.github.com/users/luislavena/orgs","repos_url":"https://api.github.com/users/luislavena/repos","events_url":"https://api.github.com/users/luislavena/events{/privacy}","received_events_url":"https://api.github.com/users/luislavena/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2012-11-11T14:18:28Z","updated_at":"2013-06-19T13:45:10Z","closed_at":"2013-06-19T13:27:14Z","author_association":"NONE","active_lock_reason":null,"body":"cutest used to have support for non-fork environments, but seems that support is gone.\n\nBecause of that, tests of cuba can't be run\n\nWould be too complex bring non-fork() friendly cutest again?\n\nThank you\n\n/cc @soveran \n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/soveran/cuba/issues/24","repository_url":"https://api.github.com/repos/soveran/cuba","labels_url":"https://api.github.com/repos/soveran/cuba/issues/24/labels{/name}","comments_url":"https://api.github.com/repos/soveran/cuba/issues/24/comments","events_url":"https://api.github.com/repos/soveran/cuba/issues/24/events","html_url":"https://github.com/soveran/cuba/issues/24","id":13724521,"node_id":"MDU6SXNzdWUxMzcyNDUyMQ==","number":24,"title":"Support for generators via CLI","user":{"login":"aniketpant","id":777188,"node_id":"MDQ6VXNlcjc3NzE4OA==","avatar_url":"https://avatars2.githubusercontent.com/u/777188?v=4","gravatar_id":"","url":"https://api.github.com/users/aniketpant","html_url":"https://github.com/aniketpant","followers_url":"https://api.github.com/users/aniketpant/followers","following_url":"https://api.github.com/users/aniketpant/following{/other_user}","gists_url":"https://api.github.com/users/aniketpant/gists{/gist_id}","starred_url":"https://api.github.com/users/aniketpant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aniketpant/subscriptions","organizations_url":"https://api.github.com/users/aniketpant/orgs","repos_url":"https://api.github.com/users/aniketpant/repos","events_url":"https://api.github.com/users/aniketpant/events{/privacy}","received_events_url":"https://api.github.com/users/aniketpant/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2013-04-27T18:44:04Z","updated_at":"2013-05-13T09:46:23Z","closed_at":"2013-05-13T09:46:23Z","author_association":"NONE","active_lock_reason":null,"body":"Rails has a great CLI interface for starting off new applications and it also has support for generating controllers, models, views and schemas.\n\nIs something like this already in plan for Cuba? I understand that it is planned for a micro-framework and it does a good job with that but something like a `cuba new my-new-app` would be a great addition.\n\nList of new commands -\n- `cuba new path/to/my-new-app`\n  This will generate a new application skeleton for a cuba based application. Features for customizing it can be provided.\n- `cuba init`\n  This is something on the lines of how compass works. If there is a json file with the config information, a cuba app will be initialized in that folder.\n- `cuba generate my-controller` This will create a new controller and create a new test file based on the config. No views and models will be generated.\n\nIf a feature of this sort is welcome, I would love to work on it.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/soveran/cuba/issues/16","repository_url":"https://api.github.com/repos/soveran/cuba","labels_url":"https://api.github.com/repos/soveran/cuba/issues/16/labels{/name}","comments_url":"https://api.github.com/repos/soveran/cuba/issues/16/comments","events_url":"https://api.github.com/repos/soveran/cuba/issues/16/events","html_url":"https://github.com/soveran/cuba/issues/16","id":8051603,"node_id":"MDU6SXNzdWU4MDUxNjAz","number":16,"title":"Add travis.ci support","user":{"login":"josegonzalez","id":65675,"node_id":"MDQ6VXNlcjY1Njc1","avatar_url":"https://avatars2.githubusercontent.com/u/65675?v=4","gravatar_id":"","url":"https://api.github.com/users/josegonzalez","html_url":"https://github.com/josegonzalez","followers_url":"https://api.github.com/users/josegonzalez/followers","following_url":"https://api.github.com/users/josegonzalez/following{/other_user}","gists_url":"https://api.github.com/users/josegonzalez/gists{/gist_id}","starred_url":"https://api.github.com/users/josegonzalez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josegonzalez/subscriptions","organizations_url":"https://api.github.com/users/josegonzalez/orgs","repos_url":"https://api.github.com/users/josegonzalez/repos","events_url":"https://api.github.com/users/josegonzalez/events{/privacy}","received_events_url":"https://api.github.com/users/josegonzalez/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2012-11-02T06:20:49Z","updated_at":"2013-02-02T12:38:19Z","closed_at":"2013-02-02T12:38:19Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I haven't ever done this for a project, and don't know if there is some internal CI for cuba, but it would be useful to have, even if just for testing pull requests. Is anyone working on this? If not, I'll take a look tomorrow.\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/erikj/yartc/issues/9","repository_url":"https://api.github.com/repos/erikj/yartc","labels_url":"https://api.github.com/repos/erikj/yartc/issues/9/labels{/name}","comments_url":"https://api.github.com/repos/erikj/yartc/issues/9/comments","events_url":"https://api.github.com/repos/erikj/yartc/issues/9/events","html_url":"https://github.com/erikj/yartc/issues/9","id":8907756,"node_id":"MDU6SXNzdWU4OTA3NzU2","number":9,"title":"create Post from web","user":{"login":"erikj","id":20881,"node_id":"MDQ6VXNlcjIwODgx","avatar_url":"https://avatars2.githubusercontent.com/u/20881?v=4","gravatar_id":"","url":"https://api.github.com/users/erikj","html_url":"https://github.com/erikj","followers_url":"https://api.github.com/users/erikj/followers","following_url":"https://api.github.com/users/erikj/following{/other_user}","gists_url":"https://api.github.com/users/erikj/gists{/gist_id}","starred_url":"https://api.github.com/users/erikj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikj/subscriptions","organizations_url":"https://api.github.com/users/erikj/orgs","repos_url":"https://api.github.com/users/erikj/repos","events_url":"https://api.github.com/users/erikj/events{/privacy}","received_events_url":"https://api.github.com/users/erikj/received_events","type":"User","site_admin":false},"labels":[{"id":20545404,"node_id":"MDU6TGFiZWwyMDU0NTQwNA==","url":"https://api.github.com/repos/erikj/yartc/labels/feature","name":"feature","color":"0b02e1","default":false,"description":null},{"id":20932201,"node_id":"MDU6TGFiZWwyMDkzMjIwMQ==","url":"https://api.github.com/repos/erikj/yartc/labels/web%20interface","name":"web interface","color":"02d7e1","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2012-12-02T00:50:29Z","updated_at":"2012-12-19T07:20:03Z","closed_at":"2012-12-19T07:20:03Z","author_association":"OWNER","active_lock_reason":null,"body":"add form for users to create posts via web interface\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/tizoc/bureaucrat/issues/3","repository_url":"https://api.github.com/repos/tizoc/bureaucrat","labels_url":"https://api.github.com/repos/tizoc/bureaucrat/issues/3/labels{/name}","comments_url":"https://api.github.com/repos/tizoc/bureaucrat/issues/3/comments","events_url":"https://api.github.com/repos/tizoc/bureaucrat/issues/3/events","html_url":"https://github.com/tizoc/bureaucrat/issues/3","id":4533332,"node_id":"MDU6SXNzdWU0NTMzMzMy","number":3,"title":"undefined method to_table, to_ul, to_p","user":{"login":"activestylus","id":285,"node_id":"MDQ6VXNlcjI4NQ==","avatar_url":"https://avatars0.githubusercontent.com/u/285?v=4","gravatar_id":"","url":"https://api.github.com/users/activestylus","html_url":"https://github.com/activestylus","followers_url":"https://api.github.com/users/activestylus/followers","following_url":"https://api.github.com/users/activestylus/following{/other_user}","gists_url":"https://api.github.com/users/activestylus/gists{/gist_id}","starred_url":"https://api.github.com/users/activestylus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/activestylus/subscriptions","organizations_url":"https://api.github.com/users/activestylus/orgs","repos_url":"https://api.github.com/users/activestylus/repos","events_url":"https://api.github.com/users/activestylus/events{/privacy}","received_events_url":"https://api.github.com/users/activestylus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2012-05-11T13:16:35Z","updated_at":"2012-05-11T19:36:34Z","closed_at":"2012-05-11T16:10:10Z","author_association":"NONE","active_lock_reason":null,"body":"Quite perplexing - the README shows these handy rendering methods. But there are no such methods anywhere in the source code.\n\nWassup wit dat?\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/soveran/cuba/issues/4","repository_url":"https://api.github.com/repos/soveran/cuba","labels_url":"https://api.github.com/repos/soveran/cuba/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/soveran/cuba/issues/4/comments","events_url":"https://api.github.com/repos/soveran/cuba/issues/4/events","html_url":"https://github.com/soveran/cuba/issues/4","id":677615,"node_id":"MDU6SXNzdWU2Nzc2MTU=","number":4,"title":"Confusion over params capture","user":{"login":"bemurphy","id":124661,"node_id":"MDQ6VXNlcjEyNDY2MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/124661?v=4","gravatar_id":"","url":"https://api.github.com/users/bemurphy","html_url":"https://github.com/bemurphy","followers_url":"https://api.github.com/users/bemurphy/followers","following_url":"https://api.github.com/users/bemurphy/following{/other_user}","gists_url":"https://api.github.com/users/bemurphy/gists{/gist_id}","starred_url":"https://api.github.com/users/bemurphy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bemurphy/subscriptions","organizations_url":"https://api.github.com/users/bemurphy/orgs","repos_url":"https://api.github.com/users/bemurphy/repos","events_url":"https://api.github.com/users/bemurphy/events{/privacy}","received_events_url":"https://api.github.com/users/bemurphy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2011-03-16T05:40:11Z","updated_at":"2011-04-06T21:15:14Z","closed_at":"2011-04-06T21:14:27Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I was asking in #cuba.rb on this.  The channel consensus seems to be that on param() matching should match blank (non-nil) param values.  That is how the code behaves now.\n\nHowever, the README, example, and comments seem to imply it's for checking the presence of a real, non-blank value.  I'm confused which it is.\n\nIf the behavior is wrong, I can submit a pull request with tests.  Thanks.\n","performed_via_github_app":null,"score":1.0}]}
0

