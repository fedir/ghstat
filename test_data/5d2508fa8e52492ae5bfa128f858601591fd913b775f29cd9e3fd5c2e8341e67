HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Apr 2018 20:18:12 GMT
Link: <https://api.github.com/search/issues?q=repo%3Ago-chi%2Fchi+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Ago-chi%2Fchi+type%3Aissue+state%3Aclosed&page=6>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: C56F:148C:22B5BDA:469D5EA:5AD26204
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 29
X-Ratelimit-Reset: 1523737152
X-Runtime-Rack: 0.297595
X-Xss-Protection: 1; mode=block

8000
{"total_count":171,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/go-chi/chi/issues/313","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/313/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/313/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/313/events","html_url":"https://github.com/go-chi/chi/issues/313","id":314186095,"number":313,"title":"panic when identical patterns are registered","user":{"login":"rogpeppe","id":66491,"avatar_url":"https://avatars0.githubusercontent.com/u/66491?v=4","gravatar_id":"","url":"https://api.github.com/users/rogpeppe","html_url":"https://github.com/rogpeppe","followers_url":"https://api.github.com/users/rogpeppe/followers","following_url":"https://api.github.com/users/rogpeppe/following{/other_user}","gists_url":"https://api.github.com/users/rogpeppe/gists{/gist_id}","starred_url":"https://api.github.com/users/rogpeppe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rogpeppe/subscriptions","organizations_url":"https://api.github.com/users/rogpeppe/orgs","repos_url":"https://api.github.com/users/rogpeppe/repos","events_url":"https://api.github.com/users/rogpeppe/events{/privacy}","received_events_url":"https://api.github.com/users/rogpeppe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-13T17:14:54Z","updated_at":"2018-04-14T15:59:04Z","closed_at":"2018-04-14T15:59:04Z","author_association":"NONE","body":"Multiple versions of the same pattern can be registered without complaint, which hides something that's almost certainly a mistake. This also removes the useful property that registration order is unimportant - because a different handler will be used if they're registered in a different order.\r\n\r\nPerhaps consider panicking in this case.\r\n\r\n\tpackage main\r\n\t\r\n\timport (\r\n\t\t\"fmt\"\r\n\t\t\"net/http\"\r\n\t\t\"net/http/httptest\"\r\n\t\r\n\t\t\"github.com/go-chi/chi\"\r\n\t)\r\n\t\r\n\tfunc main() {\r\n\t\tmux := chi.NewMux()\r\n\t\tmux.Method(\"GET\", \"/foo\", handler{1})\r\n\t\tmux.Method(\"GET\", \"/foo\", handler{2})\r\n\t\tsrv := httptest.NewServer(mux)\r\n\t\thttp.Get(srv.URL + \"/foo\")\r\n\t}\r\n\t\r\n\ttype handler struct {\r\n\t\tid int\r\n\t}\r\n\t\r\n\tfunc (h handler) ServeHTTP(w http.ResponseWriter, req *http.Request) {\r\n\t\tfmt.Printf(\"called %v\\n\", h.id)\r\n\t}\r\n","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/312","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/312/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/312/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/312/events","html_url":"https://github.com/go-chi/chi/issues/312","id":311667916,"number":312,"title":"Add ozzo-routing to benchmarking & steal some ideas from it to make chi faster","user":{"login":"mvrhov","id":450008,"avatar_url":"https://avatars3.githubusercontent.com/u/450008?v=4","gravatar_id":"","url":"https://api.github.com/users/mvrhov","html_url":"https://github.com/mvrhov","followers_url":"https://api.github.com/users/mvrhov/followers","following_url":"https://api.github.com/users/mvrhov/following{/other_user}","gists_url":"https://api.github.com/users/mvrhov/gists{/gist_id}","starred_url":"https://api.github.com/users/mvrhov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvrhov/subscriptions","organizations_url":"https://api.github.com/users/mvrhov/orgs","repos_url":"https://api.github.com/users/mvrhov/repos","events_url":"https://api.github.com/users/mvrhov/events{/privacy}","received_events_url":"https://api.github.com/users/mvrhov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-05T15:51:26Z","updated_at":"2018-04-14T16:04:12Z","closed_at":"2018-04-14T16:04:12Z","author_association":"NONE","body":"I did a quick calculation from their benchmark and they seem to be ~1.6x slower than HttpRouter while providing almost the same functionality as chi. \r\nWell the regex matching does seem to be missing from all benchmarks.\r\n\r\nhttps://github.com/go-ozzo/ozzo-routing","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/311","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/311/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/311/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/311/events","html_url":"https://github.com/go-chi/chi/issues/311","id":311553500,"number":311,"title":"Custom Handler, error in field value","user":{"login":"yudao","id":1303599,"avatar_url":"https://avatars1.githubusercontent.com/u/1303599?v=4","gravatar_id":"","url":"https://api.github.com/users/yudao","html_url":"https://github.com/yudao","followers_url":"https://api.github.com/users/yudao/followers","following_url":"https://api.github.com/users/yudao/following{/other_user}","gists_url":"https://api.github.com/users/yudao/gists{/gist_id}","starred_url":"https://api.github.com/users/yudao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yudao/subscriptions","organizations_url":"https://api.github.com/users/yudao/orgs","repos_url":"https://api.github.com/users/yudao/repos","events_url":"https://api.github.com/users/yudao/events{/privacy}","received_events_url":"https://api.github.com/users/yudao/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-05T10:21:36Z","updated_at":"2018-04-05T11:54:42Z","closed_at":"2018-04-05T11:54:41Z","author_association":"NONE","body":"Hi,\r\n\r\nI'm testing Chi as router and I'm facing off a signature problem that I don't understand.\r\n\r\nThis is the testing gist => https://gist.github.com/yudao/27c3c87d49aefa9a26527995185761d0\r\n\r\nMy error is when I create a route:\r\n\r\n```go\r\nr.Route(\"/sources\", func(r chi.Router) {\r\n  r.Get(\"/\", api.Handler{m.Env, ListProvider}.ServeHTTP)\r\n  r.Get(\"/{reference:[A-Z0-9]+}\", api.Handler{m.Env, GetProvider}.ServeHTTP)\r\n})\r\n```\r\n\r\n> ./router.go:37:33: cannot use ListProvider (type func(*api.Env, http.ResponseWriter, *http.Request)) as type func(*api.Env, http.ResponseWriter, *http.Request) error in field value\r\n> ./router.go:38:54: cannot use GetProvider (type func(*api.Env, http.ResponseWriter, *http.Request)) as type func(*api.Env, http.ResponseWriter, *http.Request) error in field value\r\n\r\nI've followed example and my signature seems to be the same.\r\n\r\nThanks a lot for your help.\r\n\r\nYu.\r\n","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/309","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/309/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/309/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/309/events","html_url":"https://github.com/go-chi/chi/issues/309","id":311200639,"number":309,"title":"Inconsistent behaviour for middleware.StripSlashes ","user":{"login":"djui","id":99752,"avatar_url":"https://avatars3.githubusercontent.com/u/99752?v=4","gravatar_id":"","url":"https://api.github.com/users/djui","html_url":"https://github.com/djui","followers_url":"https://api.github.com/users/djui/followers","following_url":"https://api.github.com/users/djui/following{/other_user}","gists_url":"https://api.github.com/users/djui/gists{/gist_id}","starred_url":"https://api.github.com/users/djui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djui/subscriptions","organizations_url":"https://api.github.com/users/djui/orgs","repos_url":"https://api.github.com/users/djui/repos","events_url":"https://api.github.com/users/djui/events{/privacy}","received_events_url":"https://api.github.com/users/djui/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-04T12:02:41Z","updated_at":"2018-04-04T13:28:06Z","closed_at":"2018-04-04T13:28:06Z","author_association":"NONE","body":"Should `middleware.StripSlashes` behave differently when being used in a `Route` than in a `Group`? It seems like without having a route, the middleware is not even called/considered. Or does that actually mean that `r.Route(\"/\", ...)` is not the same as `r.Group(...`? To me these were always seen interchangeable.\r\n\r\n```go\r\nr := chi.NewRouter()\r\nr.Group(func(r chi.Router) {\r\n\tr.Use(chimiddleware.StripSlashes)\r\n\tr.Get(\"/foo\", func(w http.ResponseWriter, r *http.Request) { io.WriteString(w, r.URL.String()) })\r\n})\r\n```\r\n\r\n```sh\r\n$ curl -i http://localhost:8080/foo/\r\nHTTP/1.1 404 Not Found\r\nContent-Type: text/plain; charset=utf-8\r\nX-Content-Type-Options: nosniff\r\nDate: Wed, 04 Apr 2018 11:42:38 GMT\r\nContent-Length: 19\r\n\r\n404 page not found\r\n```\r\n\r\n```go\r\nr := chi.NewRouter()\r\nr.Route(\"/\", func(r chi.Router) {\r\n\tr.Use(chimiddleware.StripSlashes)\r\n\tr.Get(\"/bar\", func(w http.ResponseWriter, r *http.Request) { io.WriteString(w, r.URL.String()) })\r\n})\r\n\r\n```\r\n\r\n```sh\r\n$ curl -i http://localhost:8080/bar/\r\nHTTP/1.1 200 OK\r\nDate: Wed, 04 Apr 2018 11:42:31 GMT\r\nContent-Length: 5\r\nContent-Type: text/plain; charset=utf-8\r\n\r\n/bar/\r\n```\r\n\r\n```go\r\nr := chi.NewRouter()\r\nr.Use(chimiddleware.StripSlashes)\r\nr.Get(\"/baz\", func(w http.ResponseWriter, r *http.Request) { io.WriteString(w, r.URL.String()) })\r\n```\r\n\r\n```sh\r\n$ curl -i http://localhost:8080/baz/\r\nHTTP/1.1 200 OK\r\nDate: Wed, 04 Apr 2018 11:42:31 GMT\r\nContent-Length: 5\r\nContent-Type: text/plain; charset=utf-8\r\n\r\n/baz/\r\n```","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/308","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/308/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/308/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/308/events","html_url":"https://github.com/go-chi/chi/issues/308","id":306281503,"number":308,"title":"Group not working or ambiguously described","user":{"login":"djui","id":99752,"avatar_url":"https://avatars3.githubusercontent.com/u/99752?v=4","gravatar_id":"","url":"https://api.github.com/users/djui","html_url":"https://github.com/djui","followers_url":"https://api.github.com/users/djui/followers","following_url":"https://api.github.com/users/djui/following{/other_user}","gists_url":"https://api.github.com/users/djui/gists{/gist_id}","starred_url":"https://api.github.com/users/djui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/djui/subscriptions","organizations_url":"https://api.github.com/users/djui/orgs","repos_url":"https://api.github.com/users/djui/repos","events_url":"https://api.github.com/users/djui/events{/privacy}","received_events_url":"https://api.github.com/users/djui/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-03-18T20:55:18Z","updated_at":"2018-03-19T02:24:43Z","closed_at":"2018-03-19T01:05:30Z","author_association":"NONE","body":"The following example behaves not as I would expect from the the description for `r.Group`, specifically the \"fresh\" attributes:\r\n\r\n>// Group adds a new inline-Router along the current routing\r\n>// path, with a fresh middleware stack for the inline-Router.\r\n>Group(fn func(r Router)) Router\r\n\r\nIs that a bug or am I just not fully understanding the idea?\r\n\r\n```\r\n$ curl http://localhost:3000/m1/m3\r\nm1\r\nm2\r\nm3\r\n/m1/m3\r\n```\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"net/http\"\r\n\r\n\t\"github.com/go-chi/chi\"\r\n)\r\n\r\nfunc main() {\r\n\tr := chi.NewRouter()\r\n\r\n\tr.Route(\"/m1\", func(r chi.Router) {\r\n\t\tr.Use(m1)\r\n\r\n\t\tr.Group(func(r chi.Router) {\r\n\t\t\tr.Use(m2)\r\n\r\n\t\t\tr.Get(\"/m2\", func(w http.ResponseWriter, r *http.Request) {\r\n\t\t\t\tfmt.Println(\"/m1/m2\")\r\n\t\t\t})\r\n\r\n\t\t\tr.Group(func(r chi.Router) {\r\n\t\t\t\tr.Use(m3)\r\n\r\n\t\t\t\tr.Get(\"/m3\", func(w http.ResponseWriter, r *http.Request) {\r\n\t\t\t\t\tfmt.Println(\"/m1/m3\")\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t})\r\n\t})\r\n\r\n\thttp.ListenAndServe(\":3000\", r)\r\n}\r\n\r\nfunc m1(next http.Handler) http.Handler {\r\n\treturn http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\r\n\t\tfmt.Println(\"m1\")\r\n\t\tnext.ServeHTTP(w, r)\r\n\t})\r\n}\r\n\r\nfunc m2(next http.Handler) http.Handler {\r\n\treturn http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\r\n\t\tfmt.Println(\"m2\")\r\n\t\tnext.ServeHTTP(w, r)\r\n\t})\r\n}\r\n\r\nfunc m3(next http.Handler) http.Handler {\r\n\treturn http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\r\n\t\tfmt.Println(\"m3\")\r\n\t\tnext.ServeHTTP(w, r)\r\n\t})\r\n}\r\n\r\n```","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/305","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/305/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/305/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/305/events","html_url":"https://github.com/go-chi/chi/issues/305","id":304377428,"number":305,"title":"[Feature request] Add a flag to log request payload in logging middleware","user":{"login":"asydorchuk","id":1106937,"avatar_url":"https://avatars3.githubusercontent.com/u/1106937?v=4","gravatar_id":"","url":"https://api.github.com/users/asydorchuk","html_url":"https://github.com/asydorchuk","followers_url":"https://api.github.com/users/asydorchuk/followers","following_url":"https://api.github.com/users/asydorchuk/following{/other_user}","gists_url":"https://api.github.com/users/asydorchuk/gists{/gist_id}","starred_url":"https://api.github.com/users/asydorchuk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asydorchuk/subscriptions","organizations_url":"https://api.github.com/users/asydorchuk/orgs","repos_url":"https://api.github.com/users/asydorchuk/repos","events_url":"https://api.github.com/users/asydorchuk/events{/privacy}","received_events_url":"https://api.github.com/users/asydorchuk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-12T13:46:18Z","updated_at":"2018-03-18T18:03:30Z","closed_at":"2018-03-18T18:03:18Z","author_association":"NONE","body":"Hi what's your opinion on adding \"LogPayload\" attribute to DefaultLogFormatter in middleware/logger.go, so that DefaultLogger logs payload if configured?\r\n\r\nIf authors approve, I can do a pull request.\r\n","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/304","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/304/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/304/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/304/events","html_url":"https://github.com/go-chi/chi/issues/304","id":304123451,"number":304,"title":"Wrapping Chi for testability and composition","user":{"login":"lansana","id":14805022,"avatar_url":"https://avatars2.githubusercontent.com/u/14805022?v=4","gravatar_id":"","url":"https://api.github.com/users/lansana","html_url":"https://github.com/lansana","followers_url":"https://api.github.com/users/lansana/followers","following_url":"https://api.github.com/users/lansana/following{/other_user}","gists_url":"https://api.github.com/users/lansana/gists{/gist_id}","starred_url":"https://api.github.com/users/lansana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lansana/subscriptions","organizations_url":"https://api.github.com/users/lansana/orgs","repos_url":"https://api.github.com/users/lansana/repos","events_url":"https://api.github.com/users/lansana/events{/privacy}","received_events_url":"https://api.github.com/users/lansana/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-11T02:11:32Z","updated_at":"2018-03-19T01:06:19Z","closed_at":"2018-03-19T01:06:19Z","author_association":"NONE","body":"Hi there,\r\n\r\nI am trying to wrap Chi so I can create mocks as well as compose my own logic within it.\r\n\r\nFor example, here's my wrapper:\r\n\r\n```go\r\npackage router\r\n\r\nimport (\r\n\t\"github.com/go-chi/chi\"\r\n\t\"net/http\"\r\n)\r\n\r\ntype Router interface {\r\n\tParamReader\r\n\tPaginator\r\n\tPrinter\r\n\r\n\tGet(pattern string, handlerFn http.HandlerFunc)\r\n\tPost(pattern string, handlerFn http.HandlerFunc)\r\n\tPut(pattern string, handlerFn http.HandlerFunc)\r\n\tDelete(pattern string, handlerFn http.HandlerFunc)\r\n\tGroup(fn func(r Router))\r\n\tRoute(pattern string) Router\r\n\tUse(middlewares ...func(http.Handler) http.Handler)\r\n\tWith(middlewares ...func(http.Handler) http.Handler) Router\r\n\tNotFound(handlerFn http.HandlerFunc)\r\n\tMethodNotAllowed(handlerFn http.HandlerFunc)\r\n\tServeHTTP(w http.ResponseWriter, r *http.Request)\r\n}\r\n\r\nfunc newRouter(mux *chi.Mux) Router {\r\n\treturn &router{mux: mux}\r\n}\r\n\r\nfunc New() Router {\r\n\treturn newRouter(chi.NewMux())\r\n}\r\n\r\ntype router struct {\r\n\tmux *chi.Mux\r\n}\r\n\r\nfunc (rr *router) Get(pattern string, handlerFn http.HandlerFunc) {\r\n\trr.mux.Get(pattern, handlerFn)\r\n}\r\n\r\nfunc (rr *router) Post(pattern string, handlerFn http.HandlerFunc) {\r\n\trr.mux.Post(pattern, handlerFn)\r\n}\r\n\r\nfunc (rr *router) Put(pattern string, handlerFn http.HandlerFunc) {\r\n\trr.mux.Put(pattern, handlerFn)\r\n}\r\n\r\nfunc (rr *router) Delete(pattern string, handlerFn http.HandlerFunc) {\r\n\trr.mux.Delete(pattern, handlerFn)\r\n}\r\n\r\nfunc (rr *router) Use(middlewares ...func(http.Handler) http.Handler) {\r\n\trr.mux.Use(middlewares...)\r\n}\r\n\r\nfunc (rr *router) With(middlewares ...func(http.Handler) http.Handler) Router {\r\n\treturn newRouter(rr.mux.With(middlewares...).(*chi.Mux))\r\n}\r\n\r\nfunc (rr *router) ServeHTTP(w http.ResponseWriter, r *http.Request) {\r\n\trr.mux.ServeHTTP(w, r)\r\n}\r\n\r\nfunc (rr *router) NotFound(handlerFn http.HandlerFunc) {\r\n\trr.mux.NotFound(handlerFn)\r\n}\r\n\r\nfunc (rr *router) MethodNotAllowed(handlerFn http.HandlerFunc) {\r\n\trr.mux.MethodNotAllowed(handlerFn)\r\n}\r\n\r\nfunc (rr *router) Group(fn func(r Router)) {\r\n\trr.mux.Group(func(r chi.Router) {\r\n\t\tfn(newRouter(r.(*chi.Mux)))\r\n\t})\r\n}\r\n\r\nfunc (r *router) Route(pattern string) Router {\r\n\tmux := r.mux.Route(pattern, nil).(*chi.Mux)\r\n\treturn newRouter(mux)\r\n}\r\n```\r\n\r\nI'm getting an issue when calling the `Route` method. For some reason, when I initialize my router with `r := router.New().Route(\"/v1\")` in `main.go`, the `/v1` prefix is never added. But when I pass that router instance into a controller or something and then do `r.Prefix(\"/v1\").Group(...)`, THEN it works. \r\n\r\nThis doesn't make any sense. Am I wrapping it in such a way that it breaks the core functionality?\r\n\r\nHere is what I do in `main.go`. The second call to `Route` should panic saying that the `/v1` path has already been mounted, but it doesn't...\r\n\r\n```go\r\nr := router.New().Route(\"/v1\")\r\n\tr = r.Route(\"/v1\")\r\n\tr = r.Route(\"/v1\")\r\n```\r\n\r\nBut later in my code, in my `AuthController` where I inject my custom `router.Router` interface (which is my interface that wraps Chi), I can do the following and it prefixes the `/v1` path as it should:\r\n\r\n\r\n```go\r\nfunc (c *authController) AddRoutes() {\r\n\tc.router.Route(\"/v1\").Group(func(r router.Router) {\r\n\t\tr.Use(middleware.Anyone)\r\n\r\n\t\tr.Post(\"/auth/register\", c.Register)\r\n\t\tr.Post(\"/auth/login\", c.Authenticate)\r\n\t\tr.Post(\"/auth/token/refresh\", c.RefreshToken)\r\n\t})\r\n\r\n        // This line will panic because /v1 was already mounted in the statement above\r\n\tc.router.Route(\"/v1\").Group(func(r router.Router) {\r\n\t\tr.Use(middleware.Authorized)\r\n\r\n\t\tr.Get(\"/auth/ping\", c.Ping)\r\n\t\tr.Post(\"/auth/logout\", c.Logout)\r\n\t})\r\n}\r\n```\r\n\r\nThat is what it should be doing. Why doesn't the example from `main.go` behave this way?","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/301","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/301/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/301/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/301/events","html_url":"https://github.com/go-chi/chi/issues/301","id":296278818,"number":301,"title":"MethodNotAllowed still doesn't work.","user":{"login":"robxyy","id":9105106,"avatar_url":"https://avatars0.githubusercontent.com/u/9105106?v=4","gravatar_id":"","url":"https://api.github.com/users/robxyy","html_url":"https://github.com/robxyy","followers_url":"https://api.github.com/users/robxyy/followers","following_url":"https://api.github.com/users/robxyy/following{/other_user}","gists_url":"https://api.github.com/users/robxyy/gists{/gist_id}","starred_url":"https://api.github.com/users/robxyy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robxyy/subscriptions","organizations_url":"https://api.github.com/users/robxyy/orgs","repos_url":"https://api.github.com/users/robxyy/repos","events_url":"https://api.github.com/users/robxyy/events{/privacy}","received_events_url":"https://api.github.com/users/robxyy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-02-12T06:39:45Z","updated_at":"2018-02-12T07:28:07Z","closed_at":"2018-02-12T07:28:07Z","author_association":"NONE","body":"example code:\r\n\r\n```go\r\nr := chi.NewMux()\r\nh.MethodNotAllowed(func(w http.ResponseWriter, r *http.Request) {\r\n\t// custom\r\n\thttp.Error(w, \"method not allowed\", http.StatusMethodNotAllowed)\r\n})\r\nr.Route(\"/v1\", func(r chi.Router) {\r\n\tr.Mount(\"/users\", NewUserHandler())\r\n})\r\n\r\ntype UserHandler struct {\r\n\t*chi.Mux\r\n}\r\n\r\nfunc NewUserHandler() *UserHandler {\r\n\th := &UserHandler{\r\n\t\tMux: chi.NewMux()}\r\n\th.Route(\"/{userId}\", func(r chi.Router) {\r\n\t\tr.Get(\"/\", h.handleGetUser)\r\n\t}\r\n}\r\n```","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/294","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/294/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/294/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/294/events","html_url":"https://github.com/go-chi/chi/issues/294","id":291749827,"number":294,"title":"Adding middleware to specific rest methods under a route","user":{"login":"alexanderattar","id":1504794,"avatar_url":"https://avatars3.githubusercontent.com/u/1504794?v=4","gravatar_id":"","url":"https://api.github.com/users/alexanderattar","html_url":"https://github.com/alexanderattar","followers_url":"https://api.github.com/users/alexanderattar/followers","following_url":"https://api.github.com/users/alexanderattar/following{/other_user}","gists_url":"https://api.github.com/users/alexanderattar/gists{/gist_id}","starred_url":"https://api.github.com/users/alexanderattar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexanderattar/subscriptions","organizations_url":"https://api.github.com/users/alexanderattar/orgs","repos_url":"https://api.github.com/users/alexanderattar/repos","events_url":"https://api.github.com/users/alexanderattar/events{/privacy}","received_events_url":"https://api.github.com/users/alexanderattar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-01-25T23:17:30Z","updated_at":"2018-01-27T05:01:08Z","closed_at":"2018-01-27T05:01:08Z","author_association":"NONE","body":"Is there no way to add middleware handling to a specific REST method under a route? Maybe I'm missing something but so far I have not been able to find a way to cleanly handle adding an auth middleware on POST, PUT, and DELETE, while leaving GET public. \r\n\r\nFor example setting up a router with 2 groups. One public and one private raises the error `panic: chi: attempting to Mount() a handler on an existing path, '/{cid}'`: \r\n\r\n```\r\ntype Resource struct{}\r\n\r\n// Routes creates a REST router for the Resource\r\nfunc (rs Resource) Routes() chi.Router {\r\n\tr := chi.NewRouter()\r\n\r\n\t// Protected routes\r\n\tr.Group(func(r chi.Router) {\r\n\r\n\t\t// Handle valid / invalid tokens\r\n\t\t// This can be modified using the Authenticator method in jwtauth.go\r\n\t\tr.Use(jwtauth.Authenticator)\r\n\r\n\t\tr.Post(\"/\", rs.Post) // POST /{resource} - create a new resource and persist it\r\n\t\tr.Route(\"/{cid}\", func(r chi.Router) {\r\n\t\t\tr.Put(\"/\", rs.Put)       // PUT /{resource}/{cid} - update a single resource by cid\r\n\t\t\tr.Delete(\"/\", rs.Delete) // DELETE /{resource}/{cid} - delete a single resource by cid\r\n\t\t})\r\n\t})\r\n\r\n\t// Public routes\r\n\tr.Group(func(r chi.Router) {\r\n\t\tr.Get(\"/\", rs.List)\r\n\t\tr.Route(\"/{cid}\", func(r chi.Router) {\r\n\t\t\tr.Get(\"/\", rs.Get) // GET /{resource}/{cid} - read a single resource by cid\r\n\t\t})\r\n\t})\r\n\r\n\treturn r\r\n}\r\n```\r\n\r\nBut trying to put the logic under one router and supplying middleware after GET methods raises the error: `panic: chi: all middlewares must be defined before routes on a mux`\r\n\r\n```\r\nfunc (rs Resource) Routes() chi.Router {\r\n\tr := chi.NewRouter()\r\n\r\n\t// Protected routes\r\n\tr.Group(func(r chi.Router) {\r\n\t\t// Public routes\r\n\t\tr.Get(\"/\", rs.List)\r\n\r\n\t\t// Private routes\r\n\t\t// Handle valid / invalid tokens\r\n\t\t// This can be modified using the Authenticator method in auth.go\r\n\t\tr.Use(jtwauth.Authenticator)\r\n\t\tr.Post(\"/\", rs.Post) // POST /{resource} - create a new resource and persist it\r\n\r\n\t\tr.Route(\"/{cid}\", func(r chi.Router) {\r\n\t\t\t// Public routes\r\n\t\t\tr.Get(\"/\", rs.Get) // GET /{resource}/{cid} - read a single resource by cid\r\n\r\n\t\t\t// Private routes\r\n\t\t\tr.Use(jwtauth.Authenticator)\r\n\t\t\tr.Put(\"/\", rs.Put)       // PUT /{resource}/{cid} - update a single resource by cid\r\n\t\t\tr.Delete(\"/\", rs.Delete) // DELETE /{resource}/{cid} - delete a single resource by cid\r\n\t\t})\r\n\t})\r\n\r\n\treturn r\r\n```\r\n\r\nIt seems that removing the panic in the Use method in `chi/mux.go` file solves the problem, but I am not sure if this is a real limitation of this library or I am going about it the wrong way, and maybe there's a more idiomatic way to handle what I'm trying to achieve. Thanks!","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/293","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/293/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/293/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/293/events","html_url":"https://github.com/go-chi/chi/issues/293","id":291015808,"number":293,"title":"The future of chi after Pressly being merged","user":{"login":"jimbojetlag","id":11205806,"avatar_url":"https://avatars1.githubusercontent.com/u/11205806?v=4","gravatar_id":"","url":"https://api.github.com/users/jimbojetlag","html_url":"https://github.com/jimbojetlag","followers_url":"https://api.github.com/users/jimbojetlag/followers","following_url":"https://api.github.com/users/jimbojetlag/following{/other_user}","gists_url":"https://api.github.com/users/jimbojetlag/gists{/gist_id}","starred_url":"https://api.github.com/users/jimbojetlag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimbojetlag/subscriptions","organizations_url":"https://api.github.com/users/jimbojetlag/orgs","repos_url":"https://api.github.com/users/jimbojetlag/repos","events_url":"https://api.github.com/users/jimbojetlag/events{/privacy}","received_events_url":"https://api.github.com/users/jimbojetlag/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-01-23T22:25:29Z","updated_at":"2018-01-24T15:54:42Z","closed_at":"2018-01-24T15:54:42Z","author_association":"NONE","body":"Could chi authors please update us about the future of the library given that the company behind chi is now merged into another company.\r\n\r\nJust in case if the new company likes the smell of Java and Javascript over Go, what would happen to chi?","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/292","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/292/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/292/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/292/events","html_url":"https://github.com/go-chi/chi/issues/292","id":289832222,"number":292,"title":"Middlewares called on NotFound handler","user":{"login":"nullbio","id":721274,"avatar_url":"https://avatars3.githubusercontent.com/u/721274?v=4","gravatar_id":"","url":"https://api.github.com/users/nullbio","html_url":"https://github.com/nullbio","followers_url":"https://api.github.com/users/nullbio/followers","following_url":"https://api.github.com/users/nullbio/following{/other_user}","gists_url":"https://api.github.com/users/nullbio/gists{/gist_id}","starred_url":"https://api.github.com/users/nullbio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nullbio/subscriptions","organizations_url":"https://api.github.com/users/nullbio/orgs","repos_url":"https://api.github.com/users/nullbio/repos","events_url":"https://api.github.com/users/nullbio/events{/privacy}","received_events_url":"https://api.github.com/users/nullbio/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-01-19T01:19:30Z","updated_at":"2018-01-27T04:32:37Z","closed_at":"2018-01-27T04:30:49Z","author_association":"NONE","body":"Hello. There is no way to prevent middlewares from being called before the NotFound handler is called, which is a problem because, for example, I don't need my CSRF middleware to kick in when the page isn't found. It sounds like it was by design that it shouldn't be called, but now it seems it is being called and it hasn't been rectified: https://github.com/go-chi/chi/issues/163\r\n\r\nIf it weren't called automatically we could wrap the middlewares manually if we needed to for the NotFound handler.","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/291","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/291/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/291/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/291/events","html_url":"https://github.com/go-chi/chi/issues/291","id":288983184,"number":291,"title":"Question: Static routes and dynamic routes, which one will win?","user":{"login":"olvlvl","id":155998,"avatar_url":"https://avatars0.githubusercontent.com/u/155998?v=4","gravatar_id":"","url":"https://api.github.com/users/olvlvl","html_url":"https://github.com/olvlvl","followers_url":"https://api.github.com/users/olvlvl/followers","following_url":"https://api.github.com/users/olvlvl/following{/other_user}","gists_url":"https://api.github.com/users/olvlvl/gists{/gist_id}","starred_url":"https://api.github.com/users/olvlvl/starred{/o
8000
wner}{/repo}","subscriptions_url":"https://api.github.com/users/olvlvl/subscriptions","organizations_url":"https://api.github.com/users/olvlvl/orgs","repos_url":"https://api.github.com/users/olvlvl/repos","events_url":"https://api.github.com/users/olvlvl/events{/privacy}","received_events_url":"https://api.github.com/users/olvlvl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-01-16T17:03:35Z","updated_at":"2018-01-20T17:42:21Z","closed_at":"2018-01-20T17:42:21Z","author_association":"NONE","body":"Hi,\r\n\r\nI have a question regarding static routes and dynamic routes. For instance, if I define `/recipes/*`  and `/recipes/suggestion` which one will win? Also, you should know I have no control over the order in which they are defined.\r\n\r\nThanks","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/290","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/290/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/290/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/290/events","html_url":"https://github.com/go-chi/chi/issues/290","id":288687972,"number":290,"title":"Weird characters when logging to text file","user":{"login":"jdelk","id":26233578,"avatar_url":"https://avatars1.githubusercontent.com/u/26233578?v=4","gravatar_id":"","url":"https://api.github.com/users/jdelk","html_url":"https://github.com/jdelk","followers_url":"https://api.github.com/users/jdelk/followers","following_url":"https://api.github.com/users/jdelk/following{/other_user}","gists_url":"https://api.github.com/users/jdelk/gists{/gist_id}","starred_url":"https://api.github.com/users/jdelk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdelk/subscriptions","organizations_url":"https://api.github.com/users/jdelk/orgs","repos_url":"https://api.github.com/users/jdelk/repos","events_url":"https://api.github.com/users/jdelk/events{/privacy}","received_events_url":"https://api.github.com/users/jdelk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-01-15T18:56:09Z","updated_at":"2018-02-02T13:40:05Z","closed_at":"2018-02-02T13:40:05Z","author_association":"NONE","body":"Hi,\r\n\r\nI'm logging to a text file called logs.txt using the following code:\r\n\r\n```\r\nvar file, err = os.Create(\"logs.txt\")\r\n\tif err != nil {\r\n\t\tpanic(\"Failed to create log file\")\r\n\t}\r\n\tcustomLogger := log.New(file, \"\", log.LstdFlags)\r\n\tmiddleware.DefaultLogger = middleware.RequestLogger(&middleware.DefaultLogFormatter{Logger: customLogger})\r\n\tr.Use(middleware.RequestID)\r\n\tr.Use(middleware.RealIP)\r\n\tr.Use(middleware.Logger)\r\n\tr.Use(middleware.Recoverer)\r\n```\r\nIn logs.txt, I see:\r\n\r\n2018/01/15 18:48:05 \u001B[33m[devtest/NHcrlBfdos-000001] \u001B[0m\u001B[36m\"\u001B[0m\u001B[35;1mGET \u001B[0m\u001B[36mhttp://10.0.1.25/ HTTP/1.0\" \u001B[0mfrom 10.0.1.26 - \u001B[32;1m200\u001B[0m\u001B[34;1m 10422B\u001B[0m in \u001B[32m3.256873ms\u001B[0m\r\n\r\nThere's some odd characters being logged. How can I fix that?","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/284","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/284/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/284/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/284/events","html_url":"https://github.com/go-chi/chi/issues/284","id":277609216,"number":284,"title":"2017/11/29 10:28:47 http: panic serving 127.0.0.1:39972: interface conversion: interface {} is nil, not *chi.Context","user":{"login":"zjn1234","id":21353379,"avatar_url":"https://avatars0.githubusercontent.com/u/21353379?v=4","gravatar_id":"","url":"https://api.github.com/users/zjn1234","html_url":"https://github.com/zjn1234","followers_url":"https://api.github.com/users/zjn1234/followers","following_url":"https://api.github.com/users/zjn1234/following{/other_user}","gists_url":"https://api.github.com/users/zjn1234/gists{/gist_id}","starred_url":"https://api.github.com/users/zjn1234/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zjn1234/subscriptions","organizations_url":"https://api.github.com/users/zjn1234/orgs","repos_url":"https://api.github.com/users/zjn1234/repos","events_url":"https://api.github.com/users/zjn1234/events{/privacy}","received_events_url":"https://api.github.com/users/zjn1234/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-11-29T02:35:18Z","updated_at":"2017-11-29T15:10:26Z","closed_at":"2017-11-29T14:56:58Z","author_association":"NONE","body":"`ctx := context.WithValue(context.Background(), common.TENANTKEY, resLog.DestTenantId)\r\nr = r.WithContext(ctx)\r\nnext.ServeHTTP(w, r)`\r\n\r\nchi is the latest\r\nimport \"context\" package\r\n\r\nwhen i use these, i got the errors below\r\n2017/11/29 10:28:47 http: panic serving 127.0.0.1:39972: interface conversion: interface {} is nil, not *chi.Context","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/282","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/282/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/282/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/282/events","html_url":"https://github.com/go-chi/chi/issues/282","id":276822835,"number":282,"title":"[Proposal]Change of RequestID using X-Request-ID Header","user":{"login":"pei0804","id":9821370,"avatar_url":"https://avatars3.githubusercontent.com/u/9821370?v=4","gravatar_id":"","url":"https://api.github.com/users/pei0804","html_url":"https://github.com/pei0804","followers_url":"https://api.github.com/users/pei0804/followers","following_url":"https://api.github.com/users/pei0804/following{/other_user}","gists_url":"https://api.github.com/users/pei0804/gists{/gist_id}","starred_url":"https://api.github.com/users/pei0804/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pei0804/subscriptions","organizations_url":"https://api.github.com/users/pei0804/orgs","repos_url":"https://api.github.com/users/pei0804/repos","events_url":"https://api.github.com/users/pei0804/events{/privacy}","received_events_url":"https://api.github.com/users/pei0804/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-11-26T12:57:24Z","updated_at":"2017-11-27T16:20:56Z","closed_at":"2017-11-27T16:20:56Z","author_association":"NONE","body":"Thank you for a nice work.\r\n\r\nI have a proposal.\r\nI would like to change the prepared middleware as follows for logging.\r\nOf course I can make it yourself.\r\nIf you incorporate it officially, I can create it.\r\n\r\n```go\r\nrid := r.Header.Get(\"X-Request-ID\")\r\nif rid == \"\" {\r\n\t\tmyid := atomic.AddUint64(&reqid, 1)\r\n\t\trid = fmt.Sprintf(\"%s-%06d\", prefix, myid)\r\n\t\tr.Header.Set(\"X-Request-ID\", rid)\r\n}\r\n```","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/280","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/280/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/280/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/280/events","html_url":"https://github.com/go-chi/chi/issues/280","id":275939556,"number":280,"title":"Is this `WriteHeader(http.StatusOK)` necessary?","user":{"login":"luweimy","id":4403559,"avatar_url":"https://avatars1.githubusercontent.com/u/4403559?v=4","gravatar_id":"","url":"https://api.github.com/users/luweimy","html_url":"https://github.com/luweimy","followers_url":"https://api.github.com/users/luweimy/followers","following_url":"https://api.github.com/users/luweimy/following{/other_user}","gists_url":"https://api.github.com/users/luweimy/gists{/gist_id}","starred_url":"https://api.github.com/users/luweimy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luweimy/subscriptions","organizations_url":"https://api.github.com/users/luweimy/orgs","repos_url":"https://api.github.com/users/luweimy/repos","events_url":"https://api.github.com/users/luweimy/events{/privacy}","received_events_url":"https://api.github.com/users/luweimy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-11-22T04:13:31Z","updated_at":"2017-11-24T20:05:20Z","closed_at":"2017-11-24T20:05:20Z","author_association":"NONE","body":"https://github.com/go-chi/chi/blob/687d2792aedd8e8ac3bbd8592cf55b91d7ea8ce9/middleware/wrap_writer.go#L51\r\n\r\n```\r\nfunc (b *basicWriter) Write(buf []byte) (int, error) {\r\n\tb.WriteHeader(http.StatusOK)\r\n\tn, err := b.ResponseWriter.Write(buf)\r\n\tif b.tee != nil {\r\n\t\t_, err2 := b.tee.Write(buf[:n])\r\n\t\t// Prefer errors generated by the proxied writer.\r\n\t\tif err == nil {\r\n\t\t\terr = err2\r\n\t\t}\r\n\t}\r\n\tb.bytes += n\r\n\treturn n, err\r\n}\r\n```\r\nHttp server when `finishRequest` will set  `http.StatusOK`.\r\nChanging the header map after a call to WriteHeader (or Write) has no effect unless the modified headers are trailers.","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/278","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/278/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/278/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/278/events","html_url":"https://github.com/go-chi/chi/issues/278","id":273844377,"number":278,"title":"pprof endpoints should not be hardcoded","user":{"login":"nkovacs","id":2269242,"avatar_url":"https://avatars1.githubusercontent.com/u/2269242?v=4","gravatar_id":"","url":"https://api.github.com/users/nkovacs","html_url":"https://github.com/nkovacs","followers_url":"https://api.github.com/users/nkovacs/followers","following_url":"https://api.github.com/users/nkovacs/following{/other_user}","gists_url":"https://api.github.com/users/nkovacs/gists{/gist_id}","starred_url":"https://api.github.com/users/nkovacs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nkovacs/subscriptions","organizations_url":"https://api.github.com/users/nkovacs/orgs","repos_url":"https://api.github.com/users/nkovacs/repos","events_url":"https://api.github.com/users/nkovacs/events{/privacy}","received_events_url":"https://api.github.com/users/nkovacs/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-11-14T15:57:08Z","updated_at":"2017-11-15T18:47:41Z","closed_at":"2017-11-15T18:47:41Z","author_association":"CONTRIBUTOR","body":"I'm using go 1.9, and `/debug/pprof/` has a link to `/debug/pprof/mutex`, which doesn't work because the profiler middleware only registers `block`, `heap`, `goroutine` and `threadcreate`.\r\nInstead of hardcoding these individually, you could just do this:\r\n\r\n```\r\nr.HandleFunc(\"/pprof/*\", pprof.Index)\r\n```\r\n\r\njust like how http/pprof only registers pprof.Index to handle all of the subpages.","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/277","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/277/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/277/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/277/events","html_url":"https://github.com/go-chi/chi/issues/277","id":273147909,"number":277,"title":"Panic on empty path segments in request","user":{"login":"cskr","id":173476,"avatar_url":"https://avatars0.githubusercontent.com/u/173476?v=4","gravatar_id":"","url":"https://api.github.com/users/cskr","html_url":"https://github.com/cskr","followers_url":"https://api.github.com/users/cskr/followers","following_url":"https://api.github.com/users/cskr/following{/other_user}","gists_url":"https://api.github.com/users/cskr/gists{/gist_id}","starred_url":"https://api.github.com/users/cskr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cskr/subscriptions","organizations_url":"https://api.github.com/users/cskr/orgs","repos_url":"https://api.github.com/users/cskr/repos","events_url":"https://api.github.com/users/cskr/events{/privacy}","received_events_url":"https://api.github.com/users/cskr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-11-11T14:10:06Z","updated_at":"2017-11-20T15:13:06Z","closed_at":"2017-11-20T15:10:25Z","author_association":"NONE","body":"`chi.URLParam` panics when path segments matching path variables is empty.\r\n\r\nchi version: 94e6bc0\r\nGo version: go1.9.2 linux/amd64\r\n\r\nSample code for reproduction:\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"net/http\"\r\n\r\n\t\"github.com/go-chi/chi\"\r\n)\r\n\r\nfunc main() {\r\n\tmux := chi.NewMux()\r\n\tmux.Get(\"/prefix/{x}/{y}/suffix\", func(w http.ResponseWriter, r *http.Request) {\r\n\t\tfmt.Fprintln(w, chi.URLParam(r, \"x\"), chi.URLParam(r, \"y\"))\r\n\t})\r\n\r\n\thttp.ListenAndServe(\":8080\", mux)\r\n}\r\n```\r\n\r\ncurl command:\r\n\r\n```\r\ncurl 'http://localhost:8080/prefix///suffix'\r\n```\r\n\r\nPanic:\r\n\r\n```\r\n2017/11/11 19:31:39 http: panic serving 127.0.0.1:52118: runtime error: index out of range\r\ngoroutine 5 [running]:\r\nnet/http.(*conn).serve.func1(0xc42007ad20)\r\n\t$GOROOT/src/net/http/server.go:1697 +0xd0\r\npanic(0x675140, 0x82f160)\r\n\t$GOROOT/src/runtime/panic.go:491 +0x283\r\ngithub.com/go-chi/chi.(*Context).URLParam(0xc4200fc000, 0x6c5b1c, 0x1, 0x0, 0xc420010ac0)\r\n\t$HOME/go/src/github.com/go-chi/chi/context.go:74 +0x102\r\ngithub.com/go-chi/chi.URLParam(0xc4200f6100, 0x6c5b1c, 0x1, 0x8, 0xc4200ee048)\r\n\t$HOME/go/src/github.com/go-chi/chi/context.go:108 +0x6e\r\nmain.main.func1(0x805f20, 0xc4200f8000, 0xc4200f6100)\r\n\t$HOME/test.go:13 +0x55\r\nnet/http.HandlerFunc.ServeHTTP(0x6d8940, 0x805f20, 0xc4200f8000, 0xc4200f6100)\r\n\t$GOROOT/src/net/http/server.go:1918 +0x44\r\ngithub.com/go-chi/chi.(*Mux).routeHTTP(0xc420060120, 0x805f20, 0xc4200f8000, 0xc4200f6100)\r\n\t$HOME/go/src/github.com/go-chi/chi/mux.go:428 +0x289\r\ngithub.com/go-chi/chi.(*Mux).(github.com/go-chi/chi.routeHTTP)-fm(0x805f20, 0xc4200f8000, 0xc4200f6100)\r\n\t$HOME/go/src/github.com/go-chi/chi/mux.go:372 +0x48\r\nnet/http.HandlerFunc.ServeHTTP(0xc420010a20, 0x805f20, 0xc4200f8000, 0xc4200f6100)\r\n\t$GOROOT/src/net/http/server.go:1918 +0x44\r\ngithub.com/go-chi/chi.(*Mux).ServeHTTP(0xc420060120, 0x805f20, 0xc4200f8000, 0xc4200f6000)\r\n\t$HOME/go/src/github.com/go-chi/chi/mux.go:81 +0x221\r\nnet/http.serverHandler.ServeHTTP(0xc420078dd0, 0x805f20, 0xc4200f8000, 0xc4200f6000)\r\n\t$GOROOT/src/net/http/server.go:2619 +0xb4\r\nnet/http.(*conn).serve(0xc42007ad20, 0x806460, 0xc42005e280)\r\n\t$GOROOT/src/net/http/server.go:1801 +0x71d\r\ncreated by net/http.(*Server).Serve\r\n\t$GOROOT/src/net/http/server.go:2720 +0x288\r\n```","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/274","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/274/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/274/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/274/events","html_url":"https://github.com/go-chi/chi/issues/274","id":268074124,"number":274,"title":"Logger throws 500 on websockets.","user":{"login":"jaynagpaul","id":20666846,"avatar_url":"https://avatars0.githubusercontent.com/u/20666846?v=4","gravatar_id":"","url":"https://api.github.com/users/jaynagpaul","html_url":"https://github.com/jaynagpaul","followers_url":"https://api.github.com/users/jaynagpaul/followers","following_url":"https://api.github.com/users/jaynagpaul/following{/other_user}","gists_url":"https://api.github.com/users/jaynagpaul/gists{/gist_id}","starred_url":"https://api.github.com/users/jaynagpaul/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaynagpaul/subscriptions","organizations_url":"https://api.github.com/users/jaynagpaul/orgs","repos_url":"https://api.github.com/users/jaynagpaul/repos","events_url":"https://api.github.com/users/jaynagpaul/events{/privacy}","received_events_url":"https://api.github.com/users/jaynagpaul/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-10-24T15:18:36Z","updated_at":"2017-10-27T01:16:59Z","closed_at":"2017-10-27T01:16:59Z","author_association":"NONE","body":"When using the default middleware logger on requests that get upgraded to websockets using gorilla websockets. It silently fails and throws an error 500.","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/270","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/270/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/270/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/270/events","html_url":"https://github.com/go-chi/chi/issues/270","id":264232530,"number":270,"title":"RoutePattern at middleware level?","user":{"login":"jutkko","id":4571626,"avatar_url":"https://avatars3.githubusercontent.com/u/4571626?v=4","gravatar_id":"","url":"https://api.github.com/users/jutkko","html_url":"https://github.com/jutkko","followers_url":"https://api.github.com/users/jutkko/followers","following_url":"https://api.github.com/users/jutkko/following{/other_user}","gists_url":"https://api.github.com/users/jutkko/gists{/gist_id}","starred_url":"https://api.github.com/users/jutkko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jutkko/subscriptions","organizations_url":"https://api.github.com/users/jutkko/orgs","repos_url":"https://api.github.com/users/jutkko/repos","events_url":"https://api.github.com/users/jutkko/events{/privacy}","received_events_url":"https://api.github.com/users/jutkko/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-10-10T13:41:33Z","updated_at":"2017-10-10T18:48:07Z","closed_at":"2017-10-10T18:48:07Z","author_association":"NONE","body":"Hi I am migrating from an echo router codebase to chi. One of the things we use was the parameterised path variable echo provides. I can see a similar thing in chi, `chi.RouteContext(r.Context()).RoutePattern()`, but this function seems to be returning an empty string when called in middlewares. Is there way out? \r\n\r\nAm I missing something obvious? Thanks. ","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/269","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/269/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/269/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/269/events","html_url":"https://github.com/go-chi/chi/issues/269","id":264198625,"number":269,"title":"Matching routes by Request.URL.Host","user":{"login":"mvdan","id":3576549,"avatar_url":"https://avatars0.githubusercontent.com/u/3576549?v=4","gravatar_id":"","url":"https://api.github.com/users/mvdan","html_url":"https://github.com/mvdan","followers_url":"https://api.github.com/users/mvdan/followers","following_url":"https://api.github.com/users/mvdan/following{/other_user}","gists_url":"https://api.github.com/users/mvdan/gists{/gist_id}","starred_url":"https://api.github.com/users/mvdan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mvdan/subscriptions","organizations_url":"https://api.github.com/users/mvdan/orgs","repos_url":"https://api.github.com/users/mvdan/repos","events_url":"https://api.github.com/users/mvdan/events{/privacy}","received_events_url":"https://api.github.com/users/mvdan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-10-10T11:50:40Z","updated_at":"2017-10-10T12:08:35Z","closed_at":"2017-10-10T12:08:35Z","author_association":"CONTRIBUTOR","body":"This might have been left out of chi on purpose, but I could not find a reference or mention anywhere in the repo.\r\n\r\nI have a fairly big project that uses `github.com/gorilla/mux` and I'd like to move it to chi. For the most part, it does a better job at the same functionalities - especially when it comes to middlewares.\r\n\r\nHowever, there's something I can't figure out how to port - filtering by host. That is, a router having a sub-router (or route) that only matches requests with a certain `Request.URL.Host`.\r\n\r\nIs there a way to do this with chi at the moment? I could not figure out a way. I played with a middleware that did the filtering for a bit, but it seems obviously wrong.\r\n\r\nI could always do the filtering either before chi (i.e. implement my own thin router on top), or at the handler level. Both seem like bad approaches, because it needs the host routing in between - at a more granular level.\r\n\r\nAfter looking at the chi codebase a bit, I believe this to be impossible at the moment, since the tree matcher only uses `Method` and `Path`. I would like to be proven wrong, or to be shown another way to do it.\r\n\r\nThanks!","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/267","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/267/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/267/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/267/events","html_url":"https://github.com/go-chi/chi/issues/267","id":262998055,"number":267,"title":"Any chance of adding an appengine build target?","user":{"login":"polds","id":2372558,"avatar_url":"https://avatars0.githubusercontent.com/u/2372558?v=4","gravatar_id":"","url":"https://api.github.com/users/polds","html_url":"https://github.com/polds","followers_url":"https://api.github.com/users/polds/followers","following_url":"https://api.github.com/users/polds/following{/other_user}","gists_url":"https://api.github.com/users/polds/gists{/gist_id}","starred_url":"https://api.github.com/users/polds/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polds/subscriptions","organizations_url":"https://api.github.com/users/polds/orgs","repos_url":"https://api.github.com/users/polds/repos","events_url":"https://api.github.com/users/polds/events{/privacy}","received_events_url":"https://api.github.com/users/polds/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-10-05T04:01:17Z","updated_at":"2017-10-06T07:04:20Z","closed_at":"2017-10-06T07:04:20Z","author_association":"CONTRIBUTOR","body":"Wondering if it'd be possible to add an `appengine` target to all the *18.go files so the build looks like:\r\n\r\n```\r\n// +build go1.8 appengine\r\n```\r\n\r\nAs appengine reports, when using Go 1.8, a Go version of `1.8.3 (appengine-1.9.61)`\r\n\r\nLooks like files affected would be:\r\n\r\n - [middleware/closenotify18.go](https://github.com/go-chi/chi/blob/master/middleware/closenotify18.go)\r\n - [middleware/compress18.go](https://github.com/go-chi/chi/blob/master/middleware/compress18.go)\r\n - [middleware/wrap_writer18.go](https://github.com/go-chi/chi/blob/master/middleware/wrap_writer18.go)\r\n\r\n\r\nI'd open a PR, but due to some employer legalities it'd be a pain for me for just three lines of code.","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/264","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/264/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/264/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/264/events","html_url":"https://github.com/go-chi/chi/issues/264","id":260344322,"number":264,"title":"Accept LOCK and UNLOCK methods?","user":{"login":"tboerger","id":156964,"avatar_url":"https://avatars3.githubusercontent.com/u/156964?v=4","gravatar_id":"","url":"https://api.github.com/users/tboerger","html_url":"https://github.com/tboerger","followers_url":"https://api.github.com/users/tboerger/followers","following_url":"https://api.github.com/users/tboerger/following{/other_user}","gists_url":"https://api.github.com/users/tboerger/gists{/gist_id}","starred_url":"https://api.github.com/users/tboerger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tboerger/subscriptions","organizations_url":"https://api.github.com/users/tboerger/orgs","repos_url":"https://api.github.com/users/tboerger/repos","events_url":"https://api.github.com/users/tboerger/events{/privacy}","received_events_url":"https://api.github.com/users/tboerger/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-09-25T16:49:45Z","updated_at":"2017-10-10T21:28:23Z","closed_at":"2017-10-10T21:28:23Z","author_association":"NONE","body":"I would like to build a terraform remote store based on chi, but for that I need 2 api endpoints with the above methods. Should I create a pr for that?","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/263","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/263/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/263/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/263/events","html_url":"https://github.com/go-chi/chi/issues/263","id":260138254,"number":263,"title":"cors middleware doesn't work with subgroup","user":{"login":"chenjie4255","id":5313665,"avatar_url":"https://avatars1.githubusercontent.com/u/5313665?v=4","gravatar_id":"","url":"https://api.github.com/users/chenjie4255","html_url":"https://github.com/chenjie4255","followers_url":"https://api.github.com/users/chenjie4255/followers","following_url":"https://api.github.com/users/chenjie4255/following{/other_user}","gists_url":"https://api.github.com/users/chenjie4255/gists{/gist_id}","starred_url":"https://api.github.com/users/chenjie4255/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenjie4255/subscriptions","organizations_url":"https://api.github.com/users/chenjie4255/orgs","repos_url":"https://api.github.com/users/chenjie4255/repos","events_url":"https://api.github.com/users/chenjie4255/events{/privacy}","received_events_url":"https://api.github.com/users/chenjie4255/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2017-09-25T02:25:14Z","updated_at":"2018-01-29T01:10:48Z","closed_at":"2017-09-29T21:00:02Z","author_association":"NONE","body":"\r\n\r\n```\r\nimport (\r\n\t\"net/http\"\r\n\t\"github.com/go-chi/cors\"\r\n\t\"github.com/pressly/chi\"\r\n)\r\n\r\nfunc main() {\r\n\tr := chi.NewRouter()\r\n\tcors := cors.New(cors.Options{\r\n\t\t// AllowedOrigins: []string{\"https://foo.com\"}, // Use this to allow specific origin hosts\r\n\t\tAllowedOrigins: []string{\"*\"},\r\n\t\t// AllowOriginFunc:  func(r *http.Request, origin string) bool { return true },\r\n\t\tAllowedMethods:     []string{\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"},\r\n\t\tAllowedHeaders:     []string{\"Accept\", \"Authorization\", \"Content-Type\", \"X-CSRF-Token\"},\r\n\t\tExposedHeaders:     []string{\"Link\"},\r\n\t\tAllowCredentials:   true,\r\n\t\tOptionsPassthrough: true,\r\n\t\tMaxAge:             3599, // Maximum value not ignored by any of major browsers\r\n\t})\r\n\r\n\tr.Group(func(r chi.Router) {\r\n\t\tr.Use(cors.Handler)\r\n\t\tr.Get(\"/\", func(w http.ResponseWriter, r *http.Request) {\r\n\t\t\tw.Write([]byte(\"welcome\"))\r\n\t\t})\r\n\r\n\t})\r\n\r\n\thttp.ListenAndServe(\":3000\", r)\r\n}\r\n```\r\n\r\nusing postman to simulate a options request and I got a 405 response code. everything work fine only if I remove the subGroup.\r\n\r\nenv:golang1.9","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/262","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/262/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/262/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/262/events","html_url":"https://github.com/go-chi/chi/issues/262","id":259456598,"number":262,"title":"can not open `debug/pprof` use chi middleware profiler ","user":{"login":"luweimy","id":4403559,"avatar_url":"https://avatars1.githubusercontent.com/u/4403559?v=4","gravatar_id":"","url":"https://api.github.com/users/luweimy","html_url":"https://github.com/luweimy","followers_url":"https://api.github.com/users/luweimy/followers","following_url":"https://api.github.com/users/luweimy/following{/other_user}","gists_url":"https://api.github.com/users/luweimy/gists{/gist_id}","starred_url":"https://api.github.com/users/luweimy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luweimy/subscriptions","organizations_url":"https://api.github.com/users/luweimy/orgs","repos_url":"https://api.github.com/users/luweimy/repos","events_url":"https://api.github.com/users/luweimy/events{/privacy}","received_events_url":"https://api.github.com/users/luweimy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-09-21T10:58:25Z","updated_at":"2017-10-13T04:10:27Z","closed_at":"2017-10-13T04:10:27Z","author_association":"NONE","body":"```\r\n> curl http://localhost:8889/debug/pprof\r\n<a href=\"/debug/pprof/\">Moved Permanently</a>.\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/261","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/261/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/261/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/261/events","html_url":"https://github.com/go-chi/chi/issues/261","id":258296633,"number":261,"title":"Variable shadowing in examples","user":{"login":"gurre","id":491940,"avatar_url":"https://avatars1.githubusercontent.com/u/491940?v=4","gravatar_id":"","url":"https://api.github.com/users/gurre","html_url":"https://github.com/gurre","followers_url":"https://api.github.com/users/gurre/followers","following_url":"https://api.github.com/users/gurre/following{/other_user}","gists_url":"https://api.github.com/users/gurre/gists{/gist_id}","starred_url":"https://api.github.com/users/gurre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gurre/subscriptions","organizations_url":"https://api.github.com/users/gurre/orgs","repos_url":"https://api.github.com/users/gurre/repos","events_url":"https://api.github.com/users/gurre/events{/privacy}","received_events_url":"https://api.github.com/users/gurre/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-09-17T11:29:37Z","updated_at":"2017-09-18T03:44:09Z","closed_at":"2017-09-18T00:14:17Z","author_association":"NONE","body":"There is a lot of variable shadowing in the examples files. It makes the code harder to read.\r\n\r\nhttps://github.com/go-chi/chi/blob/master/_examples/limits/main.go","score":1.0},{"url":"ht
1fa3
tps://api.github.com/repos/go-chi/chi/issues/260","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/260/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/260/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/260/events","html_url":"https://github.com/go-chi/chi/issues/260","id":257455640,"number":260,"title":"Mount() doesn't match root path of the sub-router","user":{"login":"VojtechVitek","id":139342,"avatar_url":"https://avatars0.githubusercontent.com/u/139342?v=4","gravatar_id":"","url":"https://api.github.com/users/VojtechVitek","html_url":"https://github.com/VojtechVitek","followers_url":"https://api.github.com/users/VojtechVitek/followers","following_url":"https://api.github.com/users/VojtechVitek/following{/other_user}","gists_url":"https://api.github.com/users/VojtechVitek/gists{/gist_id}","starred_url":"https://api.github.com/users/VojtechVitek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/VojtechVitek/subscriptions","organizations_url":"https://api.github.com/users/VojtechVitek/orgs","repos_url":"https://api.github.com/users/VojtechVitek/repos","events_url":"https://api.github.com/users/VojtechVitek/events{/privacy}","received_events_url":"https://api.github.com/users/VojtechVitek/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-09-13T17:12:27Z","updated_at":"2018-01-06T02:11:47Z","closed_at":"2018-01-06T02:11:47Z","author_association":"CONTRIBUTOR","body":"Given\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"net/http\"\r\n\r\n\t\"github.com/go-chi/chi\"\r\n)\r\n\r\nfunc main() {\r\n\tr := chi.NewRouter()\r\n\tr.Mount(\"/path\", MyRouter())\r\n\r\n\thttp.ListenAndServe(\":9876\", r)\r\n}\r\n\r\nfunc MyRouter() http.Handler {\r\n\tr := chi.NewRouter()\r\n\r\n\tr.Get(\"/*\", func(w http.ResponseWriter, r *http.Request) {\r\n\t\tw.Write([]byte(\"works..\\n\"))\r\n\t})\r\n\r\n\treturn r\r\n}\r\n```\r\n\r\nHow come `localhost:9876/path/` is not matched and returns 404?\r\n```\r\n$ curl localhost:9876/path\r\nworks..\r\n\r\n$ curl localhost:9876/path/\r\n404 page not found\r\n\r\n$ curl localhost:9876/path/hey\r\nworks..\r\n```\r\n\r\nBrought up in #259 by @hovhannest.","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/257","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/257/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/257/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/257/events","html_url":"https://github.com/go-chi/chi/issues/257","id":255164717,"number":257,"title":"querystring?","user":{"login":"vincentserpoul","id":1297404,"avatar_url":"https://avatars3.githubusercontent.com/u/1297404?v=4","gravatar_id":"","url":"https://api.github.com/users/vincentserpoul","html_url":"https://github.com/vincentserpoul","followers_url":"https://api.github.com/users/vincentserpoul/followers","following_url":"https://api.github.com/users/vincentserpoul/following{/other_user}","gists_url":"https://api.github.com/users/vincentserpoul/gists{/gist_id}","starred_url":"https://api.github.com/users/vincentserpoul/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vincentserpoul/subscriptions","organizations_url":"https://api.github.com/users/vincentserpoul/orgs","repos_url":"https://api.github.com/users/vincentserpoul/repos","events_url":"https://api.github.com/users/vincentserpoul/events{/privacy}","received_events_url":"https://api.github.com/users/vincentserpoul/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-09-05T05:38:07Z","updated_at":"2017-09-05T10:56:05Z","closed_at":"2017-09-05T10:56:05Z","author_association":"NONE","body":"I don't see any docs on querystring params.\r\nAre we supposed to parse it like any URL pattern?\r\nIt would be worse giving an example with it in the test/docs/examples.","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/256","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/256/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/256/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/256/events","html_url":"https://github.com/go-chi/chi/issues/256","id":254779376,"number":256,"title":"pronunciation?","user":{"login":"scrivy","id":3114908,"avatar_url":"https://avatars3.githubusercontent.com/u/3114908?v=4","gravatar_id":"","url":"https://api.github.com/users/scrivy","html_url":"https://github.com/scrivy","followers_url":"https://api.github.com/users/scrivy/followers","following_url":"https://api.github.com/users/scrivy/following{/other_user}","gists_url":"https://api.github.com/users/scrivy/gists{/gist_id}","starred_url":"https://api.github.com/users/scrivy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scrivy/subscriptions","organizations_url":"https://api.github.com/users/scrivy/orgs","repos_url":"https://api.github.com/users/scrivy/repos","events_url":"https://api.github.com/users/scrivy/events{/privacy}","received_events_url":"https://api.github.com/users/scrivy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-09-02T01:01:19Z","updated_at":"2017-09-02T10:55:24Z","closed_at":"2017-09-02T01:19:51Z","author_association":"NONE","body":"Is the pronunciation chi as in the Greek letter χ or qi as in the Chinese letter 氣?\r\n\r\nhttps://en.wikipedia.org/wiki/Chi_(letter)\r\nhttps://en.wikipedia.org/wiki/Qi\r\n\r\nVery heated debate at work today.","score":1.0},{"url":"https://api.github.com/repos/go-chi/chi/issues/253","repository_url":"https://api.github.com/repos/go-chi/chi","labels_url":"https://api.github.com/repos/go-chi/chi/issues/253/labels{/name}","comments_url":"https://api.github.com/repos/go-chi/chi/issues/253/comments","events_url":"https://api.github.com/repos/go-chi/chi/issues/253/events","html_url":"https://github.com/go-chi/chi/issues/253","id":253315204,"number":253,"title":"Using unsupported method","user":{"login":"stelund","id":59272,"avatar_url":"https://avatars3.githubusercontent.com/u/59272?v=4","gravatar_id":"","url":"https://api.github.com/users/stelund","html_url":"https://github.com/stelund","followers_url":"https://api.github.com/users/stelund/followers","following_url":"https://api.github.com/users/stelund/following{/other_user}","gists_url":"https://api.github.com/users/stelund/gists{/gist_id}","starred_url":"https://api.github.com/users/stelund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stelund/subscriptions","organizations_url":"https://api.github.com/users/stelund/orgs","repos_url":"https://api.github.com/users/stelund/repos","events_url":"https://api.github.com/users/stelund/events{/privacy}","received_events_url":"https://api.github.com/users/stelund/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-08-28T12:33:31Z","updated_at":"2017-08-28T14:10:28Z","closed_at":"2017-08-28T14:10:28Z","author_association":"NONE","body":"I'm trying to implement support for unsupported http methods. Do you have any suggested solution rather than forking?\r\n\r\nMaybe chi could support ANY method routing for explicit setup. So to add a route for e.g. PROPFIND a new function mux.AnyMethodRoute would be used which would use mANY. Then routeHTTP would fallback to mANY if no matching methodType could be found in methodMap.\r\n\r\nIn the end the responsibility to verify the http method would be up to the handler.","score":1.0}]}
0

