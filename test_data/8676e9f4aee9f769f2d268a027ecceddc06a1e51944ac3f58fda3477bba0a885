HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 09 Jun 2018 08:10:15 GMT
Link: <https://api.github.com/search/issues?q=repo%3Anetty%2Fnetty+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Anetty%2Fnetty+type%3Aissue+state%3Aclosed&page=34>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CD1C:57C5:373198E:71A55C4:5B1B8B67
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 5
X-Ratelimit-Reset: 1528531855
X-Runtime-Rack: 0.401297
X-Xss-Protection: 1; mode=block

8000
{"total_count":3822,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/netty/netty/issues/8010","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/8010/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/8010/comments","events_url":"https://api.github.com/repos/netty/netty/issues/8010/events","html_url":"https://github.com/netty/netty/issues/8010","id":330531825,"node_id":"MDU6SXNzdWUzMzA1MzE4MjU=","number":8010,"title":"Failed to submit a listener notification task. Event loop shut down? while Shutting down Etcd4j Netty client","user":{"login":"SantoshNesaragi","id":39944363,"node_id":"MDQ6VXNlcjM5OTQ0MzYz","avatar_url":"https://avatars1.githubusercontent.com/u/39944363?v=4","gravatar_id":"","url":"https://api.github.com/users/SantoshNesaragi","html_url":"https://github.com/SantoshNesaragi","followers_url":"https://api.github.com/users/SantoshNesaragi/followers","following_url":"https://api.github.com/users/SantoshNesaragi/following{/other_user}","gists_url":"https://api.github.com/users/SantoshNesaragi/gists{/gist_id}","starred_url":"https://api.github.com/users/SantoshNesaragi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SantoshNesaragi/subscriptions","organizations_url":"https://api.github.com/users/SantoshNesaragi/orgs","repos_url":"https://api.github.com/users/SantoshNesaragi/repos","events_url":"https://api.github.com/users/SantoshNesaragi/events{/privacy}","received_events_url":"https://api.github.com/users/SantoshNesaragi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-06-08T06:13:09Z","updated_at":"2018-06-08T16:12:59Z","closed_at":"2018-06-08T16:12:59Z","author_association":"NONE","body":"Defined two camel routes to perform ETCD CRUD operation while shutting down Etcd4j Netty client i am getting \r\n\r\n ERROR   --- [entExecutor-1-1] i.n.u.c.D.rejectedExecution              : Failed to submit a listener notification task. Event loop shut down?\r\n\r\njava.util.concurrent.RejectedExecutionException: event executor terminated\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.reject(SingleThreadEventExecutor.java:840)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.offerTask(SingleThreadEventExecutor.java:342)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.addTask(SingleThreadEventExecutor.java:335)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:765)\r\n\tat io.netty.util.concurrent.DefaultPromise.safeExecute(DefaultPromise.java:767)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:435)\r\n\tat io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:120)\r\n\tat io.netty.channel.DefaultChannelPromise.setFailure(DefaultChannelPromise.java:87)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.safeExecute(AbstractChannelHandlerContext.java:1022)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.close(AbstractChannelHandlerContext.java:620)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.close(AbstractChannelHandlerContext.java:475)\r\n\tat io.netty.channel.DefaultChannelPipeline.close(DefaultChannelPipeline.java:964)\r\n\tat io.netty.channel.AbstractChannel.close(AbstractChannel.java:234)\r\n\tat io.netty.resolver.dns.DnsNameResolver.close(DnsNameResolver.java:310)\r\n\tat io.netty.resolver.dns.InflightNameResolver.close(InflightNameResolver.java:61)\r\n\tat io.netty.resolver.InetSocketAddressResolver.close(InetSocketAddressResolver.java:94)\r\n\tat io.netty.resolver.AddressResolverGroup$1.operationComplete(AddressResolverGroup.java:79)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:514)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:507)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:486)\r\n\tat io.netty.util.concurrent.DefaultPromise.access$000(DefaultPromise.java:34)\r\n\tat io.netty.util.concurrent.DefaultPromise$1.run(DefaultPromise.java:438)\r\n\tat io.netty.util.concurrent.GlobalEventExecutor$TaskRunner.run(GlobalEventExecutor.java:233)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\nUsing Apache camel 2.18.2 version which has inbuilt camel-etcd and netty , JVM 1.8 on windows 10 OS\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/8008","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/8008/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/8008/comments","events_url":"https://api.github.com/repos/netty/netty/issues/8008/events","html_url":"https://github.com/netty/netty/issues/8008","id":330025408,"node_id":"MDU6SXNzdWUzMzAwMjU0MDg=","number":8008,"title":"Order between channelActive invocation on server, and channel being active on client?","user":{"login":"srdo","id":4324588,"node_id":"MDQ6VXNlcjQzMjQ1ODg=","avatar_url":"https://avatars1.githubusercontent.com/u/4324588?v=4","gravatar_id":"","url":"https://api.github.com/users/srdo","html_url":"https://github.com/srdo","followers_url":"https://api.github.com/users/srdo/followers","following_url":"https://api.github.com/users/srdo/following{/other_user}","gists_url":"https://api.github.com/users/srdo/gists{/gist_id}","starred_url":"https://api.github.com/users/srdo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srdo/subscriptions","organizations_url":"https://api.github.com/users/srdo/orgs","repos_url":"https://api.github.com/users/srdo/repos","events_url":"https://api.github.com/users/srdo/events{/privacy}","received_events_url":"https://api.github.com/users/srdo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2018-06-06T20:43:32Z","updated_at":"2018-06-08T18:22:24Z","closed_at":"2018-06-08T18:22:24Z","author_association":"NONE","body":"Hi,\r\n\r\nWe have a test on Netty 3.x that starts up a server and client, and verify that they can talk to each other. The server keeps a list of all connected channels in a ChannelGroup, and adds new channels as channelConnected is called. \r\n\r\nThe test waits for the client channel to be open, and also waits for all channels in the server's ChannelGroup to be connected.\r\n\r\nWe're migrating to Netty 4, and the test has become flaky because it appears that the client channel may become active before the server channelActive method is invoked. As a result, the test starts before the server has registered the client in the ChannelGroup.\r\n\r\nI'm not sure whether this is a bug. Is the server's channelActive supposed to be invoked before the client's channel becomes active, or was it just a happy accident that it worked in Netty 3? ","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/8006","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/8006/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/8006/comments","events_url":"https://api.github.com/repos/netty/netty/issues/8006/events","html_url":"https://github.com/netty/netty/issues/8006","id":329370908,"node_id":"MDU6SXNzdWUzMjkzNzA5MDg=","number":8006,"title":"how implement a  secure shell v2.0?","user":{"login":"echooy","id":9390327,"node_id":"MDQ6VXNlcjkzOTAzMjc=","avatar_url":"https://avatars0.githubusercontent.com/u/9390327?v=4","gravatar_id":"","url":"https://api.github.com/users/echooy","html_url":"https://github.com/echooy","followers_url":"https://api.github.com/users/echooy/followers","following_url":"https://api.github.com/users/echooy/following{/other_user}","gists_url":"https://api.github.com/users/echooy/gists{/gist_id}","starred_url":"https://api.github.com/users/echooy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/echooy/subscriptions","organizations_url":"https://api.github.com/users/echooy/orgs","repos_url":"https://api.github.com/users/echooy/repos","events_url":"https://api.github.com/users/echooy/events{/privacy}","received_events_url":"https://api.github.com/users/echooy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-06-05T09:21:53Z","updated_at":"2018-06-05T17:49:46Z","closed_at":"2018-06-05T17:49:46Z","author_association":"NONE","body":"### *`base ssh2 protocol`*\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/8004","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/8004/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/8004/comments","events_url":"https://api.github.com/repos/netty/netty/issues/8004/events","html_url":"https://github.com/netty/netty/issues/8004","id":329312263,"node_id":"MDU6SXNzdWUzMjkzMTIyNjM=","number":8004,"title":"After the netty client disconnects from the network, how does the server immediately sense?","user":{"login":"a173030685","id":9361755,"node_id":"MDQ6VXNlcjkzNjE3NTU=","avatar_url":"https://avatars0.githubusercontent.com/u/9361755?v=4","gravatar_id":"","url":"https://api.github.com/users/a173030685","html_url":"https://github.com/a173030685","followers_url":"https://api.github.com/users/a173030685/followers","following_url":"https://api.github.com/users/a173030685/following{/other_user}","gists_url":"https://api.github.com/users/a173030685/gists{/gist_id}","starred_url":"https://api.github.com/users/a173030685/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/a173030685/subscriptions","organizations_url":"https://api.github.com/users/a173030685/orgs","repos_url":"https://api.github.com/users/a173030685/repos","events_url":"https://api.github.com/users/a173030685/events{/privacy}","received_events_url":"https://api.github.com/users/a173030685/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-06-05T06:00:41Z","updated_at":"2018-06-05T17:49:14Z","closed_at":"2018-06-05T17:49:14Z","author_association":"NONE","body":"My side, deliberately disconnected from the client, hoping to allow the server to immediately detect the client has been off the net, is there any way? How to achieve the code?\r\nI don't want to judge by heartbeat, because this method is not real-time. For example, I set it to 50 seconds. He must wait 50 seconds to know. If someone just pushes the message within 50 seconds, the server will think it is Can push, but the client actually can not receive.\r\nOr can you check whether the channel is alive before sending it through the channel? I tried isActive and isOpen. They return true in case of a broken network. Please ask for a good solution. Thank you very much!","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/8002","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/8002/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/8002/comments","events_url":"https://api.github.com/repos/netty/netty/issues/8002/events","html_url":"https://github.com/netty/netty/issues/8002","id":329246887,"node_id":"MDU6SXNzdWUzMjkyNDY4ODc=","number":8002,"title":"Http2CodecUtil.java - emptyPingBuf() is no longer needed (as writePing takes a long)","user":{"login":"vsabella","id":2106153,"node_id":"MDQ6VXNlcjIxMDYxNTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2106153?v=4","gravatar_id":"","url":"https://api.github.com/users/vsabella","html_url":"https://github.com/vsabella","followers_url":"https://api.github.com/users/vsabella/followers","following_url":"https://api.github.com/users/vsabella/following{/other_user}","gists_url":"https://api.github.com/users/vsabella/gists{/gist_id}","starred_url":"https://api.github.com/users/vsabella/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vsabella/subscriptions","organizations_url":"https://api.github.com/users/vsabella/orgs","repos_url":"https://api.github.com/users/vsabella/repos","events_url":"https://api.github.com/users/vsabella/events{/privacy}","received_events_url":"https://api.github.com/users/vsabella/received_events","type":"User","site_admin":false},"labels":[{"id":185731,"node_id":"MDU6TGFiZWwxODU3MzE=","url":"https://api.github.com/repos/netty/netty/labels/cleanup","name":"cleanup","color":"5319e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/188","html_url":"https://github.com/netty/netty/milestone/188","labels_url":"https://api.github.com/repos/netty/netty/milestones/188/labels","id":3343291,"node_id":"MDk6TWlsZXN0b25lMzM0MzI5MQ==","number":188,"title":"4.1.26.Final","description":"","creator":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":51,"closed_issues":53,"state":"open","created_at":"2018-05-14T07:38:31Z","updated_at":"2018-06-08T18:26:19Z","due_on":null,"closed_at":null},"comments":7,"created_at":"2018-06-04T23:05:38Z","updated_at":"2018-06-07T22:53:53Z","closed_at":"2018-06-07T22:53:22Z","author_association":"NONE","body":"https://github.com/netty/netty/blob/b192bf12ad2af92bba0f32c9d3127b1192e54670/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2CodecUtil.java#L177\r\n\r\n\r\nIn https://github.com/netty/netty/commit/501662a77f8166382eefd18a8620983d27f59d4a - emptyPing data changed to long (instead of buffer data)\r\n\r\nThis should be updated.","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7997","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7997/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7997/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7997/events","html_url":"https://github.com/netty/netty/issues/7997","id":328747876,"node_id":"MDU6SXNzdWUzMjg3NDc4NzY=","number":7997,"title":"Receiving CloseWebSocketFrame for every 6 to 9 minutes","user":{"login":"sekharsa82","id":39775856,"node_id":"MDQ6VXNlcjM5Nzc1ODU2","avatar_url":"https://avatars1.githubusercontent.com/u/39775856?v=4","gravatar_id":"","url":"https://api.github.com/users/sekharsa82","html_url":"https://github.com/sekharsa82","followers_url":"https://api.github.com/users/sekharsa82/followers","following_url":"https://api.github.com/users/sekharsa82/following{/other_user}","gists_url":"https://api.github.com/users/sekharsa82/gists{/gist_id}","starred_url":"https://api.github.com/users/sekharsa82/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sekharsa82/subscriptions","organizations_url":"https://api.github.com/users/sekharsa82/orgs","repos_url":"https://api.github.com/users/sekharsa82/repos","events_url":"https://api.github.com/users/sekharsa82/events{/privacy}","received_events_url":"https://api.github.com/users/sekharsa82/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-06-02T14:19:04Z","updated_at":"2018-06-07T22:58:20Z","closed_at":"2018-06-07T22:58:20Z","author_association":"NONE","body":"Hi,\r\nWe are receiving CloseWebSocketFrame request from netty api for every 6 to 9 minutes. Here is the actual frame received.\r\nCloseWebSocketFrame(data: PooledUnsafeDirectByteBuf(ridx: 0, widx: 2, cap: 2))\r\n\r\nWe are new to netty, could some one explain what it means and possible fix we need to apply in netty client.\r\n\r\nBest Regards","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7993","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7993/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7993/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7993/events","html_url":"https://github.com/netty/netty/issues/7993","id":328197235,"node_id":"MDU6SXNzdWUzMjgxOTcyMzU=","number":7993,"title":"Exception: unexpected message type: DefaultHttpRequest with Netty 4.1.25","user":{"login":"mkreider329","id":26936680,"node_id":"MDQ6VXNlcjI2OTM2Njgw","avatar_url":"https://avatars3.githubusercontent.com/u/26936680?v=4","gravatar_id":"","url":"https://api.github.com/users/mkreider329","html_url":"https://github.com/mkreider329","followers_url":"https://api.github.com/users/mkreider329/followers","following_url":"https://api.github.com/users/mkreider329/following{/other_user}","gists_url":"https://api.github.com/users/mkreider329/gists{/gist_id}","starred_url":"https://api.github.com/users/mkreider329/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mkreider329/subscriptions","organizations_url":"https://api.github.com/users/mkreider329/orgs","repos_url":"https://api.github.com/users/mkreider329/repos","events_url":"https://api.github.com/users/mkreider329/events{/privacy}","received_events_url":"https://api.github.com/users/mkreider329/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-05-31T15:54:11Z","updated_at":"2018-06-07T22:59:15Z","closed_at":"2018-06-07T22:59:15Z","author_association":"NONE","body":"Netty version 4.1.25.Final\r\n\r\nWhen running a longevity test with the Spring Cloud Gateway using https, the following exception is thrown after about an hour or so:\r\nio.netty.handler.codec.EncoderException: java.lang.IllegalStateException: unexpected message type: DefaultHttpRequest\r\nThe full stack trace is below.\r\n\r\nThe error is consistently reproducible with this sample Spring Cloud Gateway project, although some of the dependencies are a little out of date:\r\nhttps://github.com/samtonyclarke/spring-cloud-gw-issue-228\r\n\r\nThis exception occurs on both Windows 10 and Linux RHEL 7.3 with java 1.8.0_131.\r\n\r\nThe exception was more frequent in 4.1.24.Final, so things are getting better. But I've just run the test this morning with 4.1.26.Final-SNAPSHOT, and it is happening there too.\r\n\r\nHere are the fullstacktrace(s) that appear\r\n```\r\nio.netty.handler.codec.EncoderException: java.lang.IllegalStateException: unexpected message type: DefaultHttpRequest\r\n        at io.netty.handler.codec.MessageToMessageEncoder.write(MessageToMessageEncoder.java:106) ~[netty-codec-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.CombinedChannelDuplexHandler.write(CombinedChannelDuplexHandler.java:348) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at reactor.ipc.netty.channel.ChannelOperationsHandler.doWrite(ChannelOperationsHandler.java:290) ~[reactor-netty-0.7.7.RELEASE.jar!/:0.7.7.RELEASE]\r\n        at reactor.ipc.netty.channel.ChannelOperationsHandler.drain(ChannelOperationsHandler.java:464) ~[reactor-netty-0.7.7.RELEASE.jar!/:0.7.7.RELEASE]\r\n        at reactor.ipc.netty.channel.ChannelOperationsHandler.flush(ChannelOperationsHandler.java:192) ~[reactor-netty-0.7.7.RELEASE.jar!/:0.7.7.RELEASE]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:802) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:814) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:794) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:831) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1071) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:300) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at reactor.ipc.netty.http.HttpOperations.lambda$then$0(HttpOperations.java:135) ~[reactor-netty-0.7.7.RELEASE.jar!/:0.7.7.RELEASE]\r\n        at reactor.ipc.netty.FutureMono$DeferredFutureMono.subscribe(FutureMono.java:197) ~[reactor-netty-0.7.7.RELEASE.jar!/:0.7.7.RELEASE]\r\n        at reactor.core.publisher.Mono.subscribe(Mono.java:3080) ~[reactor-core-3.1.7.RELEASE.jar!/:3.1.7.RELEASE]\r\n        at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:167) ~[reactor-core-3.1.7.RELEASE.jar!/:3.1.7.RELEASE]\r\n        at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56) ~[reactor-core-3.1.7.RELEASE.jar!/:3.1.7.RELEASE]\r\n        at reactor.core.publisher.Mono.subscribe(Mono.java:3080) ~[reactor-core-3.1.7.RELEASE.jar!/:3.1.7.RELEASE]\r\n        at reactor.ipc.netty.NettyOutbound.subscribe(NettyOutbound.java:354) ~[reactor-netty-0.7.7.RELEASE.jar!/:0.7.7.RELEASE]\r\n        at reactor.core.publisher.MonoSource.subscribe(MonoSource.java:51) ~[reactor-core-3.1.7.RELEASE.jar!/:3.1.7.RELEASE]\r\n        at reactor.ipc.netty.channel.ChannelOperations.applyHandler(ChannelOperations.java:380) ~[reactor-netty-0.7.7.RELEASE.jar!/:0.7.7.RELEASE]\r\n        at reactor.ipc.netty.http.client.HttpClientOperations.onHandlerStart(HttpClientOperations.java:502) ~[reactor-netty-0.7.7.RELEASE.jar!/:0.7.7.RELEASE]\r\n        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404) ~[netty-common-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:465) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_131]\r\nCaused by: java.lang.IllegalStateException: unexpected message type: DefaultHttpRequest\r\n        at io.netty.handler.codec.http.HttpObjectEncoder.encode(HttpObjectEncoder.java:86) ~[netty-codec-http-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.handler.codec.http.HttpClientCodec$Encoder.encode(HttpClientCodec.java:167) ~[netty-codec-http-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.handler.codec.MessageToMessageEncoder.write(MessageToMessageEncoder.java:88) ~[netty-codec-4.1.25.Final.jar!/:4.1.25.Final]\r\n        ... 30 common frames omitted\r\n```\r\n\r\n\r\n```\r\njava.io.IOException: Connection closed prematurely\r\n        at reactor.ipc.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:269) ~[reactor-netty-0.7.7.RELEASE.jar!/:0.7.7.RELEASE]\r\n        at reactor.ipc.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:113) ~[reactor-netty-0.7.7.RELEASE.jar!/:0.7.7.RELEASE]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:420) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:377) ~[netty-codec-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:342) ~[netty-codec-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:282) ~[netty-codec-http-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:223) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:377) ~[netty-codec-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:342) ~[netty-codec-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1028) ~[netty-handler-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1429) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:947) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:822) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404) ~[netty-common-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:465) ~[netty-transport-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.25.Final.jar!/:4.1.25.Final]\r\n        at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_131]\r\n```\r\n\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7992","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7992/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7992/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7992/events","html_url":"https://github.com/netty/netty/issues/7992","id":328070258,"node_id":"MDU6SXNzdWUzMjgwNzAyNTg=","number":7992,"title":"Can it be optimized with 'nextIndex' in InternalThreadLocalMap","user":{"login":"fingthinking","id":5517388,"node_id":"MDQ6VXNlcjU1MTczODg=","avatar_url":"https://avatars2.githubusercontent.com/u/5517388?v=4","gravatar_id":"","url":"https://api.github.com/users/fingthinking","html_url":"https://github.com/fingthinking","followers_url":"https://api.github.com/users/fingthinking/followers","following_url":"https://api.github.com/users/fingthinking/following{/other_user}","gists_url":"https://api.github.com/users/fingthinking/gists{/gist_id}","starred_url":"https://api.github.com/users/fingthinking/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fingthinking/subscriptions","organizations_url":"https://api.github.com/users/fingthinking/orgs","repos_url":"https://api.github.com/users/fingthinking/repos","events_url":"https://api.github.com/users/fingthinking/events{/privacy}","received_events_url":"https://api.github.com/users/fingthinking/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-05-31T09:50:36Z","updated_at":"2018-06-02T11:37:46Z","closed_at":"2018-06-02T11:37:46Z","author_association":"NONE","body":"**English is so bad, Just look at it**\r\n\r\nWhen I new FastThreadLocal, I get a `index` assigned by InternalThreadLocalMap to indicate the location of the object stored in the InternalThreadLocalMap. If index is already more than 32, each InternalThreadLocalMap will assign a 32 location size Object[] when generation, then the Object[] will not be used. I hope to be able to generate index generation from FastThreadLocalThread.\r\n\r\nPre:\r\n```Java\r\n// InternalThreadLocalMap\r\n public static int nextVariableIndex() {\r\n        int index = nextIndex.getAndIncrement();\r\n        if (index < 0) {\r\n            nextIndex.decrementAndGet();\r\n            throw new IllegalStateException(\"too many thread-local indexed variables\");\r\n        }\r\n        return index;\r\n    }\r\n```\r\n\r\nAfter:\r\n```Java\r\n// InternalThreadLocalMap\r\n public static int nextVariableIndex() {\r\n        Thread thread = Thread.currentThread();\r\n        AtomicInteger nextIndex;\r\n        if (thread instanceof FastThreadLocalThread) {\r\n            nextIndex = ((FastThreadLocalThread) thread).getNextIndex();\r\n        } else {\r\n            InternalThreadLocalMap localMap = slowGet();\r\n    
8000
        nextIndex = (AtomicInteger) localMap.indexedVariable(0);\r\n            if (nextIndex == UNSET) {\r\n                localMap.setIndexedVariable(0, nextIndex = new AtomicInteger(1));\r\n            }\r\n        }\r\n        int index = nextIndex.getAndIncrement();\r\n        if (index < 0) {\r\n            nextIndex.decrementAndGet();\r\n            throw new IllegalStateException(\"too many thread-local indexed variables\");\r\n        }\r\n        return index;\r\n    }\r\n\r\n// FastThreadLocalThread\r\n\r\npublic class FastThreadLocalThread extends Thread {\r\n  \r\n   // other codes\r\n  private final AtomicInteger nextIndex = new AtomicInteger(0);\r\n\r\n    public AtomicInteger getNextIndex() {\r\n        return nextIndex;\r\n    }\r\n}\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7990","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7990/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7990/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7990/events","html_url":"https://github.com/netty/netty/issues/7990","id":327933208,"node_id":"MDU6SXNzdWUzMjc5MzMyMDg=","number":7990,"title":"CharSequenceValueConverter.convertToByte works differently for AsciiString vs String","user":{"login":"henrik-lindqvist","id":2810898,"node_id":"MDQ6VXNlcjI4MTA4OTg=","avatar_url":"https://avatars3.githubusercontent.com/u/2810898?v=4","gravatar_id":"","url":"https://api.github.com/users/henrik-lindqvist","html_url":"https://github.com/henrik-lindqvist","followers_url":"https://api.github.com/users/henrik-lindqvist/followers","following_url":"https://api.github.com/users/henrik-lindqvist/following{/other_user}","gists_url":"https://api.github.com/users/henrik-lindqvist/gists{/gist_id}","starred_url":"https://api.github.com/users/henrik-lindqvist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henrik-lindqvist/subscriptions","organizations_url":"https://api.github.com/users/henrik-lindqvist/orgs","repos_url":"https://api.github.com/users/henrik-lindqvist/repos","events_url":"https://api.github.com/users/henrik-lindqvist/events{/privacy}","received_events_url":"https://api.github.com/users/henrik-lindqvist/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/188","html_url":"https://github.com/netty/netty/milestone/188","labels_url":"https://api.github.com/repos/netty/netty/milestones/188/labels","id":3343291,"node_id":"MDk6TWlsZXN0b25lMzM0MzI5MQ==","number":188,"title":"4.1.26.Final","description":"","creator":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":51,"closed_issues":53,"state":"open","created_at":"2018-05-14T07:38:31Z","updated_at":"2018-06-08T18:26:19Z","due_on":null,"closed_at":null},"comments":5,"created_at":"2018-05-30T23:22:35Z","updated_at":"2018-06-01T19:15:09Z","closed_at":"2018-06-01T19:15:09Z","author_association":"NONE","body":"### Netty version\r\n4.1\r\n\r\nLooking at function CharSequenceValueConverter.convertToByte (CharSequence):\r\nhttps://github.com/netty/netty/blob/4.1/codec/src/main/java/io/netty/handler/codec/CharSequenceValueConverter.java#L79\r\n\r\nFor AsciiString it takes the first byte, but for any other kind of CharSequence it parse the number value of the entire sequence, i.e. using Byte.parseByte(). This is surely not expected behavior.\r\n\r\nSee also:\r\nhttps://docs.oracle.com/javase/8/docs/api/java/lang/Byte.html#parseByte-java.lang.String-","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7988","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7988/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7988/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7988/events","html_url":"https://github.com/netty/netty/issues/7988","id":327847014,"node_id":"MDU6SXNzdWUzMjc4NDcwMTQ=","number":7988,"title":"NPE in testsuite logged when using Conscrypt.","user":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/188","html_url":"https://github.com/netty/netty/milestone/188","labels_url":"https://api.github.com/repos/netty/netty/milestones/188/labels","id":3343291,"node_id":"MDk6TWlsZXN0b25lMzM0MzI5MQ==","number":188,"title":"4.1.26.Final","description":"","creator":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":51,"closed_issues":53,"state":"open","created_at":"2018-05-14T07:38:31Z","updated_at":"2018-06-08T18:26:19Z","due_on":null,"closed_at":null},"comments":7,"created_at":"2018-05-30T18:25:54Z","updated_at":"2018-06-04T18:41:29Z","closed_at":"2018-06-04T18:40:09Z","author_association":"MEMBER","body":"Saw this during the build:\r\n\r\n```\r\nRunning io.netty.handler.ssl.ConscryptJdkSslEngineInteropTest\r\n18:01:39.304 [nioEventLoopGroup-676-3] DEBUG io.netty.buffer.PoolThreadCache - Freed 10 thread-local buffer(s) from thread: nioEventLoopGroup-676-3\r\n18:01:39.304 [nioEventLoopGroup-676-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 8 thread-local buffer(s) from thread: nioEventLoopGroup-676-2\r\n[98.268s][info   ][gc,start      ] GC(54) Pause Young (G1 Evacuation Pause)\r\n[98.268s][info   ][gc,task       ] GC(54) Using 8 workers of 8 for evacuation\r\n[98.289s][info   ][gc,phases     ] GC(54)   Pre Evacuate Collection Set: 0.0ms\r\n[98.289s][info   ][gc,phases     ] GC(54)   Evacuate Collection Set: 19.5ms\r\n[98.289s][info   ][gc,phases     ] GC(54)   Post Evacuate Collection Set: 1.5ms\r\n[98.289s][info   ][gc,phases     ] GC(54)   Other: 0.4ms\r\n[98.289s][info   ][gc,heap       ] GC(54) Eden regions: 178->0(171)\r\n[98.289s][info   ][gc,heap       ] GC(54) Survivor regions: 3->10(23)\r\n[98.289s][info   ][gc,heap       ] GC(54) Old regions: 7->7\r\n[98.289s][info   ][gc,heap       ] GC(54) Humongous regions: 54->54\r\n[98.289s][info   ][gc,metaspace  ] GC(54) Metaspace: 33982K->33982K(1081344K)\r\n[98.289s][info   ][gc            ] GC(54) Pause Young (G1 Evacuation Pause) 482M->140M(604M) 21.501ms\r\n[98.290s][info   ][gc,cpu        ] GC(54) User=0.03s Sys=0.01s Real=0.02s\r\n18:01:39.566 [nioEventLoopGroup-689-1] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x4b609c89, L:/127.0.0.1:37424 - R:/127.0.0.1:45348] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n18:01:39.568 [nioEventLoopGroup-690-1] DEBUG io.netty.handler.ssl.SslHandler - [id: 0xc3c9581f, L:/127.0.0.1:45348 - R:/127.0.0.1:37424] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n18:01:39.588 [nioEventLoopGroup-689-1] DEBUG io.netty.buffer.PoolThreadCache - Freed 14 thread-local buffer(s) from thread: nioEventLoopGroup-689-1\r\n18:01:39.601 [nioEventLoopGroup-690-1] DEBUG io.netty.buffer.PoolThreadCache - Freed 10 thread-local buffer(s) from thread: nioEventLoopGroup-690-1\r\n18:01:39.642 [nioEventLoopGroup-677-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: nioEventLoopGroup-677-2\r\n18:01:39.643 [nioEventLoopGroup-677-3] DEBUG io.netty.buffer.PoolThreadCache - Freed 6 thread-local buffer(s) from thread: nioEventLoopGroup-677-3\r\n18:01:39.684 [nioEventLoopGroup-692-1] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x34ae8109, L:/127.0.0.1:40594 - R:/127.0.0.1:43038] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n18:01:39.685 [nioEventLoopGroup-693-1] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x6cb9adc0, L:/127.0.0.1:43038 - R:/127.0.0.1:40594] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n18:01:39.713 [nioEventLoopGroup-692-1] DEBUG io.netty.buffer.PoolThreadCache - Freed 8 thread-local buffer(s) from thread: nioEventLoopGroup-692-1\r\n18:01:39.730 [nioEventLoopGroup-693-1] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: nioEventLoopGroup-693-1\r\n18:01:39.811 [nioEventLoopGroup-678-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: nioEventLoopGroup-678-2\r\n18:01:39.813 [nioEventLoopGroup-678-3] DEBUG io.netty.buffer.PoolThreadCache - Freed 10 thread-local buffer(s) from thread: nioEventLoopGroup-678-3\r\n18:01:39.905 [nioEventLoopGroup-679-3] DEBUG io.netty.buffer.PoolThreadCache - Freed 10 thread-local buffer(s) from thread: nioEventLoopGroup-679-3\r\n18:01:39.999 [nioEventLoopGroup-679-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 8 thread-local buffer(s) from thread: nioEventLoopGroup-679-2\r\n18:01:40.171 [nioEventLoopGroup-680-3] DEBUG io.netty.buffer.PoolThreadCache - Freed 160 thread-local buffer(s) from thread: nioEventLoopGroup-680-3\r\n18:01:40.171 [nioEventLoopGroup-680-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: nioEventLoopGroup-680-2\r\n18:01:40.323 [nioEventLoopGroup-681-3] DEBUG io.netty.buffer.PoolThreadCache - Freed 160 thread-local buffer(s) from thread: nioEventLoopGroup-681-3\r\n18:01:40.325 [nioEventLoopGroup-681-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: nioEventLoopGroup-681-2\r\n18:01:40.482 [nioEventLoopGroup-682-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: nioEventLoopGroup-682-2\r\n18:01:40.482 [nioEventLoopGroup-682-3] DEBUG io.netty.buffer.PoolThreadCache - Freed 160 thread-local buffer(s) from thread: nioEventLoopGroup-682-3\r\n18:01:40.528 [nioEventLoopGroup-695-1] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x4ca0a975, L:/172.19.0.2:37904 - R:/172.19.0.2:51436] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n18:01:40.550 [nioEventLoopGroup-683-3] DEBUG io.netty.buffer.PoolThreadCache - Freed 160 thread-local buffer(s) from thread: nioEventLoopGroup-683-3\r\n18:01:40.553 [nioEventLoopGroup-695-1] DEBUG io.netty.buffer.PoolThreadCache - Freed 12 thread-local buffer(s) from thread: nioEventLoopGroup-695-1\r\n18:01:40.559 [nioEventLoopGroup-696-1] DEBUG io.netty.buffer.PoolThreadCache - Freed 5 thread-local buffer(s) from thread: nioEventLoopGroup-696-1\r\n18:01:40.643 [nioEventLoopGroup-683-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: nioEventLoopGroup-683-2\r\n18:01:40.691 [nioEventLoopGroup-684-3] DEBUG io.netty.buffer.PoolThreadCache - Freed 161 thread-local buffer(s) from thread: nioEventLoopGroup-684-3\r\n18:01:40.706 [main] DEBUG i.n.h.s.u.InsecureTrustManagerFactory - Accepting a server certificate: CN=example.com\r\n18:01:40.796 [nioEventLoopGroup-684-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: nioEventLoopGroup-684-2\r\n18:01:40.960 [nioEventLoopGroup-699-1] DEBUG io.netty.handler.ssl.SslHandler - SSLException during trying to call SSLEngine.wrap(...) because of an previous SSLException, ignoring...\r\njavax.net.ssl.SSLHandshakeException: SSL handshake aborted: ssl=0x7f12c41b3cf8: Failure in SSL library, usually a protocol error\r\nerror:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED (../ssl/handshake.cc:363 0x7f12bb959503:0x00000000)\r\n\tat org.conscrypt.SSLUtils.toSSLHandshakeException(SSLUtils.java:331)\r\n\tat org.conscrypt.ConscryptEngine.handshake(ConscryptEngine.java:1013)\r\n\tat org.conscrypt.ConscryptEngine.wrap(ConscryptEngine.java:1427)\r\n\tat java.base/javax.net.ssl.SSLEngine.wrap(SSLEngine.java:511)\r\n\tat org.conscrypt.Java8EngineWrapper.wrap(Java8EngineWrapper.java:56)\r\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:997)\r\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:803)\r\n\tat io.netty.handler.ssl.SslHandler.wrapAndFlush(SslHandler.java:771)\r\n\tat io.netty.handler.ssl.SslHandler.handleUnwrapThrowable(SslHandler.java:1207)\r\n\tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1183)\r\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1221)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:544)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:844)\r\nCaused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x7f12c41b3cf8: Failure in SSL library, usually a protocol error\r\nerror:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED (../ssl/handshake.cc:363 0x7f12bb959503:0x00000000)\r\n\tat org.conscrypt.NativeCrypto.ENGINE_SSL_do_handshake(Native Method)\r\n\tat org.conscrypt.NativeSsl.doHandshake(NativeSsl.java:391)\r\n\tat org.conscrypt.ConscryptEngine.handshake(ConscryptEngine.java:978)\r\n\t... 27 common frames omitted\r\n18:01:40.971 [nioEventLoopGroup-685-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: nioEventLoopGroup-685-2\r\n18:01:40.974 [nioEventLoopGroup-685-3] DEBUG io.netty.buffer.PoolThreadCache - Freed 161 thread-local buffer(s) from thread: nioEventLoopGroup-685-3\r\n18:01:41.018 [nioEventLoopGroup-698-1] DEBUG io.netty.buffer.PoolThreadCache - Freed 4 thread-local buffer(s) from thread: nioEventLoopGroup-698-1\r\n18:01:41.025 [nioEventLoopGroup-699-1] DEBUG io.netty.buffer.PoolThreadCache - Freed 7 thread-local buffer(s) from thread: nioEventLoopGroup-699-1\r\n18:01:41.026 [nioEventLoopGroup-686-3] DEBUG io.netty.buffer.PoolThreadCache - Freed 161 thread-local buffer(s) from thread: nioEventLoopGroup-686-3\r\n18:01:41.124 [nioEventLoopGroup-686-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: nioEventLoopGroup-686-2\r\n18:01:41.329 [nioEventLoopGroup-687-2] DEBUG io.netty.buffer.PoolThreadCache - Freed 9 thread-local buffer(s) from thread: nioEventLoopGroup-687-2\r\n18:01:41.339 [nioEventLoopGroup-687-3] DEBUG io.netty.buffer.PoolThreadCache - Freed 161 thread-local buffer(s) from thread: nioEventLoopGroup-687-3\r\n18:01:41.399 [main] DEBUG i.n.h.s.u.InsecureTrustManagerFactory - Accepting a server certificate: CN=example.com\r\n18:01:41.426 [nioEventLoopGroup-702-1] DEBUG io.netty.handler.ssl.SslHandler - SSLException during trying to call SSLEngine.wrap(...) because of an previous SSLException, ignoring...\r\njavax.net.ssl.SSLHandshakeException: SSL handshake aborted: ssl=0x7f129800be38: Failure in SSL library, usually a protocol error\r\nerror:10000416:SSL routines:OPENSSL_internal:SSLV3_ALERT_CERTIFICATE_UNKNOWN (../ssl/tls_record.cc:586 0x7f1298870be8:0x00000001)\r\n\tat org.conscrypt.SSLUtils.toSSLHandshakeException(SSLUtils.java:331)\r\n\tat org.conscrypt.ConscryptEngine.handshake(ConscryptEngine.java:1013)\r\n\tat org.conscrypt.ConscryptEngine.wrap(ConscryptEngine.java:1427)\r\n\tat java.base/javax.net.ssl.SSLEngine.wrap(SSLEngine.java:511)\r\n\tat org.conscrypt.Java8EngineWrapper.wrap(Java8EngineWrapper.java:56)\r\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:997)\r\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:803)\r\n\tat io.netty.handler.ssl.SslHandler.wrapAndFlush(SslHandler.java:771)\r\n\tat io.netty.handler.ssl.SslHandler.handleUnwrapThrowable(SslHandler.java:1207)\r\n\tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1183)\r\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1221)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:544)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:844)\r\nCaused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x7f129800be38: Failure in SSL library, usually a protocol error\r\nerror:10000416:SSL routines:OPENSSL_internal:SSLV3_ALERT_CERTIFICATE_UNKNOWN (../ssl/tls_record.cc:586 0x7f1298870be8:0x00000001)\r\n\tat org.conscrypt.NativeCrypto.ENGINE_SSL_do_handshake(Native Method)\r\n\tat org.conscrypt.NativeSsl.doHandshake(NativeSsl.java:391)\r\n\tat org.conscrypt.ConscryptEngine.handshake(ConscryptEngine.java:978)\r\n\t... 27 common frames omitted\r\n18:01:41.432 [nioEventLoopGroup-701-1] DEBUG io.netty.buffer.PoolThreadCache - Freed 6 thread-local buffer(s) from thread: nioEventLoopGroup-701-1\r\n18:01:41.439 [nioEventLoopGroup-702-1] DEBUG io.netty.buffer.PoolThreadCache - Freed 8 thread-local buffer(s) from thread: nioEventLoopGroup-702-1\r\n18:01:41.563 [main] DEBUG i.n.h.s.u.InsecureTrustManagerFactory - Accepting a server certificate: CN=example.com\r\n18:01:41.691 [nioEventLoopGroup-704-1] DEBUG io.netty.handler.ssl.SslHandler - [id: 0xaea8b212, L:/127.0.0.1:34256 - R:/127.0.0.1:60070] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n18:01:41.692 [nioEventLoopGroup-705-1] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x045d2f89, L:/127.0.0.1:60070 - R:localhost/127.0.0.1:34256] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n18:01:41.697 [nioEventLoopGroup-705-1] WARN  i.n.c.AbstractChannelHandlerContext - Failed to mark a promise as failure because it has succeeded already: DefaultChannelPromise@80355a8(success)\r\njavax.net.ssl.SSLException: java.lang.NullPointerException: bio == null\r\n\tat org.conscrypt.SSLUtils.toSSLException(SSLUtils.java:341)\r\n\tat org.conscrypt.ConscryptEngine.convertException(ConscryptEngine.java:1151)\r\n\tat org.conscrypt.ConscryptEngine.readPendingBytesFromBIO(ConscryptEngine.java:1267)\r\n\tat org.conscrypt.ConscryptEngine.wrap(ConscryptEngine.java:1411)\r\n\tat java.base/javax.net.ssl.SSLEngine.wrap(SSLEngine.java:511)\r\n\tat org.conscrypt.Java8EngineWrapper.wrap(Java8EngineWrapper.java:56)\r\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:997)\r\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:803)\r\n\tat io.netty.handler.ssl.SslHandler.wrapAndFlush(SslHandler.java:771)\r\n\tat io.netty.handler.ssl.SslHandler.flush(SslHandler.java:752)\r\n\tat io.netty.handler.ssl.SslHandler.flush(SslHandler.java:1625)\r\n\tat io.netty.handler.ssl.SslHandler.closeOutboundAndChannel(SslHandler.java:1593)\r\n\tat io.netty.handler.ssl.SslHandler.close(SslHandler.java:710)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeClose(AbstractChannelHandlerContext.java:624)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.access$1100(AbstractChannelHandlerContext.java:38)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$13.run(AbstractChannelHandlerContext.java:613)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:844)\r\nCaused by: java.lang.NullPointerException: bio == null\r\n\tat org.conscrypt.NativeCrypto.SSL_pending_written_bytes_in_BIO(Native Method)\r\n\tat org.conscrypt.NativeSsl$BioWrapper.getPendingWrittenBytes(NativeSsl.java:571)\r\n\tat org.conscrypt.ConscryptEngine.pendingOutboundEncryptedBytes(ConscryptEngine.java:553)\r\n\tat org.conscrypt.ConscryptEngine.readPendingBytesFromBIO(ConscryptEngine.java:1236)\r\n\t... 19 common frames omitted\r\n18:01:41.749 [nioEventLoopGroup-704-1] DEBUG io.netty.buffer.PoolThreadCache - Freed 8 thread-local buffer(s) from thread: nioEventLoopGroup-704-1\r\n18:01:41.771 [nioEventLoopGroup-705-1] DEBUG io.netty.buffer.PoolThreadCache - Freed 11 thread-local buffer(s) from thread: nioEventLoopGroup-705-1\r\n```\r\n\r\nMost interesting is this:\r\n\r\n```\r\njavax.net.ssl.SSLException: java.lang.NullPointerException: bio == null\r\n\tat org.conscrypt.SSLUtils.toSSLException(SSLUtils.java:341)\r\n\tat org.conscrypt.ConscryptEngine.convertException(ConscryptEngine.java:1151)\r\n\tat org.conscrypt.ConscryptEngine.readPendingBytesFromBIO(ConscryptEngine.java:1267)\r\n\tat org.conscrypt.ConscryptEngine.wrap(ConscryptEngine.java:1411)\r\n\tat java.base/javax.net.ssl.SSLEngine.wrap(SSLEngine.java:511)\r\n\tat org.conscrypt.Java8EngineWrapper.wrap(Java8EngineWrapper.java:56)\r\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:997)\r\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:803)\r\n\tat io.netty.handler.ssl.SslHandler.wrapAndFlush(SslHandler.java:771)\r\n\tat io.netty.handler.ssl.SslHandler.flush(SslHandler.java:752)\r\n\tat io.netty.handler.ssl.SslHandler.flush(SslHandler.java:1625)\r\n\tat io.netty.handler.ssl.SslHandler.closeOutboundAndChannel(SslHandler.java:1593)\r\n\tat io.netty.handler.ssl.SslHandler.close(SslHandler.java:710)\r\n\tat \r\n```\r\n\r\nI wonder if this is just a bug in conscrypt ?","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7983","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7983/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7983/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7983/events","html_url":"https://github.com/netty/netty/issues/7983","id":327334591,"node_id":"MDU6SXNzdWUzMjczMzQ1OTE=","number":7983,"title":"Application crashing with memory leaks","user":{"login":"hiteshkotian","id":5600114,"node_id":"MDQ6VXNlcjU2MDAxMTQ=","avatar_url":"https://avatars3.githubusercontent.com/u/5600114?v=4","gravatar_id":"","url":"https://api.github.com/users/hiteshkotian","html_url":"https://github.com/hiteshkotian","followers_url":"https://api.github.com/users/hiteshkotian/followers","following_url":"https://api.github.com/users/hiteshkotian/following{/other_user}","gists_url":"https://api.github.com/users/hiteshkotian/gists{/gist_id}","starred_url":"https://api.github.com/users/hiteshkotian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hiteshkotian/subscriptions","organizations_url":"https://api.github.com/users/hiteshkotian/orgs","repos_url":"https://api.github.com/users/hiteshkotian/repos","events_url":"https://api.github.com/users/hiteshkotian/events{/privacy}","received_events_url":"https://api.github.com/users/hiteshkotian/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-05-29T14:01:27Z","updated_at":"2018-06-01T18:45:04Z","closed_at":"2018-06-01T11:48:14Z","author_association":"NONE","body":"### Actual behavior\r\nI have an application that I built with netty version 4.0.40.Final. The application seems to be crashing every hour and when I analyzed the dump file, it looks like most of the leaks are happening because of \"io.netty.util.concurrent.SingleThreadEventExecutor\". Can someone please help me out with this?\r\n\r\n### Netty version\r\n4.0.40.Final \r\n\r\n### JVM version (e.g. `java -version`)\r\nIBM Java 1.8\r\n\r\n### OS version (e.g. `uname -a`)\r\nWindows Server 2012  R2","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7982","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7982/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7982/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7982/events","html_url":"https://github.com/netty/netty/issues/7982","id":327193281,"node_id":"MDU6SXNzdWUzMjcxOTMyODE=","number":7982,"title":"use  FixedChannelPool get channel happen BlockingOperationException","user":{"login":"mazijun104","id":30112897,"node_id":"MDQ6VXNlcjMwMTEyODk3","avatar_url":"https://avatars3.githubusercontent.com/u/30112897?v=4","gravatar_id":"","url":"https://api.github.com/users/mazijun104","html_url":"https://github.com/mazijun104","followers_url":"https://api.github.com/users/mazijun104/followers","following_url":"https://api.github.com/users/mazijun104/following{/other_user}","gists_url":"https://api.github.com/users/mazijun104/gists{/gist_id}","starred_url":"https://api.github.com/users/mazijun104/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mazijun104/subscriptions","organizations_url":"https://api.github.com/users/mazijun104/orgs","repos_url":"https://api.github.com/users/mazijun104/repos","events_url":"https://api.github.com/users/mazijun104/events{/privacy}","received_events_url":"https://api.github.com/users/mazijun104/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-05-29T07:04:46Z","updated_at":"2018-06-05T08:04:29Z","closed_at":"2018-05-29T18:25:31Z","author_association":"NONE","body":"Exception:\r\n\r\nio.netty.util.concurrent.BlockingOperationException: DefaultPromise@329e2ef8(incomplete)\r\n\tat io.netty.util.concurrent.DefaultPromise.checkDeadLock(DefaultPromise.java:391) ~[nett
8000
y-all-4.1.19.Final.jar:4.1.19.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.await0(DefaultPromise.java:587) ~[netty-all-4.1.19.Final.jar:4.1.19.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.await(DefaultPromise.java:273) ~[netty-all-4.1.19.Final.jar:4.1.19.Final]\r\n\tat io.netty.util.concurrent.AbstractFuture.get(AbstractFuture.java:46) ~[netty-all-4.1.19.Final.jar:4.1.19.Final]\r\n\r\n\r\ncode:\r\n\r\n poolMap = new AbstractChannelPoolMap<InetSocketAddress, SimpleChannelPool>() {\r\n                @Override\r\n                protected SimpleChannelPool newPool(InetSocketAddress key) {\r\n                    return new FixedChannelPool(SingleBootstrap.bootstrap.remoteAddress(key), new UkPoolHandler(), UK_CONNECT_NUM);\r\n                }\r\n            };\r\n\r\nprotected Channel getChannel(ChannelPoolMap<InetSocketAddress, SimpleChannelPool> poolMap, InetSocketAddress address) {\r\n\t\tpool = poolMap.get(address);\r\n\t\tFuture<Channel> future = pool.acquire();\r\n\t\ttry {\r\n\t\t\tChannel channel = future.get(ClientConstants.GET_CONN_TIMEOUT, TimeUnit.MILLISECONDS);\r\n\t\t\tif (channel == null || !channel.isActive()) {\r\n\t\t\t\tThread.sleep(ClientConstants.RETRY_SPLIT_TIME);\r\n\t\t\t\treturn getChannel(poolMap, address);\r\n\t\t\t}\r\n\t\t\tconnected = true;\r\n\t\t\treturn channel;\r\n\t\t} catch (Exception e) {\r\n\t\t\tlogger.error(\"获取channel异常\", e);\r\n\t\t}\r\n\t\treturn null;\r\n\t}","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7978","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7978/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7978/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7978/events","html_url":"https://github.com/netty/netty/issues/7978","id":326948166,"node_id":"MDU6SXNzdWUzMjY5NDgxNjY=","number":7978,"title":"exceptioncaught closing 1 channel will effect other channels when a client connects multiple servers","user":{"login":"tommwang","id":39110729,"node_id":"MDQ6VXNlcjM5MTEwNzI5","avatar_url":"https://avatars0.githubusercontent.com/u/39110729?v=4","gravatar_id":"","url":"https://api.github.com/users/tommwang","html_url":"https://github.com/tommwang","followers_url":"https://api.github.com/users/tommwang/followers","following_url":"https://api.github.com/users/tommwang/following{/other_user}","gists_url":"https://api.github.com/users/tommwang/gists{/gist_id}","starred_url":"https://api.github.com/users/tommwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tommwang/subscriptions","organizations_url":"https://api.github.com/users/tommwang/orgs","repos_url":"https://api.github.com/users/tommwang/repos","events_url":"https://api.github.com/users/tommwang/events{/privacy}","received_events_url":"https://api.github.com/users/tommwang/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-05-28T08:49:40Z","updated_at":"2018-06-01T10:06:54Z","closed_at":"2018-06-01T09:45:19Z","author_association":"NONE","body":"### Expected behavior \r\nonly current channel be closed when exceptioncaught\r\n### Actual behavior\r\nothers channel lost but checking isactive is true\r\n### Steps to reproduce\r\nthere is a client, connecting to multiple servers with different IP and same port. when 1 channel has Exception, handler will go into exceptioncaught method, ctx.close(). then current channel will be closed. that is correct. but other channel cannot send or receive data anymore. if you check isactive, showing true.\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\n### Netty version\r\n 5.0.0.apha 2\r\n### JVM version (e.g. `java -version`)\r\n 1.8\r\n### OS version (e.g. `uname -a`)\r\nubatu","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7973","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7973/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7973/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7973/events","html_url":"https://github.com/netty/netty/issues/7973","id":326705108,"node_id":"MDU6SXNzdWUzMjY3MDUxMDg=","number":7973,"title":"WebsocketClientHandshaker can fail if multiple X-Websocket-Key headers are present on the upgrade request","user":{"login":"nicktrav","id":804457,"node_id":"MDQ6VXNlcjgwNDQ1Nw==","avatar_url":"https://avatars1.githubusercontent.com/u/804457?v=4","gravatar_id":"","url":"https://api.github.com/users/nicktrav","html_url":"https://github.com/nicktrav","followers_url":"https://api.github.com/users/nicktrav/followers","following_url":"https://api.github.com/users/nicktrav/following{/other_user}","gists_url":"https://api.github.com/users/nicktrav/gists{/gist_id}","starred_url":"https://api.github.com/users/nicktrav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicktrav/subscriptions","organizations_url":"https://api.github.com/users/nicktrav/orgs","repos_url":"https://api.github.com/users/nicktrav/repos","events_url":"https://api.github.com/users/nicktrav/events{/privacy}","received_events_url":"https://api.github.com/users/nicktrav/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/188","html_url":"https://github.com/netty/netty/milestone/188","labels_url":"https://api.github.com/repos/netty/netty/milestones/188/labels","id":3343291,"node_id":"MDk6TWlsZXN0b25lMzM0MzI5MQ==","number":188,"title":"4.1.26.Final","description":"","creator":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":51,"closed_issues":53,"state":"open","created_at":"2018-05-14T07:38:31Z","updated_at":"2018-06-08T18:26:19Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2018-05-26T03:10:45Z","updated_at":"2018-05-30T17:53:19Z","closed_at":"2018-05-30T17:52:41Z","author_association":"CONTRIBUTOR","body":"### Expected behavior\r\n\r\nA websockets handshake should not fail if a `X-Websockets-Key` header exists in the custom headers passed to the handshaker.\r\n\r\n### Actual behavior\r\n\r\nThe handshake fails if the server picks the incorrect key on which to compute its challenge response (as opposed to the key that is set by the `WebsocketsClientHandshaker`).\r\n\r\n### Steps to reproduce\r\n\r\nUse the `WebsocketsClientHandshaker` to send a request to a websockets server along with passing custom headers that also contain an `X-Websockets-Key` header.\r\n\r\nIf the server happens to pick the _last_ `X-Websockets-Key` in the request headers on which to compute the `X-Websockets-Accept` value, the client handshake will fail with the following, as the `X-Websockets-Accept` value it expects was calculated on the _first_ `X-Websockets-Key`:\r\n\r\n```\r\n20:04:35.727 [nioEventLoopGroup-3-1] WARN  i.n.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\nio.netty.handler.codec.http.websocketx.WebSocketHandshakeException: Invalid challenge. Actual: w7cyq/iodDhF6MfTw9LCsDqUyBQ=. Expected: +RND8EYF2d5MkuthghnnAyg9DN0=\r\n\tat io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13.verify(WebSocketClientHandshaker13.java:223)\r\n\tat io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker.finishHandshake(WebSocketClientHandshaker.java:216)\r\n\tat io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler.channelRead(WebSocketClientProtocolHandshakeHandler.java:57)\r\n... snip ...\r\n```\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\nReproducer [here](https://github.com/nicktrav/netty/commit/219d1dd5c00a2d2d92ef8224392f88a2a386668c).\r\n\r\n### Netty version\r\n\r\nHEAD of 4.1 branch, as of 8a8576150.\r\n\r\n### JVM version (e.g. `java -version`)\r\n\r\n```\r\n$ java -version\r\njava version \"1.8.0_162\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_162-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode)\r\n```\r\n\r\n### OS version (e.g. `uname -a`)\r\n\r\n```\r\n$ uname -a\r\nDarwin nickt.local 17.3.0 Darwin Kernel Version 17.3.0: Thu Nov  9 18:09:22 PST 2017; root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n```","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7971","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7971/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7971/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7971/events","html_url":"https://github.com/netty/netty/issues/7971","id":326455595,"node_id":"MDU6SXNzdWUzMjY0NTU1OTU=","number":7971,"title":"How to implement utp protocol based on netty","user":{"login":"chongbo2013","id":3191545,"node_id":"MDQ6VXNlcjMxOTE1NDU=","avatar_url":"https://avatars0.githubusercontent.com/u/3191545?v=4","gravatar_id":"","url":"https://api.github.com/users/chongbo2013","html_url":"https://github.com/chongbo2013","followers_url":"https://api.github.com/users/chongbo2013/followers","following_url":"https://api.github.com/users/chongbo2013/following{/other_user}","gists_url":"https://api.github.com/users/chongbo2013/gists{/gist_id}","starred_url":"https://api.github.com/users/chongbo2013/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chongbo2013/subscriptions","organizations_url":"https://api.github.com/users/chongbo2013/orgs","repos_url":"https://api.github.com/users/chongbo2013/repos","events_url":"https://api.github.com/users/chongbo2013/events{/privacy}","received_events_url":"https://api.github.com/users/chongbo2013/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-25T09:50:36Z","updated_at":"2018-05-27T17:14:52Z","closed_at":"2018-05-27T17:14:52Z","author_association":"NONE","body":"please help me。thank u","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7970","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7970/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7970/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7970/events","html_url":"https://github.com/netty/netty/issues/7970","id":326328380,"node_id":"MDU6SXNzdWUzMjYzMjgzODA=","number":7970,"title":"NioEventLoop has too low MAX_SCHEDULED_DAYS","user":{"login":"carl-mastrangelo","id":8943572,"node_id":"MDQ6VXNlcjg5NDM1NzI=","avatar_url":"https://avatars0.githubusercontent.com/u/8943572?v=4","gravatar_id":"","url":"https://api.github.com/users/carl-mastrangelo","html_url":"https://github.com/carl-mastrangelo","followers_url":"https://api.github.com/users/carl-mastrangelo/followers","following_url":"https://api.github.com/users/carl-mastrangelo/following{/other_user}","gists_url":"https://api.github.com/users/carl-mastrangelo/gists{/gist_id}","starred_url":"https://api.github.com/users/carl-mastrangelo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carl-mastrangelo/subscriptions","organizations_url":"https://api.github.com/users/carl-mastrangelo/orgs","repos_url":"https://api.github.com/users/carl-mastrangelo/repos","events_url":"https://api.github.com/users/carl-mastrangelo/events{/privacy}","received_events_url":"https://api.github.com/users/carl-mastrangelo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-24T23:12:52Z","updated_at":"2018-05-30T09:11:43Z","closed_at":"2018-05-30T09:11:43Z","author_association":"MEMBER","body":"### Expected behavior\r\nCreate a scheduled task with some reasonable, arbitrary delay.\r\n\r\n### Actual behavior\r\n\r\n`NioEventLoop.validateScheduled`   throws an illegal argument exception when passing a delay of greater than 3 years. \r\n\r\n### Netty version\r\n4.1.25\r\n\r\nA user of gRPC noticed that when passing a really big deadline, the above exception was thrown.  The deadline in question was 100 years, which, while high, was previously allowed.   [EpollEventLoop](https://github.com/netty/netty/blob/4.1/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java) allows about 31 years, but this actually appears wrong.    The man page says the number of /nanoseconds/ must be less than 999999999, not the number of seconds, as implemented.\r\n\r\n\r\nI think a more reasonable number would be the Long.MAX_VALUE of nanos, which is about 292 years.  If the underlying poller can't support, I think clamping the value is right.   The ScheduledFuture can keep its deadline, there would just be a spurious wake up. \r\n\r\ncc: @ejona86 \r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7969","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7969/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7969/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7969/events","html_url":"https://github.com/netty/netty/issues/7969","id":326312556,"node_id":"MDU6SXNzdWUzMjYzMTI1NTY=","number":7969,"title":"Make Http2UnknownFrame extend Http2StreamFrame rather than Http2Frame","user":{"login":"Bennett-Lynch","id":11811448,"node_id":"MDQ6VXNlcjExODExNDQ4","avatar_url":"https://avatars2.githubusercontent.com/u/11811448?v=4","gravatar_id":"","url":"https://api.github.com/users/Bennett-Lynch","html_url":"https://github.com/Bennett-Lynch","followers_url":"https://api.github.com/users/Bennett-Lynch/followers","following_url":"https://api.github.com/users/Bennett-Lynch/following{/other_user}","gists_url":"https://api.github.com/users/Bennett-Lynch/gists{/gist_id}","starred_url":"https://api.github.com/users/Bennett-Lynch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bennett-Lynch/subscriptions","organizations_url":"https://api.github.com/users/Bennett-Lynch/orgs","repos_url":"https://api.github.com/users/Bennett-Lynch/repos","events_url":"https://api.github.com/users/Bennett-Lynch/events{/privacy}","received_events_url":"https://api.github.com/users/Bennett-Lynch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/188","html_url":"https://github.com/netty/netty/milestone/188","labels_url":"https://api.github.com/repos/netty/netty/milestones/188/labels","id":3343291,"node_id":"MDk6TWlsZXN0b25lMzM0MzI5MQ==","number":188,"title":"4.1.26.Final","description":"","creator":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":51,"closed_issues":53,"state":"open","created_at":"2018-05-14T07:38:31Z","updated_at":"2018-06-08T18:26:19Z","due_on":null,"closed_at":null},"comments":4,"created_at":"2018-05-24T22:02:57Z","updated_at":"2018-05-29T05:27:41Z","closed_at":"2018-05-29T05:27:41Z","author_association":"NONE","body":"This is a follow-up issue regarding: https://github.com/netty/netty/issues/7860\r\n\r\n### Expected behavior\r\n\r\nWriting an `Http2UnknownFrame` to a child channel will be written to the parent channel and underlying HTTP/2 connection via `Http2MultiplexCodec`.\r\n\r\nWhen `Http2MultiplexCodec` reads an `Http2UnknownFrame`, it will be propagated to the correct child channel.\r\n\r\n### Actual behavior\r\n\r\n`Http2MultiplexCodec` rejects the write since `Http2UnknownFrame` is not an `instanceof Http2StreamFrame`.\r\n\r\nhttps://github.com/netty/netty/blob/dfeb4b15b587bf5298555e969a01378853efab8f/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2MultiplexCodec.java#L1021-L1028\r\n\r\n`Http2MultiplexCodec` does not propagate reads to child channels since `Http2UnknownFrame` is not an `instanceof Http2StreamFrame`.\r\n\r\nhttps://github.com/netty/netty/blob/dfeb4b15b587bf5298555e969a01378853efab8f/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2MultiplexCodec.java#L219-L221\r\n\r\n### Proposal\r\n\r\n`Http2UnknownFrame` should extend `Http2StreamFrame`, rather than `Http2Frame`, as it already defines the two stream-related methods that the two interfaces differ in.\r\n\r\nShould it possibly declare an `isEndStream` method as well, similar to `Http2DataFrame`?","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7964","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7964/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7964/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7964/events","html_url":"https://github.com/netty/netty/issues/7964","id":325921291,"node_id":"MDU6SXNzdWUzMjU5MjEyOTE=","number":7964,"title":"DefaultHttpResponse does not implement equals and hashCode to cover response status","user":{"login":"ewie","id":737438,"node_id":"MDQ6VXNlcjczNzQzOA==","avatar_url":"https://avatars2.githubusercontent.com/u/737438?v=4","gravatar_id":"","url":"https://api.github.com/users/ewie","html_url":"https://github.com/ewie","followers_url":"https://api.github.com/users/ewie/followers","following_url":"https://api.github.com/users/ewie/following{/other_user}","gists_url":"https://api.github.com/users/ewie/gists{/gist_id}","starred_url":"https://api.github.com/users/ewie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ewie/subscriptions","organizations_url":"https://api.github.com/users/ewie/orgs","repos_url":"https://api.github.com/users/ewie/repos","events_url":"https://api.github.com/users/ewie/events{/privacy}","received_events_url":"https://api.github.com/users/ewie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/188","html_url":"https://github.com/netty/netty/milestone/188","labels_url":"https://api.github.com/repos/netty/netty/milestones/188/labels","id":3343291,"node_id":"MDk6TWlsZXN0b25lMzM0MzI5MQ==","number":188,"title":"4.1.26.Final","description":"","creator":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":51,"closed_issues":53,"state":"open","created_at":"2018-05-14T07:38:31Z","updated_at":"2018-06-08T18:26:19Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2018-05-24T00:25:56Z","updated_at":"2018-05-24T18:13:46Z","closed_at":"2018-05-24T18:13:22Z","author_association":"NONE","body":"### Expected behavior\r\nTwo DefaultHttpResponse instances with different response status should not be considered equal. Headers and HTTP version are already covered in DefaultHttpMessage. DefaultFullHttpResponse also covers content and trailing headers. I would assume the response status is considered as well.\r\n\r\n### Actual behavior\r\nResponse status is ignored by equals and hashCode. DefaultHttpResponse does not override those methods.\r\n\r\n### Steps to reproduce\r\nRun example below.\r\n\r\n### Minimal yet complete reproducer code\r\n```java\r\nimport io.netty.handler.codec.http.DefaultHttpResponse;\r\nimport io.netty.handler.codec.http.HttpResponseStatus;\r\nimport io.netty.handler.codec.http.HttpVersion;\r\n\r\nclass ResponseStatusEquality\r\n{\r\n  public static void main(String... args)\r\n  {\r\n    var ok = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK);\r\n    var notFound = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.NOT_FOUND);\r\n    if (ok.equals(notFound)) {\r\n      throw new AssertionError(); // should not throw!\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Netty version\r\n4.1.25.Final\r\n\r\n### JVM version (e.g. `java -version`)\r\nopenjdk version \"10.0.1\" 2018-04-17\r\nOpenJDK Runtime Environment (build 10.0.1+10)\r\nOpenJDK 64-Bit Server VM (build 10.0.1+10, mixed mode)\r\n\r\n### OS version (e.g. `uname -a`)\r\nLinux 4.16.10","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7963","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7963/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7963/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7963/events","html_url":"https://github.com/netty/netty/issues/7963","id":325816272,"node_id":"MDU6SXNzdWUzMjU4MTYyNzI=","number":7963,"title":"Http2MultiplexCodec.handlerRemoved() throws Exception on Channel#close()","user":{"login":"Bennett-Lynch","id":11811448,"node_id":"MDQ6VXNlcjExODExNDQ4","avatar_url":"https://avatars2.githubusercontent.com/u/11811448?v=4","gravatar_id":"","url":"https://api.github.com/users/Bennett-Lynch","html_url":"https://github.com/Bennett-Lynch","followers_url":"https://api.github.com/users/Bennett-Lynch/followers","following_url":"https://api.github.com/users/Bennett-Lynch/following{/other_user}","gists_url":"https://api.github.com/users/Bennett-Lynch/gists{/gist_id}","starred_url":"https://api.github.com/users/Bennett-Lynch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bennett-Lynch/subscriptions","organizations_url":"https://api.github.com/users/Bennett-Lynch/orgs","repos_url":"https://api.github.com/users/Bennett-Lynch/repos","events_url":"https://api.github.com/users/Bennett-Lynch/events{/privacy}","received_events_url":"https://api.github.com/users/Bennett-Lynch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/187","html_url":"https://github.com/netty/netty/milestone/187","labels_url":"https://api.github.com/repos/netty/netty/milestones/187/labels","id":3280974,"node_id":"MDk6TWlsZXN0b25lMzI4MDk3NA==","number":187,"title":"4.1.25.Final","description":"","creator":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":43,"state":"closed","created_at":"2018-04-19T13:10:45Z","updated_at":"2018-05-24T13:16:21Z","due_on":null,"closed_at":"2018-05-14T12:11:58Z"},"comments":4,"created_at":"2018-05-23T18:07:47Z","updated_at":"2018-05-23T18:27:48Z","closed_at":"2018-05-23T18:20:05Z","author_association":"NONE","body":"_Let me preface this by saying that I'm not convinced this is a bug with Netty and I might be doing something wrong based on my understanding of how to close channels with `Http2MultiplexCodec`._\r\n\r\n### Expected behavior\r\n\r\nClosing a channel with Http2MultiplexCodec and all idle streams should not throw an exception.\r\n\r\n### Actual behavior\r\n\r\nClosing a channel with Http2MultiplexCodec and all idle streams results in the following:\r\n\r\n```\r\nio.netty.util.IllegalReferenceCountException: refCnt: 0, increment: 1\r\n\tat io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:100)\r\n\tat io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:84)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:273)\r\n\tat io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:359)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\t...\r\n```\r\n\r\n```\r\nio.netty.util.IllegalReferenceCountException: refCnt: 0, increment: 1\r\n\tat io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:100)\r\n\tat io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:84)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:367)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:342)\r\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler.channelInactive(Http2ConnectionHandler.java:427)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)\r\n\t...\r\n```\r\n\r\n```\r\nMay 23, 2018 10:47:02 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\nio.netty.channel.ChannelPipelineException: io.netty.handler.codec.http2.Http2MultiplexCodec.handlerRemoved() has thrown an exception.\r\n\tat io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:676)\r\n\tat io.netty.channel.DefaultChannelPipeline.destroyDown(DefaultChannelPipeline.java:922)\r\n\tat io.netty.channel.DefaultChannelPipeline.destroyUp(DefaultChannelPipeline.java:888)\r\n\tat io.netty.channel.DefaultChannelPipeline.destroy(DefaultChannelPipeline.java:880)\r\n\tat io.netty.channel.DefaultChannelPipeline.access$700(DefaultChannelPipeline.java:46)\r\n\t...\r\n```\r\n\r\nThis appears to be thrown from the following:\r\n\r\nhttps://github.com/netty/netty/blob/1df5b02fd95bf77683b20de87556f5b20cd75979/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java#L284-L289\r\n\r\n### Steps to reproduce\r\n\r\n* Create a client/server using `Http2MultiplexCodecBuilder`\r\n* For the sake of simplicity, use a `Http2StreamFrameToHttpObjectCodec` and `HttpObjectAggregator` in the child channel pipeline\r\n* Initiate a connection, await the `Http2ConnectionPrefaceAndSettingsFrameWrittenEvent`, open a new child channel with `Http2StreamChannelBootstrap`, and write a trivial `FullHttpRequest` to the child channel\r\n* Await the server's `FullHttpResponse`\r\n* Close the channel on the client side\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\nApologies, but none.  No working client/server `Http2MultiplexCodec` in the repository examples to work with.\r\n\r\n### Netty version\r\n\r\n4.1.24.Final\r\n\r\n### JVM version (e.g. `java -version`)\r\n\r\njava version \"1.8.0_112\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_112-b15)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.112-b15, mixed mode)\r\n\r\n### OS version (e.g. `uname -a`)\r\n\r\nLinux","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7962","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7962/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7962/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7962/events","html_url":"https://github.com/netty/netty/issues/7962","id":325648793,"node_id":"MDU6SXNzdWUzMjU2NDg3
8000
OTM=","number":7962,"title":"HttpClientCodec emits LastHttpContent if content-length=0","user":{"login":"buchgr","id":1388179,"node_id":"MDQ6VXNlcjEzODgxNzk=","avatar_url":"https://avatars0.githubusercontent.com/u/1388179?v=4","gravatar_id":"","url":"https://api.github.com/users/buchgr","html_url":"https://github.com/buchgr","followers_url":"https://api.github.com/users/buchgr/followers","following_url":"https://api.github.com/users/buchgr/following{/other_user}","gists_url":"https://api.github.com/users/buchgr/gists{/gist_id}","starred_url":"https://api.github.com/users/buchgr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/buchgr/subscriptions","organizations_url":"https://api.github.com/users/buchgr/orgs","repos_url":"https://api.github.com/users/buchgr/repos","events_url":"https://api.github.com/users/buchgr/events{/privacy}","received_events_url":"https://api.github.com/users/buchgr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-05-23T10:41:50Z","updated_at":"2018-05-24T15:19:46Z","closed_at":"2018-05-23T11:30:28Z","author_association":"CONTRIBUTOR","body":"The `HttpClientCodec` emits a `EmptyLastHttpContent` message if the HTTP/1.1 response is empty and a `Content-Length: 0` header being present: https://github.com/netty/netty/blob/4.1/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java#L255. In HTTP/1.1 I would expect `LastHttpContent` to only be emitted for chunked encoding. WDYT?","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7960","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7960/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7960/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7960/events","html_url":"https://github.com/netty/netty/issues/7960","id":325221152,"node_id":"MDU6SXNzdWUzMjUyMjExNTI=","number":7960,"title":"DTLS in Netty","user":{"login":"MarkVilkel","id":17745078,"node_id":"MDQ6VXNlcjE3NzQ1MDc4","avatar_url":"https://avatars0.githubusercontent.com/u/17745078?v=4","gravatar_id":"","url":"https://api.github.com/users/MarkVilkel","html_url":"https://github.com/MarkVilkel","followers_url":"https://api.github.com/users/MarkVilkel/followers","following_url":"https://api.github.com/users/MarkVilkel/following{/other_user}","gists_url":"https://api.github.com/users/MarkVilkel/gists{/gist_id}","starred_url":"https://api.github.com/users/MarkVilkel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarkVilkel/subscriptions","organizations_url":"https://api.github.com/users/MarkVilkel/orgs","repos_url":"https://api.github.com/users/MarkVilkel/repos","events_url":"https://api.github.com/users/MarkVilkel/events{/privacy}","received_events_url":"https://api.github.com/users/MarkVilkel/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-22T09:55:02Z","updated_at":"2018-05-22T18:40:18Z","closed_at":"2018-05-22T18:40:18Z","author_association":"NONE","body":"I'm using netty 4.1.25.\r\n\r\nIs it possible somehow to use the same io.netty.handler.ssl.SslHandler instance for NioDatagramChannel, having NioServerSocketChannel between the same client and the server?\r\n\r\nI mean the situation when a client app has secured connection with a server via NioServerSocketChannel. And then the same client decides to exchange messages with the same server via NioDatagramChannel, still having alive NioServerSocketChannel. Thus the client will have both channels active and secured.\r\n\r\nServer can close SslHandler when NioServerSocketChannel dies.\r\n\r\nOf course would be nice to have fully independent DTLS in netty.","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7959","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7959/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7959/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7959/events","html_url":"https://github.com/netty/netty/issues/7959","id":325069804,"node_id":"MDU6SXNzdWUzMjUwNjk4MDQ=","number":7959,"title":"JXRay: Reference Chains for Bad Primitive Arrays: big overhead from netty ","user":{"login":"Tagar","id":3013418,"node_id":"MDQ6VXNlcjMwMTM0MTg=","avatar_url":"https://avatars1.githubusercontent.com/u/3013418?v=4","gravatar_id":"","url":"https://api.github.com/users/Tagar","html_url":"https://github.com/Tagar","followers_url":"https://api.github.com/users/Tagar/followers","following_url":"https://api.github.com/users/Tagar/following{/other_user}","gists_url":"https://api.github.com/users/Tagar/gists{/gist_id}","starred_url":"https://api.github.com/users/Tagar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tagar/subscriptions","organizations_url":"https://api.github.com/users/Tagar/orgs","repos_url":"https://api.github.com/users/Tagar/repos","events_url":"https://api.github.com/users/Tagar/events{/privacy}","received_events_url":"https://api.github.com/users/Tagar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-21T21:44:48Z","updated_at":"2018-05-22T08:17:10Z","closed_at":"2018-05-22T08:17:10Z","author_association":"NONE","body":"We started looking at YARN NodeManager GC issues and most impact comes \r\naccording to http://www.jxray.com/ comes from netty with a huge portion of buffers being all zeros:\r\n\r\n\"The problem is that Netty has various buffers managed by netty. \r\nThey may be too big, so a big portion of them stays unused, containing only zeroes\"\r\n\r\n### Expected behavior\r\nAllocated buffers' sized accordingly to workload. \r\n\r\n### Actual behavior\r\n- A lot of memory overhead for the application.\r\n- Most of buffers are all-zeros.\r\n- Huge GC overhead.\r\n\r\n### Steps to reproduce\r\nHard to reproduce outside of a live Hadoop Yarn application, but we can provide java heap dump,\r\nor full jxray report.\r\n\r\n### Netty version\r\nnetty-3.10.6\r\n\r\n### JVM version (e.g. `java -version`)\r\n\r\n> $ java -version\r\n> java version \"1.8.0_152\"\r\n> Java(TM) SE Runtime Environment (build 1.8.0_152-b16)\r\n> Java HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)\r\n> \r\n\r\n### OS version (e.g. `uname -a`)\r\n\r\n> RHEL 7.4\r\n> Linux 3.10.0-693.11.6.el7.x86_64\r\n> \r\n\r\n![image](https://user-images.githubusercontent.com/3013418/40331513-df1e40a4-5d0d-11e8-935d-3240f49b2e19.png)\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7957","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7957/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7957/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7957/events","html_url":"https://github.com/netty/netty/issues/7957","id":324936542,"node_id":"MDU6SXNzdWUzMjQ5MzY1NDI=","number":7957,"title":"OpenSSL server has a lower throughput than JDK SSL with larger responses","user":{"login":"timyates","id":49317,"node_id":"MDQ6VXNlcjQ5MzE3","avatar_url":"https://avatars1.githubusercontent.com/u/49317?v=4","gravatar_id":"","url":"https://api.github.com/users/timyates","html_url":"https://github.com/timyates","followers_url":"https://api.github.com/users/timyates/followers","following_url":"https://api.github.com/users/timyates/following{/other_user}","gists_url":"https://api.github.com/users/timyates/gists{/gist_id}","starred_url":"https://api.github.com/users/timyates/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/timyates/subscriptions","organizations_url":"https://api.github.com/users/timyates/orgs","repos_url":"https://api.github.com/users/timyates/repos","events_url":"https://api.github.com/users/timyates/events{/privacy}","received_events_url":"https://api.github.com/users/timyates/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2018-05-21T14:28:01Z","updated_at":"2018-05-22T13:28:10Z","closed_at":"2018-05-22T13:28:10Z","author_association":"NONE","body":"### Expected behavior\r\n\r\nI expected the native OpenSSL provider to be faster than the JDK provider, no matter what the size of the response payload is.\r\n\r\n### Actual behavior\r\n\r\nA Netty server using the JDK SSL provider is faster for any payload (I have tested 1MB up, and see the same results)\r\n\r\nThe results below are from running on an `i3.xlarge` EC2 box running `Amazon Linux AMI 2018.03.0`, but I have seen reproducible similar behaviour running on both Alpine Linux, and Os X 10.13.4.\r\n\r\nOpenSSL on this EC2 box has the version:\r\n\r\n```\r\n$ openssl version\r\nOpenSSL 1.0.2k-fips  26 Jan 2017\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nI have linked to a project that reproduces the problem reliably for me, running the `runProfiling.sh` script executes 6 tests.\r\n\r\n1. empty response (OpenSSL)\r\n2. empty response (JDK SSL)\r\n3. 5MB response (OpenSSL)\r\n4. 5MB response (JDK SSL)\r\n5. 20MB response (OpenSSL)\r\n6. 20MB response (JDK SSL)\r\n\r\nThe results for these tests (a full run takes around 60 mins) are then available in `build/jmeter-report`.\r\n\r\n#### Empty Response\r\n\r\nThe empty test results are as expected;\r\n\r\nOpenSSL\r\n![image](https://user-images.githubusercontent.com/49317/40312057-ab3144de-5d09-11e8-9178-744bdff5087a.png)\r\nJDK\r\n![image](https://user-images.githubusercontent.com/49317/40312076-b76539ea-5d09-11e8-83b8-089375c92d8c.png)\r\n\r\n#### 5MB Response\r\n\r\nThe JDK SSL version gives a higher throughput than OpenSSL which is unexpected...\r\n\r\nOpenSSL\r\n![image](https://user-images.githubusercontent.com/49317/40312152-eb5c7ce0-5d09-11e8-9ccd-d5d3584c05bc.png)\r\nJDK\r\n![image](https://user-images.githubusercontent.com/49317/40312175-f72a4840-5d09-11e8-80b0-a752b701ca6a.png)\r\n\r\n#### 20MB response\r\n\r\nAgain, the JDK SSL version has a higher throughput\r\n\r\nOpenSSL\r\n![image](https://user-images.githubusercontent.com/49317/40312246-35bcf580-5d0a-11e8-862d-79c5a42189b8.png)\r\nJDK\r\n![image](https://user-images.githubusercontent.com/49317/40312252-3fa3f954-5d0a-11e8-9325-79a5c0a79071.png)\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\nhttps://github.com/timyates/netty-openssl-perf-test\r\n\r\nRun `./runProfiling.sh` and wait (around an hour) for the 6 tests to generate jMeter dashboards.\r\n\r\n### Netty version\r\n\r\n```\r\n4.1.25.Final\r\n```\r\n\r\nand\r\n\r\n```\r\nio.netty:netty-tcnative-boringssl-static:2.0.8.Final\r\n```\r\n\r\n### JVM version (e.g. `java -version`)\r\n\r\n```\r\nopenjdk version \"1.8.0_171\"\r\nOpenJDK Runtime Environment (build 1.8.0_171-b10)\r\nOpenJDK 64-Bit Server VM (build 25.171-b10, mixed mode)\r\n```\r\n\r\n### OS version (e.g. `uname -a`)\r\n\r\n```\r\nLinux ip-172-31-12-49 4.14.26-46.32.amzn1.x86_64 #1 SMP Fri Mar 30 22:29:54 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n```","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7954","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7954/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7954/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7954/events","html_url":"https://github.com/netty/netty/issues/7954","id":324513465,"node_id":"MDU6SXNzdWUzMjQ1MTM0NjU=","number":7954,"title":"PongWebSocketFrames are inaccessible in handlers downstream of a WebSocketClientProtocolHandler","user":{"login":"nicktrav","id":804457,"node_id":"MDQ6VXNlcjgwNDQ1Nw==","avatar_url":"https://avatars1.githubusercontent.com/u/804457?v=4","gravatar_id":"","url":"https://api.github.com/users/nicktrav","html_url":"https://github.com/nicktrav","followers_url":"https://api.github.com/users/nicktrav/followers","following_url":"https://api.github.com/users/nicktrav/following{/other_user}","gists_url":"https://api.github.com/users/nicktrav/gists{/gist_id}","starred_url":"https://api.github.com/users/nicktrav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicktrav/subscriptions","organizations_url":"https://api.github.com/users/nicktrav/orgs","repos_url":"https://api.github.com/users/nicktrav/repos","events_url":"https://api.github.com/users/nicktrav/events{/privacy}","received_events_url":"https://api.github.com/users/nicktrav/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/188","html_url":"https://github.com/netty/netty/milestone/188","labels_url":"https://api.github.com/repos/netty/netty/milestones/188/labels","id":3343291,"node_id":"MDk6TWlsZXN0b25lMzM0MzI5MQ==","number":188,"title":"4.1.26.Final","description":"","creator":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":51,"closed_issues":53,"state":"open","created_at":"2018-05-14T07:38:31Z","updated_at":"2018-06-08T18:26:19Z","due_on":null,"closed_at":null},"comments":6,"created_at":"2018-05-18T18:42:56Z","updated_at":"2018-05-24T18:28:02Z","closed_at":"2018-05-24T18:27:30Z","author_association":"CONTRIBUTOR","body":"This is probably more of a question / request rather than a bug, as it looks like this was a deliberate decision ([source](https://github.com/netty/netty/blob/netty-4.1.25.Final/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketProtocolHandler.java#L32-L35)).\r\n\r\nThe use-case is a handler being able to assert that a pong frame was received from a Netty-based proxy server.\r\n\r\n### Expected behavior\r\n\r\n`PongWebSocketFrame`s are visible to a channel handler installed _downstream_ of a `WebSocketClientProtocolHandler`.\r\n\r\n### Actual behavior\r\n\r\nSending a `PingWebSocketFrame` from a client to a server results in receipt of a `PongWebSocketFrame` by the client in the `WebSocketClientProtocolHandler`, but this frame is not propagated further along the channel pipeline.\r\n\r\n### Steps to reproduce\r\n\r\nI've pushed a commit [here](https://github.com/nicktrav/netty/commit/4cae21eb36fe873d24073e730cbda9bb1994741b) which demonstrates the issue.\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\nCheck out commit and run:\r\n```bash\r\n$ mvn test -pl codec-http -Dtest=io.netty.handler.codec.http.websocketx.PongFrameIgnoreTest\r\n```\r\n\r\n### Netty version\r\n\r\n`4.1.25.Final`. Also run against `HEAD` of `4.1` branch @ 987c44388.\r\n\r\n### JVM version (e.g. `java -version`)\r\n\r\n```bash\r\n$ java -version\r\njava version \"10.0.1\" 2018-04-17\r\nJava(TM) SE Runtime Environment 18.3 (build 10.0.1+10)\r\nJava HotSpot(TM) 64-Bit Server VM 18.3 (build 10.0.1+10, mixed mode)\r\n```\r\n\r\n### OS version (e.g. `uname -a`)\r\n\r\n```bash\r\n$ uname -a\r\nDarwin nickt.local 17.3.0 Darwin Kernel Version 17.3.0: Thu Nov  9 18:09:22 PST 2017; root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7947","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7947/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7947/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7947/events","html_url":"https://github.com/netty/netty/issues/7947","id":323723051,"node_id":"MDU6SXNzdWUzMjM3MjMwNTE=","number":7947,"title":"No way to get a Http2StreamChannel for a client h2c upgrade stream via Http2MultiplexCodec","user":{"login":"bryce-anderson","id":2948506,"node_id":"MDQ6VXNlcjI5NDg1MDY=","avatar_url":"https://avatars2.githubusercontent.com/u/2948506?v=4","gravatar_id":"","url":"https://api.github.com/users/bryce-anderson","html_url":"https://github.com/bryce-anderson","followers_url":"https://api.github.com/users/bryce-anderson/followers","following_url":"https://api.github.com/users/bryce-anderson/following{/other_user}","gists_url":"https://api.github.com/users/bryce-anderson/gists{/gist_id}","starred_url":"https://api.github.com/users/bryce-anderson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bryce-anderson/subscriptions","organizations_url":"https://api.github.com/users/bryce-anderson/orgs","repos_url":"https://api.github.com/users/bryce-anderson/repos","events_url":"https://api.github.com/users/bryce-anderson/events{/privacy}","received_events_url":"https://api.github.com/users/bryce-anderson/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"bryce-anderson","id":2948506,"node_id":"MDQ6VXNlcjI5NDg1MDY=","avatar_url":"https://avatars2.githubusercontent.com/u/2948506?v=4","gravatar_id":"","url":"https://api.github.com/users/bryce-anderson","html_url":"https://github.com/bryce-anderson","followers_url":"https://api.github.com/users/bryce-anderson/followers","following_url":"https://api.github.com/users/bryce-anderson/following{/other_user}","gists_url":"https://api.github.com/users/bryce-anderson/gists{/gist_id}","starred_url":"https://api.github.com/users/bryce-anderson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bryce-anderson/subscriptions","organizations_url":"https://api.github.com/users/bryce-anderson/orgs","repos_url":"https://api.github.com/users/bryce-anderson/repos","events_url":"https://api.github.com/users/bryce-anderson/events{/privacy}","received_events_url":"https://api.github.com/users/bryce-anderson/received_events","type":"User","site_admin":false},"assignees":[{"login":"bryce-anderson","id":2948506,"node_id":"MDQ6VXNlcjI5NDg1MDY=","avatar_url":"https://avatars2.githubusercontent.com/u/2948506?v=4","gravatar_id":"","url":"https://api.github.com/users/bryce-anderson","html_url":"https://github.com/bryce-anderson","followers_url":"https://api.github.com/users/bryce-anderson/followers","following_url":"https://api.github.com/users/bryce-anderson/following{/other_user}","gists_url":"https://api.github.com/users/bryce-anderson/gists{/gist_id}","starred_url":"https://api.github.com/users/bryce-anderson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bryce-anderson/subscriptions","organizations_url":"https://api.github.com/users/bryce-anderson/orgs","repos_url":"https://api.github.com/users/bryce-anderson/repos","events_url":"https://api.github.com/users/bryce-anderson/events{/privacy}","received_events_url":"https://api.github.com/users/bryce-anderson/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/188","html_url":"https://github.com/netty/netty/milestone/188","labels_url":"https://api.github.com/repos/netty/netty/milestones/188/labels","id":3343291,"node_id":"MDk6TWlsZXN0b25lMzM0MzI5MQ==","number":188,"title":"4.1.26.Final","description":"","creator":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":51,"closed_issues":53,"state":"open","created_at":"2018-05-14T07:38:31Z","updated_at":"2018-06-08T18:26:19Z","due_on":null,"closed_at":null},"comments":15,"created_at":"2018-05-16T17:50:08Z","updated_at":"2018-06-07T23:03:03Z","closed_at":"2018-06-07T23:01:41Z","author_association":"CONTRIBUTOR","body":"### Expected behavior\r\nWhen using the `Http2MultiplexCodec` on a client after a h2c upgrade is performed, I expect to be able to get a handle on the `Http2StreamChannel` associated with the upgrade request when using the `Http2MultiplexCodec`.\r\n\r\n### Actual behavior\r\nThere is no public API for surfacing a `Http2StreamChannel` that resulted from the client request.\r\n\r\n### Netty version\r\nBranch 4.1 (as of SHA 0bce0450c05697d)","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7944","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7944/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7944/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7944/events","html_url":"https://github.com/netty/netty/issues/7944","id":323490590,"node_id":"MDU6SXNzdWUzMjM0OTA1OTA=","number":7944,"title":"channelWritabilityChanged called multiple times","user":{"login":"scottsue","id":34334894,"node_id":"MDQ6VXNlcjM0MzM0ODk0","avatar_url":"https://avatars1.githubusercontent.com/u/34334894?v=4","gravatar_id":"","url":"https://api.github.com/users/scottsue","html_url":"https://github.com/scottsue","followers_url":"https://api.github.com/users/scottsue/followers","following_url":"https://api.github.com/users/scottsue/following{/other_user}","gists_url":"https://api.github.com/users/scottsue/gists{/gist_id}","starred_url":"https://api.github.com/users/scottsue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scottsue/subscriptions","organizations_url":"https://api.github.com/users/scottsue/orgs","repos_url":"https://api.github.com/users/scottsue/repos","events_url":"https://api.github.com/users/scottsue/events{/privacy}","received_events_url":"https://api.github.com/users/scottsue/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-05-16T06:56:02Z","updated_at":"2018-05-21T01:50:15Z","closed_at":"2018-05-21T01:50:14Z","author_association":"NONE","body":"### Expected behavior\r\nWhen we have slow consumers, the channelWritabilityChanged method will be called.  Upon inspecting the channel writable state, we can check to see if we are going into a writable -> non-writable (aka slow consumer), or non-writable -> writable (aka coming out of a slow consumer back into normal) state.  \r\n\r\n### Actual behavior\r\nWhat we're seeing is that netty sometimes calls the channelWritabilityChanged multiple times when the channel itself is writable.  i.e. our assumption is that it channelWritabilityChanged will go from writable -> non-writable and vice-versa.  What we have observed is that when channelWritabilityChanged is invoked, it can sometimes be writable -> writable.\r\n\r\n### Steps to reproduce\r\n1) Setup a client and server socket\r\n2) From the server socket, flood the channel with messages to induce slow consumer.\r\n3) The channelWritabilityChanged method is called from the same thread (EventLoop thread), however upon checking the channel it can sometimes be writable multiple times one after the other, i.e. no interleaving non-writeable state\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\nUnfortunately our code is wired in quite tight into this at the moment so will be difficult to give a reproducer\r\n\r\n### Netty version\r\n4.1.20\r\n\r\n### JVM version (e.g. `java -version`)\r\nOracle 1.8.0_111, Zing 1.8.0-zing_17.06.1.0\r\n\r\n### OS version (e.g. `uname -a`)\r\nLinux server-name 2.6.32-696.10.1.el6.x86_64 #1 SMP Tue Aug 22 18:51:35 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\nMacOS High Sierra","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7938","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7938/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7938/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7938/events","html_url":"https://github.com/netty/netty/issues/7938","id":323103535,"node_id":"MDU6SXNzdWUzMjMxMDM1MzU=","number":7938,"title":"CodecOutputList does not implement java.util.list.add(int index, E element) correctly","user":{"login":"jozefbalga","id":39294753,"node_id":"MDQ6VXNlcjM5Mjk0NzUz","avatar_url":"https://avatars0.githubusercontent.com/u/39294753?v=4","gravatar_id":"","url":"https://api.github.com/users/jozefbalga","html_url":"https://github.com/jozefbalga","followers_url":"https://api.github.com/users/jozefbalga/followers","following_url":"https://api.github.com/users/jozefbalga/following{/other_user}","gists_url":"https://api.github.com/users/jozefbalga/gists{/gist_id}","starred_url":"https://api.github.com/users/jozefbalga/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jozefbalga/subscriptions","organizations_url":"https://api.github.com/users/jozefbalga/orgs","repos_url":"https://api.github.com/users/jozefbalga/repos","events_url":"https://api.github.com/users/jozefbalga/events{/privacy}","received_events_url":"https://api.github.com/users/jozefbalga/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/188","html_url":"https://github.com/netty/netty/milestone/188","labels_url":"https://api.github.com/repos/netty/netty/milestones/188/labels","id":3343291,"node_id":"MDk6TWlsZXN0b25lMzM0MzI5MQ==","number":188,"title":"4.1.26.Final","description":"","creator":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":51,"closed_issues":53,"state":"open","created_at":"2018-05-14T07:38:31Z","updated_at":"2018-06-08T18:26:19Z","due_on":null,"closed_at":null},"comments":3,"created_at":"2018-05-15T07:49:26Z","updated_at":"2018-05-15T17:42:13Z","closed_at":"2018-05-15T17:41:46Z","author_association":"NONE","body":"### Expected behavior\r\nWhen an element is added to the beginning of CodecOutputList, the remaining elements should be shifted to the right, see https://docs.oracle.com/javase/8/docs/api/java/util/List.html#add-int-E-\r\n### Actual behavior\r\nThe new element is added to the correct position, but the remaining elements are modified.\r\n### Steps to reproduce\r\nCreate a new CodecO
3ecf
utputList, add integer 1, then add interger 0 to the position 0. The element at position 1 is null\r\n### Minimal yet complete reproducer code (or URL to code)\r\npackage io.netty.handler.codec;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport org.junit.Assert;\r\nimport org.junit.Test;\r\n\r\nimport io.netty.handler.codec.CodecOutputList;\r\n\r\npublic class CodecOuputListTest {\r\n\r\n\t@Test\r\n\tpublic void testArrayListAdd() {\r\n\t\tList<Object> arrayList = new ArrayList<>();\r\n\t\tarrayList.add(1);\r\n\t\tarrayList.add(0, 0);\r\n\t\tAssert.assertEquals(2, arrayList.size());\r\n\t\tAssert.assertEquals(0, arrayList.get(0));\r\n\t\tAssert.assertEquals(1, arrayList.get(1));\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void testCodecOutputListAdd() {\r\n\t\tList<Object> codecOutputList = CodecOutputList.newInstance();\r\n\t\tcodecOutputList.add(1);\r\n\t\tcodecOutputList.add(0, 0);\r\n\t\tAssert.assertEquals(2, codecOutputList.size());\r\n\t\tAssert.assertEquals(0, codecOutputList.get(0));\r\n\t\tAssert.assertNotNull(codecOutputList.get(1));\r\n\t\tAssert.assertEquals(1, codecOutputList.get(1));\r\n\t}\r\n\r\n}\r\n### Netty version\r\n4.1.25\r\n### JVM version (e.g. `java -version`)\r\n1.8.0_152\r\n### OS version (e.g. `uname -a`)\r\nLinux wks-balga 4.14.35 #1 SMP Mon Apr 23 06:09:12 UTC 2018 x86_64 Intel(R) Core(TM) i5-4570 CPU @ 3.20GHz GenuineIntel GNU/Linux","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7936","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7936/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7936/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7936/events","html_url":"https://github.com/netty/netty/issues/7936","id":323040635,"node_id":"MDU6SXNzdWUzMjMwNDA2MzU=","number":7936,"title":"Growing number of NioEventLoopGroup threads","user":{"login":"sungjk","id":9454446,"node_id":"MDQ6VXNlcjk0NTQ0NDY=","avatar_url":"https://avatars0.githubusercontent.com/u/9454446?v=4","gravatar_id":"","url":"https://api.github.com/users/sungjk","html_url":"https://github.com/sungjk","followers_url":"https://api.github.com/users/sungjk/followers","following_url":"https://api.github.com/users/sungjk/following{/other_user}","gists_url":"https://api.github.com/users/sungjk/gists{/gist_id}","starred_url":"https://api.github.com/users/sungjk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sungjk/subscriptions","organizations_url":"https://api.github.com/users/sungjk/orgs","repos_url":"https://api.github.com/users/sungjk/repos","events_url":"https://api.github.com/users/sungjk/events{/privacy}","received_events_url":"https://api.github.com/users/sungjk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2018-05-15T02:03:16Z","updated_at":"2018-05-18T19:18:12Z","closed_at":"2018-05-18T19:18:12Z","author_association":"NONE","body":" I know that the number of threads in the worker group does not exceed the specified number(20). But being created new threads for new connection handling, it does not seem to be removed when the connection is closed. And it occurs OOM cause thread count continues to increase.\r\n\r\n### Expected behavior\r\nDoes not exceed the specified number(20).\r\n\r\n### Actual behavior\r\n[JMX results are confusing.](https://i.stack.imgur.com/R1GmS.png)  thread count continues to increase. Below is the result of dumping the thread.\r\n\r\n```\r\n\"nioEventLoopGroup-281-1\" - Thread t@552\r\njava.lang.Thread.State: RUNNABLE\r\nat sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)\r\nat sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:269)\r\nat sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:93)\r\nat sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:86)\r\n- locked <339ad506> (a io.netty.channel.nio.SelectedSelectionKeySet)\r\n- locked <58219b3f> (a java.util.Collections$UnmodifiableSet)\r\n- locked <12c3e9e9> (a sun.nio.ch.EPollSelectorImpl)\r\nat sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)\r\nat io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:62)\r\nat io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:752)\r\nat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:408)\r\nat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\nat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\nat java.lang.Thread.run(Thread.java:748)\r\n\r\nLocked ownable synchronizers:\r\n- None\r\n```\r\n\r\n### Steps to reproduce\r\nHere is my client code.\r\n\r\n```\r\nval (clientBossGroup, clientWorkerGroup) = (new NioEventLoopGroup(1), new NioEventLoopGroup(20))\r\ntry {\r\n\tval clientBootstrap = new ServerBootstrap()\r\n\tclientBootstrap.group(clientBossGroup, clientWorkerGroup)\r\n\t\t.channel(classOf[NioServerSocketChannel])\r\n\t\t.childHandler(new ChannelInitializer[SocketChannel]() {\r\n\t\t\toverride def initChannel(ch: SocketChannel): Unit = {\r\n\t\t\t\tval pipeline = ch.pipeline()\r\n\t\t\t\trequires.sslContextOpt foreach { sslContext =>\r\n\t\t\t\t\tval sslEngine: SSLEngine = sslContext.createSSLEngine()\r\n\t\t\t\t\tsslEngine.setUseClientMode(false)\r\n\t\t\t\t\tpipeline.addLast(new SslHandler(sslEngine))\r\n\t\t\t\t}\r\n\t\t\t\tpipeline.addLast(new HttpServerCodec())\r\n\t\t\t\tpipeline.addLast(new HttpObjectAggregator(65536))\r\n\t\t\t\tpipeline.addLast(new HttpRequestHandler(clientRequestProcessor, requires.broadcastSuite, requires.nettySlackService)(requires.ecNetty))\r\n\t\t\t}\r\n\t\t})\r\n\t\t.option[java.lang.Integer](ChannelOption.SO_BACKLOG, 128)\r\n\t\t.childOption[java.lang.Boolean](ChannelOption.SO_KEEPALIVE, true)\r\n\r\n\tval clientFuture = clientBootstrap.bind(requires.configure.clientPortNumber).sync()\r\n\tprintln(s\"(Client) Listening to port ${requires.configure.clientPortNumber}...\")\r\n\tclientFuture.channel().closeFuture().sync()\r\n} finally {\r\n\tclientBossGroup.shutdownGracefully()\r\n\tclientWorkerGroup.shutdownGracefully()\r\n}\r\n```\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\n### Netty version\r\n`4.1.12.Final`\r\n\r\n### JVM version (e.g. `java -version`)\r\n```\r\nopenjdk version \"1.8.0_162\"\r\nOpenJDK Runtime Environment (build 1.8.0_162-8u162-b12-1~deb9u1-b12)\r\nOpenJDK 64-Bit Server VM (build 25.162-b12, mixed mode)\r\n```\r\n\r\n### OS version (e.g. `uname -a`)\r\n`Linux 900f86cfe42d 3.10.0-327.10.1.el7.x86_64 #1 SMP Tue Feb 16 17:03:50 UTC 2016 x86_64 GNU/Linux`","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7935","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7935/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7935/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7935/events","html_url":"https://github.com/netty/netty/issues/7935","id":322917571,"node_id":"MDU6SXNzdWUzMjI5MTc1NzE=","number":7935,"title":"Can't disable SSLv2 in SSLEngine","user":{"login":"dschobel","id":58369,"node_id":"MDQ6VXNlcjU4MzY5","avatar_url":"https://avatars1.githubusercontent.com/u/58369?v=4","gravatar_id":"","url":"https://api.github.com/users/dschobel","html_url":"https://github.com/dschobel","followers_url":"https://api.github.com/users/dschobel/followers","following_url":"https://api.github.com/users/dschobel/following{/other_user}","gists_url":"https://api.github.com/users/dschobel/gists{/gist_id}","starred_url":"https://api.github.com/users/dschobel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dschobel/subscriptions","organizations_url":"https://api.github.com/users/dschobel/orgs","repos_url":"https://api.github.com/users/dschobel/repos","events_url":"https://api.github.com/users/dschobel/events{/privacy}","received_events_url":"https://api.github.com/users/dschobel/received_events","type":"User","site_admin":false},"labels":[{"id":185727,"node_id":"MDU6TGFiZWwxODU3Mjc=","url":"https://api.github.com/repos/netty/netty/labels/defect","name":"defect","color":"e11d21","default":false}],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/188","html_url":"https://github.com/netty/netty/milestone/188","labels_url":"https://api.github.com/repos/netty/netty/milestones/188/labels","id":3343291,"node_id":"MDk6TWlsZXN0b25lMzM0MzI5MQ==","number":188,"title":"4.1.26.Final","description":"","creator":{"login":"normanmaurer","id":439362,"node_id":"MDQ6VXNlcjQzOTM2Mg==","avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":51,"closed_issues":53,"state":"open","created_at":"2018-05-14T07:38:31Z","updated_at":"2018-06-08T18:26:19Z","due_on":null,"closed_at":null},"comments":9,"created_at":"2018-05-14T17:51:16Z","updated_at":"2018-05-18T07:48:21Z","closed_at":"2018-05-16T05:23:56Z","author_association":"CONTRIBUTOR","body":"### Expected behavior\r\n\r\n`SSLContext` / `SSLEngine` should allow applications to opt-out of SSLv2.\r\n\r\n### Actual behavior\r\n\r\n`SSLEngine` enables SSLv2.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nimport io.netty.handler.ssl.SslContextBuilder\r\nimport io.netty.buffer.PooledByteBufAllocator.DEFAULT\r\nimport com.twitter.util.security.{PrivateKeyFile, X509CertificateFile} // available at https://github.com/twitter/util/blob/develop/util-security/src/main/scala/com/twitter/util/security\r\nimport java.io.File\r\n \r\n \r\nval enabled = List(\"TLSv1.2\")\r\nval certFile = \"/var/folders/6q/3x79z17d2g55x6c5z0t4s9040000gn/T/svc-test-server.cert7047932748554435997.pem\"\r\nval keyFile = \"/var/folders/6q/3x79z17d2g55x6c5z0t4s9040000gn/T/svc-test-server.pkcs85450648075735221716.pem\"\r\n \r\nval key = new PrivateKeyFile(new File(keyFile)).readPrivateKey().get\r\nval cert = new X509CertificateFile(new File(certFile)).readX509Certificate().get\r\n \r\nval builder = SslContextBuilder.forServer(key, cert)\r\nval context = builder.build()\r\n \r\nval engine = context.newEngine(DEFAULT)\r\nengine.setUseClientMode(false)\r\n \r\nengine.getEnabledProtocols // res1: Array[String] = Array(SSLv2Hello, TLSv1, TLSv1.1, TLSv1.2, SSLv2)\r\nengine.setEnabledProtocols(enabled.toArray)\r\nengine.getEnabledProtocols // res3: Array[String] = Array(SSLv2Hello, TLSv1.2, SSLv2)  <--- why is SSLv2 enabled?\r\n```\r\n\r\n### Netty version\r\n4.1.25.Final\r\n\r\n### JVM version (e.g. `java -version`)\r\n1.8.0_45-b14\r\n\r\n### OS version (e.g. `uname -a`)\r\nOS X 10.13.4","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7931","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7931/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7931/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7931/events","html_url":"https://github.com/netty/netty/issues/7931","id":322568639,"node_id":"MDU6SXNzdWUzMjI1Njg2Mzk=","number":7931,"title":"when using udp NioDatagramChannel , the process will takes tens of thousand of file Descriptor ","user":{"login":"JasonHuangHuster","id":5965173,"node_id":"MDQ6VXNlcjU5NjUxNzM=","avatar_url":"https://avatars1.githubusercontent.com/u/5965173?v=4","gravatar_id":"","url":"https://api.github.com/users/JasonHuangHuster","html_url":"https://github.com/JasonHuangHuster","followers_url":"https://api.github.com/users/JasonHuangHuster/followers","following_url":"https://api.github.com/users/JasonHuangHuster/following{/other_user}","gists_url":"https://api.github.com/users/JasonHuangHuster/gists{/gist_id}","starred_url":"https://api.github.com/users/JasonHuangHuster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JasonHuangHuster/subscriptions","organizations_url":"https://api.github.com/users/JasonHuangHuster/orgs","repos_url":"https://api.github.com/users/JasonHuangHuster/repos","events_url":"https://api.github.com/users/JasonHuangHuster/events{/privacy}","received_events_url":"https://api.github.com/users/JasonHuangHuster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-13T06:29:02Z","updated_at":"2018-05-21T01:50:20Z","closed_at":"2018-05-21T01:50:20Z","author_association":"NONE","body":"### Expected behavior\r\n\r\nwhen using udp NioDatagramChannel , the process will takes tens of thousand of file Descriptor \r\n\r\n### Actual behavior\r\n\r\nin normal udp situation , every message will takes a fd , and close method should called on the socket to free the fd after msg was send . my process takes 20k fds , and they are ocopied by udp . \r\n\r\n### Steps to reproduce\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\n### Netty version\r\n\r\nnetty-all-4.0.25\r\n\r\n### JVM version (e.g. `java -version`)\r\n\r\nJava(TM) SE Runtime Environment (build 1.6.0_21-b06)\r\n\r\n### OS version (e.g. `uname -a`)\r\n\r\nx86_64 x86_64 GNU/Linux\r\n","score":1.0}]}
0

