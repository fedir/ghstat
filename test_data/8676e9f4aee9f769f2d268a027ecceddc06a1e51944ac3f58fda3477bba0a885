HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sun, 13 May 2018 13:08:15 GMT
Link: <https://api.github.com/search/issues?q=repo%3Anetty%2Fnetty+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Anetty%2Fnetty+type%3Aissue+state%3Aclosed&page=34>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: D09D:4F41:35A28D8:7523835:5AF838BE
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 15
X-Ratelimit-Reset: 1526216942
X-Runtime-Rack: 0.524967
X-Xss-Protection: 1; mode=block

8000
{"total_count":3769,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/netty/netty/issues/7928","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7928/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7928/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7928/events","html_url":"https://github.com/netty/netty/issues/7928","id":322479352,"number":7928,"title":"Why is the maven.compiler.target set to 1.6?","user":{"login":"cstancu","id":1731630,"avatar_url":"https://avatars1.githubusercontent.com/u/1731630?v=4","gravatar_id":"","url":"https://api.github.com/users/cstancu","html_url":"https://github.com/cstancu","followers_url":"https://api.github.com/users/cstancu/followers","following_url":"https://api.github.com/users/cstancu/following{/other_user}","gists_url":"https://api.github.com/users/cstancu/gists{/gist_id}","starred_url":"https://api.github.com/users/cstancu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cstancu/subscriptions","organizations_url":"https://api.github.com/users/cstancu/orgs","repos_url":"https://api.github.com/users/cstancu/repos","events_url":"https://api.github.com/users/cstancu/events{/privacy}","received_events_url":"https://api.github.com/users/cstancu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-12T03:43:12Z","updated_at":"2018-05-12T22:40:42Z","closed_at":"2018-05-12T05:14:57Z","author_association":"NONE","body":"Hi, I have a simple question. While playing around with building the Netty integration tests from source I noticed that the [maven.compiler.target is set at 1.6](https://github.com/netty/netty/blob/cff87de44cfaa4544360715dc83e5ad1aa2c0bd7/pom.xml#L180)?\r\n```   \r\n<maven.compiler.target>1.6</maven.compiler.target>\r\n```\r\n\r\n What is the reason for that? Is this a strong requirement for Netty? Thank you!","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7924","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7924/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7924/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7924/events","html_url":"https://github.com/netty/netty/issues/7924","id":321782157,"number":7924,"title":"what does PageRun/PoolSubpage mean？","user":{"login":"zekaryu","id":3090134,"avatar_url":"https://avatars3.githubusercontent.com/u/3090134?v=4","gravatar_id":"","url":"https://api.github.com/users/zekaryu","html_url":"https://github.com/zekaryu","followers_url":"https://api.github.com/users/zekaryu/followers","following_url":"https://api.github.com/users/zekaryu/following{/other_user}","gists_url":"https://api.github.com/users/zekaryu/gists{/gist_id}","starred_url":"https://api.github.com/users/zekaryu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zekaryu/subscriptions","organizations_url":"https://api.github.com/users/zekaryu/orgs","repos_url":"https://api.github.com/users/zekaryu/repos","events_url":"https://api.github.com/users/zekaryu/events{/privacy}","received_events_url":"https://api.github.com/users/zekaryu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-10T01:51:52Z","updated_at":"2018-05-12T03:01:11Z","closed_at":"2018-05-11T19:16:26Z","author_association":"NONE","body":"In comment of io.netty.buffer.PooledChunk  class，the first comment description said：\r\n\r\n` ** Description of algorithm for PageRun/PoolSubpage allocation from PoolChunk**`\r\n\r\nI just don't get the meaning of “PageRun/PoolSubpage”，can anyone tell me how to understand it\r\n \r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7915","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7915/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7915/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7915/events","html_url":"https://github.com/netty/netty/issues/7915","id":320900739,"number":7915,"title":"DnsNameResolver.resolveAll(...) does not always follow CNAMEs","user":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-05-07T18:09:34Z","updated_at":"2018-05-11T23:06:11Z","closed_at":"2018-05-09T11:48:21Z","author_association":"OWNER","body":"At the moment if you do a resolveAll and at least one A / AAAA record is present we will not follow any CNAMEs that are also present. I wonder if this is bug or a \"feature\". I would have expected to have CNAMEs followed as well honestly.\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7910","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7910/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7910/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7910/events","html_url":"https://github.com/netty/netty/issues/7910","id":320356996,"number":7910,"title":"Incorrect Exception Description","user":{"login":"cwginac","id":1069287,"avatar_url":"https://avatars2.githubusercontent.com/u/1069287?v=4","gravatar_id":"","url":"https://api.github.com/users/cwginac","html_url":"https://github.com/cwginac","followers_url":"https://api.github.com/users/cwginac/followers","following_url":"https://api.github.com/users/cwginac/following{/other_user}","gists_url":"https://api.github.com/users/cwginac/gists{/gist_id}","starred_url":"https://api.github.com/users/cwginac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cwginac/subscriptions","organizations_url":"https://api.github.com/users/cwginac/orgs","repos_url":"https://api.github.com/users/cwginac/repos","events_url":"https://api.github.com/users/cwginac/events{/privacy}","received_events_url":"https://api.github.com/users/cwginac/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-05-04T17:26:31Z","updated_at":"2018-05-06T18:11:52Z","closed_at":"2018-05-06T18:11:52Z","author_association":"NONE","body":"This function in AbstractChannelBuffer.java:\r\n\r\n    public void writerIndex(int writerIndex) {\r\n        if (writerIndex < readerIndex || writerIndex > capacity()) {\r\n            throw new IndexOutOfBoundsException(\"Invalid readerIndex: \"\r\n                    + readerIndex + \" - Maximum is \" + writerIndex);\r\n        }\r\n        this.writerIndex = writerIndex;\r\n    }\r\n\r\ngives an incorrect IndexOutOfBoundsException description.  This exception will get thrown if the writerIndex is too low (lower than readerIndex), or too high (greater than the capacity).\r\n\r\nThe description should be more like \"Invalid writerIndex: XX - Minimum is: (readerIndex) - Maximum is: (capacity).","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7908","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7908/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7908/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7908/events","html_url":"https://github.com/netty/netty/issues/7908","id":320327398,"number":7908,"title":"http/2 message aggregation","user":{"login":"mosesn","id":156562,"avatar_url":"https://avatars3.githubusercontent.com/u/156562?v=4","gravatar_id":"","url":"https://api.github.com/users/mosesn","html_url":"https://github.com/mosesn","followers_url":"https://api.github.com/users/mosesn/followers","following_url":"https://api.github.com/users/mosesn/following{/other_user}","gists_url":"https://api.github.com/users/mosesn/gists{/gist_id}","starred_url":"https://api.github.com/users/mosesn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mosesn/subscriptions","organizations_url":"https://api.github.com/users/mosesn/orgs","repos_url":"https://api.github.com/users/mosesn/repos","events_url":"https://api.github.com/users/mosesn/events{/privacy}","received_events_url":"https://api.github.com/users/mosesn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2018-05-04T15:51:44Z","updated_at":"2018-05-08T14:31:17Z","closed_at":"2018-05-08T14:31:17Z","author_association":"CONTRIBUTOR","body":"HTTP/1.1 supplies HttpObjectAggregator, which makes it easy to speak HTTP/1.1, since the entire message is in one piece.  There's no analog in the HTTP/2 Http2Frame API.  Does it make sense for netty to supply one, or should users roll our own buffering and aggregation?  Are there any plans to make an H2 object aggregator as is available for the H1 model?","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7898","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7898/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7898/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7898/events","html_url":"https://github.com/netty/netty/issues/7898","id":318565876,"number":7898,"title":"NPE in Http2FrameCodec after stream reset","user":{"login":"dschobel","id":58369,"avatar_url":"https://avatars1.githubusercontent.com/u/58369?v=4","gravatar_id":"","url":"https://api.github.com/users/dschobel","html_url":"https://github.com/dschobel","followers_url":"https://api.github.com/users/dschobel/followers","following_url":"https://api.github.com/users/dschobel/following{/other_user}","gists_url":"https://api.github.com/users/dschobel/gists{/gist_id}","starred_url":"https://api.github.com/users/dschobel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dschobel/subscriptions","organizations_url":"https://api.github.com/users/dschobel/orgs","repos_url":"https://api.github.com/users/dschobel/repos","events_url":"https://api.github.com/users/dschobel/events{/privacy}","received_events_url":"https://api.github.com/users/dschobel/received_events","type":"User","site_admin":false},"labels":[{"id":185727,"url":"https://api.github.com/repos/netty/netty/labels/defect","name":"defect","color":"e11d21","default":false}],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/187","html_url":"https://github.com/netty/netty/milestone/187","labels_url":"https://api.github.com/repos/netty/netty/milestones/187/labels","id":3280974,"number":187,"title":"4.1.25.Final","description":"","creator":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":52,"closed_issues":43,"state":"open","created_at":"2018-04-19T13:10:45Z","updated_at":"2018-05-12T18:39:20Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2018-04-27T22:19:03Z","updated_at":"2018-05-02T11:01:59Z","closed_at":"2018-05-02T11:01:27Z","author_association":"CONTRIBUTOR","body":"### Expected behavior\r\nNo NPEs after a host resets a stream.\r\n\r\n### Actual behavior\r\nWhen a host sends an RST to its peer, it deregisters that stream id after the RST has been written. If it sees additional frames on that deregistered stream and the stream id == 1 (`HTTP_UPGRADE_STREAM_ID`) it will NPE on `stream.getProperty` in [this line](https://github.com/netty/netty/blob/4.1/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodec.java#L320)\r\n\r\n\r\n`java.lang.NullPointerException\r\n                     \tat io.netty.handler.codec.http2.Http2FrameCodec.consumeBytes(Http2FrameCodec.java:320)\r\n                     \tat io.netty.handler.codec.http2.Http2MultiplexCodec.onBytesConsumed(Http2MultiplexCodec.java:403)\r\n                     \tat io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel$Http2ChannelUnsafe.doRead0(Http2MultiplexCodec.java:976)\r\n                     \tat io.netty.handler.codec.http2.Http2MultiplexCodec$DefaultHttp2StreamChannel.fireChildRead(Http2MultiplexCodec.java:745)\r\n                     \tat io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2StreamFrame(Http2MultiplexCodec.java:293)\r\n                     \tat io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2Frame(Http2MultiplexCodec.java:221)\r\n                     \tat io.netty.handler.codec.http2.Http2FrameCodec$FrameListener.onDataRead(Http2FrameCodec.java:546)\r\n                     \tat io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onDataRead(DefaultHttp2ConnectionDecoder.java:240)\r\n                     \tat io.netty.handler.codec.http2.Http2InboundFrameLogger$1.onDataRead(Http2InboundFrameLogger.java:48)\r\n                     \tat io.netty.handler.codec.http2.DefaultHttp2FrameReader.readDataFrame(DefaultHttp2FrameReader.java:421)\r\n                     \tat io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:251)\r\n                     \tat io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)\r\n                     \tat io.netty.handler.codec.http2.Http2InboundFrameLogger.readFrame(Http2InboundFrameLogger.java:41)\r\n                     \tat io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:118)\r\n                     \tat io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:390)\r\n                     \tat io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:450)\r\n                     \tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n                     \tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n                     \tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n                     \tat io.netty.handler.codec.http2.Http2MultiplexCodec.channelRead(Http2MultiplexCodec.java:359)\r\n                     \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n                     \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n                     \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n                     \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n                     \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n                     \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n                     \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n                     \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n                     \tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n                     \tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\n                     \tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\n                     \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n                     \tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n                     \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n                     \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n                     \tat com.twitter.finagle.util.BlockingTimeTrackingThreadFactory$$anon$1.run(BlockingTimeTrackingThreadFactory.scala:23)\r\n                     \tat java.lang.Thread.run(Thread.java:745)`\r\n\r\n### Steps to reproduce\r\n\r\nSee above.\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\n### Netty version\r\n\r\n4.1.24\r\n\r\n### JVM version (e.g. `java -version`)\r\n\r\n1.8.0_45\r\n\r\n### OS version (e.g. `uname -a`)\r\n\r\nOS X 10.13.4\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7896","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7896/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7896/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7896/events","html_url":"https://github.com/netty/netty/issues/7896","id":318478313,"number":7896,"title":"Resolving a ChannelPromise with a return value?","user":{"login":"bradforj287","id":12780002,"avatar_url":"https://avatars3.githubusercontent.com/u/12780002?v=4","gravatar_id":"","url":"https://api.github.com/users/bradforj287","html_url":"https://github.com/bradforj287","followers_url":"https://api.github.com/users/bradforj287/followers","following_url":"https://api.github.com/users/bradforj287/following{/other_user}","gists_url":"https://api.github.com/users/bradforj287/gists{/gist_id}","starred_url":"https://api.github.com/users/bradforj287/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bradforj287/subscriptions","organizations_url":"https://api.github.com/users/bradforj287/orgs","repos_url":"https://api.github.com/users/bradforj287/repos","events_url":"https://api.github.com/users/bradforj287/events{/privacy}","received_events_url":"https://api.github.com/users/bradforj287/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-27T16:48:08Z","updated_at":"2018-04-28T11:04:03Z","closed_at":"2018-04-28T11:04:02Z","author_association":"NONE","body":"There appears to be no way to resolve a ChannelPromise with a return value. Is this a feature that would make sense to implement? Is there a way to do this that I have missed?\r\n\r\nI have a use case where I need to perform an infrequent async operation on each channel and would like  a return value passed with the completion of that operation. I wrote a stack overflow post about this: \r\n\r\nhttps://stackoverflow.com/questions/50066782/resolving-a-channelpromise-with-a-return-value-in-netty ","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7893","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7893/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7893/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7893/events","html_url":"https://github.com/netty/netty/issues/7893","id":318341651,"number":7893,"title":"Bug in the method of onRemoval of the final instance variable threadLocal of Recycle","user":{"login":"xiaoqiangCai","id":7403230,"avatar_url":"https://avatars2.githubusercontent.com/u/7403230?v=4","gravatar_id":"","url":"https://api.github.com/users/xiaoqiangCai","html_url":"https://github.com/xiaoqiangCai","followers_url":"https://api.github.com/users/xiaoqiangCai/followers","following_url":"https://api.github.com/users/xiaoqiangCai/following{/other_user}","gists_url":"https://api.github.com/users/xiaoqiangCai/gists{/gist_id}","starred_url":"https://api.github.com/users/xiaoqiangCai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiaoqiangCai/subscriptions","organizations_url":"https://api.github.com/users/xiaoqiangCai/orgs","repos_url":"https://api.github.com/users/xiaoqiangCai/repos","events_url":"https://api.github.com/users/xiaoqiangCai/events{/privacy}","received_events_url":"https://api.github.com/users/xiaoqiangCai/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-27T09:35:23Z","updated_at":"2018-04-27T10:05:38Z","closed_at":"2018-04-27T10:05:38Z","author_association":"NONE","body":"### source code\r\nprivate final FastThreadLocal<Stack<T>> threadLocal = new FastThreadLocal<Stack<T>>() {\r\n        @Override\r\n        protected Stack<T> initialValue() {\r\n            return new Stack<T>(Recycler.this, Thread.currentThread(), maxCapacityPerThread, maxSharedCapacityFactor,\r\n                    ratioMask, maxDelayedQueuesPerThread);\r\n        }\r\n\r\n        @Override\r\n        protected void onRemoval(Stack<T> value) {\r\n            // Let us remove the WeakOrderQueue from the WeakHashMap directly if its safe to remove some overhead\r\n            if (value.threadRef.get() == Thread.currentThread()) {\r\n               if (DELAYED_RECYCLED.isSet()) {\r\n                   DELAYED_RECYCLED.get().remove(value);\r\n               }\r\n            }\r\n        }\r\n    };\r\n\r\n### Bug description\r\nIn the method of onRemoval, value.threadRef which is assigned by the thread who invoke initialValue method  must not equal to Thread.currentThread which is running in the context of the cleanup task of FastThreadLocal.\r\n\r\n### Netty version\r\n4.1.24.Final\r\n4.1.25.Final-SNAPSHOT","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7892","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7892/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7892/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7892/events","html_url":"https://github.com/netty/netty/issues/7892","id":318243855,"number":7892,"title":"Reference counting bug in GO_AWAY frame processing","user":{"login":"rschmitt","id":3725049,"avatar_url":"https://avatars2.githubusercontent.com/u/3725049?v=4","gravatar_id":"","url":"https://api.github.com/users/rschmitt","html_url":"https://github.com/rschmitt","followers_url":"https://api.github.com/users/rschmitt/followers","following_url":"https://api.github.com/users/rschmitt/following{/other_user}","gists_url":"https://api.github.com/users/rschmitt/gists{/gist_id}","starred_url":"https://api.github.com/users/rschmitt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rschmitt/subscriptions","organizations_url":"https://api.github.com/users/rschmitt/orgs","repos_url":"https://api.github.com/users/rschmitt/repos","events_url":"https://api.github.com/users/rschmitt/events{/privacy}","received_events_url":"https://api.github.com/users/rschmitt/received_events","type":"User","site_admin":false},"labels":[{"id":185727,"url":"https://api.github.com/repos/netty/netty/labels/defect","name":"defect","color":"e11d21","default":false}],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/187","html_url":"https://github.com/netty/netty/milestone/187","labels_url":"https://api.github.com/repos/netty/netty/milestones/187/labels","id":3280974,"number":187,"title":"4.1.25.Final","description":"","creator":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":52,"closed_issues":43,"state":"open","created_at":"2018-04-19T13:10:45Z","updated_at":"2018-05-12T18:39:20Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2018-04-27T00:56:28Z","updated_at":"2018-04-28T20:04:03Z","closed_at":"2018-04-28T20:04:02Z","author_association":"NONE","body":"### Expected behavior\r\n\r\nThe server should be able to process a `GO_AWAY` frame from the client without throwing an `IllegalReferenceCountException`.\r\n\r\n### Actual behavior\r\n\r\nI get an `IllegalReferenceCountException`, as described below.\r\n\r\n### Steps to reproduce\r\n\r\nHere's what happens when the client (which in my case is nghttp) sends a `GOAWAY` frame, along with the `refCnt` of the `ByteBuf` instance at each step:\r\n\r\n1. The `ByteBuf` comes in [here](https://github.com/netty/netty/blob/4.1/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java#L258) containing a seventeen byte `GO_AWAY` frame; it is assigned to the `cumulator` field, which is initially null (as we are not currently in the middle of processing a frame). `refCnt`: 1.\r\n2. The `FrameListener` [creates](https://github.com/netty/netty/blob/4.1/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodec.java#L552-L555) an intermediate `DefaultHttp2GoAwayFrame ` object and `retain`s it. `refCnt`: 2.\r\n3. The `Http2MultiplexCodec` [calls](https://github.com/netty/netty/blob/4.1/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2MultiplexCodec.java#L223) `onHttp2GoAwayFrame`, which broadcasts the frame to all its child streams, followed by `fireChannelRead` to propagate the `GO_AWAY` through the rest of the parent channel.\r\n    1. The `onHttp2GoAwayFrame` method [calls `release`](https://github.com/netty/netty/blob/4.1/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2MultiplexCodec.java#L342) on the supplied frame. `refCnt`: 1.\r\n    2. The `fireChannelRead` call will typically end up in the `TailContext`, which will `release` the object again in the `onUnhandledInboundMessage` method. `refCnt`: 0.\r\n4. Finally, the `ByteToMessageDecoder` tries to call `release` on the `cumulator` field [here](https://github.com/netty/netty/blob/4.1/codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java#L273), whose `refCnt` is already zero.\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\nI can attempt to write a repro case if desired. I hope that the above play-by-play will make the bug clear. My gue
8000
ss is that the `onHttp2GoAwayFrame` method should *not* be releasing the frame; @normanmaurer mentioned in [another context](https://github.com/netty/netty/issues/7464#issuecomment-353438471) that \"all `on*` methods of this class will 'NOT' take ownership of the buffer.\"\r\n\r\n### Netty version\r\n\r\n4.1.24\r\n\r\n### JVM version (e.g. `java -version`)\r\n\r\n1.8.0_161\r\n\r\n### OS version (e.g. `uname -a`)\r\n\r\n`Darwin f40f243a5fab.ant.amazon.com 16.7.0 Darwin Kernel Version 16.7.0: Tue Jan 30 11:27:06 PST 2018; root:xnu-3789.73.11~1/RELEASE_X86_64 x86_64`","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7888","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7888/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7888/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7888/events","html_url":"https://github.com/netty/netty/issues/7888","id":317446984,"number":7888,"title":"HttpResponseEncoder does not treat status 205 as a content-is-always-empty response","user":{"login":"nicmunroe","id":15578205,"avatar_url":"https://avatars0.githubusercontent.com/u/15578205?v=4","gravatar_id":"","url":"https://api.github.com/users/nicmunroe","html_url":"https://github.com/nicmunroe","followers_url":"https://api.github.com/users/nicmunroe/followers","following_url":"https://api.github.com/users/nicmunroe/following{/other_user}","gists_url":"https://api.github.com/users/nicmunroe/gists{/gist_id}","starred_url":"https://api.github.com/users/nicmunroe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicmunroe/subscriptions","organizations_url":"https://api.github.com/users/nicmunroe/orgs","repos_url":"https://api.github.com/users/nicmunroe/repos","events_url":"https://api.github.com/users/nicmunroe/events{/privacy}","received_events_url":"https://api.github.com/users/nicmunroe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/187","html_url":"https://github.com/netty/netty/milestone/187","labels_url":"https://api.github.com/repos/netty/netty/milestones/187/labels","id":3280974,"number":187,"title":"4.1.25.Final","description":"","creator":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":52,"closed_issues":43,"state":"open","created_at":"2018-04-19T13:10:45Z","updated_at":"2018-05-12T18:39:20Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2018-04-25T01:14:11Z","updated_at":"2018-05-03T09:25:07Z","closed_at":"2018-05-03T09:25:07Z","author_association":"NONE","body":"### Expected behavior\r\nRFC 2616 (https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.6) states that responses with HTTP status code 205 should never return a payload: `The response MUST NOT include an entity`.\r\n\r\nAdditionally, the RFC 7230 section on content-length (https://tools.ietf.org/html/rfc7230#section-3.3.2) does not call out 205 responses as being in the allowed-to-lie-about-content-length category (only HEAD and 204 responses are in that category). Also from that RFC 7230 section, 205 responses are not in the must-never-send-content-length category (only 1xx, 204, and CONNECT with a 2xx are in that category).\r\n\r\nSo based on that I would expect that when Netty encodes a 205 response it should:\r\n* Strip out any payload (other than the no-data chunk when transfer-encoding is chunked)\r\n* Set content-length to 0 for non-chunked responses\r\n\r\nNOTE: The HTTP spec is obviously difficult to follow on these corner cases. Please double check my logic on this issue - I believe my analysis to be correct based on my reading of those RFCs, but I could have interpreted it wrong, or I might be missing something in these RFCs or another spec doc entirely that explains how to handle 205 more directly than what I've cobbled together here.\r\n\r\n### Actual behavior\r\nNetty does not currently do any smart filtering for 205 responses like it does for other always-empty responses (204, 304, HEAD, etc). I can send a 205 response with a payload and that payload will be sent over the wire as if it was a 200.\r\n\r\nNetty *does* appear to sort of pay attention to this on the decoding side - i.e. HttpRequestDecoder drops the payload on the floor if it sees an incoming 205 with a payload. So this issue is mainly about the HttpResponseEncoder side (unless you find something I missed).\r\n\r\n### Steps to reproduce\r\nSend a 205 response with a payload from a Netty server and monitor the bytes on the wire. You'll see the payload is sent, and content-length is not set to 0 for non-chunked responses.\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n``` java\r\nimport org.junit.*;\r\n\r\nimport java.io.IOException;\r\nimport java.net.ServerSocket;\r\nimport java.util.*;\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport io.netty.bootstrap.*;\r\nimport io.netty.buffer.*;\r\nimport io.netty.channel.*;\r\nimport io.netty.channel.nio.NioEventLoopGroup;\r\nimport io.netty.channel.socket.SocketChannel;\r\nimport io.netty.channel.socket.nio.*;\r\nimport io.netty.handler.codec.http.*;\r\nimport io.netty.util.CharsetUtil;\r\nimport io.netty.util.concurrent.EventExecutorGroup;\r\n\r\nimport static io.netty.handler.codec.http.HttpHeaders.Names.*;\r\nimport static io.netty.handler.codec.http.HttpHeaders.Values.CHUNKED;\r\nimport static io.netty.handler.codec.http.HttpVersion.HTTP_1_1;\r\nimport static io.netty.util.CharsetUtil.UTF_8;\r\nimport static org.junit.Assert.assertTrue;\r\n\r\npublic class NettyResponseEncodingSanitizingForHttpStatus205Test {\r\n\r\n    private static int serverPort;\r\n    private static final List<EventLoopGroup> eventLoopGroups = new ArrayList<>();\r\n    private static final List<Channel> channels = new ArrayList<>();\r\n\r\n    private static final String RESPONSE_PAYLOAD = UUID.randomUUID().toString();\r\n\r\n    private static StringBuilder nettyServerRawResponse;\r\n    private static CompletableFuture<FullHttpResponse> responseFuture;\r\n\r\n    private static boolean responseShouldBeChunked = false;\r\n\r\n    public static int findFreePort() throws IOException {\r\n        try (ServerSocket serverSocket = new ServerSocket(0)) {\r\n            return serverSocket.getLocalPort();\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void verify_netty_encodes_http_status_205_responses_as_always_empty_non_chunked() throws Exception {\r\n        executeRequestFor205Response(false);\r\n\r\n        String rawResponse = nettyServerRawResponse.toString();\r\n        String rawResponseBody = extractBodyFromResponse(rawResponse);\r\n\r\n        assertTrue(\r\n            \"The response payload should have been stripped out by Netty when encoding the 205 response, \"\r\n            + \"but the response payload was still sent. Raw bytes-on-the-wire response: \" + escapedRawResponse(rawResponse),\r\n            !rawResponse.contains(RESPONSE_PAYLOAD)\r\n        );\r\n        assertTrue(\r\n            \"The Netty response encoder should have set the content-length header to a value of 0 for a \"\r\n            + \"non-chunked 205 response, but didn't. Raw bytes-on-the-wire response: \" + escapedRawResponse(rawResponse),\r\n            rawResponse.toLowerCase().contains(\"content-length: 0\\r\\n\")\r\n        );\r\n        assertTrue(\r\n            \"The response payload should have been completely empty, but found a non-empty payload instead. \"\r\n            + \"Raw bytes-on-the-wire response: \" + escapedRawResponse(rawResponse),\r\n            rawResponseBody.isEmpty()\r\n        );\r\n    }\r\n\r\n    @Test\r\n    public void verify_netty_encodes_http_status_205_responses_as_always_empty_chunked() throws Exception {\r\n        executeRequestFor205Response(true);\r\n\r\n        String rawResponse = nettyServerRawResponse.toString();\r\n        String rawResponseBody = extractBodyFromResponse(rawResponse);\r\n\r\n        assertTrue(\r\n            \"The response payload should have been stripped out by Netty when encoding the 205 response, \"\r\n            + \"but the response payload was still sent. Raw bytes-on-the-wire response: \" + escapedRawResponse(rawResponse),\r\n            !rawResponse.contains(RESPONSE_PAYLOAD)\r\n        );\r\n        assertTrue(\r\n            \"Expecting to find 'transfer-encoding: chunked' header for chunked response. \"\r\n            + \"Raw bytes-on-the-wire response: \" + escapedRawResponse(rawResponse),\r\n            rawResponse.toLowerCase().contains(\"transfer-encoding: chunked\\r\\n\")\r\n        );\r\n        assertTrue(\r\n            \"The response payload should have been completely empty other than the zero-data chunk \"\r\n            + \"'0\\\\r\\\\n\\\\r\\\\n', but found a non-empty payload instead. \"\r\n            + \"Raw bytes-on-the-wire response: \" + escapedRawResponse(rawResponse),\r\n            rawResponseBody.equals(\"0\\r\\n\\r\\n\")\r\n        );\r\n    }\r\n\r\n    private String extractBodyFromResponse(String response) {\r\n        String bodyStartCrLfs = \"\\r\\n\\r\\n\";\r\n        int indexOfBodyStartCrLfs = response.indexOf(bodyStartCrLfs);\r\n        return response.substring(indexOfBodyStartCrLfs + bodyStartCrLfs.length());\r\n    }\r\n\r\n    private void executeRequestFor205Response(boolean chunkedResponse) throws Exception {\r\n        responseShouldBeChunked = chunkedResponse;\r\n\r\n        Bootstrap clientBootstrap = createNettyHttpClientBootstrap();\r\n        Channel clientChannel = connectNettyHttpClientToLocalServer(clientBootstrap, serverPort);\r\n\r\n        clientChannel.writeAndFlush(new DefaultFullHttpRequest(HTTP_1_1, HttpMethod.GET, \"/does/not/matter\"));\r\n\r\n        // We don't want the actual response, we just need to know when it's done so we can inspect the\r\n        //      aggregated bytes-on-the-wire via nettyServerRawResponse.\r\n        responseFuture.get(5, TimeUnit.SECONDS);\r\n    }\r\n\r\n    private String escapedRawResponse(String escapeMe) {\r\n        return escapeMe.replace(\"\\r\", \"\\\\r\").replace(\"\\n\", \"\\\\n\");\r\n    }\r\n\r\n    private static ChannelHandler serverRequestHandler() {\r\n        return new SimpleChannelInboundHandler<HttpObject>() {\r\n            @Override\r\n            protected void channelRead0(ChannelHandlerContext ctx, HttpObject msg) {\r\n                if (msg instanceof LastHttpContent) {\r\n                    List<HttpObject> responseChunks = (responseShouldBeChunked)\r\n                                                      ? handleChunkedResponse()\r\n                                                      : handleFullResponse();\r\n\r\n                    responseChunks.forEach(ctx::write);\r\n                    ctx.flush();\r\n                }\r\n            }\r\n\r\n            private List<HttpObject> handleFullResponse() {\r\n                ByteBuf responsePayload = Unpooled.wrappedBuffer(RESPONSE_PAYLOAD.getBytes(CharsetUtil.UTF_8));\r\n\r\n                FullHttpResponse fullResponse = new DefaultFullHttpResponse(\r\n                    HTTP_1_1,\r\n                    HttpResponseStatus.valueOf(205),\r\n                    responsePayload\r\n                );\r\n\r\n                fullResponse.headers().set(CONTENT_LENGTH, responsePayload.readableBytes());\r\n\r\n                return Collections.singletonList(fullResponse);\r\n            }\r\n\r\n            private List<HttpObject> handleChunkedResponse() {\r\n                ByteBuf responsePayload = Unpooled.wrappedBuffer(RESPONSE_PAYLOAD.getBytes(CharsetUtil.UTF_8));\r\n\r\n                HttpResponse firstChunk = new DefaultHttpResponse(\r\n                    HTTP_1_1,\r\n                    HttpResponseStatus.valueOf(205)\r\n                );\r\n                firstChunk.headers().set(TRANSFER_ENCODING, CHUNKED);\r\n\r\n                HttpContent contentChunk = new DefaultHttpContent(responsePayload);\r\n\r\n                return Arrays.asList(firstChunk, contentChunk, LastHttpContent.EMPTY_LAST_CONTENT);\r\n            }\r\n        };\r\n    }\r\n\r\n    public static Bootstrap createNettyHttpClientBootstrap() {\r\n        Bootstrap bootstrap = new Bootstrap();\r\n        bootstrap.group(new NioEventLoopGroup())\r\n                 .channel(NioSocketChannel.class)\r\n                 .handler(new ChannelInitializer<SocketChannel>() {\r\n                     @Override\r\n                     protected void initChannel(SocketChannel ch) {\r\n                         ChannelPipeline p = ch.pipeline();\r\n                         p.addLast(new HttpClientCodec());\r\n                         p.addLast(new HttpObjectAggregator(Integer.MAX_VALUE));\r\n                         p.addLast(new SimpleChannelInboundHandler<FullHttpResponse>() {\r\n                             @Override\r\n                             protected void channelRead0(ChannelHandlerContext ctx, FullHttpResponse msg) {\r\n                                 // Complete the future so the tests know the response is done.\r\n                                 responseFuture.complete(msg);\r\n                             }\r\n                         });\r\n                     }\r\n                 });\r\n\r\n        return bootstrap;\r\n    }\r\n\r\n    public static Channel connectNettyHttpClientToLocalServer(Bootstrap bootstrap, int port) throws InterruptedException {\r\n        return bootstrap.connect(\"localhost\", port).sync().channel();\r\n    }\r\n\r\n    public static class RecordNettyServerOutboundResponseWireBytes extends ChannelOutboundHandlerAdapter {\r\n\r\n        @Override\r\n        public void write(ChannelHandlerContext ctx, Object msg, ChannelPromise promise) throws Exception {\r\n            ByteBuf byteBuf = (ByteBuf) msg;\r\n            nettyServerRawResponse.append(byteBuf.toString(UTF_8));\r\n            super.write(ctx, msg, promise);\r\n        }\r\n    }\r\n\r\n    @Before\r\n    public void beforeMethod() {\r\n        nettyServerRawResponse = new StringBuilder();\r\n        responseFuture = new CompletableFuture<>();\r\n    }\r\n\r\n    @BeforeClass\r\n    public static void beforeClass() throws IOException, InterruptedException {\r\n        serverPort = findFreePort();\r\n\r\n        EventLoopGroup bossGroup = new NioEventLoopGroup();\r\n        EventLoopGroup workerGroup = new NioEventLoopGroup();\r\n        Class<? extends ServerChannel> channelClass = NioServerSocketChannel.class;\r\n\r\n        eventLoopGroups.add(bossGroup);\r\n        eventLoopGroups.add(workerGroup);\r\n\r\n        ChannelInitializer<SocketChannel> channelInitializer = new ChannelInitializer<SocketChannel>() {\r\n            @Override\r\n            protected void initChannel(SocketChannel ch) {\r\n                ChannelPipeline pipeline = ch.pipeline();\r\n                pipeline.addLast(new RecordNettyServerOutboundResponseWireBytes());\r\n                pipeline.addLast(new HttpServerCodec());\r\n                pipeline.addLast(serverRequestHandler());\r\n            }\r\n        };\r\n\r\n        // Create the server bootstrap\r\n        ServerBootstrap b = new ServerBootstrap();\r\n        b.group(bossGroup, workerGroup)\r\n         .channel(channelClass)\r\n         .childHandler(channelInitializer);\r\n\r\n        // Bind the server to the desired port and start it up so it is ready to receive requests\r\n        Channel ch = b.bind(serverPort)\r\n                      .sync()\r\n                      .channel();\r\n\r\n        channels.add(ch);\r\n\r\n    }\r\n\r\n    @AfterClass\r\n    public static void afterClass() throws InterruptedException {\r\n        try {\r\n            List<ChannelFuture> channelCloseFutures = new ArrayList<>();\r\n            for (Channel ch : channels) {\r\n                channelCloseFutures.add(ch.close());\r\n            }\r\n            for (ChannelFuture chf : channelCloseFutures) {\r\n                chf.sync();\r\n            }\r\n        }\r\n        finally {\r\n            eventLoopGroups.forEach(EventExecutorGroup::shutdownGracefully);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Netty version\r\n4.0.56.Final\r\n\r\n### JVM version (e.g. `java -version`)\r\n1.8.0_151\r\n\r\n### OS version (e.g. `uname -a`)\r\nMac OSX 10.12.6 (Darwin AP10FD59C71492 16.7.0 Darwin Kernel Version 16.7.0: Thu Jan 11 22:59:40 PST 2018; root:xnu-3789.73.8~1/RELEASE_X86_64 x86_64)","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7882","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7882/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7882/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7882/events","html_url":"https://github.com/netty/netty/issues/7882","id":316469273,"number":7882,"title":"AddressResolver.resolveAll doesn't return consistent result","user":{"login":"mrniko","id":1104661,"avatar_url":"https://avatars0.githubusercontent.com/u/1104661?v=4","gravatar_id":"","url":"https://api.github.com/users/mrniko","html_url":"https://github.com/mrniko","followers_url":"https://api.github.com/users/mrniko/followers","following_url":"https://api.github.com/users/mrniko/following{/other_user}","gists_url":"https://api.github.com/users/mrniko/gists{/gist_id}","starred_url":"https://api.github.com/users/mrniko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrniko/subscriptions","organizations_url":"https://api.github.com/users/mrniko/orgs","repos_url":"https://api.github.com/users/mrniko/repos","events_url":"https://api.github.com/users/mrniko/events{/privacy}","received_events_url":"https://api.github.com/users/mrniko/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/187","html_url":"https://github.com/netty/netty/milestone/187","labels_url":"https://api.github.com/repos/netty/netty/milestones/187/labels","id":3280974,"number":187,"title":"4.1.25.Final","description":"","creator":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":52,"closed_issues":43,"state":"open","created_at":"2018-04-19T13:10:45Z","updated_at":"2018-05-12T18:39:20Z","due_on":null,"closed_at":null},"comments":20,"created_at":"2018-04-21T07:15:32Z","updated_at":"2018-05-04T13:39:42Z","closed_at":"2018-05-04T12:19:26Z","author_association":"NONE","body":"### Expected behavior\r\nAddressResolver.resolveAll always returns full list of ips.\r\n\r\n### Actual behavior\r\nAddressResolver.resolveAll returns some part of full list ips.\r\n\r\n### Steps to reproduce\r\n`dev.myredis.com` host has two ips: 127.0.0.2, 127.0.0.3.\r\nI guess AddressResolver.resolveAll should always return these two ips, but it's not true on practice if DnsAddressResolverGroup object shared between multiple threads\r\n\r\nIf this object created per invocation then the problem is gone.\r\nSeems like DnsAddressResolverGroup is not thread safe!\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\nHere is my test case:\r\n```java\r\n        NioEventLoopGroup niogroup = new NioEventLoopGroup();\r\n        \r\n        DnsAddressResolverGroup group = new DnsAddressResolverGroup(NioDatagramChannel.class, DnsServerAddressStreamProviders.platformDefault());\r\n        ExecutorService es = Executors.newFixedThreadPool(2);\r\n        for (int i = 0; i < 100; i++) {\r\n            es.execute(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    AddressResolver<InetSocketAddress> resolver = group.getResolver(niogroup.next());\r\n                    try {\r\n                        URI uri = new URI(\"redis://dev.myredis.com:6379\");\r\n                        Future<List<InetSocketAddress>> allNodes = resolver.resolveAll(InetSocketAddress.createUnresolved(uri.getHost(), uri.getPort()));\r\n                        List<InetSocketAddress> list = allNodes.syncUninterruptibly().getNow();\r\n                        System.out.println(list);\r\n                    } catch (URISyntaxException e) {\r\n                        // TODO Auto-generated catch block\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        Thread.sleep(10000);\r\n        group.close();\r\n        es.shutdown();\r\n        niogroup.shutdownGracefully();\r\n```\r\n\r\nOutput is:\r\n\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379, dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.2:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n[dev.myredis.com/127.0.0.3:6379]\r\n\r\nBut it always should be: [dev.myredis.com/127.0.0.2:6379, dev.myredis.com/127.0.0.3:6379]\r\n\r\n### Netty version\r\n4.1.23.Final\r\n\r\n### JVM version (e.g. `java -version`)\r\njava version \"1.8.0_102\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_102-b14)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)\r\n\r\n### OS version (e.g. `uname -a`)\r\nWindows 7","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7881","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7881/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7881/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7881/events","html_url":"https://github.com/netty/netty/issues/7881","id":316139110,"number":7881,"title":"How to close has been launch TCP server?","user":{"login":"cai784921129","id":20353284,"avatar_url":"https://avatars0.githubusercontent.com/u/20353284?v=4","gravatar_id":"","url":"https://api.github.com/users/cai784921129","html_url":"https://github.com/cai784921129","followers_url":"https://api.github.com/users/cai784921129/followers","following_url":"https://api.github.com/users/cai784921129/following{/other_user}","gists_url":"https://api.github.com/users/cai784921129/gists{/gist_id}","starred_url":"https://api.github.com/users/cai784921129/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cai784921129/subscriptions","organizations_url":"https://api.github.com/users/cai784921129/orgs","repos_url":"https://api.github.com/users/cai784921129/repos","events_url":"https://api.github.com/users/cai784921129/events{/privacy}","received_events_url":"https://api.github.com/users/cai784921129/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-20T06:06:37Z","updated_at":"2018-04-20T06:08:04Z","closed_at":"2018-04-20T06:08:04Z","author_association":"NONE","body":"### Expected behavior\r\nHow to close has been launch TCP server?\r\n\r\n### Actual behavior\r\n\r\n### Steps to reproduce\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\n### Netty version 4.1.23\r\n\r\n### JVM version (e.g. `java -version`) 1.8\r\n\r\n### OS version (e.g. `uname -a`) \r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7880","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7880/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues
8000
/7880/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7880/events","html_url":"https://github.com/netty/netty/issues/7880","id":316003160,"number":7880,"title":"LocalChannel / LocalServerChannel not respect ChannelOption. MAX_MESSAGES_PER_READ","user":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"labels":[{"id":185727,"url":"https://api.github.com/repos/netty/netty/labels/defect","name":"defect","color":"e11d21","default":false}],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/187","html_url":"https://github.com/netty/netty/milestone/187","labels_url":"https://api.github.com/repos/netty/netty/milestones/187/labels","id":3280974,"number":187,"title":"4.1.25.Final","description":"","creator":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":52,"closed_issues":43,"state":"open","created_at":"2018-04-19T13:10:45Z","updated_at":"2018-05-12T18:39:20Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2018-04-19T19:07:52Z","updated_at":"2018-04-26T05:58:57Z","closed_at":"2018-04-26T05:58:57Z","author_association":"OWNER","body":"LocalChannel / LocalServerChannel not respect ChannelOption.MAX_MESSAGES_PER_READ and just keeps processing messages until there are no more present.","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7877","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7877/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7877/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7877/events","html_url":"https://github.com/netty/netty/issues/7877","id":315684229,"number":7877,"title":"Eternal loop in Recycler.WeakOrderQueue.Head#run() that blocks ObjectCleaner thread and causes OOM.","user":{"login":"syermakov","id":24846845,"avatar_url":"https://avatars3.githubusercontent.com/u/24846845?v=4","gravatar_id":"","url":"https://api.github.com/users/syermakov","html_url":"https://github.com/syermakov","followers_url":"https://api.github.com/users/syermakov/followers","following_url":"https://api.github.com/users/syermakov/following{/other_user}","gists_url":"https://api.github.com/users/syermakov/gists{/gist_id}","starred_url":"https://api.github.com/users/syermakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/syermakov/subscriptions","organizations_url":"https://api.github.com/users/syermakov/orgs","repos_url":"https://api.github.com/users/syermakov/repos","events_url":"https://api.github.com/users/syermakov/events{/privacy}","received_events_url":"https://api.github.com/users/syermakov/received_events","type":"User","site_admin":false},"labels":[{"id":185727,"url":"https://api.github.com/repos/netty/netty/labels/defect","name":"defect","color":"e11d21","default":false}],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/186","html_url":"https://github.com/netty/netty/milestone/186","labels_url":"https://api.github.com/repos/netty/netty/milestones/186/labels","id":3242832,"number":186,"title":"4.1.24.Final","description":"","creator":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":24,"state":"closed","created_at":"2018-04-04T17:23:05Z","updated_at":"2018-04-19T17:14:24Z","due_on":null,"closed_at":"2018-04-19T17:14:24Z"},"comments":2,"created_at":"2018-04-19T00:11:30Z","updated_at":"2018-04-19T07:41:12Z","closed_at":"2018-04-19T07:40:39Z","author_association":"NONE","body":"Hi,\r\n\r\nlooks like in commit 6eb9674bf5ded128cb230a31987f14816b7f1886 there is a problem that causes an eternal loop in `Recycler.WeakOrderQueue.Head#run()`:\r\n```\r\n            public void run() {\r\n                Link head = link;\r\n                while (head != null) {\r\n                    reclaimSpace(LINK_CAPACITY);\r\n                    head = link.next;\r\n                }\r\n            }\r\n```\r\nshould be \r\n```\r\n            public void run() {\r\n                Link head = link;\r\n                while (head != null) {\r\n                    reclaimSpace(LINK_CAPACITY);\r\n                    head = head.next;\r\n                }\r\n            }\r\n```\r\nNote `head = link.next` vs `head = head.next`\r\n\r\n### Expected behavior\r\n\r\nRecycler.WeakOrderQueue.Head#run() should not block forever.\r\n\r\n### Actual behavior\r\n\r\nRecycler.WeakOrderQueue.Head#run() falls into an eternal loop and blocks ObjectCleaner thread.\r\n\r\n### Steps to reproduce\r\n\r\nPlease see below...\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\nSorry for not providing a reproducer, this issues came out in our project's test suite as an OOM after a long run and we were able to find its cause only by analyzing the JVM heap dump. \r\n\r\n### Netty version\r\n\r\n4.1.23.Final\r\n\r\n### JVM version (e.g. `java -version`)\r\n\r\njava version \"1.8.0_162\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_162-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode)\r\n\r\n### OS version (e.g. `uname -a`)\r\n\r\nDarwin MacBook-Pro-sy.local 17.5.0 Darwin Kernel Version 17.5.0: Mon Mar  5 22:24:32 PST 2018; root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7873","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7873/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7873/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7873/events","html_url":"https://github.com/netty/netty/issues/7873","id":314970435,"number":7873,"title":"NoopAddressResolverGroup immutability?","user":{"login":"CodingFabian","id":176132,"avatar_url":"https://avatars1.githubusercontent.com/u/176132?v=4","gravatar_id":"","url":"https://api.github.com/users/CodingFabian","html_url":"https://github.com/CodingFabian","followers_url":"https://api.github.com/users/CodingFabian/followers","following_url":"https://api.github.com/users/CodingFabian/following{/other_user}","gists_url":"https://api.github.com/users/CodingFabian/gists{/gist_id}","starred_url":"https://api.github.com/users/CodingFabian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CodingFabian/subscriptions","organizations_url":"https://api.github.com/users/CodingFabian/orgs","repos_url":"https://api.github.com/users/CodingFabian/repos","events_url":"https://api.github.com/users/CodingFabian/events{/privacy}","received_events_url":"https://api.github.com/users/CodingFabian/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-17T09:09:14Z","updated_at":"2018-04-19T07:41:39Z","closed_at":"2018-04-19T07:41:39Z","author_association":"CONTRIBUTOR","body":"I am looking at a memory leak problem and was wondering if NoopAddressResolverGroup is working as intended.\r\nWe have multiple Bootstrap instances, which all do something like this:\r\n```\r\n      bootstrap = new Bootstrap();\r\n      if (useProxyDnsResolution) {\r\n        bootstrap.resolver(NoopAddressResolverGroup.INSTANCE);\r\n      }\r\n```\r\nNow what happens is that for each Bootstrap (3 in the following picture) there is one key value pair added to the resolvers HashMap.\r\n\r\nIs that intended? the NoopAddressResolver does not need the executor? it could always return the same instance regardless of the executor?\r\nAre you sure that the cleanup of this shared instance is working fine or is this leaking resolvers?\r\n<img width=\"1105\" alt=\"screen shot 2018-04-17 at 11 07 26\" src=\"https://user-images.githubusercontent.com/176132/38860126-c138a7da-422f-11e8-9500-8f52bc055b76.png\">\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7871","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7871/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7871/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7871/events","html_url":"https://github.com/netty/netty/issues/7871","id":314512374,"number":7871,"title":"Add support for IP_TRANSPARENT socket option for UDP connections","user":{"login":"kubuzetto","id":9467143,"avatar_url":"https://avatars1.githubusercontent.com/u/9467143?v=4","gravatar_id":"","url":"https://api.github.com/users/kubuzetto","html_url":"https://github.com/kubuzetto","followers_url":"https://api.github.com/users/kubuzetto/followers","following_url":"https://api.github.com/users/kubuzetto/following{/other_user}","gists_url":"https://api.github.com/users/kubuzetto/gists{/gist_id}","starred_url":"https://api.github.com/users/kubuzetto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kubuzetto/subscriptions","organizations_url":"https://api.github.com/users/kubuzetto/orgs","repos_url":"https://api.github.com/users/kubuzetto/repos","events_url":"https://api.github.com/users/kubuzetto/events{/privacy}","received_events_url":"https://api.github.com/users/kubuzetto/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-16T06:05:07Z","updated_at":"2018-04-17T07:07:34Z","closed_at":"2018-04-17T07:07:03Z","author_association":"CONTRIBUTOR","body":"Push request at #6835 does not include 'transparent proxy' mode for UDP. setOption() function in EpollDatagramChannelConfig should include IP_TRANSPARENT option.","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7863","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7863/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7863/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7863/events","html_url":"https://github.com/netty/netty/issues/7863","id":313678483,"number":7863,"title":"ArrayIndexOutOfBoundsException in AsciiString().indexOf()","user":{"login":"Stefan-Weber","id":38279079,"avatar_url":"https://avatars3.githubusercontent.com/u/38279079?v=4","gravatar_id":"","url":"https://api.github.com/users/Stefan-Weber","html_url":"https://github.com/Stefan-Weber","followers_url":"https://api.github.com/users/Stefan-Weber/followers","following_url":"https://api.github.com/users/Stefan-Weber/following{/other_user}","gists_url":"https://api.github.com/users/Stefan-Weber/gists{/gist_id}","starred_url":"https://api.github.com/users/Stefan-Weber/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Stefan-Weber/subscriptions","organizations_url":"https://api.github.com/users/Stefan-Weber/orgs","repos_url":"https://api.github.com/users/Stefan-Weber/repos","events_url":"https://api.github.com/users/Stefan-Weber/events{/privacy}","received_events_url":"https://api.github.com/users/Stefan-Weber/received_events","type":"User","site_admin":false},"labels":[{"id":185727,"url":"https://api.github.com/repos/netty/netty/labels/defect","name":"defect","color":"e11d21","default":false}],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/186","html_url":"https://github.com/netty/netty/milestone/186","labels_url":"https://api.github.com/repos/netty/netty/milestones/186/labels","id":3242832,"number":186,"title":"4.1.24.Final","description":"","creator":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":24,"state":"closed","created_at":"2018-04-04T17:23:05Z","updated_at":"2018-04-19T17:14:24Z","due_on":null,"closed_at":"2018-04-19T17:14:24Z"},"comments":1,"created_at":"2018-04-12T11:03:40Z","updated_at":"2018-04-12T19:06:13Z","closed_at":"2018-04-12T19:06:13Z","author_association":"NONE","body":"### Actual behavior\r\nCalling the method indexOf() in a special case throws ArrayIndexOutOfBoundsException.\r\n\r\njava.lang.ArrayIndexOutOfBoundsException: 6\r\n\tat io.netty.util.AsciiString.indexOf(AsciiString.java:693)\r\n\tat ByteBufsTests.indexOfSuccess(ByteBufsTests.java:46)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n...\r\n\r\n### Steps to reproduce\r\nRun the following 2 lines of JUnit code, I hope this is enough for reproduction.\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\nAssert.assertEquals(\"Test success in 4.1.(22|23).Final\", 3, new AsciiString(\"012345\").indexOf(\"345\", 3));\r\nAssert.assertEquals(\"Test fails with 'ArrayIndexOutOfBoundsException: 6' in 4.1.23.Final\", -1, new AsciiString(\"012345\").indexOf(\"abc\", 3));\r\n\r\n### Netty version\r\n4.1.23.Final\r\n\r\n### JVM version (e.g. `java -version`)\r\njava version \"1.8.0_66\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_66-b17)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.66-b17, mixed mode)\r\n\r\n### OS version (e.g. `uname -a`)\r\nWin7","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7860","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7860/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7860/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7860/events","html_url":"https://github.com/netty/netty/issues/7860","id":313099751,"number":7860,"title":"HTTP2 Multiplex API support for unknown/custom frames","user":{"login":"Bennett-Lynch","id":11811448,"avatar_url":"https://avatars2.githubusercontent.com/u/11811448?v=4","gravatar_id":"","url":"https://api.github.com/users/Bennett-Lynch","html_url":"https://github.com/Bennett-Lynch","followers_url":"https://api.github.com/users/Bennett-Lynch/followers","following_url":"https://api.github.com/users/Bennett-Lynch/following{/other_user}","gists_url":"https://api.github.com/users/Bennett-Lynch/gists{/gist_id}","starred_url":"https://api.github.com/users/Bennett-Lynch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Bennett-Lynch/subscriptions","organizations_url":"https://api.github.com/users/Bennett-Lynch/orgs","repos_url":"https://api.github.com/users/Bennett-Lynch/repos","events_url":"https://api.github.com/users/Bennett-Lynch/events{/privacy}","received_events_url":"https://api.github.com/users/Bennett-Lynch/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/186","html_url":"https://github.com/netty/netty/milestone/186","labels_url":"https://api.github.com/repos/netty/netty/milestones/186/labels","id":3242832,"number":186,"title":"4.1.24.Final","description":"","creator":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":24,"state":"closed","created_at":"2018-04-04T17:23:05Z","updated_at":"2018-04-19T17:14:24Z","due_on":null,"closed_at":"2018-04-19T17:14:24Z"},"comments":6,"created_at":"2018-04-10T21:42:20Z","updated_at":"2018-04-26T19:51:12Z","closed_at":"2018-04-13T05:50:45Z","author_association":"NONE","body":"### Expected behavior\r\n\r\nThe HTTP/2 spec explicitly permits extension of the protocol in the form of new frame types:\r\nhttp://httpwg.org/specs/rfc7540.html#rfc.section.5.5\r\n\r\nI would like/expect to be able to write/read custom frame types using the HTTP2 Multiplex API.  That is, if I write a Http2StreamFrame to a child channel with e.g., `frameType == (byte) 20`, I would be able to read the frame on the server's corresponding child channel.\r\n\r\n### Actual behavior\r\n\r\nThe HTTP2 Multiplex API allows any object of type `Http2StreamFrame`:\r\nhttps://github.com/netty/netty/blob/501662a77f8166382eefd18a8620983d27f59d4a/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2MultiplexCodec.java#L993\r\n\r\nThe corresponding write, however, rejects any object that is of type `Http2Frame` and not one of the spec-defined frame types:\r\nhttps://github.com/netty/netty/blob/501662a77f8166382eefd18a8620983d27f59d4a/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodec.java#L299-L304\r\n\r\nWriting a custom implementation of `Http2StreamFrame` or `Http2UnknownFrame` to a child channel will be rejected by the `Http2FrameCodec`.","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7859","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7859/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7859/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7859/events","html_url":"https://github.com/netty/netty/issues/7859","id":312672775,"number":7859,"title":"When is SocketChannel closed is netty 3.10?","user":{"login":"QAZThe","id":38228020,"avatar_url":"https://avatars0.githubusercontent.com/u/38228020?v=4","gravatar_id":"","url":"https://api.github.com/users/QAZThe","html_url":"https://github.com/QAZThe","followers_url":"https://api.github.com/users/QAZThe/followers","following_url":"https://api.github.com/users/QAZThe/following{/other_user}","gists_url":"https://api.github.com/users/QAZThe/gists{/gist_id}","starred_url":"https://api.github.com/users/QAZThe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QAZThe/subscriptions","organizations_url":"https://api.github.com/users/QAZThe/orgs","repos_url":"https://api.github.com/users/QAZThe/repos","events_url":"https://api.github.com/users/QAZThe/events{/privacy}","received_events_url":"https://api.github.com/users/QAZThe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-09T20:19:49Z","updated_at":"2018-04-10T08:43:20Z","closed_at":"2018-04-10T08:43:20Z","author_association":"NONE","body":"I dont know the internal system of netty so I came here for help.\r\n\r\nI have two different systems with the same amount of load. In one of the system, I am seeing like a few SocketChannel close calls per day while the other has like 100 calls per day. \r\n\r\nThis issue stats when the close method below is called from line 93 of [NioWorker class](https://github.com/netty/netty/blob/3.10/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker.java)\r\n\r\n       if (ret < 0 || failure) {\r\n            k.cancel(); // Some JDK implementations run into an infinite loop without this.\r\n            close(channel, succeededFuture(channel));\r\n            return false;\r\n        }\r\n\r\nTo debug this issue I am trying to find out what are the events that might cause this method to be called.  With what I have understood from the code, the method is called when SocketChannel is closed but what are the reasons for the SocketChannel to be closed? Is it closed when the host is down, host is idle for sometime or something else? Knowing this might help me figure out why the two different systems have different number of SockeChannel being closed. ","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7857","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7857/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7857/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7857/events","html_url":"https://github.com/netty/netty/issues/7857","id":312490527,"number":7857,"title":"what is \"readerIndex\" in ByteBuf?","user":{"login":"Mahdihp","id":6378625,"avatar_url":"https://avatars2.githubusercontent.com/u/6378625?v=4","gravatar_id":"","url":"https://api.github.com/users/Mahdihp","html_url":"https://github.com/Mahdihp","followers_url":"https://api.github.com/users/Mahdihp/followers","following_url":"https://api.github.com/users/Mahdihp/following{/other_user}","gists_url":"https://api.github.com/users/Mahdihp/gists{/gist_id}","starred_url":"https://api.github.com/users/Mahdihp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mahdihp/subscriptions","organizations_url":"https://api.github.com/users/Mahdihp/orgs","repos_url":"https://api.github.com/users/Mahdihp/repos","events_url":"https://api.github.com/users/Mahdihp/events{/privacy}","received_events_url":"https://api.github.com/users/Mahdihp/received_events","type":"User","site_
8000
admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-09T11:16:44Z","updated_at":"2018-04-09T16:21:14Z","closed_at":"2018-04-09T15:36:59Z","author_association":"NONE","body":"","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7856","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7856/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7856/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7856/events","html_url":"https://github.com/netty/netty/issues/7856","id":312374256,"number":7856,"title":"Can't get websocket IP address through amazon ELB","user":{"login":"thiennguyen1308","id":16282742,"avatar_url":"https://avatars0.githubusercontent.com/u/16282742?v=4","gravatar_id":"","url":"https://api.github.com/users/thiennguyen1308","html_url":"https://github.com/thiennguyen1308","followers_url":"https://api.github.com/users/thiennguyen1308/followers","following_url":"https://api.github.com/users/thiennguyen1308/following{/other_user}","gists_url":"https://api.github.com/users/thiennguyen1308/gists{/gist_id}","starred_url":"https://api.github.com/users/thiennguyen1308/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thiennguyen1308/subscriptions","organizations_url":"https://api.github.com/users/thiennguyen1308/orgs","repos_url":"https://api.github.com/users/thiennguyen1308/repos","events_url":"https://api.github.com/users/thiennguyen1308/events{/privacy}","received_events_url":"https://api.github.com/users/thiennguyen1308/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-04-09T02:48:10Z","updated_at":"2018-04-10T10:05:11Z","closed_at":"2018-04-10T10:05:11Z","author_association":"NONE","body":"### Expected behavior\r\nHi, I use netty for websocket, and I want to get IP address from client. \r\n### Actual behavior\r\nWhen I use ELB load balancer, the only IP that I can get is IP of ELB machine, how can I get real ip from client ?\r\nI saw that someone use this, but  I can only get WebSocketFrame object, can I get header of Http Websocket Upgrade request ?\r\n\r\n`  @Override\r\n    public void channelRead0(ChannelHandlerContext ctx, HttpObject msg)\r\n            throws Exception {\r\n        if (msg instanceof HttpRequest) {\r\n            HttpRequest mReq = (HttpRequest) msg;\r\n            String clientIP = mReq.headers().get(\"X-Forwarded-For\");\r\n            if (clientIP == null) {\r\n                InetSocketAddress insocket = (InetSocketAddress) ctx.channel()\r\n                        .remoteAddress();\r\n                clientIP = insocket.getAddress().getHostAddress();\r\n            }\r\n        }\r\n    }`\r\n### Steps to reproduce\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\n\r\n### Netty version\r\n4.1.22_final\r\n### JVM version (e.g. `java -version`)\r\njdk 1.8.0_161\r\n### OS version (e.g. `uname -a`)\r\nAmazon Linux EC2","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7855","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7855/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7855/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7855/events","html_url":"https://github.com/netty/netty/issues/7855","id":312248984,"number":7855,"title":"Intermittent freeze in LocalServerChannel with AUTO_READ=false","user":{"login":"bradforj287","id":12780002,"avatar_url":"https://avatars3.githubusercontent.com/u/12780002?v=4","gravatar_id":"","url":"https://api.github.com/users/bradforj287","html_url":"https://github.com/bradforj287","followers_url":"https://api.github.com/users/bradforj287/followers","following_url":"https://api.github.com/users/bradforj287/following{/other_user}","gists_url":"https://api.github.com/users/bradforj287/gists{/gist_id}","starred_url":"https://api.github.com/users/bradforj287/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bradforj287/subscriptions","organizations_url":"https://api.github.com/users/bradforj287/orgs","repos_url":"https://api.github.com/users/bradforj287/repos","events_url":"https://api.github.com/users/bradforj287/events{/privacy}","received_events_url":"https://api.github.com/users/bradforj287/received_events","type":"User","site_admin":false},"labels":[{"id":185727,"url":"https://api.github.com/repos/netty/netty/labels/defect","name":"defect","color":"e11d21","default":false}],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/186","html_url":"https://github.com/netty/netty/milestone/186","labels_url":"https://api.github.com/repos/netty/netty/milestones/186/labels","id":3242832,"number":186,"title":"4.1.24.Final","description":"","creator":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":24,"state":"closed","created_at":"2018-04-04T17:23:05Z","updated_at":"2018-04-19T17:14:24Z","due_on":null,"closed_at":"2018-04-19T17:14:24Z"},"comments":6,"created_at":"2018-04-07T22:31:25Z","updated_at":"2018-04-27T15:29:28Z","closed_at":"2018-04-19T07:39:17Z","author_association":"NONE","body":"### Overview\r\nI am new to Netty.\r\n\r\nI built a HTTP1.1 proxy server modeling the implementation after the HexDumpProxy example from the official Netty examples. The strategy used was to use AUTO_READ=false and have the handlers read and write 1 message at a time to solve for back pressure.\r\n\r\nIn the simple case, everything works fine. \r\n\r\nI then introduced a LocalServerChannel in the middle. The first handler proxies the request to the LocalServerChannel which in turn proxies the request to the real destination. All handlers use the same strategy for back pressure (read/write 1 at a time). Each handler writes requests to the next channel and writes responses to the previous. This version suffers from an intermittent freeze.\r\n\r\n### Expected behavior\r\nI expected the proxy with the LocalServerChannel to work just as well as the example without the local server.\r\n\r\n### Actual behavior\r\nThe LocalServerChannel version suffers from an intermittent freeze. It looks like the data is written but the read() function isn't called on the handler.\r\n\r\nIf i turn AUTO_READ=true this issue goes away\r\n\r\n### Steps to reproduce\r\ngo to https://github.com/bradforj287/NettyBug and clone repo\r\n\r\nobserve files in package:\r\n\r\n1. ServerMainBroken - this server will exhibit the problem. \r\n2. ServerMainWorking - this server works fine. Does not use local channel\r\n3. ServerMainWorking2 - this server is identical to ServerMainBroken except it uses AUTO_READ=true\r\n\r\nSteps to reproduce:\r\n1. inspect ServerMainBroken. Notice the proxy destination is hard coded to localhost/5000. Change that to another site. I verified www.w3schools.com/443 will demonstrate this issue. All sites should expose issue.\r\n2. launch ServerMainBroken\r\n3. issue a few curl commands to the server. You should notice the issue if you continue to spam curls many times. IT seems as if the larger payloads (e.g. long HTML pages, etc) expose the issue at a higher rate. You will notice the issue when the curl command only partially returns the HTML. Go to next step for more automated way to test this. \r\n4. Open TestClient. Change the target URL to match the ServerMainBroken server. E.g. use http://localhost:9090/<path>\r\n5. Run TestClient and observe after some time it will get stuck. Sometimes when it gets stuck it gets unstuck after a long time. It either freezes completely or is extremely slow.\r\n6. Now repeat these steps for ServerMainWorking and ServerMainWorking2 and observe that they work well. Against a locally running server, I have verified that the TestClient can execute 1M + GET requests against ServerMainWorking or ServerMainWorking2 with no issue whatsoever. ServerMainBroken dies every time.\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\nhttps://github.com/bradforj287/NettyBug \r\n\r\n### Netty version\r\n4.1.23.Final\r\n\r\n### JVM version (e.g. `java -version`)\r\njava version \"1.8.0_112\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_112-b16)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.112-b16, mixed mode)\r\n\r\n### OS version (e.g. `uname -a`)\r\nMacOS Sierra 10.12.6 \r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7854","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7854/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7854/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7854/events","html_url":"https://github.com/netty/netty/issues/7854","id":312129841,"number":7854,"title":"java.lang.NoSuchMethodError with 4.1.23","user":{"login":"CodingFabian","id":176132,"avatar_url":"https://avatars1.githubusercontent.com/u/176132?v=4","gravatar_id":"","url":"https://api.github.com/users/CodingFabian","html_url":"https://github.com/CodingFabian","followers_url":"https://api.github.com/users/CodingFabian/followers","following_url":"https://api.github.com/users/CodingFabian/following{/other_user}","gists_url":"https://api.github.com/users/CodingFabian/gists{/gist_id}","starred_url":"https://api.github.com/users/CodingFabian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CodingFabian/subscriptions","organizations_url":"https://api.github.com/users/CodingFabian/orgs","repos_url":"https://api.github.com/users/CodingFabian/repos","events_url":"https://api.github.com/users/CodingFabian/events{/privacy}","received_events_url":"https://api.github.com/users/CodingFabian/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-04-06T21:46:51Z","updated_at":"2018-04-06T21:58:13Z","closed_at":"2018-04-06T21:58:13Z","author_association":"CONTRIBUTOR","body":"java.lang.NoSuchMethodError: io.netty.handler.codec.http2.Http2ConnectionEncoder.writePing(Lio/netty/channel/ChannelHandlerContext;ZLio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;\r\n\r\nno stack trace, is that a non backwards compatible change?","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7852","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7852/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7852/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7852/events","html_url":"https://github.com/netty/netty/issues/7852","id":311997799,"number":7852,"title":"Website download not working","user":{"login":"WhiteTrashLord","id":7523643,"avatar_url":"https://avatars1.githubusercontent.com/u/7523643?v=4","gravatar_id":"","url":"https://api.github.com/users/WhiteTrashLord","html_url":"https://github.com/WhiteTrashLord","followers_url":"https://api.github.com/users/WhiteTrashLord/followers","following_url":"https://api.github.com/users/WhiteTrashLord/following{/other_user}","gists_url":"https://api.github.com/users/WhiteTrashLord/gists{/gist_id}","starred_url":"https://api.github.com/users/WhiteTrashLord/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WhiteTrashLord/subscriptions","organizations_url":"https://api.github.com/users/WhiteTrashLord/orgs","repos_url":"https://api.github.com/users/WhiteTrashLord/repos","events_url":"https://api.github.com/users/WhiteTrashLord/events{/privacy}","received_events_url":"https://api.github.com/users/WhiteTrashLord/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-06T14:29:38Z","updated_at":"2018-04-06T14:51:31Z","closed_at":"2018-04-06T14:51:31Z","author_association":"NONE","body":"When I try to download the the new Netty release, the download for 4.1 is not working.\r\n\r\nhttps://dl.bintray.com/netty/downloads/netty-4.1.23.Final.tar.bz2   will ask for authentication.\r\n\r\nPlease check and fix :)\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7850","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7850/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7850/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7850/events","html_url":"https://github.com/netty/netty/issues/7850","id":311878740,"number":7850,"title":"Logo design offer","user":{"login":"redmusic27","id":37577374,"avatar_url":"https://avatars2.githubusercontent.com/u/37577374?v=4","gravatar_id":"","url":"https://api.github.com/users/redmusic27","html_url":"https://github.com/redmusic27","followers_url":"https://api.github.com/users/redmusic27/followers","following_url":"https://api.github.com/users/redmusic27/following{/other_user}","gists_url":"https://api.github.com/users/redmusic27/gists{/gist_id}","starred_url":"https://api.github.com/users/redmusic27/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redmusic27/subscriptions","organizations_url":"https://api.github.com/users/redmusic27/orgs","repos_url":"https://api.github.com/users/redmusic27/repos","events_url":"https://api.github.com/users/redmusic27/events{/privacy}","received_events_url":"https://api.github.com/users/redmusic27/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-04-06T07:50:08Z","updated_at":"2018-04-09T09:42:22Z","closed_at":"2018-04-09T09:42:22Z","author_association":"NONE","body":"Hello, sir. I want to offer something to you, do you need a new logo for your project? if you want i can make it to you","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7847","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7847/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7847/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7847/events","html_url":"https://github.com/netty/netty/issues/7847","id":311789216,"number":7847,"title":"Http2ConnectionHandler doesn't set the correct header state for streams generated from upgrades","user":{"login":"bryce-anderson","id":2948506,"avatar_url":"https://avatars2.githubusercontent.com/u/2948506?v=4","gravatar_id":"","url":"https://api.github.com/users/bryce-anderson","html_url":"https://github.com/bryce-anderson","followers_url":"https://api.github.com/users/bryce-anderson/followers","following_url":"https://api.github.com/users/bryce-anderson/following{/other_user}","gists_url":"https://api.github.com/users/bryce-anderson/gists{/gist_id}","starred_url":"https://api.github.com/users/bryce-anderson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bryce-anderson/subscriptions","organizations_url":"https://api.github.com/users/bryce-anderson/orgs","repos_url":"https://api.github.com/users/bryce-anderson/repos","events_url":"https://api.github.com/users/bryce-anderson/events{/privacy}","received_events_url":"https://api.github.com/users/bryce-anderson/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/187","html_url":"https://github.com/netty/netty/milestone/187","labels_url":"https://api.github.com/repos/netty/netty/milestones/187/labels","id":3280974,"number":187,"title":"4.1.25.Final","description":"","creator":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":52,"closed_issues":43,"state":"open","created_at":"2018-04-19T13:10:45Z","updated_at":"2018-05-12T18:39:20Z","due_on":null,"closed_at":null},"comments":0,"created_at":"2018-04-05T22:21:34Z","updated_at":"2018-04-21T06:23:41Z","closed_at":"2018-04-21T06:23:16Z","author_association":"CONTRIBUTOR","body":"### Expected behavior\r\n\r\nWhen stream 1 is created from a h2c upgrade, the resultant stream should signal that it has sent the headers for the client, and that it has received the headers for the server.\r\n\r\n### Actual behavior\r\n\r\nThe stream state doesn't acknowledge that the request headers have been sent/received.\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\nAdd the following test cases to the Http2ConnectionHandlerTest suite:\r\n\r\n```java\r\n    @Test\r\n    public void clientUpgradeSetsStreamHeadersSent() throws Exception {\r\n        when(local.createStream(STREAM_ID, true)).thenReturn(stream);\r\n        handler = newHandler();\r\n        handler.onHttpClientUpgrade();\r\n        Http2Stream upgradeStream = handler.connection().stream(HTTP_UPGRADE_STREAM_ID);\r\n        assertSame(stream, upgradeStream);\r\n        verify(stream).headersSent(false);\r\n    }\r\n\r\n    @Test\r\n    public void serverUpgradeSetsStreamHeadersReceived() throws Exception {\r\n        when(connection.isServer()).thenReturn(true);\r\n        when(remote.createStream(STREAM_ID, true)).thenReturn(stream);\r\n        handler = newHandler();\r\n        handler.onHttpServerUpgrade(new Http2Settings());\r\n        Http2Stream upgradeStream = handler.connection().stream(HTTP_UPGRADE_STREAM_ID);\r\n        assertSame(stream, upgradeStream);\r\n        verify(stream).headersReceived(false);\r\n    }\r\n```\r\n\r\n### Netty version\r\n\r\n4.1 branch.\r\n\r\n### JVM version (e.g. `java -version`)\r\n\r\nopenjdk version \"1.8.0_162\"\r\n\r\n### OS version (e.g. `uname -a`)\r\n\r\nOSX Darwin Kernel Version 17.5.0","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7842","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7842/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7842/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7842/events","html_url":"https://github.com/netty/netty/issues/7842","id":311462070,"number":7842,"title":"netty-dev-tools dependency not built early enough","user":{"login":"davidmoten","id":318187,"avatar_url":"https://avatars3.githubusercontent.com/u/318187?v=4","gravatar_id":"","url":"https://api.github.com/users/davidmoten","html_url":"https://github.com/davidmoten","followers_url":"https://api.github.com/users/davidmoten/followers","following_url":"https://api.github.com/users/davidmoten/following{/other_user}","gists_url":"https://api.github.com/users/davidmoten/gists{/gist_id}","starred_url":"https://api.github.com/users/davidmoten/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davidmoten/subscriptions","organizations_url":"https://api.github.com/users/davidmoten/orgs","repos_url":"https://api.github.com/users/davidmoten/repos","events_url":"https://api.github.com/users/davidmoten/events{/privacy}","received_events_url":"https://api.github.com/users/davidmoten/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/186","html_url":"https://github.com/netty/netty/milestone/186","labels_url":"https://api.github.com/repos/netty/netty/milestones/186/labels","id":3242832,"number":186,"title":"4.1.24.Final","description":"","creator":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":24,"state":"closed","created_at":"2018-04-04T17:23:05Z","updated_at":"2018-04-19T17:14:24Z","due_on":null,"closed_at":"2018-04-19T17:14:24Z"},"comments":1,"created_at":"2018-04-05T03:37:03Z","updated_at":"2018-04-10T08:37:48Z","closed_at":"2018-04-10T08:37:03Z","author_association":"CONTRIBUTOR","body":"### Expected behavior\r\nWhen I clone the repository and call `mvn clean install` it should complete without error.\r\n\r\n### Actual behavior\r\n`netty-common` build fails because `netty-dev-tools` has not been built yet.\r\n\r\n### Steps to reproduce\r\n\r\nas above\r\n\r\n### Minimal yet complete reproducer code (or URL to code)\r\nas above \r\n\r\n### Netty version\r\n4.1.24.Final-SNAPSHOT\r\n\r\n### JVM version (e.g. `java -version`)\r\n1.8.0_161\r\n\r\n### OS version (e.g. `uname -a`)\r\n`Linux ubuntu1 3.19.0-33-generic #38~14.04.1-Ubuntu SMP Fri Nov 6 18:17:28 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux`\r\n\r\n### How to fix\r\nFix might be to add `netty-dev-tools` to `common/pom.xml` as a *test* scoped dependency (with comments to indicate why it's there) so maven build is aware that `netty-common` depends on `netty-dev-tools`.\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7837","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7837/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7837/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7837/events","html_url":"https://github.com/netty/netty/issues/7837","id":310829265,"number":7837,"title":"CorsHandler do writeAndFlush in override ChannelHandlerContext#write method","user":{"login":"amizurov","id":8257855,"avatar_url":"https://avatars1.githubusercontent.com/u/8257855?v=4","gravatar_id":"","url":"https://api.github.com/users/amizurov","html_url":"https://github.com/amizurov","followers_url":"https://api.github.com/users/amizurov/followers","following_url":"https://api.github.com/users/amizurov/following{/other_user}","gists_url":"https://api.github.com/users/amizurov/gists{/gist_id}","starred_url":"https://api.github.com/users/amizurov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amizurov/subscriptions","organizations_url":"https://api.github.com/users/amizurov/orgs","repos_url":"https://api.github.com/users/amizurov/repos","events_url":"https://api.github.com/users/amizurov/events{/privacy}","received_events_url":"https://api.github.com/users/amizurov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"assignees":[{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/netty/netty/milestones/185","html_url":"https://github.com/netty/netty/milestone/185","labels_url":"https://api.github.com/repos/netty/netty/milestones/185/labels","id":3132891,"number":185,"title":"4.1.23.Final","description":"","creator":{"login":"normanmaurer","id":439362,"avatar_url":"https://avatars3.githubusercontent.com/u/439362?v=4","gravatar_id":"","url":"https://api.github.com/users/normanmaurer","html_url":"https://github.com/normanmaurer","followers_url":"https://api.github.com/users/normanmaurer/followers","following_url":"https://api.github.com/users/normanmaurer/following{/other_user}","gists_url":"https://api.github.com/users/normanmaurer/gists{/gist_id}","starred_url":"https://api.github.com/users/normanmaurer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/normanmaurer/subscriptions","organizations_url":"https://api.github.com/users/normanmaurer/orgs","repos_url":"https://api.github.com/users/normanmaurer/repos","events_url":"https://api.github.com/users/normanmaurer/events{/privacy}","received_events_url":"https://api.github.com/users/normanmaurer/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":53,"state":"closed","created_at":"2018-02-21T12:49:20Z","updated_at":"2018-04-05T17:43:12Z","due_on":null,"closed_at":"2018-04-04T17:26:12Z"},"comments":2,"created_at":"2018-04-03T13:07:47Z","updated_at":"2018-04-04T06:12:01Z","closed_at":"2018-04-03T19:11:52Z","author_association":"NONE","body":"Do not really understand, why in `CorsHandler` invoked writeAndFlash ? It's strange side effect.\r\n### Actual behavior\r\n\r\nhttps://github.com/netty/netty/blob/473f6a6edb8353728ea8e711ac8241ddc21adf08/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java#L198-L209\r\n### Steps to reproduce\r\nAdd `CorsHandler` to pipeline then write response i
19c0
n your own handler, response flushed automatically.\r\n\r\n### Netty version\r\n4.1.22\r\n","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7836","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7836/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7836/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7836/events","html_url":"https://github.com/netty/netty/issues/7836","id":310815007,"number":7836,"title":"Netty Websocket version 13 broken.","user":{"login":"iamybj","id":1802494,"avatar_url":"https://avatars1.githubusercontent.com/u/1802494?v=4","gravatar_id":"","url":"https://api.github.com/users/iamybj","html_url":"https://github.com/iamybj","followers_url":"https://api.github.com/users/iamybj/followers","following_url":"https://api.github.com/users/iamybj/following{/other_user}","gists_url":"https://api.github.com/users/iamybj/gists{/gist_id}","starred_url":"https://api.github.com/users/iamybj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iamybj/subscriptions","organizations_url":"https://api.github.com/users/iamybj/orgs","repos_url":"https://api.github.com/users/iamybj/repos","events_url":"https://api.github.com/users/iamybj/events{/privacy}","received_events_url":"https://api.github.com/users/iamybj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-04-03T12:26:39Z","updated_at":"2018-04-12T19:23:43Z","closed_at":"2018-04-12T19:23:43Z","author_association":"NONE","body":"I test netty code as follows:\r\n`\r\n        if(HttpUtil.is100ContinueExpected(request)) {\r\n            send100Continue(ctx);\r\n        }\r\n`\r\nbut I found it doest not work.\r\nwebsocket 13 headers changed:\r\n`\r\n[\r\n  {\r\n    \"Host\": \"localhost:8888\"\r\n  },\r\n  {\r\n    \"Connection\": \"Upgrade\"\r\n  },\r\n  {\r\n    \"Pragma\": \"no-cache\"\r\n  },\r\n  {\r\n    \"Cache-Control\": \"no-cache\"\r\n  },\r\n  {\r\n    \"Upgrade\": \"websocket\"\r\n  },\r\n  {\r\n    \"Origin\": \"http://localhost:8888\"\r\n  },\r\n  {\r\n    \"Sec-WebSocket-Version\": \"13\"\r\n  },\r\n  {\r\n    \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\"\r\n  },\r\n  {\r\n    \"Accept-Encoding\": \"gzip, deflate, br\"\r\n  },\r\n  {\r\n    \"Accept-Language\": \"en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7\"\r\n  },\r\n  {\r\n    \"Cookie\": \"Idea-60240c44=4826819f-28bf-4766-a4c3-88d79f7419be\"\r\n  },\r\n  {\r\n    \"Sec-WebSocket-Key\": \"9eC/0e9oWtWIFm/ukI4wEA==\"\r\n  },\r\n  {\r\n    \"Sec-WebSocket-Extensions\": \"permessage-deflate; client_max_window_bits\"\r\n  },\r\n  {\r\n    \"content-length\": \"0\"\r\n  }\r\n]\r\n`\r\nno expect header, how to resolve ?","score":1.0},{"url":"https://api.github.com/repos/netty/netty/issues/7835","repository_url":"https://api.github.com/repos/netty/netty","labels_url":"https://api.github.com/repos/netty/netty/issues/7835/labels{/name}","comments_url":"https://api.github.com/repos/netty/netty/issues/7835/comments","events_url":"https://api.github.com/repos/netty/netty/issues/7835/events","html_url":"https://github.com/netty/netty/issues/7835","id":310801074,"number":7835,"title":"Grammar parser generator","user":{"login":"rvansa","id":2167869,"avatar_url":"https://avatars0.githubusercontent.com/u/2167869?v=4","gravatar_id":"","url":"https://api.github.com/users/rvansa","html_url":"https://github.com/rvansa","followers_url":"https://api.github.com/users/rvansa/followers","following_url":"https://api.github.com/users/rvansa/following{/other_user}","gists_url":"https://api.github.com/users/rvansa/gists{/gist_id}","starred_url":"https://api.github.com/users/rvansa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rvansa/subscriptions","organizations_url":"https://api.github.com/users/rvansa/orgs","repos_url":"https://api.github.com/users/rvansa/repos","events_url":"https://api.github.com/users/rvansa/events{/privacy}","received_events_url":"https://api.github.com/users/rvansa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-04-03T11:40:13Z","updated_at":"2018-04-16T10:02:19Z","closed_at":"2018-04-16T10:02:19Z","author_association":"NONE","body":"Hi,\r\n\r\nin Infinispan project we use Netty on server side to parse the (home-grown) Hot Rod (binary) protocol. I've found that a hand-written decoder (based on ByteToMessageDecoder) for this protocol uses suboptimal practices and allocates more than necessary (e.g. parsing methods returning `Optional`s etc.). Therefore I've decided to describe the protocol in an [abstract grammar](https://github.com/rvansa/infinispan/blob/grammar/server/hotrod/src/main/resources/hotrod.g) and create a tooling (maven plugin) that would create a Netty-suited parser - one that can pause the parsing at any time when there's no more input in the `ByteBuf`, and that does not allocate any garbage on its own. Conceptually it's a finite-state machine with some side effects, implemented as an integer state and a big switch. Please check out the [details about the grammar](https://github.com/rvansa/infinispan/blob/grammar/server/automaton-maven-plugin/src/main/java/org/infinispan/server/automaton/generator/package-info.java).\r\n\r\nI have written this with general usability in mind as this is not limited to Infinispan/Hot Rod. Therefore I'd like to donate this to Netty directly. Not sure if I should file PR against the main repo or if this should go to a separate repository.\r\n\r\nA maintenance question has to come, ofc; I can't guarantee anything but best-effort from myself. However the code is not very complex, it boils down mostly to 500 lines of [parsing the grammar](https://github.com/rvansa/infinispan/blob/grammar/server/automaton-maven-plugin/src/main/java/org/infinispan/server/automaton/generator/Parser.java), 350 lines of [FSM generator](https://github.com/rvansa/infinispan/blob/grammar/server/automaton-maven-plugin/src/main/java/org/infinispan/server/automaton/generator/Machine.java) and several constructs around 100 lines or less; see [the package here](https://github.com/rvansa/infinispan/blob/grammar/server/automaton-maven-plugin/src/main/java/org/infinispan/server/automaton/generator/Machine.java).\r\n\r\nWDYT?","score":1.0}]}
0

