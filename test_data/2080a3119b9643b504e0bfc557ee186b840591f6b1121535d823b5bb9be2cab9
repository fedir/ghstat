HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Nov 2020 18:10:40 GMT
Link: <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fipkn%2Fcrow+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=https%3A%2F%2Fgithub.com%2Fipkn%2Fcrow+type%3Aissue+state%3Aclosed&page=2>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
Vary: Accept, Authorization, Cookie, X-GitHub-OTP
Vary: Accept-Encoding, Accept, X-Requested-With
Vary: Accept-Encoding
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: D2AC:13F4:3D4285A:469CB3D:5FB01D9F
X-Oauth-Scopes: repo
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 11
X-Ratelimit-Reset: 1605377483
X-Ratelimit-Used: 19
X-Xss-Protection: 1; mode=block

1690a
{"total_count":49,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/conan-io/conan-center-index/issues/3064","repository_url":"https://api.github.com/repos/conan-io/conan-center-index","labels_url":"https://api.github.com/repos/conan-io/conan-center-index/issues/3064/labels{/name}","comments_url":"https://api.github.com/repos/conan-io/conan-center-index/issues/3064/comments","events_url":"https://api.github.com/repos/conan-io/conan-center-index/issues/3064/events","html_url":"https://github.com/conan-io/conan-center-index/issues/3064","id":712829940,"node_id":"MDU6SXNzdWU3MTI4Mjk5NDA=","number":3064,"title":"[request] crow/0.1","user":{"login":"uilianries","id":4870173,"node_id":"MDQ6VXNlcjQ4NzAxNzM=","avatar_url":"https://avatars0.githubusercontent.com/u/4870173?v=4","gravatar_id":"","url":"https://api.github.com/users/uilianries","html_url":"https://github.com/uilianries","followers_url":"https://api.github.com/users/uilianries/followers","following_url":"https://api.github.com/users/uilianries/following{/other_user}","gists_url":"https://api.github.com/users/uilianries/gists{/gist_id}","starred_url":"https://api.github.com/users/uilianries/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uilianries/subscriptions","organizations_url":"https://api.github.com/users/uilianries/orgs","repos_url":"https://api.github.com/users/uilianries/repos","events_url":"https://api.github.com/users/uilianries/events{/privacy}","received_events_url":"https://api.github.com/users/uilianries/received_events","type":"User","site_admin":false},"labels":[{"id":2382653516,"node_id":"MDU6TGFiZWwyMzgyNjUzNTE2","url":"https://api.github.com/repos/conan-io/conan-center-index/labels/Hacktoberfest","name":"Hacktoberfest","color":"5067b7","default":false,"description":"Make your contribution for Hacktoberfest"},{"id":1534231054,"node_id":"MDU6TGFiZWwxNTM0MjMxMDU0","url":"https://api.github.com/repos/conan-io/conan-center-index/labels/library%20request","name":"library request","color":"c1ed95","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-10-01T13:10:38Z","updated_at":"2020-10-21T16:02:13Z","closed_at":"2020-10-21T16:02:13Z","author_association":"MEMBER","active_lock_reason":null,"body":"### Package Details\r\n  * Package Name/Version: **crow/0.1**\r\n  * Website: **https://github.com/ipkn/crow**\r\n  * Source code: **https://github.com/ipkn/crow**\r\n\r\n\r\n### Description Of The Library / Tool\r\n\r\nCrow is very fast and easy to use C++ micro web framework (inspired by Python Flask) \r\n\r\nRelated to #621\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/mrozigor/crow/issues/7","repository_url":"https://api.github.com/repos/mrozigor/crow","labels_url":"https://api.github.com/repos/mrozigor/crow/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/mrozigor/crow/issues/7/comments","events_url":"https://api.github.com/repos/mrozigor/crow/issues/7/events","html_url":"https://github.com/mrozigor/crow/issues/7","id":717289562,"node_id":"MDU6SXNzdWU3MTcyODk1NjI=","number":7,"title":"Documentation","user":{"login":"The-EDev","id":60552923,"node_id":"MDQ6VXNlcjYwNTUyOTIz","avatar_url":"https://avatars2.githubusercontent.com/u/60552923?v=4","gravatar_id":"","url":"https://api.github.com/users/The-EDev","html_url":"https://github.com/The-EDev","followers_url":"https://api.github.com/users/The-EDev/followers","following_url":"https://api.github.com/users/The-EDev/following{/other_user}","gists_url":"https://api.github.com/users/The-EDev/gists{/gist_id}","starred_url":"https://api.github.com/users/The-EDev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/The-EDev/subscriptions","organizations_url":"https://api.github.com/users/The-EDev/orgs","repos_url":"https://api.github.com/users/The-EDev/repos","events_url":"https://api.github.com/users/The-EDev/events{/privacy}","received_events_url":"https://api.github.com/users/The-EDev/received_events","type":"User","site_admin":false},"labels":[{"id":2410525534,"node_id":"MDU6TGFiZWwyNDEwNTI1NTM0","url":"https://api.github.com/repos/mrozigor/crow/labels/task","name":"task","color":"808080","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-10-08T12:13:36Z","updated_at":"2020-10-14T19:45:38Z","closed_at":"2020-10-14T19:45:38Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"in response to https://github.com/ipkn/crow/issues/45, https://github.com/ipkn/crow/issues/180, https://github.com/ipkn/crow/issues/288.\r\n\r\nWe could either use the wiki and just explain things or set something like doxygen up.\r\n\r\neither way some explanation as to how every part works and some form of API reference is needed.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/mrozigor/crow/issues/18","repository_url":"https://api.github.com/repos/mrozigor/crow","labels_url":"https://api.github.com/repos/mrozigor/crow/issues/18/labels{/name}","comments_url":"https://api.github.com/repos/mrozigor/crow/issues/18/comments","events_url":"https://api.github.com/repos/mrozigor/crow/issues/18/events","html_url":"https://github.com/mrozigor/crow/issues/18","id":723887252,"node_id":"MDU6SXNzdWU3MjM4ODcyNTI=","number":18,"title":"potentially useful PRs","user":{"login":"The-EDev","id":60552923,"node_id":"MDQ6VXNlcjYwNTUyOTIz","avatar_url":"https://avatars2.githubusercontent.com/u/60552923?v=4","gravatar_id":"","url":"https://api.github.com/users/The-EDev","html_url":"https://github.com/The-EDev","followers_url":"https://api.github.com/users/The-EDev/followers","following_url":"https://api.github.com/users/The-EDev/following{/other_user}","gists_url":"https://api.github.com/users/The-EDev/gists{/gist_id}","starred_url":"https://api.github.com/users/The-EDev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/The-EDev/subscriptions","organizations_url":"https://api.github.com/users/The-EDev/orgs","repos_url":"https://api.github.com/users/The-EDev/repos","events_url":"https://api.github.com/users/The-EDev/events{/privacy}","received_events_url":"https://api.github.com/users/The-EDev/received_events","type":"User","site_admin":false},"labels":[{"id":2410525534,"node_id":"MDU6TGFiZWwyNDEwNTI1NTM0","url":"https://api.github.com/repos/mrozigor/crow/labels/task","name":"task","color":"808080","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"The-EDev","id":60552923,"node_id":"MDQ6VXNlcjYwNTUyOTIz","avatar_url":"https://avatars2.githubusercontent.com/u/60552923?v=4","gravatar_id":"","url":"https://api.github.com/users/The-EDev","html_url":"https://github.com/The-EDev","followers_url":"https://api.github.com/users/The-EDev/followers","following_url":"https://api.github.com/users/The-EDev/following{/other_user}","gists_url":"https://api.github.com/users/The-EDev/gists{/gist_id}","starred_url":"https://api.github.com/users/The-EDev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/The-EDev/subscriptions","organizations_url":"https://api.github.com/users/The-EDev/orgs","repos_url":"https://api.github.com/users/The-EDev/repos","events_url":"https://api.github.com/users/The-EDev/events{/privacy}","received_events_url":"https://api.github.com/users/The-EDev/received_events","type":"User","site_admin":false},"assignees":[{"login":"The-EDev","id":60552923,"node_id":"MDQ6VXNlcjYwNTUyOTIz","avatar_url":"https://avatars2.githubusercontent.com/u/60552923?v=4","gravatar_id":"","url":"https://api.github.com/users/The-EDev","html_url":"https://github.com/The-EDev","followers_url":"https://api.github.com/users/The-EDev/followers","following_url":"https://api.github.com/users/The-EDev/following{/other_user}","gists_url":"https://api.github.com/users/The-EDev/gists{/gist_id}","starred_url":"https://api.github.com/users/The-EDev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/The-EDev/subscriptions","organizations_url":"https://api.github.com/users/The-EDev/orgs","repos_url":"https://api.github.com/users/The-EDev/repos","events_url":"https://api.github.com/users/The-EDev/events{/privacy}","received_events_url":"https://api.github.com/users/The-EDev/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2020-10-18T02:16:03Z","updated_at":"2020-11-09T21:02:18Z","closed_at":"2020-11-09T21:02:18Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"the following PRs could be useful.\r\n\r\nthey should probably be cloned, tested (thoroughly, we don't need another sendifle), cleaned up, and merged.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/mrozigor/crow/issues/4","repository_url":"https://api.github.com/repos/mrozigor/crow","labels_url":"https://api.github.com/repos/mrozigor/crow/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/mrozigor/crow/issues/4/comments","events_url":"https://api.github.com/repos/mrozigor/crow/issues/4/events","html_url":"https://github.com/mrozigor/crow/issues/4","id":717260162,"node_id":"MDU6SXNzdWU3MTcyNjAxNjI=","number":4,"title":"Add possibility to receive bytes in request (to allow i.e. to receive images).","user":{"login":"mrozigor","id":4171337,"node_id":"MDQ6VXNlcjQxNzEzMzc=","avatar_url":"https://avatars3.githubusercontent.com/u/4171337?v=4","gravatar_id":"","url":"https://api.github.com/users/mrozigor","html_url":"https://github.com/mrozigor","followers_url":"https://api.github.com/users/mrozigor/followers","following_url":"https://api.github.com/users/mrozigor/following{/other_user}","gists_url":"https://api.github.com/users/mrozigor/gists{/gist_id}","starred_url":"https://api.github.com/users/mrozigor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrozigor/subscriptions","organizations_url":"https://api.github.com/users/mrozigor/orgs","repos_url":"https://api.github.com/users/mrozigor/repos","events_url":"https://api.github.com/users/mrozigor/events{/privacy}","received_events_url":"https://api.github.com/users/mrozigor/received_events","type":"User","site_admin":false},"labels":[{"id":2409912816,"node_id":"MDU6TGFiZWwyNDA5OTEyODE2","url":"https://api.github.com/repos/mrozigor/crow/labels/feature","name":"feature","color":"1d76db","default":false,"description":""}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/mrozigor/crow/milestones/1","html_url":"https://github.com/mrozigor/crow/milestone/1","labels_url":"https://api.github.com/repos/mrozigor/crow/milestones/1/labels","id":6029450,"node_id":"MDk6TWlsZXN0b25lNjAyOTQ1MA==","number":1,"title":"0.2","description":"The first release in about 3 years, adding support for boost 1.7, fixing some bugs and adding support to essential features for running a web server.\r\n\r\nThis release is intended to give developers using Crow something to use (without resorting to cloning the repo) while HTTP/2 support and other larger features are being worked on.\r\n\r\nNote: These releases are not official since @ipkn was not contacted during the decision making or development of the releases (although his input was looked at and considered through the various issues and PRs he had commented on).","creator":{"login":"The-EDev","id":60552923,"node_id":"MDQ6VXNlcjYwNTUyOTIz","avatar_url":"https://avatars2.githubusercontent.com/u/60552923?v=4","gravatar_id":"","url":"https://api.github.com/users/The-EDev","html_url":"https://github.com/The-EDev","followers_url":"https://api.github.com/users/The-EDev/followers","following_url":"https://api.github.com/users/The-EDev/following{/other_user}","gists_url":"https://api.github.com/users/The-EDev/gists{/gist_id}","starred_url":"https://api.github.com/users/The-EDev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/The-EDev/subscriptions","organizations_url":"https://api.github.com/users/The-EDev/orgs","repos_url":"https://api.github.com/users/The-EDev/repos","events_url":"https://api.github.com/users/The-EDev/events{/privacy}","received_events_url":"https://api.github.com/users/The-EDev/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":7,"state":"closed","created_at":"2020-10-25T23:33:13Z","updated_at":"2020-11-01T01:51:00Z","due_on":null,"closed_at":"2020-11-01T01:51:00Z"},"comments":7,"created_at":"2020-10-08T11:27:55Z","updated_at":"2020-10-31T15:59:03Z","closed_at":"2020-10-21T16:34:24Z","author_association":"OWNER","active_lock_reason":null,"body":"In response to https://github.com/ipkn/crow/issues/371","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/mesonbuild/wrapdb/issues/43","repository_url":"https://api.github.com/repos/mesonbuild/wrapdb","labels_url":"https://api.github.com/repos/mesonbuild/wrapdb/issues/43/labels{/name}","comments_url":"https://api.github.com/repos/mesonbuild/wrapdb/issues/43/comments","events_url":"https://api.github.com/repos/mesonbuild/wrapdb/issues/43/events","html_url":"https://github.com/mesonbuild/wrapdb/issues/43","id":695371540,"node_id":"MDU6SXNzdWU2OTUzNzE1NDA=","number":43,"title":"new wrap: crow","user":{"login":"michaelbrockus","id":55331536,"node_id":"MDQ6VXNlcjU1MzMxNTM2","avatar_url":"https://avatars3.githubusercontent.com/u/55331536?v=4","gravatar_id":"","url":"https://api.github.com/users/michaelbrockus","html_url":"https://github.com/michaelbrockus","followers_url":"https://api.github.com/users/michaelbrockus/followers","following_url":"https://api.github.com/users/michaelbrockus/following{/other_user}","gists_url":"https://api.github.com/users/michaelbrockus/gists{/gist_id}","starred_url":"https://api.github.com/users/michaelbrockus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/michaelbrockus/subscriptions","organizations_url":"https://api.github.com/users/michaelbrockus/orgs","repos_url":"https://api.github.com/users/michaelbrockus/repos","events_url":"https://api.github.com/users/michaelbrockus/events{/privacy}","received_events_url":"https://api.github.com/users/michaelbrockus/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-07T20:15:30Z","updated_at":"2020-09-19T19:01:53Z","closed_at":"2020-09-19T19:01:52Z","author_association":"NONE","active_lock_reason":null,"body":"upstream url: https://github.com/ipkn/crow/archive/v0.1.zip\r\nversion: 0.1","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/385","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/385/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/385/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/385/events","html_url":"https://github.com/ipkn/crow/issues/385","id":718737579,"node_id":"MDU6SXNzdWU3MTg3Mzc1Nzk=","number":385,"title":"Getting \"invalid json object\"","user":{"login":"bougayez","id":72677343,"node_id":"MDQ6VXNlcjcyNjc3MzQz","avatar_url":"https://avatars2.githubusercontent.com/u/72677343?v=4","gravatar_id":"","url":"https://api.github.com/users/bougayez","html_url":"https://github.com/bougayez","followers_url":"https://api.github.com/users/bougayez/followers","following_url":"https://api.github.com/users/bougayez/following{/other_user}","gists_url":"https://api.github.com/users/bougayez/gists{/gist_id}","starred_url":"https://api.github.com/users/bougayez/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bougayez/subscriptions","organizations_url":"https://api.github.com/users/bougayez/orgs","repos_url":"https://api.github.com/users/bougayez/repos","events_url":"https://api.github.com/users/bougayez/events{/privacy}","received_events_url":"https://api.github.com/users/bougayez/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2020-10-11T01:47:00Z","updated_at":"2020-10-11T18:51:36Z","closed_at":"2020-10-11T18:51:36Z","author_association":"NONE","active_lock_reason":null,"body":"when the code tries :\r\n`auto x = crow::json::load(req.body);`\r\nI get this error : \r\n`An uncaught exception occurred: invalid json object`\r\n\r\nHere is the full piece of code : \r\n`CROW_ROUTE(app, \"/\")\r\n  .methods(\"GET\"_method, \"POST\"_method)\r\n  ([](const request& req, response &res){\r\n    if(req.method == \"POST\"_method)\r\n    {\r\n         auto x = crow::json::load(req.body);\r\n          cout <<  x[\"fname\"] << \" \" << x[\"email\"] << endl;\r\n    }\r\n      else\r\n        sendHtml(res, \"index\");\r\n  });`\r\n\r\nYes i want to output the POST request body to stdout!","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/FumiyukiKato/tee-psi/issues/17","repository_url":"https://api.github.com/repos/FumiyukiKato/tee-psi","labels_url":"https://api.github.com/repos/FumiyukiKato/tee-psi/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/FumiyukiKato/tee-psi/issues/17/comments","events_url":"https://api.github.com/repos/FumiyukiKato/tee-psi/issues/17/events","html_url":"https://github.com/FumiyukiKato/tee-psi/issues/17","id":621460493,"node_id":"MDU6SXNzdWU2MjE0NjA0OTM=","number":17,"title":"http server","user":{"login":"FumiyukiKato","id":27177602,"node_id":"MDQ6VXNlcjI3MTc3NjAy","avatar_url":"https://avatars0.githubusercontent.com/u/27177602?v=4","gravatar_id":"","url":"https://api.github.com/users/FumiyukiKato","html_url":"https://github.com/FumiyukiKato","followers_url":"https://api.github.com/users/FumiyukiKato/followers","following_url":"https://api.github.com/users/FumiyukiKato/following{/other_user}","gists_url":"https://api.github.com/users/FumiyukiKato/gists{/gist_id}","starred_url":"https://api.github.com/users/FumiyukiKato/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FumiyukiKato/subscriptions","organizations_url":"https://api.github.com/users/FumiyukiKato/orgs","repos_url":"https://api.github.com/users/FumiyukiKato/repos","events_url":"https://api.github.com/users/FumiyukiKato/events{/privacy}","received_events_url":"https://api.github.com/users/FumiyukiKato/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-05-20T04:59:13Z","updated_at":"2020-06-03T18:37:23Z","closed_at":"2020-06-03T18:37:23Z","author_association":"OWNER","active_lock_reason":null,"body":"https://github.com/ipkn/crow/blob/master/include/crow/json.h\r\n\r\nhttps://github.com/micwypych/wd-cpp","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/boostorg/beast/issues/1998","repository_url":"https://api.github.com/repos/boostorg/beast","labels_url":"https://api.github.com/repos/boostorg/beast/issues/1998/labels{/name}","comments_url":"https://api.github.com/repos/boostorg/beast/issues/1998/comments","events_url":"https://api.github.com/repos/boostorg/beast/issues/1998/events","html_url":"https://github.com/boostorg/beast/issues/1998","id":645596730,"node_id":"MDU6SXNzdWU2NDU1OTY3MzA=","number":1998,"title":"[DOC] Performance Benchmark for Beast? ","user":{"login":"scm-ns","id":7076367,"node_id":"MDQ6VXNlcjcwNzYzNjc=","avatar_url":"https://avatars2.githubusercontent.com/u/7076367?v=4","gravatar_id":"","url":"https://api.github.com/users/scm-ns","html_url":"https://github.com/scm-ns","followers_url":"https://api.github.com/users/scm-ns/followers","following_url":"https://api.github.com/users/scm-ns/following{/other_user}","gists_url":"https://api.github.com/users/scm-ns/gists{/gist_id}","starred_url":"https://api.github.com/users/scm-ns/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scm-ns/subscriptions","organizations_url":"https://api.github.com/users/scm-ns/orgs","repos_url":"https://api.github.com/users/scm-ns/repos","events_url":"https://api.github.com/users/scm-ns/events{/privacy}","received_events_url":"https://api.github.com/users/scm-ns/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-06-25T14:11:46Z","updated_at":"2020-07-01T18:23:05Z","closed_at":"2020-07-01T18:23:05Z","author_association":"NONE","active_lock_reason":null,"body":"Not an issue. I was wondering if there where any metrics on beast compared to other webservers? \r\n\r\nNumber of requests/sec etc? Something like the Benchmark performance found here : https://github.com/ipkn/crow. Would be very useful when making design decisions \r\n\r\nWhile we are on the topic of performance, is there a resolution to this issue : https://github.com/boostorg/beast/issues/1893? \r\nHow can we avoid the penalty for the polymorphic allocation. The solution suggested there didn't seem clear to me. \r\n\r\nThanks for the library!  \r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/oatpp/oatpp/issues/215","repository_url":"https://api.github.com/repos/oatpp/oatpp","labels_url":"https://api.github.com/repos/oatpp/oatpp/issues/215/labels{/name}","comments_url":"https://api.github.com/repos/oatpp/oatpp/issues/215/comments","events_url":"https://api.github.com/repos/oatpp/oatpp/issues/215/events","html_url":"https://github.com/oatpp/oatpp/issues/215","id":594263272,"node_id":"MDU6SXNzdWU1OTQyNjMyNzI=","number":215,"title":"Path Variables Mapping","user":{"login":"alfredtofu","id":1112801,"node_id":"MDQ6VXNlcjExMTI4MDE=","avatar_url":"https://avatars0.githubusercontent.com/u/1112801?v=4","gravatar_id":"","url":"https://api.github.com/users/alfredtofu","html_url":"https://github.com/alfredtofu","followers_url":"https://api.github.com/users/alfredtofu/followers","following_url":"https://api.github.com/users/alfredtofu/following{/other_user}","gists_url":"https://api.github.com/users/alfredtofu/gists{/gist_id}","starred_url":"https://api.github.com/users/alfredtofu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alfredtofu/subscriptions","organizations_url":"https://api.github.com/users/alfredtofu/orgs","repos_url":"https://api.github.com/users/alfredtofu/repos","events_url":"https://api.github.com/users/alfredtofu/events{/privacy}","received_events_url":"https://api.github.com/users/alfredtofu/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-04-05T05:12:19Z","updated_at":"2020-04-05T05:44:49Z","closed_at":"2020-04-05T05:44:49Z","author_association":"NONE","active_lock_reason":null,"body":"crow supports path variables for multi-level, does oatpp have similar functions? For example, if define as follow:\r\n```\r\n  CROW_ROUTE(app, \"/file/<path>\")\r\n```\r\nthen this router can process `/file/a`, `/file/a/b/` and `/file/a/b/c`.\r\n\r\nHere are the definition in crow: https://github.com/ipkn/crow/blob/49edf898a5b9a39a0d69072cc2434c4f23692908/include/crow/routing.h#L790","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/oatpp/oatpp/issues/194","repository_url":"https://api.github.com/repos/oatpp/oatpp","labels_url":"https://api.github.com/repos/oatpp/oatpp/issues/194/labels{/name}","comments_url":"https://api.github.com/repos/oatpp/oatpp/issues/194/comments","events_url":"https://api.github.com/repos/oatpp/oatpp/issues/194/events","html_url":"https://github.com/oatpp/oatpp/issues/194","id":557776370,"node_id":"MDU6SXNzdWU1NTc3NzYzNzA=","number":194,"title":"Support for middleware?","user":{"login":"prsolucoes","id":395096,"node_id":"MDQ6VXNlcjM5NTA5Ng==","avatar_url":"https://avatars3.githubusercontent.com/u/395096?v=4","gravatar_id":"","url":"https://api.github.com/users/prsolucoes","html_url":"https://github.com/prsolucoes","followers_url":"https://api.github.com/users/prsolucoes/followers","following_url":"https://api.github.com/users/prsolucoes/following{/other_user}","gists_url":"https://api.github.com/users/prsolucoes/gists{/gist_id}","starred_url":"https://api.github.com/users/prsolucoes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prsolucoes/subscriptions","organizations_url":"https://api.github.com/users/prsolucoes/orgs","repos_url":"https://api.github.com/users/prsolucoes/repos","events_url":"https://api.github.com/users/prsolucoes/events{/privacy}","received_events_url":"https://api.github.com/users/prsolucoes/received_events","type":"User","site_admin":false},"labels":[{"id":865098607,"node_id":"MDU6TGFiZWw4NjUwOTg2MDc=","url":"https://api.github.com/repos/oatpp/oatpp/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-01-30T21:49:21Z","updated_at":"2020-04-01T22:49:59Z","closed_at":"2020-04-01T22:49:59Z","author_association":"NONE","active_lock_reason":null,"body":"Hi,\r\n\r\nIt has support for middleware?\r\n\r\nExample in other framework:\r\nhttps://github.com/ipkn/crow/wiki/Middleware\r\nor\r\nhttps://www.alexedwards.net/blog/making-and-using-middleware\r\n\r\nThanks.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/qicosmos/cinatra/issues/137","repository_url":"https://api.github.com/repos/qicosmos/cinatra","labels_url":"https://api.github.com/repos/qicosmos/cinatra/issues/137/labels{/name}","comments_url":"https://api.github.com/repos/qicosmos/cinatra/issues/137/comments","events_url":"https://api.github.com/repos/qicosmos/cinatra/issues/137/events","html_url":"https://github.com/qicosmos/cinatra/issues/137","id":589588567,"node_id":"MDU6SXNzdWU1ODk1ODg1Njc=","number":137,"title":"代码和crow很像","user":{"login":"xionghuy","id":16285783,"node_id":"MDQ6VXNlcjE2Mjg1Nzgz","avatar_url":"https://avatars2.githubusercontent.com/u/16285783?v=4","gravatar_id":"","url":"https://api.github.com/users/xionghuy","html_url":"https://github.com/xionghuy","followers_url":"https://api.github.com/users/xionghuy/followers","following_url":"https://api.github.com/users/xionghuy/following{/other_user}","gists_url":"https://api.github.com/users/xionghuy/gists{/gist_id}","starred_url":"https://api.github.com/users/xionghuy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xionghuy/subscriptions","organizations_url":"https://api.github.com/users/xionghuy/orgs","repos_url":"https://api.github.com/users/xionghuy/repos","events_url":"https://api.github.com/users/xionghuy/events{/privacy}","received_events_url":"https://api.github.com/users/xionghuy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-03-28T14:34:17Z","updated_at":"2020-04-21T01:27:32Z","closed_at":"2020-04-12T01:37:29Z","author_association":"NONE","active_lock_reason":null,"body":"2个效率差距咋样？？","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/267","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/267/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/267/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/267/events","html_url":"https://github.com/ipkn/crow/issues/267","id":279321154,"node_id":"MDU6SXNzdWUyNzkzMjExNTQ=","number":267,"title":"Pass variables into the template engine?","user":{"login":"kretash","id":9167203,"node_id":"MDQ6VXNlcjkxNjcyMDM=","avatar_url":"https://avatars2.githubusercontent.com/u/9167203?v=4","gravatar_id":"","url":"https://api.github.com/users/kretash","html_url":"https://github.com/kretash","followers_url":"https://api.github.com/users/kretash/followers","following_url":"https://api.github.com/users/kretash/following{/other_user}","gists_url":"https://api.github.com/users/kretash/gists{/gist_id}","starred_url":"https://api.github.com/users/kretash/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kretash/subscriptions","organizations_url":"https://api.github.com/users/kretash/orgs","repos_url":"https://api.github.com/users/kretash/repos","events_url":"https://api.github.com/users/kretash/events{/privacy}","received_events_url":"https://api.github.com/users/kretash/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-12-05T10:24:53Z","updated_at":"2020-02-05T17:45:53Z","closed_at":"2020-02-05T17:45:53Z","author_association":"NONE","active_lock_reason":null,"body":"I'm porting some really really simple code from Flask and I'm wondering how to pass variables?\r\n\r\n```python\r\n@app.route('/hello/')\r\ndef hello():\r\n    return render_template('hello.html', name=\"Hello World\")\r\n```\r\n\r\nBut in crow I don't know how to pass that variable into the html. Do I have to parse it in myself?\r\n\r\n```cpp\r\n\tCROW_ROUTE( app, \"/\" )([]  #()\r\n\t{\r\n\t\tstd::ifstream t( \"hello.html\" );\r\n\t\tstd::string website( ( std::istreambuf_iterator<char>( t ) ), std::istreambuf_iterator<char>() );\r\n\t\tstd::string hello = \"Hello World\"; // ???\r\n\t\treturn website;\r\n\t} );\r\n```\r\n\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/oatpp/oatpp/issues/93","repository_url":"https://api.github.com/repos/oatpp/oatpp","labels_url":"https://api.github.com/repos/oatpp/oatpp/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/oatpp/oatpp/issues/93/comments","events_url":"https://api.github.com/repos/oatpp/oatpp/issues/93/events","html_url":"https://github.com/oatpp/oatpp/issues/93","id":464907839,"node_id":"MDU6SXNzdWU0NjQ5MDc4Mzk=","number":93,"title":"Could oatpp support Windows ?","user":{"login":"portsip","id":11405486,"node_id":"MDQ6VXNlcjExNDA1NDg2","avatar_url":"https://avatars3.githubusercontent.com/u/11405486?v=4","gravatar_id":"","url":"https://api.github.com/users/portsip","html_url":"https://github.com/portsip","followers_url":"https://api.github.com/users/portsip/followers","following_url":"https://api.github.com/users/portsip/following{/other_user}","gists_url":"https://api.github.com/users/portsip/gists{/gist_id}","starred_url":"https://api.github.com/users/portsip/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/portsip/subscriptions","organizations_url":"https://api.github.com/users/portsip/orgs","repos_url":"https://api.github.com/users/portsip/repos","events_url":"https://api.github.com/users/portsip/events{/privacy}","received_events_url":"https://api.github.com/users/portsip/received_events","type":"User","site_admin":false},"labels":[{"id":865098596,"node_id":"MDU6TGFiZWw4NjUwOTg1OTY=","url":"https://api.github.com/repos/oatpp/oatpp/labels/enhancement","name":"enhancement","color":"a1fcc1","default":true,"description":"New feature or request"},{"id":865098607,"node_id":"MDU6TGFiZWw4NjUwOTg2MDc=","url":"https://api.github.com/repos/oatpp/oatpp/labels/question","name":"question","color":"d876e3","default":true,"description":"Further information is requested"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2019-07-07T02:27:11Z","updated_at":"2019-11-06T03:40:02Z","closed_at":"2019-11-06T03:40:02Z","author_association":"NONE","active_lock_reason":null,"body":"We are plan use oatpp to replace the cpp-netlib in our project, we consider below libraries:\r\n\r\nOatpp\r\ncrow - https://github.com/ipkn/crow\r\npistache - https://github.com/oktal/pistache\r\n\r\nBut the crow is no longer maintained, the pistache and oatpp both not support Windows, since our project must support Windows, so may I know does Oatpp has any roadmap to support windows ?\r\n\r\nThanks","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/338","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/338/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/338/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/338/events","html_url":"https://github.com/ipkn/crow/issues/338","id":421931811,"node_id":"MDU6SXNzdWU0MjE5MzE4MTE=","number":338,"title":"Error encountered while executing “cmake” command","user":{"login":"fzxa","id":1428607,"node_id":"MDQ6VXNlcjE0Mjg2MDc=","avatar_url":"https://avatars0.githubusercontent.com/u/1428607?v=4","gravatar_id":"","url":"https://api.github.com/users/fzxa","html_url":"https://github.com/fzxa","followers_url":"https://api.github.com/users/fzxa/followers","following_url":"https://api.github.com/users/fzxa/following{/other_user}","gists_url":"https://api.github.com/users/fzxa/gists{/gist_id}","starred_url":"https://api.github.com/users/fzxa/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fzxa/subscriptions","organizations_url":"https://api.github.com/users/fzxa/orgs","repos_url":"https://api.github.com/users/fzxa/repos","events_url":"https://api.github.com/users/fzxa/events{/privacy}","received_events_url":"https://api.github.com/users/fzxa/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-03-17T14:47:45Z","updated_at":"2019-03-17T15:09:55Z","closed_at":"2019-03-17T15:09:55Z","author_association":"NONE","active_lock_reason":null,"body":"CMake Error: The following variables are used in this project, but they are set to NOTFOUND.\r\nPlease set them or make sure they are set and tested correctly in the CMake files:\r\nBoost_INCLUDE_DIR (ADVANCED)\r\n   used as include directory in directory /data/c++/crow\r\n   used as include directory in directory /data/c++/crow/examples\r\n   used as include directory in directory /data/c++/crow/examples\r\n   used as include directory in directory /data/c++/crow/examples\r\n   used as include directory in directory /data/c++/crow/examples\r\n   used as include directory in directory /data/c++/crow/examples\r\n   used as include directory in directory /data/c++/crow/examples\r\n   used as include directory in directory /data/c++/crow/examples\r\n   used as include directory in directory /data/c++/crow/examples\r\n   used as include directory in directory /data/c++/crow/examples\r\n   used as include directory in directory /data/c++/crow/tests\r\n   used as include directory in directory /data/c++/crow/tests/template\r\n   used as include directory in directory /data/c++/crow/tests/template","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/kiwix/kiwix-lib/issues/21","repository_url":"https://api.github.com/repos/kiwix/kiwix-lib","labels_url":"https://api.github.com/repos/kiwix/kiwix-lib/issues/21/labels{/name}","comments_url":"https://api.github.com/repos/kiwix/kiwix-lib/issues/21/comments","events_url":"https://api.github.com/repos/kiwix/kiwix-lib/issues/21/events","html_url":"https://github.com/kiwix/kiwix-lib/issues/21","id":204221427,"node_id":"MDU6SXNzdWUyMDQyMjE0Mjc=","number":21,"title":"Replacing ctpp2 by ctemplate HTML template engine","user":{"login":"kelson42","id":1029718,"node_id":"MDQ6VXNlcjEwMjk3MTg=","avatar_url":"https://avatars0.githubusercontent.com/u/1029718?v=4","gravatar_id":"","url":"https://api.github.com/users/kelson42","html_url":"https://github.com/kelson42","followers_url":"https://api.github.com/users/kelson42/followers","following_url":"https://api.github.com/users/kelson42/following{/other_user}","gists_url":"https://api.github.com/users/kelson42/gists{/gist_id}","starred_url":"https://api.github.com/users/kelson42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kelson42/subscriptions","organizations_url":"https://api.github.com/users/kelson42/orgs","repos_url":"https://api.github.com/users/kelson42/repos","events_url":"https://api.github.com/users/kelson42/events{/privacy}","received_events_url":"https://api.github.com/users/kelson42/received_events","type":"User","site_admin":false},"labels":[{"id":471895030,"node_id":"MDU6TGFiZWw0NzE4OTUwMzA=","url":"https://api.github.com/repos/kiwix/kiwix-lib/labels/enhancement","name":"enhancement","color":"84b6eb","default":true,"description":null},{"id":471895033,"node_id":"MDU6TGFiZWw0NzE4OTUwMzM=","url":"https://api.github.com/repos/kiwix/kiwix-lib/labels/question","name":"question","color":"cc317c","default":true,"description":null}],"state":"closed","locked":false,"assignee":{"login":"mgautierfr","id":86161,"node_id":"MDQ6VXNlcjg2MTYx","avatar_url":"https://avatars0.githubusercontent.com/u/86161?v=4","gravatar_id":"","url":"https://api.github.com/users/mgautierfr","html_url":"https://github.com/mgautierfr","followers_url":"https://api.github.com/users/mgautierfr/followers","following_url":"https://api.github.com/users/mgautierfr/following{/other_user}","gists_url":"https://api.github.com/users/mgautierfr/gists{/gist_id}","starred_url":"https://api.github.com/users/mgautierfr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgautierfr/subscriptions","organizations_url":"https://api.github.com/users/mgautierfr/orgs","repos_url":"https://api.github.com/users/mgautierfr/repos","events_url":"https://api.github.com/users/mgautierfr/events{/privacy}","received_events_url":"https://api.github.com/users/mgautierfr/received_events","type":"User","site_admin":false},"assignees":[{"login":"mgautierfr","id":86161,"node_id":"MDQ6VXNlcjg2MTYx","avatar_url":"https://avatars0.githubusercontent.com/u/86161?v=4","gravatar_id":"","url":"https://api.github.com/users/mgautierfr","html_url":"https://github.com/mgautierfr","followers_url":"https://api.github.com/users/mgautierfr/followers","following_url":"https://api.github.com/users/mgautierfr/following{/other_user}","gists_url":"https://api.github.com/users/mgautierfr/gists{/gist_id}","starred_url":"https://api.github.com/users/mgautierfr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgautierfr/subscriptions","organizations_url":"https://api.github.com/users/mgautierfr/orgs","repos_url":"https://api.github.com/users/mgautierfr/repos","events_url":"https://api.github.com/users/mgautierfr/events{/privacy}","received_events_url":"https://api.github.com/users/mgautierfr/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2017-01-31T07:19:53Z","updated_at":"2019-01-10T10:45:57Z","closed_at":"2019-01-10T10:45:57Z","author_association":"COLLABORATOR","active_lock_reason":null,"body":"ctpp2 seems to not been really maintained anymore (no release in 5 years) and is really not easy to use (complicated compilation scripts and needs to be patched).\r\n\r\nIt might be smartter to replace it. I have found a library which might be able to do the job:\r\nhttps://github.com/olafvdspek/ctemplate\r\n\r\nIt's maintained and already packaged in Debian/Ubuntu","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/176","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/176/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/176/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/176/events","html_url":"https://github.com/ipkn/crow/issues/176","id":182474875,"node_id":"MDU6SXNzdWUxODI0NzQ4NzU=","number":176,"title":"JSON 32bit-Integer Improper storage","user":{"login":"fcharlie","id":6904176,"node_id":"MDQ6VXNlcjY5MDQxNzY=","avatar_url":"https://avatars0.githubusercontent.com/u/6904176?v=4","gravatar_id":"","url":"https://api.github.com/users/fcharlie","html_url":"https://github.com/fcharlie","followers_url":"https://api.github.com/users/fcharlie/followers","following_url":"https://api.github.com/users/fcharlie/following{/other_user}","gists_url":"https://api.github.com/users/fcharlie/gists{/gist_id}","starred_url":"https://api.github.com/users/fcharlie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fcharlie/subscriptions","organizations_url":"https://api.github.com/users/fcharlie/orgs","repos_url":"https://api.github.com/users/fcharlie/repos","events_url":"https://api.github.com/users/fcharlie/events{/privacy}","received_events_url":"https://api.github.com/users/fcharlie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-10-12T09:16:30Z","updated_at":"2018-09-22T05:14:01Z","closed_at":"2018-09-22T05:14:01Z","author_association":"NONE","active_lock_reason":null,"body":"Because 32-bit integer type is stored as a double, will result in JSON data returned error, so need to use integer API may not actually use. JSON is actually supports a 32-bit integer.\n\nsee code:\nhttps://github.com/ipkn/crow/blob/4e39b23e455e455f1878b3e68d729a1737f3e431/include/crow/json.h#L1247\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/0xdead4ead/BeastHttp/issues/1","repository_url":"https://api.github.com/repos/0xdead4ead/BeastHttp","labels_url":"https://api.github.com/repos/0xdead4ead/BeastHttp/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/0xdead4ead/BeastHttp/issues/1/comments","events_url":"https://api.github.com/repos/0xdead4ead/BeastHttp/issues/1/events","html_url":"https://github.com/0xdead4ead/BeastHttp/issues/1","id":348588273,"node_id":"MDU6SXNzdWUzNDg1ODgyNzM=","number":1,"title":"Is it  C++14 or  C++17?","user":{"login":"moneroexamples","id":15305358,"node_id":"MDQ6VXNlcjE1MzA1MzU4","avatar_url":"https://avatars1.githubusercontent.com/u/15305358?v=4","gravatar_id":"","url":"https://api.github.com/users/moneroexamples","html_url":"https://github.com/moneroexamples","followers_url":"https://api.github.com/users/moneroexamples/followers","following_url":"https://api.github.com/users/moneroexamples/following{/other_user}","gists_url":"https://api.github.com/users/moneroexamples/gists{/gist_id}","starred_url":"https://api.github.com/users/moneroexamples/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moneroexamples/subscriptions","organizations_url":"https://api.github.com/users/moneroexamples/orgs","repos_url":"https://api.github.com/users/moneroexamples/repos","events_url":"https://api.github.com/users/moneroexamples/events{/privacy}","received_events_url":"https://api.github.com/users/moneroexamples/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-08-08T06:12:09Z","updated_at":"2018-08-08T06:54:21Z","closed_at":"2018-08-08T06:54:21Z","author_association":"NONE","active_lock_reason":null,"body":"Your readme says its C++14 but in CMakeLists.txt you require C++17? ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer/issues/120","repository_url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer","labels_url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer/issues/120/labels{/name}","comments_url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer/issues/120/comments","events_url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer/issues/120/events","html_url":"https://github.com/moneroexamples/onion-monero-blockchain-explorer/issues/120","id":328861635,"node_id":"MDU6SXNzdWUzMjg4NjE2MzU=","number":120,"title":"Build failiing o Arch Linux","user":{"login":"CarvalhoLeonardo","id":14056737,"node_id":"MDQ6VXNlcjE0MDU2NzM3","avatar_url":"https://avatars1.githubusercontent.com/u/14056737?v=4","gravatar_id":"","url":"https://api.github.com/users/CarvalhoLeonardo","html_url":"https://github.com/CarvalhoLeonardo","followers_url":"https://api.github.com/users/CarvalhoLeonardo/followers","following_url":"https://api.github.com/users/CarvalhoLeonardo/following{/other_user}","gists_url":"https://api.github.com/users/CarvalhoLeonardo/gists{/gist_id}","starred_url":"https://api.github.com/users/CarvalhoLeonardo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CarvalhoLeonardo/subscriptions","organizations_url":"https://api.github.com/users/CarvalhoLeonardo/orgs","repos_url":"https://api.github.com/users/CarvalhoLeonardo/repos","events_url":"https://api.github.com/users/CarvalhoLeonardo/events{/privacy}","received_events_url":"https://api.github.com/users/CarvalhoLeonardo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-06-03T21:00:20Z","updated_at":"2018-06-06T18:19:13Z","closed_at":"2018-06-06T18:19:13Z","author_association":"NONE","active_lock_reason":null,"body":"Hello.\r\n\r\nI'm trying to build the project on Arch, and getting this error:\r\n\r\n```\r\n Scanning dependencies of target xmrblocks\r\nmake[2]: *** No rule to make target 'Xmr_WALLET_LIBRARY-NOTFOUND', needed by 'xmrblocks'.  Stop.\r\nmake[2]: *** Waiting for unfinished jobs....\r\n[ 95%] Building CXX object CMakeFiles/xmrblocks.dir/main.cpp.o\r\nIn file included from /usr/src/AUR/onion-monero-blockchain-explorer/src/../ext/crow/crow.h:23,\r\n                 from /usr/src/AUR/onion-monero-blockchain-explorer/src/page.h:23,\r\n                 from /usr/src/AUR/onion-monero-blockchain-explorer/main.cpp:4:\r\n/usr/src/AUR/onion-monero-blockchain-explorer/src/../ext/crow/crow/app.h: In instantiation of ‘typename std::result_of<decltype (& crow::Router::new_rule_tagged<Tag>)(crow::Router, std::__cxx11::basic_string<char>&&)>::type crow::Crow<Middlewares>::route(std::__cxx11::string&&) [with long unsigned int Tag = 172; Middlewares = {}]’:\r\n/usr/src/AUR/onion-monero-blockchain-explorer/main.cpp:803:1:   required from here\r\n/usr/src/AUR/onion-monero-blockchain-explorer/src/../ext/crow/crow/app.h:62:14: internal compiler error: in write_expression, at cp/mangle.c:3050\r\n         auto route(std::string&& rule)\r\n```\r\n\r\nThe compiler is 8.1.0, the monero is 'Lithium Luna' (v0.12.1.0-master-release).\r\n\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/270","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/270/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/270/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/270/events","html_url":"https://github.com/ipkn/crow/issues/270","id":281737605,"node_id":"MDU6SXNzdWUyODE3Mzc2MDU=","number":270,"title":"crow does not compile with latest Visual C++ Compiler","user":{"login":"maxbrueckl","id":3920477,"node_id":"MDQ6VXNlcjM5MjA0Nzc=","avatar_url":"https://avatars1.githubusercontent.com/u/3920477?v=4","gravatar_id":"","url":"https://api.github.com/users/maxbrueckl","html_url":"https://github.com/maxbrueckl","followers_url":"https://api.github.com/users/maxbrueckl/followers","following_url":"https://api.github.com/users/maxbrueckl/following{/other_user}","gists_url":"https://api.github.com/users/maxbrueckl/gists{/gist_id}","starred_url":"https://api.github.com/users/maxbrueckl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maxbrueckl/subscriptions","organizations_url":"https://api.github.com/users/maxbrueckl/orgs","repos_url":"https://api.github.com/users/maxbrueckl/repos","events_url":"https://api.github.com/users/maxbrueckl/events{/privacy}","received_events_url":"https://api.github.com/users/maxbrueckl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-12-13T12:48:03Z","updated_at":"2018-03-16T06:43:21Z","closed_at":"2018-03-16T06:43:20Z","author_association":"NONE","active_lock_reason":null,"body":"After latest Visual Studio update (15.5.1), crow does not compile for me anymore.\r\n\r\nThe Visual C++ compiler (14.12.25827) crashes hard at\r\nhttps://github.com/ipkn/crow/blob/7f3f72441c242836d00ab2109a83baef89c08aaa/include/crow/routing.h#L150\r\n\r\nIt looks like the compiler cannot handle the amount of black magic that is involved here :smile: \r\nI assume, this is more likely a compiler bug than a bug in crow.","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/299","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/299/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/299/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/299/events","html_url":"https://github.com/ipkn/crow/issues/299","id":310469385,"node_id":"MDU6SXNzdWUzMTA0NjkzODU=","number":299,"title":"Fetch non-int (string) url resource-id","user":{"login":"parthasarathyprsd","id":21074134,"node_id":"MDQ6VXNlcjIxMDc0MTM0","avatar_url":"https://avatars2.githubusercontent.com/u/21074134?v=4","gravatar_id":"","url":"https://api.github.com/users/parthasarathyprsd","html_url":"https://github.com/parthasarathyprsd","followers_url":"https://api.github.com/users/parthasarathyprsd/followers","following_url":"https://api.github.com/users/parthasarathyprsd/following{/other_user}","gists_url":"https://api.github.com/users/parthasarathyprsd/gists{/gist_id}","starred_url":"https://api.github.com/users/parthasarathyprsd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/parthasarathyprsd/subscriptions","organizations_url":"https://api.github.com/users/parthasarathyprsd/orgs","repos_url":"https://api.github.com/users/parthasarathyprsd/repos","events_url":"https://api.github.com/users/parthasarathyprsd/events{/privacy}","received_events_url":"https://api.github.com/users/parthasarathyprsd/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-04-02T12:09:36Z","updated_at":"2018-04-24T16:23:21Z","closed_at":"2018-04-24T16:23:21Z","author_association":"NONE","active_lock_reason":null,"body":"How to get a non-int resource-id. I cannot add a route\r\n``CROW_ROUTE(app, \"/uid/<std::string>\")`` or ``CROW_ROUTE(app, \"/uid/<char*>\")`` as it ( correctly )  fails to compile. The [examples](https://github.com/ipkn/crow/tree/master/examples) donot have such a case. I have tried \r\n\r\n    int main() {\r\n        crow::SimpleApp app;\r\n        CROW_ROUTE(app, \"/uid/*\").methods(\"GET\"_method)\r\n        ([](const crow::request& req){\r\n            return \"hello\";\r\n            });\r\n\r\n        CROW_ROUTE(app, \"/uid/<int>\").methods(\"GET\"_method)\r\n        ([](const crow::request& req, int id){\r\n            return std::to_string(id);\r\n            });\r\n        app.port(8888).run();\r\n    }\r\n\r\nBut neither of them ( though correctly ) intercept ``GET /uid/uid_123 HTTP/1.1`` ( with resource being a string ``\"uid_123\"`` )\r\n\r\nFor below python code, I want to acheive it in c++ crow library\r\n\r\n    from flask import Flask\r\n    app = Flask(__name__)\r\n    @app.route(\"/uid/<path:path>\")\r\n    def hello1(path):\r\n        print (\"it is path is \", path)\r\n        return \"user id is -\" + path\r\n\r\n    if __name__ == \"__main__\":\r\n        app.run(host=\"0.0.0.0\", port=8888)\r\n\r\n Is there any workaround for the above?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/276","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/276/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/276/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/276/events","html_url":"https://github.com/ipkn/crow/issues/276","id":286038503,"node_id":"MDU6SXNzdWUyODYwMzg1MDM=","number":276,"title":"Sorry for a noob question","user":{"login":"pgamaster","id":15028396,"node_id":"MDQ6VXNlcjE1MDI4Mzk2","avatar_url":"https://avatars3.githubusercontent.com/u/15028396?v=4","gravatar_id":"","url":"https://api.github.com/users/pgamaster","html_url":"https://github.com/pgamaster","followers_url":"https://api.github.com/users/pgamaster/followers","following_url":"https://api.github.com/users/pgamaster/following{/other_user}","gists_url":"https://api.github.com/users/pgamaster/gists{/gist_id}","starred_url":"https://api.github.com/users/pgamaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgamaster/subscriptions","organizations_url":"https://api.github.com/users/pgamaster/orgs","repos_url":"https://api.github.com/users/pgamaster/repos","events_url":"https://api.github.com/users/pgamaster/events{/privacy}","received_events_url":"https://api.github.com/users/pgamaster/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-01-04T16:22:52Z","updated_at":"2018-02-21T14:44:56Z","closed_at":"2018-02-21T14:44:56Z","author_association":"NONE","active_lock_reason":null,"body":"g++  -std=c++11 main.cpp -o main\r\nIn file included from crow.h:7:0,\r\n                 from main.cpp:1:\r\ncrow/socket_adaptors.h:6:27: fatal error: crow/settings.h: No such file or directory\r\n #include \"crow/settings.h\"\r\n                           ^\r\ncompilation terminated.\r\n\r\n-------\r\nJust wanted to test it's speed\r\n\r\nHow can I properly compile this?\r\n\r\n\r\n  ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/jolks/crow-template/issues/1","repository_url":"https://api.github.com/repos/jolks/crow-template","labels_url":"https://api.github.com/repos/jolks/crow-template/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/jolks/crow-template/issues/1/comments","events_url":"https://api.github.com/repos/jolks/crow-template/issues/1/events","html_url":"https://github.com/jolks/crow-template/issues/1","id":282740886,"node_id":"MDU6SXNzdWUyODI3NDA4ODY=","number":1,"title":"compile error \"call of overloaded 'move(const crow::query_string&)' is ambiguous\"","user":{"login":"Shuliyey","id":4773348,"node_id":"MDQ6VXNlcjQ3NzMzNDg=","avatar_url":"https://avatars0.githubusercontent.com/u/4773348?v=4","gravatar_id":"","url":"https://api.github.com/users/Shuliyey","html_url":"https://github.com/Shuliyey","followers_url":"https://api.github.com/users/Shuliyey/followers","following_url":"https://api.github.com/users/Shuliyey/following{/other_user}","gists_url":"https://api.github.com/users/Shuliyey/gists{/gist_id}","starred_url":"https://api.github.com/users/Shuliyey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shuliyey/subscriptions","organizations_url":"https://api.github.com/users/Shuliyey/orgs","repos_url":"https://api.github.com/users/Shuliyey/repos","events_url":"https://api.github.com/users/Shuliyey/events{/privacy}","received_events_url":"https://api.github.com/users/Shuliyey/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-12-18T01:15:02Z","updated_at":"2017-12-20T02:15:15Z","closed_at":"2017-12-20T02:15:15Z","author_association":"NONE","active_lock_reason":null,"body":"Thanks for uploading the repo\r\n\r\nI've created a `Dockerfile` to build this repo in docker container, however i'm getting the below error at the `./compile.sh` step\r\n\r\nThis is my Dockerfile\r\n\r\n```Dockerfile\r\nFROM ubuntu\r\n\r\nMAINTAINER 叶泽宇 <shuliyey@gmail.com>\r\n\r\nRUN apt-get update \\\r\n  && export DEBIAN_FRONTEND=noninteractive \\\r\n  && apt-get install -y apt-utils \\\r\n  && apt-get install -y gcc \\\r\n  && apt-get install -y g++ \\ \r\n  && apt-get install -y build-essential libtcmalloc-minimal4 \\\r\n  && ln -s /usr/lib/libtcmalloc_minimal.so.4 /usr/lib/libtcmalloc_minimal.so \\\r\n  && apt-get install -y libboost-all-dev \\\r\n  && apt-get install -y cmake\r\n\r\nADD . /root\r\n\r\nRUN cd /root \\\r\n  && ./compile.sh\r\n\r\nEXPOSE 8080\r\n\r\nCMD [\"/root/build/src/example\"]\r\n```\r\n\r\nBelow is the error, that i'm getting\r\n\r\n```\r\nStep 5/7 : RUN cd /root   && ./compile.sh\r\n ---> Running in 64e228d2981d\r\n-- The C compiler identification is GNU 5.4.0\r\n-- The CXX compiler identification is GNU 5.4.0\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Found Tcmalloc: /usr/lib/libtcmalloc_minimal.so\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Looking for pthread_create in pthreads\r\n-- Looking for pthread_create in pthreads - not found\r\n-- Looking for pthread_create in pthread\r\n-- Looking for pthread_create in pthread - found\r\n-- Found Threads: TRUE  \r\n-- No build type selected, default to Release\r\n-- Boost version: 1.58.0\r\n-- Found the following Boost libraries:\r\n--   date_time\r\n--   filesystem\r\n--   system\r\n--   thread\r\n--   chrono\r\n--   atomic\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /root/build\r\nScanning dependencies of target amalgamation\r\n[ 12%] Generating amalgamate/crow_all.h\r\n['parser.h', 'dumb_timer_queue.h', 'logging.h', 'crow.h', 'common.h', 'http_parser_merged.h', 'http_response.h', 'json.h', 'http_connection.h', 'middleware.h', 'settings.h', 'query_string.h', 'http_request.h', 'utility.h', 'mustache.h', 'ci_map.h', 'routing.h', 'http_server.h', 'middleware_context.h']\r\nmiddleware_context.h ['crow.h', 'http_connection.h']\r\nhttp_parser_merged.h ['parser.h', 'http_connection.h']\r\ncommon.h ['http_request.h', 'routing.h']\r\nmustache.h []\r\nrouting.h ['crow.h']\r\nhttp_request.h ['parser.h', 'crow.h', 'http_response.h', 'middleware.h', 'routing.h', 'middleware_context.h']\r\nsettings.h ['logging.h', 'crow.h', 'http_connection.h']\r\ndumb_timer_queue.h ['http_connection.h', 'http_server.h']\r\nmiddleware.h []\r\nhttp_response.h ['http_connection.h', 'middleware.h', 'routing.h', 'middleware_context.h']\r\nquery_string.h ['http_request.h']\r\nutility.h ['crow.h', 'common.h', 'routing.h', 'middleware_context.h']\r\nlogging.h ['dumb_timer_queue.h', 'crow.h', 'http_connection.h', 'routing.h', 'http_server.h']\r\nci_map.h ['http_response.h', 'http_request.h']\r\nhttp_connection.h ['http_server.h']\r\nhttp_server.h ['crow.h']\r\nparser.h ['http_connection.h']\r\njson.h ['http_response.h', 'mustache.h']\r\ncrow.h []\r\n['ci_map.h', 'utility.h', 'query_string.h', 'settings.h', 'json.h', 'mustache.h', 'http_parser_merged.h', 'common.h', 'http_request.h', 'http_response.h', 'middleware_context.h', 'middleware.h', 'logging.h', 'routing.h', 'dumb_timer_queue.h', 'parser.h', 'http_connection.h', 'http_server.h', 'crow.h']\r\n[ 12%] Built target amalgamation\r\nScanning dependencies of target example\r\n[ 25%] Building CXX object src/CMakeFiles/example.dir/example.cpp.o\r\n[ 37%] Linking CXX executable example\r\n[ 37%] Built target example\r\nScanning dependencies of target unittest\r\n[ 50%] Building CXX object tests/CMakeFiles/unittest.dir/unittest.cpp.o\r\n/root/tests/unittest.cpp: In lambda function:\r\n/root/tests/unittest.cpp:936:46: error: call of overloaded 'move(const crow::query_string&)' is ambiguous\r\n         last_url_params = move(req.url_params);\r\n                                              ^\r\nIn file included from /usr/include/boost/function/function_template.hpp:32:0,\r\n                 from /usr/include/boost/function/detail/maybe_include.hpp:13,\r\n                 from /usr/include/boost/function/detail/function_iterate.hpp:14,\r\n                 from /usr/include/boost/preprocessor/iteration/detail/iter/forward1.hpp:47,\r\n                 from /usr/include/boost/function.hpp:64,\r\n                 from /usr/include/boost/algorithm/string/detail/find_iterator.hpp:18,\r\n                 from /usr/include/boost/algorithm/string/find_iterator.hpp:24,\r\n                 from /usr/include/boost/algorithm/string/iter_find.hpp:27,\r\n                 from /usr/include/boost/algorithm/string/split.hpp:16,\r\n                 from /usr/include/boost/algorithm/string.hpp:23,\r\n                 from /root/include/parser.h:5,\r\n                 from /root/include/http_connection.h:12,\r\n                 from /root/include/http_server.h:12,\r\n                 from /root/include/crow.h:17,\r\n                 from /root/tests/unittest.cpp:11:\r\n/usr/include/boost/move/utility_core.hpp:191:77: note: candidate: typename boost::move_detail::remove_reference<T>::type&& boost::move(T&&) [with T = const crow::query_string&; typename boost::move_detail::remove_reference<T>::type = const crow::query_string]\r\n          inline typename ::boost::move_detail::remove_reference<T>::type && move(T&& t) BOOST_NOEXCEPT\r\n                                                                             ^\r\nIn file included from /usr/include/c++/5/bits/stl_pair.h:59:0,\r\n                 from /usr/include/c++/5/bits/stl_algobase.h:64,\r\n                 from /usr/include/c++/5/bits/char_traits.h:39,\r\n                 from /usr/include/c++/5/ios:40,\r\n                 from /usr/include/c++/5/ostream:38,\r\n                 from /usr/include/c++/5/iostream:39,\r\n                 from /root/tests/unittest.cpp:3:\r\n/usr/include/c++/5/bits/move.h:101:5: note: candidate: constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = const crow::query_string&; typename std::remove_reference< <template-parameter-1-1> >::type = const crow::query_string]\r\n     move(_Tp&& __t) noexcept\r\n     ^\r\ntests/CMakeFiles/unittest.dir/build.make:62: recipe for target 'tests/CMakeFiles/unittest.dir/unittest.cpp.o' failed\r\nmake[2]: *** [tests/CMakeFiles/unittest.dir/unittest.cpp.o] Error 1\r\nCMakeFiles/Makefile2:179: recipe for target 'tests/CMakeFiles/unittest.dir/all' failed\r\nMakefile:94: recipe for target 'all' failed\r\nmake[1]: *** [tests/CMakeFiles/unittest.dir/all] Error 2\r\nmake: *** [all] Error 2\r\nThe command '/bin/sh -c cd /root   && ./compile.sh' returned a non-zero code: 2\r\n```","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer/issues/55","repository_url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer","labels_url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer/issues/55/labels{/name}","comments_url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer/issues/55/comments","events_url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer/issues/55/events","html_url":"https://github.com/moneroexamples/onion-monero-blockchain-explorer/issues/55","id":221989643,"node_id":"MDU6SXNzdWUyMjE5ODk2NDM=","number":55,"title":"JSON Web API","user":{"login":"dternyak","id":7861465,"node_id":"MDQ6VXNlcjc4NjE0NjU=","avatar_url":"https://avatars2.githubusercontent.com/u/7861465?v=4","gravatar_id":"","url":"https://api.github.com/users/dternyak","html_url":"https://github.com/dternyak","followers_url":"https://api.github.com/users/dternyak/followers","following_url":"https://api.github.com/users/dternyak/following{/other_user}","gists_url":"https://api.github.com/users/dternyak/gists{/gist_id}","starred_url":"https://api.github.com/users/dternyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dternyak/subscriptions","organizations_url":"https://api.github.com/users/dternyak/orgs","repos_url":"https://api.github.com/users/dternyak/repos","events_url":"https://api.github.com/users/dternyak/events{/privacy}","received_events_url":"https://api.github.com/users/dternyak/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":63,"created_at":"2017-04-16T04:23:00Z","updated_at":"2018-06-19T23:22:51Z","closed_at":"2018-06-19T16:15:16Z","author_association":"NONE","active_lock_reason":null,"body":"I'd like to create some some Web Apps based on the extremely performant and feature-rich back-end of this project. This will be much easier to do if there is a web-facing JSON API to interact with.\r\n\r\nIdeally, the JSON API would expose the following endpoints (to start):\r\n\r\n`/api/v1/mempool`\r\n`/api/v1/search?blkhash='blah'/?txhash/etc`. Ideally all the supported search types of the main site.\r\n`/api/v1/transactions?page=1`\r\n`/api/v1/transactions?page=2`\r\n`/api/v1/tx/<tx_hash>`\r\n\r\nI'll work to develop the spec of the JSON response itself for each endpoint, but sane defaults will also be fine. Basically whatever is already being returned to the traditional back-end rendered template handlerbar/mustache engine would be great.\r\n\r\nI'm not sure how much work this is, or how realistic it is to even ask for this, but I'm hoping that it can be fairly easily integrated given the existing architecture. \r\n\r\nHowever, I also understand that this project has a focus on darknet support, which is not especially compatible with the type of service I am proposing. Perhaps a fork of this project is a better proposal?\r\n\r\nEager to hear your thoughts. This is probably an ambitious ask, so please let me know if I am overreaching. ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer/issues/91","repository_url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer","labels_url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer/issues/91/labels{/name}","comments_url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer/issues/91/comments","events_url":"https://api.github.com/repos/moneroexamples/onion-monero-blockchain-explorer/issues/91/events","html_url":"https://github.com/moneroexamples/onion-monero-blockchain-explorer/issues/91","id":283049957,"node_id":"MDU6SXNzdWUyODMwNDk5NTc=","number":91,"title":"Web UI: Value Parameter Fuzzing leads to Null Pointer ","user":{"login":"xsscx","id":10790582,"node_id":"MDQ6VXNlcjEwNzkwNTgy","avatar_url":"https://avatars3.githubusercontent.com/u/10790582?v=4","gravatar_id":"","url":"https://api.github.com/users/xsscx","html_url":"https://github.com/xsscx","followers_url":"https://api.github.com/users/xsscx/followers","following_url":"https://api.github.com/users/xsscx/following{/other_user}","gists_url":"https://api.github.com/users/xsscx/gists{/gist_id}","starred_url":"https://api.github.com/users/xsscx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xsscx/subscriptions","organizations_url":"https://api.github.com/users/xsscx/orgs","repos_url":"https://api.github.com/users/xsscx/repos","events_url":"https://api.github.com/users/xsscx/events{/privacy}","received_events_url":"https://api.github.com/users/xsscx/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2017-12-18T23:01:14Z","updated_at":"2017-12-20T03:23:34Z","closed_at":"2017-12-20T03:23:33Z","author_association":"NONE","active_lock_reason":null,"body":"Darwin server.local 17.3.0 Darwin Kernel Version 17.3.0: Thu Nov  9 18:09:22 PST 2017; root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n\r\nlldb\r\n\r\ntarget create --no-dependents xmrblocks\r\n\r\nprocess launch --environment MallocStackLogging=1 --environment MallocScribble=1 --environment MALLOC_PERMIT_INSANE_REQUESTS=22\r\n\r\nProcess 95780 stopped\r\n* thread #2, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\r\n    frame #0: 0x00007fff7ed3d432 libsystem_c.dylib`strlen + 18\r\nlibsystem_c.dylib`strlen:\r\n->  0x7fff7ed3d432 <+18>: pcmpeqb (%rdi), %xmm0\r\n    0x7fff7ed3d436 <+22>: pmovmskb %xmm0, %esi\r\n    0x7fff7ed3d43a <+26>: andq   $0xf, %rcx\r\n    0x7fff7ed3d43e <+30>: orq    $-0x1, %rax\r\nTarget 0: (xmrblocks) stopped.\r\n(lldb) bt\r\n* thread #2, stop reason = EXC_BAD_ACCESS (code=1, address=0x0)\r\n  * frame #0: 0x00007fff7ed3d432 libsystem_c.dylib`strlen + 18\r\n    frame #1: 0x0000000100046145 xmrblocks`std::__1::char_traits<char>::length(char const*) + 21\r\n    frame #2: 0x0000000100247677 xmrblocks`main::$_16::operator()(crow::request const&) const + 375\r\n    frame #3: 0x0000000100247452 xmrblocks`std::__1::enable_if<(!(black_magic::CallHelper<main::$_16, crow::black_magic::S<> >::value)) && (black_magic::CallHelper<main::$_16, crow::black_magic::S<crow::request> >::value), void>::type crow::TaggedRule<>::operator()<main::$_16>(main::$_16&&)::'lambda'(crow::request const&, crow::response&)::operator()(crow::request const&, crow::response&) const + 82\r\n    frame #4: 0x00000001002473ed xmrblocks`void std::__1::__invoke_void_return_wrapper<void>::__call<std::__1::enable_if<(!(black_magic::CallHelper<main::$_16, crow::black_magic::S<> >::value)) && (black_magic::CallHelper<main::$_16, crow::black_magic::S<crow::request> >::value), void>::type crow::TaggedRule<>::operator()<main::$_16>(main::$_16&&)::'lambda'(crow::request const&, crow::response&)&, crow::request const&, crow::response&>(std::__1::enable_if<(!(black_magic::CallHelper<main::$_16, crow::black_magic::S<> >::value)) && (black_magic::CallHelper<main::$_16, crow::black_magic::S<crow::request> >::value), void>::type crow::TaggedRule<>::operator()<main::$_16>(main::$_16&&)::'lambda'(crow::request const&, crow::response&)&&&, crow::request const&&&, crow::response&&&) + 109\r\n    frame #5: 0x00000001002472c9 xmrblocks`std::__1::__function::__func<std::__1::enable_if<(!(black_magic::CallHelper<main::$_16, crow::black_magic::S<> >::value)) && (black_magic::CallHelper<main::$_16, crow::black_magic::S<crow::request> >::value), void>::type crow::TaggedRule<>::operator()<main::$_16>(main::$_16&&)::'lambda'(crow::request const&, crow::response&), std::__1::allocator<std::__1::enable_if<(!(black_magic::CallHelper<main::$_16, crow::black_magic::S<> >::value)) && (black_magic::CallHelper<main::$_16, crow::black_magic::S<crow::request> >::value), void>::type crow::TaggedRule<>::operator()<main::$_16>(main::$_16&&)::'lambda'(crow::request const&, crow::response&)>, void (crow::request const&, crow::response&)>::operator()(crow::request const&, crow::response&) + 73\r\n    frame #6: 0x00000001000c61d2 xmrblocks`std::__1::function<void (crow::request const&, crow::response&)>::operator()(crow::request const&, crow::response&) const + 178\r\n    frame #7: 0x00000001000c6110 xmrblocks`crow::detail::routing_handler_call_helper::call<crow::detail::routing_handler_call_helper::call_params<std::__1::function<void (crow::request const&, crow::response&)> >, 0, 0, 0, 0, crow::black_magic::S<>, crow::black_magic::S<> >::operator()(crow::detail::routing_handler_call_helper::call_params<std::__1::function<void (crow::request const&, crow::response&)> >) + 32\r\n    frame #8: 0x00000001000c5a9e xmrblocks`crow::TaggedRule<>::handle(crow::request const&, crow::response&, crow::routing_params const&) + 110\r\n    frame #9: 0x0000000100318a1b xmrblocks`crow::Router::handle(crow::request const&, crow::response&) + 6699\r\n    frame #10: 0x00000001002fa374 xmrblocks`crow::Crow<>::handle(crow::request const&, crow::response&) + 52\r\n    frame #11: 0x0000000100334d51 xmrblocks`crow::Connection<crow::SocketAdaptor, crow::Crow<> >::handle() + 5105\r\n    frame #12: 0x000000010033394c xmrblocks`crow::HTTPParser<crow::Connection<crow::SocketAdaptor, crow::Crow<> > >::process_message() + 28\r\n    frame #13: 0x0000000100330c17 xmrblocks`crow::HTTPParser<crow::Connection<crow::SocketAdaptor, crow::Crow<> > >::on_message_complete(http_parser*) + 2071\r\n    frame #14: 0x00000001002eb562 xmrblocks`http_parser_execute + 15986\r\n    frame #15: 0x000000010032f461 xmrblocks`crow::HTTPParser<crow::Connection<crow::SocketAdaptor, crow::Crow<> > >::feed(char const*, int) + 49\r\n    frame #16: 0x000000010032f1cb xmrblocks`crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long)::operator()(boost::system::error_code const&, unsigned long) const + 123\r\n    frame #17: 0x000000010032f143 xmrblocks`boost::asio::detail::binder2<crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long), boost::system::error_code, unsigned long>::operator()() + 35\r\n    frame #18: 0x000000010032f115 xmrblocks`void boost::asio::asio_handler_invoke<boost::asio::detail::binder2<crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long), boost::system::error_code, unsigned long> >(boost::asio::detail::binder2<crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long), boost::system::error_code, unsigned long>&, ...) + 21\r\n    frame #19: 0x000000010032f067 xmrblocks`void boost_asio_handler_invoke_helpers::invoke<boost::asio::detail::binder2<crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long), boost::system::error_code, unsigned long>, crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long)>(boost::asio::detail::binder2<crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long), boost::system::error_code, unsigned long>&, crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long)&) + 39\r\n    frame #20: 0x000000010032ef34 xmrblocks`boost::asio::detail::reactive_socket_recv_op<boost::asio::mutable_buffers_1, crow::Connection<crow::SocketAdaptor, crow::Crow<> >::do_read()::'lambda'(boost::system::error_code const&, unsigned long)>::do_complete(boost::asio::detail::task_io_service*, boost::asio::detail::task_io_service_operation*, boost::system::error_code const&, unsigned long) + 196\r\n    frame #21: 0x00000001002d0dd7 xmrblocks`boost::asio::detail::task_io_service_operation::complete(boost::asio::detail::task_io_service&, boost::system::error_code const&, unsigned long) + 71\r\n    frame #22: 0x00000001002d0334 xmrblocks`boost::asio::detail::task_io_service::do_run_one(boost::asio::detail::scoped_lock<boost::asio::detail::posix_mutex>&, boost::asio::detail::task_io_service_thread_info&, boost::system::error_code const&) + 500\r\n    frame #23: 0x00000001002cff74 xmrblocks`boost::asio::detail::task_io_service::run(boost::system::error_code&) + 372\r\n    frame #24: 0x00000001002c28f1 xmrblocks`boost::asio::io_service::run() + 49\r\n    frame #25: 0x000000010032677c xmrblocks`crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()::operator()() const + 1452\r\n    frame #26: 0x00000001003261bd xmrblocks`void std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()>::__execute<>(std::__1::__tuple_indices<>) + 61\r\n    frame #27: 0x0000000100326175 xmrblocks`std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()>::operator()() + 21\r\n    frame #28: 0x00000001003260c5 xmrblocks`std::__1::__async_assoc_state<void, std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()> >::__execute() + 37\r\n    frame #29: 0x000000010032a62f xmrblocks`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (std::__1::__async_assoc_state<void, std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()> >::*)(), std::__1::__async_assoc_state<void, std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()> >*> >(void*) + 687\r\n    frame #30: 0x00007fff7ef786c1 libsystem_pthread.dylib`_pthread_body + 340\r\n    frame #31: 0x00007fff7ef7856d libsystem_pthread.dylib`_pthread_start + 377\r\n    frame #32: 0x00007fff7ef77c5d libsystem_pthread.dylib`thread_start + 13\r\n\r\n\r\n\r\n\r\n\r\n(lldb) register read\r\nGeneral Purpose Registers:\r\n       rax = 0x0000000000000000\r\n       rbx = 0x0000001062945000\r\n       rcx = 0x0000000000000000\r\n       rdx = 0x0000000000000000\r\n       rdi = 0x0000000000000000\r\n       rsi = 0x00000010a68c7f68\r\n       rbp = 0x00000010629415b0\r\n       rsp = 0x00000010629415b0\r\n        r8 = 0x0000000000000002\r\n        r9 = 0x000000010074379f  \"value\"\r\n       r10 = 0x0000000000000000\r\n       r11 = 0x0000000f621fdea2\r\n       r12 = 0x000000010032a380  xmrblocks`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (std::__1::__async_assoc_state<void, std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()> >::*)(), std::__1::__async_assoc_state<void, std::__1::__async_func<crow::Server<crow::Crow<>, crow::SocketAdaptor>::run()::'lambda'()> >*> >(void*)\r\n       r13 = 0x0000000000000000\r\n       r14 = 0x0000001062945000\r\n       r15 = 0x0000000000000000\r\n       rip = 0x00007fff7ed3d432  libsystem_c.dylib`strlen + 18\r\n    rflags = 0x0000000000010246\r\n        cs = 0x000000000000002b\r\n        fs = 0x0000000000000000\r\n        gs = 0x0000000000000000\r\n\r\n\r\n\r\n","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/264","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/264/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/264/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/264/events","html_url":"https://github.com/ipkn/crow/issues/264","id":275450000,"node_id":"MDU6SXNzdWUyNzU0NTAwMDA=","number":264,"title":"kept receiving a 404 while trying to access a basic crow server from a js fetch request","user":{"login":"percyteng","id":10775435,"node_id":"MDQ6VXNlcjEwNzc1NDM1","avatar_url":"https://avatars2.githubusercontent.com/u/10775435?v=4","gravatar_id":"","url":"https://api.github.com/users/percyteng","html_url":"https://github.com/percyteng","followers_url":"https://api.github.com/users/percyteng/followers","following_url":"https://api.github.com/users/percyteng/following{/other_user}","gists_url":"https://api.github.com/users/percyteng/gists{/gist_id}","starred_url":"https://api.github.com/users/percyteng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/percyteng/subscriptions","organizations_url":"https://api.github.com/users/percyteng/orgs","repos_url":"https://api.github.com/users/percyteng/repos","events_url":"https://api.github.com/users/percyteng/events{/privacy}","received_events_url":"https://api.github.com/users/percyteng/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2017-11-20T18:14:05Z","updated_at":"2017-11-20T20:10:26Z","closed_at":"2017-11-20T19:48:37Z","author_association":"NONE","active_lock_reason":null,"body":"Here is my basic crow server\r\n\r\ncrow::SimpleApp app;\r\n\r\n    CROW_ROUTE(app, \"/\")\r\n    .methods(\"GET\"_method)\r\n\t([](){\r\n    \t\tcrow::json::wvalue x;\r\n    \t    x[\"message\"] = \"Hello, World!\";\r\n    \t    return x;\r\n    });\r\n    CROW_ROUTE(app, \"/api\")([](){\r\n\t\tcrow::json::wvalue x;\r\n\t\tx[\"message\"] = \"Hello, World!\";\r\n\t\treturn x;\r\n\t});\r\n\r\n    app.port(4500).multithreaded().run();\r\n\r\nI was trying to send a standard fetch request from Javascript, however, I kept receiving a 404 request from it.\r\nWhen I tried to access the crow server on both browser and postman, they work! \r\nSo I am not sure if there is something wrong with my js fetch or just crow itself. Here is my fetch\r\n\r\nreturn fetch('http://localhost:4500', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        }\r\n      })\r\n      .then((response) => {\r\n        console.log(response)\r\n        if (response.status != 200){\r\n          console.log('errors')\r\n          return\r\n        }\r\n        else{\r\n          return response.json()\r\n        }\r\n      })\r\n      .then((responseJson)=>{\r\n        console.log(responseJson)\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/239","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/239/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/239/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/239/events","html_url":"https://github.com/ipkn/crow/issues/239","id":251231979,"node_id":"MDU6SXNzdWUyNTEyMzE5Nzk=","number":239,"title":"Handling database connection and operation in crow","user":{"login":"bnlambert","id":4788731,"node_id":"MDQ6VXNlcjQ3ODg3MzE=","avatar_url":"https://avatars1.githubusercontent.com/u/4788731?v=4","gravatar_id":"","url":"https://api.github.com/users/bnlambert","html_url":"https://github.com/bnlambert","followers_url":"https://api.github.com/users/bnlambert/followers","following_url":"https://api.github.com/users/bnlambert/following{/other_user}","gists_url":"https://api.github.com/users/bnlambert/gists{/gist_id}","starred_url":"https://api.github.com/users/bnlambert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bnlambert/subscriptions","organizations_url":"https://api.github.com/users/bnlambert/orgs","repos_url":"https://api.github.com/users/bnlambert/repos","events_url":"https://api.github.com/users/bnlambert/events{/privacy}","received_events_url":"https://api.github.com/users/bnlambert/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-08-18T12:34:49Z","updated_at":"2017-09-18T00:47:08Z","closed_at":"2017-09-18T00:47:08Z","author_association":"NONE","active_lock_reason":null,"body":"Crow is a great project. \r\nI wish to know how database connection and operations  are in Crow apps. Is it done asynchronously or using an ORM?\r\nI need recommendations and examples.\r\n\r\nAlso I will to know if there are tools to document REST APIs in Crow.\r\nHow can we communicate with third party API in Crow app.\r\n\r\nThe section on middleware is still blank, How can we secure REST APIs in Crow?\r\n\r\nThanks  ","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/241","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/241/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/241/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/241/events","html_url":"https://github.com/ipkn/crow/issues/241","id":255065536,"node_id":"MDU6SXNzdWUyNTUwNjU1MzY=","number":241,"title":"Merged crow_all.h doesn't match checked in crow_all.h","user":{"login":"jamiebullock","id":579188,"node_id":"MDQ6VXNlcjU3OTE4OA==","avatar_url":"https://avatars1.githubusercontent.com/u/579188?v=4","gravatar_id":"","url":"https://api.github.com/users/jamiebullock","html_url":"https://github.com/jamiebullock","followers_url":"https://api.github.com/users/jamiebullock/followers","following_url":"https://api.github.com/users/jamiebullock/following{/other_user}","gists_url":"https://api.github.com/users/jamiebullock/gists{/gist_id}","starred_url":"https://api.github.com/users/jamiebullock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamiebullock/subscriptions","organizations_url":"https://api.github.com/users/jamiebullock/orgs","repos_url":"https://api.github.com/users/jamiebullock/repos","events_url":"https://api.github.com/users/jamiebullock/events{/privacy}","received_events_url":"https://api.github.com/users/jamiebullock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-09-04T14:59:05Z","updated_at":"2017-09-18T09:26:56Z","closed_at":"2017-09-18T09:26:56Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Running merge_all.py doesn't produce a file identical to the checked in crow_all.h\r\n\r\nThere are significant diffs\r\n\r\nShould I submit a PR with the updated crow_all.h produced by merge_all.py?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/245","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/245/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/245/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/245/events","html_url":"https://github.com/ipkn/crow/issues/245","id":258093872,"node_id":"MDU6SXNzdWUyNTgwOTM4NzI=","number":245,"title":"Recovering from Worker Crash?","user":{"login":"jamiebullock","id":579188,"node_id":"MDQ6VXNlcjU3OTE4OA==","avatar_url":"https://avatars1.githubusercontent.com/u/579188?v=4","gravatar_id":"","url":"https://api.github.com/users/jamiebullock","html_url":"https://github.com/jamiebullock","followers_url":"https://api.github.com/users/jamiebullock/followers","following_url":"https://api.github.com/users/jamiebullock/following{/other_user}","gists_url":"https://api.github.com/users/jamiebullock/gists{/gist_id}","starred_url":"https://api.github.com/users/jamiebullock/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamiebullock/subscriptions","organizations_url":"https://api.github.com/users/jamiebullock/orgs","repos_url":"https://api.github.com/users/jamiebullock/repos","events_url":"https://api.github.com/users/jamiebullock/events{/privacy}","received_events_url":"https://api.github.com/users/jamiebullock/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-09-15T16:20:41Z","updated_at":"2017-09-17T03:50:43Z","closed_at":"2017-09-17T03:50:43Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This is related to #209 \r\n\r\nIf a Worker Crash occurs, my server just stop serving requests. Is there a way to recover from this?","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/boostorg/beast/issues/617","repository_url":"https://api.github.com/repos/boostorg/beast","labels_url":"https://api.github.com/repos/boostorg/beast/issues/617/labels{/name}","comments_url":"https://api.github.com/repos/boostorg/beast/issues/617/comments","events_url":"https://api.github.com/repos/boostorg/beast/issues/617/events","html_url":"https://github.com/boostorg/beast/issues/617","id":241226720,"node_id":"MDU6SXNzdWUyNDEyMjY3MjA=","number":617,"title":"convert buffer to string","user":{"login":"WeissGotsman","id":22855561,"node_id":"MDQ6VXNlcjIyODU1NTYx","avatar_url":"https://avatars3.githubusercontent.com/u/22855561?v=4","gravatar_id":"","url":"https://api.github.com/users/WeissGotsman","html_url":"https://github.com/WeissGotsman","followers_url":"https://api.github.com/users/WeissGotsman/followers","following_url":"https://api.github.com/users/WeissGotsman/following{/other_user}","gists_url":"https://api.github.com/users/WeissGotsman/gists{/gist_id}","starred_url":"https://api.github.com/users/WeissGotsman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/WeissGotsman/subscriptions","organizations_url":"https://api.github.com/users/WeissGotsman/orgs","repos_url":"https://api.github.com/users/WeissGotsman/repos","events_url":"https://api.github.com/users/WeissGotsman/events{/privacy}","received_events_url":"https://api.github.com/users/WeissGotsman/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2017-07-07T10:42:09Z","updated_at":"2017-07-08T05:33:54Z","closed_at":"2017-07-07T14:49:30Z","author_association":"NONE","active_lock_reason":null,"body":"the beast version 72 does not contain beast::to_string, then which api should I use to convert from beast::multi_buffer to std::string","performed_via_github_app":null,"score":1.0},{"url":"https://api.github.com/repos/ipkn/crow/issues/170","repository_url":"https://api.github.com/repos/ipkn/crow","labels_url":"https://api.github.com/repos/ipkn/crow/issues/170/labels{/name}","comments_url":"https://api.github.com/repos/ipkn/crow/issues/170/comments","events_url":"https://api.github.com/repos/ipkn/crow/issues/170/events","html_url":"https://github.com/ipkn/crow/issues/170","id":179442926,"node_id":"MDU6SXNzdWUxNzk0NDI5MjY=","number":170,"title":"How to access POST data?","user":{"login":"moneroexamples","id":15305358,"node_id":"MDQ6VXNlcjE1MzA1MzU4","avatar_url":"https://avatars1.githubusercontent.com/u/15305358?v=4","gravatar_id":"","url":"https://api.github.com/users/moneroexamples","html_url":"https://github.com/moneroexamples","followers_url":"https://api.github.com/users/moneroexamples/followers","following_url":"https://api.github.com/users/moneroexamples/following{/other_user}","gists_url":"https://api.github.com/users/moneroexamples/gists{/gist_id}","starred_url":"https://api.github.com/users/moneroexamples/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moneroexamples/subscriptions","organizations_url":"https://api.github.com/users/moneroexamples/orgs","repos_url":"https://api.github.com/users/moneroexamples/repos","events_url":"https://api.github.com/users/moneroexamples/events{/privacy}","received_events_url":"https://api.github.com/users/moneroexamples/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-09-27T09:35:11Z","updated_at":"2017-03-25T05:46:46Z","closed_at":"2016-09-30T01:14:15Z","author_association":"NONE","active_lock_reason":null,"body":"I have a form that is submited using POST. How do I get values of inidiviudal form fileds in Crow. `req.body` returns everything, in an unparsed form. Is there a way of accessing POST data, which is similar to GET data, i.e., `req.url_params.get(\"txhash\")`?\n","performed_via_github_app":null,"score":1.0}]}
0

