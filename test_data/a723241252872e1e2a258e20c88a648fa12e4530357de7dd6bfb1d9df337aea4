HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 09 Jun 2018 08:07:03 GMT
Link: <https://api.github.com/search/issues?q=repo%3Abottlepy%2Fbottle+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Abottlepy%2Fbottle+type%3Aissue+state%3Aclosed&page=15>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CAA0:57C6:2FE3600:64E8A4E:5B1B8AA6
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 23
X-Ratelimit-Reset: 1528531675
X-Runtime-Rack: 0.410494
X-Xss-Protection: 1; mode=block

8000
{"total_count":423,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1066","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1066/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1066/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1066/events","html_url":"https://github.com/bottlepy/bottle/issues/1066","id":324868113,"node_id":"MDU6SXNzdWUzMjQ4NjgxMTM=","number":1066,"title":"Redirect Bug?","user":{"login":"ehouarn-perret","id":11332444,"node_id":"MDQ6VXNlcjExMzMyNDQ0","avatar_url":"https://avatars1.githubusercontent.com/u/11332444?v=4","gravatar_id":"","url":"https://api.github.com/users/ehouarn-perret","html_url":"https://github.com/ehouarn-perret","followers_url":"https://api.github.com/users/ehouarn-perret/followers","following_url":"https://api.github.com/users/ehouarn-perret/following{/other_user}","gists_url":"https://api.github.com/users/ehouarn-perret/gists{/gist_id}","starred_url":"https://api.github.com/users/ehouarn-perret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ehouarn-perret/subscriptions","organizations_url":"https://api.github.com/users/ehouarn-perret/orgs","repos_url":"https://api.github.com/users/ehouarn-perret/repos","events_url":"https://api.github.com/users/ehouarn-perret/events{/privacy}","received_events_url":"https://api.github.com/users/ehouarn-perret/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-05-21T10:35:39Z","updated_at":"2018-05-21T15:49:02Z","closed_at":"2018-05-21T15:49:02Z","author_association":"NONE","body":"I tried many redirect but nothing work, every time I have exceptions even on the simplest api design.\r\nExample: redirecting to the 404 (also tried with home/index or root \"/\") resource on 404 error:\r\n```\r\n<h1>Critical error while processing request: /ssdf</h1><h2>Error:</h2>\r\n<pre>\r\nLocation: http://localhost:5555/404\r\nContent-Type: text/html; charset=UTF-8\r\n\r\n</pre>\r\n<h2>Traceback:</h2>\r\n<pre>\r\nTraceback (most recent call last):\r\n  File &quot;C:\\Users\\ehoua\\Desktop\\Github\\EhouarnPerret.Python.MVCBottle\\project\\libs\\bottle.py&quot;, line 1104, in wsgi\r\n    out = self._cast(self._handle(environ))\r\n  File &quot;C:\\Users\\ehoua\\Desktop\\Github\\EhouarnPerret.Python.MVCBottle\\project\\libs\\bottle.py&quot;, line 1057, in _cast\r\n    self.default_error_handler)(out)\r\n  File &quot;C:\\Users\\ehoua\\Desktop\\Github\\EhouarnPerret.Python.MVCBottle\\project\\routes\\error.py&quot;, line 8, in on_error404\r\n    return redirect(&#039;/404&#039;)\r\n  File &quot;C:\\Users\\ehoua\\Desktop\\Github\\EhouarnPerret.Python.MVCBottle\\project\\libs\\bottle.py&quot;, line 2810, in redirect\r\n    raise res\r\nproject.libs.bottle.HTTPResponse\r\n\r\n</pre>\r\n127.0.0.1 - - [21/May/2018 06:30:53] \"GET /ssdf HTTP/1.1\" 500 897\r\n```\r\n\r\n\r\n**controllers/mvc/errors.py**\r\n```\r\nfrom project.libs.bottle import redirect\r\nfrom project.helpers.metadata import extended_template\r\n\r\n\r\ndef not_found():\r\n    return extended_template(inner_template='error404.html')\r\n```\r\n\r\n**routes/error.py**\r\n```\r\nfrom project.controllers.mvc.errors import not_found\r\nfrom project.libs.bottle import redirect\r\nfrom runserver import app\r\n\r\n\r\n@app.error(404)\r\ndef on_error404(error):\r\n    return redirect('/404')\r\n\r\n\r\n@app.get('/404')\r\ndef error404():\r\n    return not_found()\r\n```\r\n\r\nMy resource on 404 works but redirecting to it or to index/home/whatever always trigger an exception and the redirection does not seem to occur.\r\n\r\nDo you have any why this kind of behavior can happen?","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1064","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1064/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1064/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1064/events","html_url":"https://github.com/bottlepy/bottle/issues/1064","id":322268810,"node_id":"MDU6SXNzdWUzMjIyNjg4MTA=","number":1064,"title":"Disable hooks for some routes","user":{"login":"Oli8","id":13274293,"node_id":"MDQ6VXNlcjEzMjc0Mjkz","avatar_url":"https://avatars1.githubusercontent.com/u/13274293?v=4","gravatar_id":"","url":"https://api.github.com/users/Oli8","html_url":"https://github.com/Oli8","followers_url":"https://api.github.com/users/Oli8/followers","following_url":"https://api.github.com/users/Oli8/following{/other_user}","gists_url":"https://api.github.com/users/Oli8/gists{/gist_id}","starred_url":"https://api.github.com/users/Oli8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Oli8/subscriptions","organizations_url":"https://api.github.com/users/Oli8/orgs","repos_url":"https://api.github.com/users/Oli8/repos","events_url":"https://api.github.com/users/Oli8/events{/privacy}","received_events_url":"https://api.github.com/users/Oli8/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-05-11T11:49:48Z","updated_at":"2018-05-14T10:46:38Z","closed_at":"2018-05-14T10:46:38Z","author_association":"NONE","body":"I have two hooks: before_request and after_request.\r\n```\r\n@app.hook('before_request')\r\ndef _connect_db():\r\n    if db.is_closed():\r\n        db.connect()\r\n\r\n\r\n@app.hook('after_request')\r\ndef _close_db():\r\n    if not db.is_closed():\r\n        db.close()\r\n```\r\nI would like to disable those for a particular route.\r\n\r\nI tried putting this as the the beginning of the route callback but it doesn't work.\r\n\r\n```\r\napp._hooks[\"before_request\"].remove(_connect_db)\r\napp._hooks[\"after_request\"].remove(_close_db)\r\n```\r\nAlso:\r\n```\r\napp.remove_hook(\"before_request\", _connect_db)\r\napp.remove_hook(\"after_request\", _close_db)\r\n```\r\nIs there anyway to do this ?","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1053","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1053/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1053/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1053/events","html_url":"https://github.com/bottlepy/bottle/issues/1053","id":306511386,"node_id":"MDU6SXNzdWUzMDY1MTEzODY=","number":1053,"title":"Templates predence with \"mount\"","user":{"login":"wonkydonky","id":34605079,"node_id":"MDQ6VXNlcjM0NjA1MDc5","avatar_url":"https://avatars0.githubusercontent.com/u/34605079?v=4","gravatar_id":"","url":"https://api.github.com/users/wonkydonky","html_url":"https://github.com/wonkydonky","followers_url":"https://api.github.com/users/wonkydonky/followers","following_url":"https://api.github.com/users/wonkydonky/following{/other_user}","gists_url":"https://api.github.com/users/wonkydonky/gists{/gist_id}","starred_url":"https://api.github.com/users/wonkydonky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wonkydonky/subscriptions","organizations_url":"https://api.github.com/users/wonkydonky/orgs","repos_url":"https://api.github.com/users/wonkydonky/repos","events_url":"https://api.github.com/users/wonkydonky/events{/privacy}","received_events_url":"https://api.github.com/users/wonkydonky/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-03-19T15:28:10Z","updated_at":"2018-03-20T08:00:10Z","closed_at":"2018-03-20T08:00:10Z","author_association":"NONE","body":"If, for example, I \"mount\" a Bottle app to `/user`\r\n\r\n- does the mounted app work as a standalone app, completely isolated from the root app and other mounted apps?\r\n- does the mounted app still have access to the root templates? In other words, can I do `{% extends 'base_layout.html' %}` from a mounted app while 'base_layout.html' is a template in the root app?","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1052","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1052/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1052/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1052/events","html_url":"https://github.com/bottlepy/bottle/issues/1052","id":305822603,"node_id":"MDU6SXNzdWUzMDU4MjI2MDM=","number":1052,"title":"HTTP status code out of range","user":{"login":"jamb0ss","id":1442113,"node_id":"MDQ6VXNlcjE0NDIxMTM=","avatar_url":"https://avatars1.githubusercontent.com/u/1442113?v=4","gravatar_id":"","url":"https://api.github.com/users/jamb0ss","html_url":"https://github.com/jamb0ss","followers_url":"https://api.github.com/users/jamb0ss/followers","following_url":"https://api.github.com/users/jamb0ss/following{/other_user}","gists_url":"https://api.github.com/users/jamb0ss/gists{/gist_id}","starred_url":"https://api.github.com/users/jamb0ss/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamb0ss/subscriptions","organizations_url":"https://api.github.com/users/jamb0ss/orgs","repos_url":"https://api.github.com/users/jamb0ss/repos","events_url":"https://api.github.com/users/jamb0ss/events{/privacy}","received_events_url":"https://api.github.com/users/jamb0ss/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-03-16T07:06:15Z","updated_at":"2018-03-16T09:14:57Z","closed_at":"2018-03-16T07:43:29Z","author_association":"NONE","body":"closed","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1050","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1050/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1050/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1050/events","html_url":"https://github.com/bottlepy/bottle/issues/1050","id":304700319,"node_id":"MDU6SXNzdWUzMDQ3MDAzMTk=","number":1050,"title":"pep8 style","user":{"login":"hsxhr-10","id":8509898,"node_id":"MDQ6VXNlcjg1MDk4OTg=","avatar_url":"https://avatars3.githubusercontent.com/u/8509898?v=4","gravatar_id":"","url":"https://api.github.com/users/hsxhr-10","html_url":"https://github.com/hsxhr-10","followers_url":"https://api.github.com/users/hsxhr-10/followers","following_url":"https://api.github.com/users/hsxhr-10/following{/other_user}","gists_url":"https://api.github.com/users/hsxhr-10/gists{/gist_id}","starred_url":"https://api.github.com/users/hsxhr-10/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hsxhr-10/subscriptions","organizations_url":"https://api.github.com/users/hsxhr-10/orgs","repos_url":"https://api.github.com/users/hsxhr-10/repos","events_url":"https://api.github.com/users/hsxhr-10/events{/privacy}","received_events_url":"https://api.github.com/users/hsxhr-10/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-03-13T10:10:29Z","updated_at":"2018-03-13T14:37:13Z","closed_at":"2018-03-13T13:36:33Z","author_association":"NONE","body":"Hi, guys\r\n\r\nI found some code style problem (reference pep8) from `bottle.py` file, I want to fix it and make `bottle.py` more pretty~","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1046","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1046/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1046/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1046/events","html_url":"https://github.com/bottlepy/bottle/issues/1046","id":301999501,"node_id":"MDU6SXNzdWUzMDE5OTk1MDE=","number":1046,"title":"Bottle redirect function seems to hang","user":{"login":"Xenonheat","id":25705178,"node_id":"MDQ6VXNlcjI1NzA1MTc4","avatar_url":"https://avatars1.githubusercontent.com/u/25705178?v=4","gravatar_id":"","url":"https://api.github.com/users/Xenonheat","html_url":"https://github.com/Xenonheat","followers_url":"https://api.github.com/users/Xenonheat/followers","following_url":"https://api.github.com/users/Xenonheat/following{/other_user}","gists_url":"https://api.github.com/users/Xenonheat/gists{/gist_id}","starred_url":"https://api.github.com/users/Xenonheat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Xenonheat/subscriptions","organizations_url":"https://api.github.com/users/Xenonheat/orgs","repos_url":"https://api.github.com/users/Xenonheat/repos","events_url":"https://api.github.com/users/Xenonheat/events{/privacy}","received_events_url":"https://api.github.com/users/Xenonheat/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-03-03T13:48:56Z","updated_at":"2018-03-04T05:49:47Z","closed_at":"2018-03-03T17:24:56Z","author_association":"NONE","body":"When I do a redirect to a new page, Bottle will load the template associated with the route but will not call the function causing me to have to reload the page an extra time to complete changes made.\r\nHow do I fix this? (Note - It happens every other time I redirect).\r\n\r\nCode\r\n`@bottle.post('/edit_ingredient')\r\n@pony.orm.db_session\r\ndef edit_ingredient():\r\n    # Get Herby Session\r\n    herby_session = bottle.request.environ.get('beaker.session')\r\n\r\n    # Set Reloaded value to False\r\n    herby_session['Reloaded'] = False\r\n\r\n    # Variable that will hold ingredient id\r\n    ingredientid = bottle.request.json['ingID']\r\n    custing_record = CustomerIngredient[ingredientid]\r\n\r\n    # Variable that will hold quantity inputted from user\r\n    quantity_input = bottle.request.json['quan']\r\n    custing_record.Quantity = quantity_input\r\n    pony.orm.commit()  \r\n\r\n    # Redirect the user back to landing page\r\n    bottle.redirect(\"/inventory\", code=303)` \r\n\r\nWhen it doesn't work I get this result:\r\n`127.0.0.1 - - [03/Mar/2018 13:49:45] \"POST /edit_ingredient HTTP/1.1\" 303 0\r\n127.0.0.1 - - [03/Mar/2018 13:49:45] \"GET /popper.js.map HTTP/1.1\" 404 2703`\r\n\r\nWhen it does work I get this:\r\n`127.0.0.1 - - [03/Mar/2018 13:51:15] \"POST /edit_ingredient HTTP/1.1\" 303 0\r\n127.0.0.1 - - [03/Mar/2018 13:51:15] \"GET /inventory? HTTP/1.1\" 303 0\r\n127.0.0.1 - - [03/Mar/2018 13:51:16] \"GET /popper.js.map HTTP/1.1\" 404 2703`\r\n\r\nIt just doesn't give me the redirect to the function associated with the url","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1045","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1045/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1045/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1045/events","html_url":"https://github.com/bottlepy/bottle/issues/1045","id":301986375,"node_id":"MDU6SXNzdWUzMDE5ODYzNzU=","number":1045,"title":"Bottle redirect does not call function","user":{"login":"Xenonheat","id":25705178,"node_id":"MDQ6VXNlcjI1NzA1MTc4","avatar_url":"https://avatars1.githubusercontent.com/u/25705178?v=4","gravatar_id":"","url":"https://api.github.com/users/Xenonheat","html_url":"https://github.com/Xenonheat","followers_url":"https://api.github.com/users/Xenonheat/followers","following_url":"https://api.github.com/users/Xenonheat/following{/other_user}","gists_url":"https://api.github.com/users/Xenonheat/gists{/gist_id}","starred_url":"https://api.github.com/users/Xenonheat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Xenonheat/subscriptions","organizations_url":"https://api.github.com/users/Xenonheat/orgs","repos_url":"https://api.github.com/users/Xenonheat/repos","events_url":"https://api.github.com/users/Xenonheat/events{/privacy}","received_events_url":"https://api.github.com/users/Xenonheat/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-03-03T10:12:52Z","updated_at":"2018-03-03T13:57:57Z","closed_at":"2018-03-03T12:18:54Z","author_association":"NONE","body":"When using bottle's redirect command it raises and exception.\r\nBecause of this, the function associated with the URI does not get called.\r\nIs there a workaround for this. Could not find an associated issue.","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1042","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1042/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1042/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1042/events","html_url":"https://github.com/bottlepy/bottle/issues/1042","id":300297696,"node_id":"MDU6SXNzdWUzMDAyOTc2OTY=","number":1042,"title":"wrongly mounted app when using bottle.py as a standalone module","user":{"login":"oz123","id":1083045,"node_id":"MDQ6VXNlcjEwODMwNDU=","avatar_url":"https://avatars2.githubusercontent.com/u/1083045?v=4","gravatar_id":"","url":"https://api.github.com/users/oz123","html_url":"https://github.com/oz123","followers_url":"https://api.github.com/users/oz123/followers","following_url":"https://api.github.com/users/oz123/following{/other_user}","gists_url":"https://api.github.com/users/oz123/gists{/gist_id}","starred_url":"https://api.github.com/users/oz123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oz123/subscriptions","organizations_url":"https://api.github.com/users/oz123/orgs","repos_url":"https://api.github.com/users/oz123/repos","events_url":"https://api.github.com/users/oz123/events{/privacy}","received_events_url":"https://api.github.com/users/oz123/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-02-26T16:08:56Z","updated_at":"2018-02-27T13:08:51Z","closed_at":"2018-02-27T11:21:36Z","author_association":"CONTRIBUTOR","body":"I have an application which is created in the following way:\r\n\r\n```\r\napp = Bottle()                                                                                                                                                        \r\napp.install(PeeweePlugin(db))                                                                                                                                         \r\napp.config.update(CONFIG)      \r\n```\r\n\r\nIn  another file I mount this app:\r\n\r\n```\r\n    from app.views import app as home_app\r\n    print(home_app.plugins)\r\n    from app.api import app as api_app\r\n    main_app = Bottle()\r\n\r\n    @main_app.route('/static/<filepath:path>')\r\n    def server_static(filepath):\r\n        return bottle.static_file(filepath, root='static')\r\n\r\n    main_app.mount(\"/api/\", api_app)\r\n```\r\n\r\nThis application is wrongly detected as a WSGI app because line 802 in bottle detects it wrongly:\r\n```\r\nif isinstance(app, Bottle): -> returns false:\r\n```\r\n\r\n```\r\n-> main_app.mount(\"/api/\", api_app)\r\n(Pdb++) s\r\n--Call--\r\n[2] > /home/oznt/Software/tiny-cms/tiny/bottle.py(777)mount()\r\n-> def mount(self, prefix, app, **options):\r\n(Pdb++) n\r\n[2] > /home/oznt/Software/tiny-cms/tiny/bottle.py(799)mount()\r\n-> if not prefix.startswith('/'):\r\n(Pdb++) n\r\n[2] > /home/oznt/Software/tiny-cms/tiny/bottle.py(802)mount()\r\n-> if isinstance(app, Bottle):\r\n(Pdb++) n\r\n[2] > /home/oznt/Software/tiny-cms/tiny/bottle.py(805)mount()\r\n-> return self._mount_wsgi(prefix, mountedapp, **options)\r\n(Pdb++) isinstance(app, Bottle)\r\nFalse\r\n(Pdb++) mountedapp\r\n<bottle.Bottle object at 0x7f330817c438>\r\n```","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1040","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1040/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1040/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1040/events","html_url":"https://github.com/bottlepy/bottle/issues/1040","id":300001686,"node_id":"MDU6SXNzdWUzMDAwMDE2ODY=","number":1040,"title":"auth_basic and plugins","user":{"login":"oz123","id":1083045,"node_id":"MDQ6VXNlcjEwODMwNDU=","avatar_url":"https://avatars2.githubusercontent.com/u/1083045?v=4","gravatar_id":"","url":"https://api.github.com/users/oz123","html_url":"https://github.com/oz123","followers_url":"https://api.github.com/users/oz123/followers","following_url":"https://api.github.com/users/oz123/following{/other_user}","gists_url":"https://api.github.com/users/oz123/gists{/gist_id}","starred_url":"https://api.github.com/users/oz123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oz123/subscriptions","organizations_url":"https://api.github.com/users/oz123/orgs","repos_url":"https://api.github.com/users/oz123/repos","events_url":"https://api.github.com/users/oz123/events{/privacy}","received_events_url":"https://api.github.com/users/oz123/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-02-25T06:02:55Z","updated_at":"2018-02-27T07:21:45Z","closed_at":"2018-02-27T07:21:45Z","author_association":"CONTRIBUTOR","body":"Given a plugin that works like the SQLite plugin - that means it is activated if it sees the 'db' argument. the callback isn't going to work with auth_basic:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./tiny/bottle.py\", line 999, in _handle\r\n    out = route.call(**args)\r\n  File \"./tiny/bottle.py\", line 2000, in wrapper\r\n    rv = callback(*a, **ka)\r\n  File \"/home/oznt/Software/tiny-cms/tiny/bottle.py\", line 3155, in wrapper\r\n    return func(*a, **ka)\r\nTypeError: list_users() missing 1 required positional argument: 'db'\r\n```\r\n\r\nThe code that created the crash is simple:\r\n\r\n```                                                                                  \r\n@app.route(\"/users/\", method='GET')                                               \r\n@auth_basic(User.verify_password)                                                 \r\ndef list_users(db):                                                               \r\n                                                                                  \r\n    users = User.select()                                                         \r\n    # dictionaries are automatically converted to JSON                            \r\n    return {\"users\": {user.name: user.email for user in users}}    \r\n```\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1036","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1036/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1036/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1036/events","html_url":"https://github.com/bottlepy/bottle/issues/1036","id":297138128,"node_id":"MDU6SXNzdWUyOTcxMzgxMjg=","number":1036,"title":"Passing data to modal form bootstrap","user":{"login":"Xenonheat","id":25705178,"node_id":"MDQ6VXNlcjI1NzA1MTc4","avatar_url":"https://avatars1.githubusercontent.com/u/25705178?v=4","gravatar_id":"","url":"https://api.github.com/users/Xenonheat","html_url":"https://github.com/Xenonheat","followers_url":"https://api.github.com/users/Xenonheat/followers","following_url":"https://api.github.com/users/Xenonheat/following{/other_user}","gists_url":"https://api.github.com/users/Xenonheat/gists{/gist_id}","starred_url":"https://api.github.com/users/Xenonheat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Xenonheat/subscriptions","organizations_url":"https://api.github.com/users/Xenonheat/orgs","repos_url":"https://api.github.com/users/Xenonheat/repos","events_url":"https://api.github.com/users/Xenonheat/events{/privacy}","received_events_url":"https://api.github.com/users/Xenonheat/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-02-14T15:31:20Z","updated_at":"2018-02-14T17:53:38Z","closed_at":"2018-02-14T17:53:38Z","author_association":"NONE","body":"I have been attempting to pass data passed to the html template from bottle app that contains pony orm elements and I cannot get it to load the data from the id that I have passed. Can I get some help?\r\n\r\nBelow is the posted HTML and JQuery\r\n(Button to open modal form)\r\n<div class=\"row\">\r\n\t\t\t\t<div class=\"ingredient_list\">\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr class=\"tab_header\">\r\n\t\t\t\t\t\t\t\t<th class=\"border-black left_important\"> Ingredient </th>\r\n\t\t\t\t\t\t\t\t<th class=\"border-black\"> Quantity </th>\r\n\t\t\t\t\t\t\t\t<th class=\"border-black\" style=\"width: 15%;\"> Edit </th>\r\n\t\t\t\t\t\t\t\t<th class=\"border-black\"> Remove </th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t% for ingredient, custing in zip(ingredients, inventory):\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>{{ingredient.IngredientName}}</th>\r\n\t\t\t\t\t\t\t\t\t<td class=\"border-black\">{{custing.Quantity}}</th>\r\n\t\t\t\t\t\t\t\t\t<!--<td><a href=\"/ing/{{custing.CustIngID}}/edit\"><i class=\"fa fa-ellipsis-h\"></i></a></td>-->\r\n\t\t\t\t\t\t\t\t\t**<td><button class=\"landing_button\" data-toggle=\"modal\" data-target=\"#edit_ingredient_modal\" data-ingredient=\"{{custing.CustIngID}}\"><i class=\"fas fa-pencil-alt\" style=\"color: black;\"></i> </button></td>** (Primary Culprit)\r\n\t\t\t\t\t\t\t\t\t<td><button class=\"landing_button\" data-toggle=\"modal\" data-target=\"#remove_ingredient_modal\"><i class=\"fa fa-minus-circle\" style=\"color: black;\"></i> </button></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t% end\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n(Modal Form)\r\n<div class=\"modal fade\" id=\"edit_ingredient_modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n\t\t\t<div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t\t<div class=\"modal-content\" style=\"background-color: #dcb235\">\r\n\t\t\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t\t\t<h5 class=\"modal-title white\" id=\"exampleModalLongTitle\">Edit Ingredient</h5>\r\n\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t  <span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"modal-body\">\r\n\t\t\t\t\t\t<div class=\"container-fluid\">\r\n\t\t\t\t\t\t\t<div class=\"row align-items-center\">\r\n\t\t\t\t\t\t\t\t<p class=\"modal_text\"> Change quantity of ... </p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"row align-items-center\">\r\n\t\t\t\t\t\t\t\t<p class=\"modal_text\"> Quantity:</p> <input type=\"number\" class=\"quan_input\" id=\"quantity_input\">\r\n\t\t\t\t\t\t\t\t<!-- Add Validation for the following: \r\n\t\t\t\t\t\t\t\t\t- No negative numbers -->\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"modal-footer\">\r\n\t\t\t\t\t\t<form method=\"post\" action=\"remove_ingredient\">\r\n\t\t\t\t\t\t\t<button type=\"button\" class=\"modal_button\">Submit Changes</button>\r\n\t\t\t\t\t    </form>\r\n     \t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n(JQuery)\r\n$('#edit_ingredient_modal').on('show.bs.modal', function (event) {\r\n  var button = $(event.relatedTarget) // Button that triggered the modal\r\n  var ingredient = button.data('ingredient') // Extract info from data-* attributes\r\n  // var ingredient_name = \r\n  // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).\r\n  // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.\r\n  var modal = $(this)\r\n  modal.find('.modal_text').text('Change quantity of ' + ingredient)\r\n  modal.find('.modal-text input').val(ingredient)\r\n})\r\n\r\nThanks\r\n\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1030","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1030/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1030/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1030/events","html_url":"https://github.com/bottlepy/bottle/issues/1030","id":288564910,"node_id":"MDU6SXNzdWUyODg1NjQ5MTA=","number":1030,"title":"Can not read Chinese Filename correctly when updating files.","user":{"login":"andytt","id":14366322,"node_id":"MDQ6VXNlcjE0MzY2MzIy","avatar_url":"https://avatars1.githubusercontent.com/u/14366322?v=4","gravatar_id":"","url":"https://api.github.com/users/andytt","html_url":"https://github.com/andytt","followers_url":"https://api.github.com/users/andytt/followers","following_url":"https://api.github.com/users/andytt/following{/other_user}","gists_url":"https://api.github.com/users/andytt/gists{/gist_id}","starred_url":"https://api.github.com/users/andytt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andytt/subscriptions","organizations_url":"https://api.github.com/users/andytt/orgs","repos_url":"https://api.github.com/users/andytt/repos","events_url":"https://api.github.com/users/andytt/events{/privacy}","received_events_url":"https://api.github.com/users/andytt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-01-15T11:35:52Z","updated_at":"2018-01-16T10:24:45Z","closed_at":"2018-01-16T10:24:45Z","author_association":"NONE","body":"I can not get the filename with Chinese characters correctly in my Post Decorator `@app.post('/<filepath:path>')`.\r\n\r\nI use `request.files.get('file')` to retrieve the files.\r\n\r\nMy HTML file writes：\r\n\r\n```\r\n<form action=\"\" method=\"post\" enctype=\"multipart/form-data\">\r\n      Upload file: \r\n      <br />\r\n      <input type=\"file\" name=\"file\"/>\r\n      <br />\r\n      <input type=\"submit\" value=\"Sent\">\r\n</form>\r\n```\r\n\r\nAnd I can see the entire filename such as `文件.pdf` in my Chrome Developer Tools.But when I use `bottle.request.files.get('file')`, I get the file extensions like `.pdf`. It seems that bottle does not support UTF-8 when updating files.","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1026","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1026/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1026/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1026/events","html_url":"https://github.com/bottlepy/bottle/issues/1026","id":284760774,"node_id":"MDU6SXNzdWUyODQ3NjA3NzQ=","number":1026,"title":"set_cookie adds quotes","user":{"login":"simevo","id":8254819,"node_id":"MDQ6VXNlcjgyNTQ4MTk=","avatar_url":"https://avatars1.githubusercontent.com/u/8254819?v=4","gravatar_id":"","url":"https://api.github.com/users/simevo","html_url":"https://github.com/simevo","followers_url":"https://api.github.com/users/simevo/followers","following_url":"https://api.github.com/users/simevo/following{/other_user}","gists_url":"https://api.github.com/users/simevo/gists{/g
8000
ist_id}","starred_url":"https://api.github.com/users/simevo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simevo/subscriptions","organizations_url":"https://api.github.com/users/simevo/orgs","repos_url":"https://api.github.com/users/simevo/repos","events_url":"https://api.github.com/users/simevo/events{/privacy}","received_events_url":"https://api.github.com/users/simevo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-12-27T17:05:02Z","updated_at":"2017-12-28T12:29:05Z","closed_at":"2017-12-27T17:28:17Z","author_association":"NONE","body":"I set some test cookies with:\r\n```\r\nbottle.response.set_cookie('test1', \"1\", httponly='on', secure='on', max_age=60, path='/')\r\nbottle.response.set_cookie('test2', \"apiqqq\", httponly='on', secure='on', max_age=60, path='/')\r\nbottle.response.set_cookie('test3', \"api/qqq\", httponly='on', secure='on', max_age=60, path='/')\r\nbottle.response.set_cookie('test4', \"/api/qqq\", httponly='on', secure='on', max_age=60, path='/')\r\n```\r\nthen if I look at the cookies with the inspector I see:\r\n```\r\ntest1 = 1\r\ntest2 = apiqqq\r\ntest3 = \"api/qqq\"\r\ntest3 = \"/api/qqq\"\r\n```\r\nscreenshot:\r\n![quotes](https://user-images.githubusercontent.com/8254819/34387754-39dfab7c-eb30-11e7-99df-904dbd25fb17.png)\r\n\r\nit seems the mere presence of a slash causes the string to be quoted; this does not happen with PHP's `setcookie` for example ... any idea ?\r\n\r\nNOTE: with bottle 0.12.13 and python 3.5 on debian stretch","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1021","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1021/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1021/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1021/events","html_url":"https://github.com/bottlepy/bottle/issues/1021","id":281215226,"node_id":"MDU6SXNzdWUyODEyMTUyMjY=","number":1021,"title":"Error trying to use global variable from mounted app","user":{"login":"morpheus65535","id":5130500,"node_id":"MDQ6VXNlcjUxMzA1MDA=","avatar_url":"https://avatars1.githubusercontent.com/u/5130500?v=4","gravatar_id":"","url":"https://api.github.com/users/morpheus65535","html_url":"https://github.com/morpheus65535","followers_url":"https://api.github.com/users/morpheus65535/followers","following_url":"https://api.github.com/users/morpheus65535/following{/other_user}","gists_url":"https://api.github.com/users/morpheus65535/gists{/gist_id}","starred_url":"https://api.github.com/users/morpheus65535/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/morpheus65535/subscriptions","organizations_url":"https://api.github.com/users/morpheus65535/orgs","repos_url":"https://api.github.com/users/morpheus65535/repos","events_url":"https://api.github.com/users/morpheus65535/events{/privacy}","received_events_url":"https://api.github.com/users/morpheus65535/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2017-12-12T00:30:16Z","updated_at":"2017-12-20T21:22:50Z","closed_at":"2017-12-20T19:10:16Z","author_association":"NONE","body":"I got a parent_app in a python file (parent.py) that I'm trying to mount in a child_app in another python file (child.py). The mount seems to work but, when I try to call a route from my parent_app trough the mount in my child_app, this route doesn't seems to be able to use global variable in my parent.py file.\r\n\r\nThe parent.py file:\r\n\r\n    from bottle import route\r\n    import bottle\r\n    import subprocess as sp\r\n\r\n    global extProc\r\n\r\n    parent_app = bottle.Bottle()\r\n\r\n    @parent_app.route('/start')\r\n    def start_bazarr():\r\n        global extProc\r\n        extProc = sp.Popen(['python','child.py'])\r\n\r\n    @parent_app.route('/stop')\r\n    def stop_bazarr():\r\n        sp.Popen.terminate(extProc)\r\n\r\n    @parent_app.route('/restart')\r\n    def restart_bazarr():\r\n        stop_bazarr()\r\n        start_bazarr()\r\n\r\n    if __name__ == '__main__':\r\n        start_bazarr()\r\n\r\nThe child.py file:\r\n\r\n    from bottle import route, run\r\n    import bottle\r\n    from parent import parent_app\r\n\r\n    child_app = bottle.Bottle()\r\n\r\n    @child_app.route('/')\r\n    def root():\r\n        return u'Lorem Ipsum'\r\n\r\n    if __name__ == '__main__':\r\n        child_app.mount('/power', parent_app)\r\n        child_app.run(host='127.0.0.1', port=8080)\r\n\r\nThe URL I'm trying to call:\r\n\r\n`http://127.0.0.1:8080/power/restart`\r\n\r\nThe error I got:\r\n\r\nTraceback (most recent call last):\r\n\r\n    File \"C:\\Python27\\lib\\site-packages\\bottle.py\", line 862, in _handle\r\n        return route.call(**args)\r\n    File \"C:\\Python27\\lib\\site-packages\\bottle.py\", line 1740, in wrapper\r\n        rv = callback(*a, **ka)\r\n    File \"C:\\Users\\morpheus\\Desktop\\parent.py\", line 20, in restart_bazarr\r\n        stop_bazarr()\r\n    File \"C:\\Users\\morpheus\\Desktop\\parent.py\", line 16, in stop_bazarr\r\n        sp.Popen.terminate(extProc)\r\n    NameError: global name 'extProc' is not defined\r\n\r\nWhat am I doing wrong?","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1017","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1017/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1017/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1017/events","html_url":"https://github.com/bottlepy/bottle/issues/1017","id":280669407,"node_id":"MDU6SXNzdWUyODA2Njk0MDc=","number":1017,"title":"How to restart my python script running bottle?","user":{"login":"morpheus65535","id":5130500,"node_id":"MDQ6VXNlcjUxMzA1MDA=","avatar_url":"https://avatars1.githubusercontent.com/u/5130500?v=4","gravatar_id":"","url":"https://api.github.com/users/morpheus65535","html_url":"https://github.com/morpheus65535","followers_url":"https://api.github.com/users/morpheus65535/followers","following_url":"https://api.github.com/users/morpheus65535/following{/other_user}","gists_url":"https://api.github.com/users/morpheus65535/gists{/gist_id}","starred_url":"https://api.github.com/users/morpheus65535/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/morpheus65535/subscriptions","organizations_url":"https://api.github.com/users/morpheus65535/orgs","repos_url":"https://api.github.com/users/morpheus65535/repos","events_url":"https://api.github.com/users/morpheus65535/events{/privacy}","received_events_url":"https://api.github.com/users/morpheus65535/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-12-09T02:46:38Z","updated_at":"2017-12-09T17:47:32Z","closed_at":"2017-12-09T12:07:50Z","author_association":"NONE","body":"I want to define a route that can be called to restart my python script.\r\n\r\nHere's a sample script:\r\n    from bottle import route, run, redirect\r\n    import os\r\n\r\n    @route('/')\r\n    def root():\r\n        return u'test'\r\n\r\n    @route('/restart')\r\n    def restart():\r\n        print 'restart'\r\n        os.execlp('python', 'python', __file__)\r\n        redirect ('/')\r\n\r\n    run(host='0.0.0.0', port=8080)\r\n\r\nI've tried with `os.execlp` but the new instance never reply to request. I just can't access it at all.\r\n\r\nSome help would be appreciated to solve this one. Thanks!","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1015","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1015/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1015/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1015/events","html_url":"https://github.com/bottlepy/bottle/issues/1015","id":278105522,"node_id":"MDU6SXNzdWUyNzgxMDU1MjI=","number":1015,"title":"Problem of timeout with Multi-threaded backend server","user":{"login":"Julienh","id":148217,"node_id":"MDQ6VXNlcjE0ODIxNw==","avatar_url":"https://avatars0.githubusercontent.com/u/148217?v=4","gravatar_id":"","url":"https://api.github.com/users/Julienh","html_url":"https://github.com/Julienh","followers_url":"https://api.github.com/users/Julienh/followers","following_url":"https://api.github.com/users/Julienh/following{/other_user}","gists_url":"https://api.github.com/users/Julienh/gists{/gist_id}","starred_url":"https://api.github.com/users/Julienh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Julienh/subscriptions","organizations_url":"https://api.github.com/users/Julienh/orgs","repos_url":"https://api.github.com/users/Julienh/repos","events_url":"https://api.github.com/users/Julienh/events{/privacy}","received_events_url":"https://api.github.com/users/Julienh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-11-30T12:37:37Z","updated_at":"2018-03-16T14:41:06Z","closed_at":"2018-03-14T15:42:54Z","author_association":"NONE","body":"Hello,\r\n\r\nSince long time I have a problem when I use Bottle with Multi-threaded server: randomly I have a long request answer or a timeout.\r\n- The code is simple, just load some data from a database.\r\n- I tried with Python 3.2 and now Python 3.6.2\r\n- I tried Debian 7 and 9\r\n- I use the last version of Bottle\r\n- I tried cherrypy and now paste\r\n\r\nIf someone have an idea how to fix my problem, thank you :)\r\n","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1011","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1011/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1011/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1011/events","html_url":"https://github.com/bottlepy/bottle/issues/1011","id":274855846,"node_id":"MDU6SXNzdWUyNzQ4NTU4NDY=","number":1011,"title":"SQLite-plugin: possible to use \"db\" outside of route?","user":{"login":"morpheus65535","id":5130500,"node_id":"MDQ6VXNlcjUxMzA1MDA=","avatar_url":"https://avatars1.githubusercontent.com/u/5130500?v=4","gravatar_id":"","url":"https://api.github.com/users/morpheus65535","html_url":"https://github.com/morpheus65535","followers_url":"https://api.github.com/users/morpheus65535/followers","following_url":"https://api.github.com/users/morpheus65535/following{/other_user}","gists_url":"https://api.github.com/users/morpheus65535/gists{/gist_id}","starred_url":"https://api.github.com/users/morpheus65535/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/morpheus65535/subscriptions","organizations_url":"https://api.github.com/users/morpheus65535/orgs","repos_url":"https://api.github.com/users/morpheus65535/repos","events_url":"https://api.github.com/users/morpheus65535/events{/privacy}","received_events_url":"https://api.github.com/users/morpheus65535/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-11-17T12:52:40Z","updated_at":"2017-11-17T13:40:18Z","closed_at":"2017-11-17T13:00:09Z","author_association":"NONE","body":"I'm quite new to Python and Bottle but I got an issue using SQLite plugin.\r\n\r\nI need to call my database directly from my Python script without going trough a route. Is it possible?\r\n\r\n```\r\nfrom bottle import route, run, template, static_file, request, redirect, install\r\nfrom bottle_sqlite import SQLitePlugin\r\ninstall(SQLitePlugin(dbfile=data/db/database.db'))\r\n\r\nlog_level = db.execute(\"SELECT log_level FROM table_settings_general\").fetchone()\r\n#do whatever with log_level\r\n\r\n@route('/')\r\ndef root():\r\n    #do whatever we want...\r\n```\r\n\r\nI keep getting this error:\r\n`ProgrammingError: Cannot operate on a closed database.`\r\n\r\nI'm pretty sure there's a way to use \"db\" outside of a route in the main python script but I can't find anything.\r\n\r\nThanks!","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1004","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1004/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1004/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1004/events","html_url":"https://github.com/bottlepy/bottle/issues/1004","id":266481034,"node_id":"MDU6SXNzdWUyNjY0ODEwMzQ=","number":1004,"title":"Pypi package is missing LICENSE file","user":{"login":"prof7bit","id":1401589,"node_id":"MDQ6VXNlcjE0MDE1ODk=","avatar_url":"https://avatars0.githubusercontent.com/u/1401589?v=4","gravatar_id":"","url":"https://api.github.com/users/prof7bit","html_url":"https://github.com/prof7bit","followers_url":"https://api.github.com/users/prof7bit/followers","following_url":"https://api.github.com/users/prof7bit/following{/other_user}","gists_url":"https://api.github.com/users/prof7bit/gists{/gist_id}","starred_url":"https://api.github.com/users/prof7bit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prof7bit/subscriptions","organizations_url":"https://api.github.com/users/prof7bit/orgs","repos_url":"https://api.github.com/users/prof7bit/repos","events_url":"https://api.github.com/users/prof7bit/events{/privacy}","received_events_url":"https://api.github.com/users/prof7bit/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-10-18T12:51:15Z","updated_at":"2017-11-06T12:32:22Z","closed_at":"2017-11-06T12:32:22Z","author_association":"NONE","body":"This makes it very difficult to use this package in a yocto build, some kind of license file must be inside the tarball and I have to refer to it and its checksum for the automated QA tests to pass.\r\n\r\nThis is probably a side effect of #348\r\n","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1002","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1002/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1002/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1002/events","html_url":"https://github.com/bottlepy/bottle/issues/1002","id":265571578,"node_id":"MDU6SXNzdWUyNjU1NzE1Nzg=","number":1002,"title":"Feature Request: Monitor time span of wsgi calls","user":{"login":"KoenigRigips","id":32811308,"node_id":"MDQ6VXNlcjMyODExMzA4","avatar_url":"https://avatars0.githubusercontent.com/u/32811308?v=4","gravatar_id":"","url":"https://api.github.com/users/KoenigRigips","html_url":"https://github.com/KoenigRigips","followers_url":"https://api.github.com/users/KoenigRigips/followers","following_url":"https://api.github.com/users/KoenigRigips/following{/other_user}","gists_url":"https://api.github.com/users/KoenigRigips/gists{/gist_id}","starred_url":"https://api.github.com/users/KoenigRigips/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KoenigRigips/subscriptions","organizations_url":"https://api.github.com/users/KoenigRigips/orgs","repos_url":"https://api.github.com/users/KoenigRigips/repos","events_url":"https://api.github.com/users/KoenigRigips/events{/privacy}","received_events_url":"https://api.github.com/users/KoenigRigips/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-10-15T13:19:44Z","updated_at":"2017-10-16T10:54:10Z","closed_at":"2017-10-16T10:54:10Z","author_association":"NONE","body":"Hey\r\n\r\nThere is a type of attack on webservers called regular expression DOS:\r\nhttps://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\r\n\r\nIt uses the fact, that re engines may take a lot of time for processing certain regular expression/string combinations. Using these with bottle e.g. by specifying /\\<name:re:(x+x+)+y\\> as URL pattern and requesting /xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx from the server result in the server getting stuck.\r\n\r\nDo you think it might be useful to create an option, where the wsgi() call of Bottle objects is implemented as a new process started and the time used by this process is monitored? Do you see huge drawbacks in e.g. overhead?\r\n\r\nI tried to do such an implementation just for the regular expression module. I created a class, which objects have the same interface like the re module, but calls like re.match() are embedded in the runtime checks. In bottle.py, you create one of these objects  and call it re instead of importing re.\r\n\r\nWrapping just the regular expressions into some time monitoring has less side effects than wrapping the complete wsgi() call. But on the other hand, I had a huge problem with passing the return values of the re functions from the created process to the calling one. Objects transferred using multiprocessing.Pipe() need to be pickable. The objects returned by re.match() are not pickable, I had to write a class, which has the same interface like the match objects, but which is pickable. So the code became ugly.\r\n\r\nI had to use processes instead of threads, because you can kill processes in a clean manner. Threads have no terminate() method.\r\nI tried to do such an implementation just for the regular expression module. I created a class, which objects have the same interface like the re module, but calls like re.match() are embedded in the runtime checks. In bottle.py, you create one of these objects and call it re instead of importing re.\r\n\r\nWrapping just the regular expressions into some time monitoring has less side effects than wrapping the complete wsgi() call. But on the other hand, I had a huge problem with passing the return values of the re functions from the created process to the calling one. Objects transferred using multiprocessing.Pipe() need to be pickable. The objects returned by re.match() are not pickable, I had to write a class, which has the same interface like the match objects, but which is pickable. So the code became ugly.\r\n\r\nI had to use processes instead of threads, because you can kill processes in a clean fashion. Threads have no terminate() method.\r\n\r\nI appended this wrapper class, the pickable match class and a small test script.[TimeGuardExample.zip](https://github.com/bottlepy/bottle/files/1385458/TimeGuardExample.zip)\r\n\r\n\r\n\r\n\r\n\r\nDo you thing the wrapping of whole Bottle.wsgi() is a good idea?","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/1000","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/1000/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/1000/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/1000/events","html_url":"https://github.com/bottlepy/bottle/issues/1000","id":260637101,"node_id":"MDU6SXNzdWUyNjA2MzcxMDE=","number":1000,"title":"ResourceWarning: unclosed file <_io.BufferedReader... in static_file()","user":{"login":"alecxe","id":1291983,"node_id":"MDQ6VXNlcjEyOTE5ODM=","avatar_url":"https://avatars1.githubusercontent.com/u/1291983?v=4","gravatar_id":"","url":"https://api.github.com/users/alecxe","html_url":"https://github.com/alecxe","followers_url":"https://api.github.com/users/alecxe/followers","following_url":"https://api.github.com/users/alecxe/following{/other_user}","gists_url":"https://api.github.com/users/alecxe/gists{/gist_id}","starred_url":"https://api.github.com/users/alecxe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alecxe/subscriptions","organizations_url":"https://api.github.com/users/alecxe/orgs","repos_url":"https://api.github.com/users/alecxe/repos","events_url":"https://api.github.com/users/alecxe/events{/privacy}","received_events_url":"https://api.github.com/users/alecxe/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-09-26T14:07:30Z","updated_at":"2018-02-14T11:20:16Z","closed_at":"2018-02-14T11:20:16Z","author_association":"NONE","body":"We've recently got this error coming from `static_file()` function ([this line](https://github.com/bottlepy/bottle/blob/master/bottle.py#L2910)):\r\n\r\n> /usr/lib/python3.5/unittest/case.py:600: ResourceWarning: unclosed file <_io.BufferedReader name='/tmp/20170926_084744_545761.pdf'>\r\n  testMethod()\r\n\r\n`with` should fix it as it did in a similar issue: https://github.com/bottlepy/bottle/pull/611. Thanks.","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/996","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/996/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/996/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/996/events","html_url":"https://github.com/bottlepy/bottle/issues/996","id":256161965,"node_id":"MDU6SXNzdWUyNTYxNjE5NjU=","number":996,"title":"Config from command line","user":{"login":"edmBernard","id":19322406,"node_id":"MDQ6VXNlcjE5MzIyNDA2","avatar_url":"https://avatars1.githubusercontent.com/u/19322406?v=4","gravatar_id":"","url":"https://api.github.com/users/edmBernard","html_url":"https://github.com/edmBernard","followers_url":"https://api.github.com/users/edmBernard/followers","following_url":"https://api.github.com/users/edmBernard/following{/other_user}","gists_url":"https://api.github.com/users/edmBernard/gists{/gist_id}","starred_url":"https://api.github.com/users/edmBernard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edmBernard/subscriptions","organizations_url":"https://api.github.com/users/edmBernard/orgs","repos_url":"https://api.github.com/users/edmBernard/repos","events_url":"https://api.github.com/users/edmBernard/events{/privacy}","received_events_url":"https://api.github.com/users/edmBernard/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-09-08T07:15:21Z","updated_at":"2017-09-08T15:54:59Z","closed_at":"2017-09-08T15:54:59Z","author_association":"NONE","body":"I want to use parameter from command line to enable disable functionnality.\r\nIs there a better way than this injection ?\r\n```python\r\nfrom bottle import Bottle, run\r\nimport argparse\r\n\r\napp = Bottle()\r\n@app.route('/')\r\ndef home():\r\n    if app.some_parameters:\r\n        return \"Hello world\"\r\n    else:\r\n        return \"Hello bottle\"\r\n\r\nif __name__ == '__main__':\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument(\"--param\", action='store_true', help=\"Some help\")\r\n    args = parser.parse_args()\r\n\r\n    app.some_parameters = args.param\r\n    run(app, host='localhost', port=8080)\r\n```\r\n","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/992","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/992/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/992/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/992/events","html_url":"https://github.com/bottlepy/bottle/issues/992","id":251487381,"node_id":"MDU6SXNzdWUyNTE0ODczODE=","number":992,"title":"Questions about child processes and manually reloading","user":{"login":"kuraga","id":1063219,"node_id":"MDQ6VXNlcjEwNjMyMTk=","avatar_url":"https://avatars3.githubusercontent.com/u/1063219?v=4","gravatar_id":"","url":"https://api.github.com/users/kuraga","html_url":"https://github.com/kuraga","followers_url":"https://api.github.com/users/kuraga/followers","following_url":"https://api.github.com/users/kuraga/following{/other_user}","gists_url":"https://api.github.com/users/kuraga/gists{/gist_id}","starred_url":"https://api.github.com/users/kuraga/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuraga/subscriptions","organizations_url":"https://api.github.com/users/kuraga/orgs","repos_url":"https://api.github.com/users/kuraga/repos","events_url":"https://api.github.com/users/kuraga/events{/privacy}","received_events_url":"https://api.github.com/users/kuraga/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-08-20T13:06:40Z","updated_at":"2017-08-21T10:53:52Z","closed_at":"2017-08-21T08:59:28Z","author_association":"NONE","body":"Good day!\r\n\r\nI use Bottle + WSGIRefServer and have some questions.\r\n\r\n1. In which point of code is child process created?\r\n2. Are there fixed number of child processes or \"one process per request\"?\r\n3. How do I limit number of child processes? I want to have <= 1 child process at every moment.\r\n4. How do I *manually* reload server? So I want to reload server by a signal...\r\n\r\nThanks very much!","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/991","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/991/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/991/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/991/events","html_url":"https://github.com/bottlepy/bottle/issues/991","id":251479798,"node_id":"MDU6SXNzdWUyNTE0Nzk3OTg=","number":991,"title":"`FormsDict` documentation","user":{"login":"kuraga","id":1063219,"node_id":"MDQ6VXNlcjEwNjMyMTk=","avatar_url":"https://avatars3.githubusercontent.com/u/1063219?v=4","gravatar_id":"","url":"https://api.github.com/users/kuraga","html_url":"https://github.com/kuraga","followers_url":"https://api.github.com/users/kuraga/followers","following_url":"https://api.github.com/users/kuraga/following{/other_user}","gists_url":"https://api.github.com/users/kuraga/gists{/gist_id}","starred_url":"https://api.github.com/users/kuraga/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuraga/subscriptions","organizations_url":"https://api.github.com/users/kuraga/orgs","repos_url":"https://api.github.com/users/kuraga/repos","events_url":"https://api.github.com/users/kuraga/events{/privacy}","received_events_url":"https://api.github.com/users/kuraga/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2017-08-20T10:27:26Z","updated_at":"2017-08-21T14:50:50Z","closed_at":"2017-08-21T14:50:49Z","author_association":"NONE","body":"`FormsDict` documentation [says](http://bottlepy.org/docs/dev/api.html#bottle.FormsDict):\r\n\r\n>  Attributes are automatically de- or recoded to match `input_encoding` (default: `‘utf8’`)\r\n\r\n> decode(encoding=None)\r\n> Returns a copy with all keys and values de- or recoded to match `input_encoding`. Some libraries (e.g. WTForms) want a unicode dictionary.\r\n\r\n* \"to match `input_encoding`\" or \"to match `encoding` or (`input_encoding` if `None`)\"?\r\n* \"de- or recoded to match\" or \"de- or recoded to match if `recode_unicode` is `True`, unmodified else\"?\r\n* there is a special case in [code](https://github.com/bottlepy/bottle/blob/master/bottle.py#L2193) - `bytes` - what about it?\r\n\r\n> getunicode(name, default=None, encoding=None)\r\n> Return the value as a unicode string, or the `default`.\r\n\r\n* do you mean \"`unicode`/`str`\" at \"unicode string\"?\r\n* \"de- or recoded to match `encoding` (`input_encoding` if `None`)\" have to be added? or \"de- or recoded to match `encoding` (`input_encoding` if `None`) if `recode_unicode` is `True`, unmodified else\"?\r\n* there is a special case in [code](https://github.com/bottlepy/bottle/blob/master/bottle.py#L2193) - `bytes` - what about it?\r\n\r\nThoughts (IMHO):\r\n\r\n* `getunicode` + \"unicode string\" is ambiguous. Well, maybe it wasn't for Python 2 period... But it's not a Unicode string in fact.\r\n* is `recode_unicode` needness in public API?\r\n* Let's write these docs more clearly?.. :smile: \r\n* Couldn't we parse (using `input_encoding`) headers *initially*? Then `recode_unicode` and `encoding` arguments are needless...\r\n\r\nThanks!","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/990","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/990/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/990/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/990/events","html_url":"https://github.com/bottlepy/bottle/issues/990","id":251472684,"node_id":"MDU6SXNzdWUyNTE0NzI2ODQ=","number":990,"title":"pre-urldecode causes path parameters to become part of the route","user":{"login":"ChaosData","id":434346,"node_id":"MDQ6VXNlcjQzNDM0Ng==","avatar_url":"https://avatars1.githubusercontent.com/u/434346?v=4","gravatar_id":"","url":"https://api.github.com/users/ChaosData","html_url":"https://github.com/ChaosData","followers_url":"https://api.github.com/users/ChaosData/followers","following_url":"https://api.github.com/users/ChaosData/following{/other_user}","gists_url":"https://api.github.com/users/ChaosData/gists{/gist_id}","starred_url":"https://api.github.com/users/ChaosData/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ChaosData/subscriptions","organizations_url":"https://api.github.com/users/ChaosData/orgs","repos_url":"https://api.github.com/users/ChaosData/repos","events_url":"https://api.github.com/users/ChaosData/events{/privacy}","received_events_url":"https://api.github.com/users/ChaosData/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-08-20T07:40:58Z","updated_at":"2017-08-21T10:02:19Z","closed_at":"2017-08-21T10:02:19Z","author_association":"NONE","body":"Hi,\r\n\r\nIt appears that bottle pre-urldecodes the raw path string prior to passing it to the routing engine.\r\nThis has a couple of weird quirks and also probably violates the spirit of the HTTP spec relating to path handling (<https://tools.ietf.org/html/rfc3986#section-3.3>). In particular, this results in path segments consisting of path-like values being hoisted to the top level of the URL for routing purposes, and missing dynamic routes that should match. This prevents the path from being routed correctly, unless there is a `:path` wildcard filter applied. However, if this filter is applied, the `Request.fullpath` variable will not contain the correct string and will contain the post-decode \"resolved\" path.\r\n\r\nFor example, consider the URL: `http://127.0.0.1:8080/hello/foo%2fbar%2fbaz/world`\r\n\r\nAnd the following code:\r\n```python\r\nfrom bottle import route, run, template, request\r\n\r\n@route('/hello/<xmlxpath>/world')\r\ndef hello(xmlxpath):\r\n    return template('<b>xmlxpath: {{xmlxpath}}<br>fullpath: {{fullpath}}</b>',\r\n                    xmlxpath=xmlxpath, fullpath=request.fullpath)\r\n\r\nrun(host='localhost', port=8080)\r\n```\r\n\r\nThe expected behavior is that the `hello` function will be called and that the following will render:\r\n\r\n```\r\nxmlxpath: foo/bar/baz\r\nfullpath: /hello/foo%2fbar%2fbaz/world\r\n```\r\n\r\nThe actual behavior is that the request 404s.\r\n\r\nIf we \"fix\" the code by adding a `:path` filter to the `<xmlxpath>` wildcard, as below, the same output is expected.\r\n\r\n```python\r\nfrom bottle import route, run, template, request\r\n\r\n@route('/hello/<xmlxpath:path>/world')\r\ndef hello(xmlxpath):\r\n    r
63ad
eturn template('<b>xmlxpath: {{xmlxpath}}<br>fullpath: {{fullpath}}</b>',\r\n                    xmlxpath=xmlxpath, fullpath=request.fullpath)\r\n\r\nrun(host='localhost', port=8080)\r\n```\r\n\r\nHowever, the actual output is the following:\r\n\r\n```\r\nxmlxpath: foo/bar/baz\r\nfullpath: /hello/foo/bar/baz/world\r\n```\r\n\r\nIn the above, the fullpath contains a URL-decoded `<xmlpath>` segment value, which does not preserve the semantics of what was actually requested. However the issue goes deeper than this. Instead, consider the URL: `http://127.0.0.1:8080/hello/foo%2fbar%2f..%2f..%2fbaz/world`\r\n\r\nThe expected result of the page is the following:\r\n\r\n```\r\nxmlxpath: foo/bar/../../baz\r\nfullpath: /hello/foo%2fbar%2f..%2f..%2fbaz/world\r\n```\r\n\r\nHowever, the actual result is the following:\r\n\r\n```\r\nxmlxpath: foo/bar/../../baz\r\nfullpath: /hello/baz/world\r\n```\r\n\r\nIn this case, not only is the path segment not preserved, it is pre-resolved in the fullpath.\r\n\r\nBased on the RFC's definition of a path segment, both in structure and purpose, this behavior is troublesome as path segments are to be considered \"considered opaque by the generic syntax.\" Furthermore, it goes on to state \"URI producing applications often use the reserved characters allowed in a segment to delimit scheme-specific or dereference-handler-specific subcomponents.\"\r\n\r\nWhile it would be tempting to say that ensuring the `Request.fullpath` value has the actual full path of the request would be enough to fix this, the pre-urldecoding behavior is already arguably \"wrong\" given the spec — most other web frameworks' (across languages) routing behaviors for this sort of route parameter syntax follow the spec as described — and `:path` behavior should be the default.\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/988","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/988/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/988/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/988/events","html_url":"https://github.com/bottlepy/bottle/issues/988","id":246225075,"node_id":"MDU6SXNzdWUyNDYyMjUwNzU=","number":988,"title":"What route should I use when using bottle online","user":{"login":"brains1960","id":5549680,"node_id":"MDQ6VXNlcjU1NDk2ODA=","avatar_url":"https://avatars1.githubusercontent.com/u/5549680?v=4","gravatar_id":"","url":"https://api.github.com/users/brains1960","html_url":"https://github.com/brains1960","followers_url":"https://api.github.com/users/brains1960/followers","following_url":"https://api.github.com/users/brains1960/following{/other_user}","gists_url":"https://api.github.com/users/brains1960/gists{/gist_id}","starred_url":"https://api.github.com/users/brains1960/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brains1960/subscriptions","organizations_url":"https://api.github.com/users/brains1960/orgs","repos_url":"https://api.github.com/users/brains1960/repos","events_url":"https://api.github.com/users/brains1960/events{/privacy}","received_events_url":"https://api.github.com/users/brains1960/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-07-28T03:04:15Z","updated_at":"2017-07-29T13:08:49Z","closed_at":"2017-07-29T13:08:49Z","author_association":"NONE","body":"Hello, I'm trying to use bottle as the web framework for my website I'm making with Netfirms. So basically I have uploaded the bottle.py file to my directory on netfirms and I'm importing it to files in the same directory and folder. Since this is an online directory I can't use the local host to run my site and therefore can't just set @route('/') for the home page. Does anyone know how I can go about figuring out what to put in the route() function?","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/985","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/985/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/985/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/985/events","html_url":"https://github.com/bottlepy/bottle/issues/985","id":243042702,"node_id":"MDU6SXNzdWUyNDMwNDI3MDI=","number":985,"title":"Question about logging","user":{"login":"Michael-F-Ellis","id":6699301,"node_id":"MDQ6VXNlcjY2OTkzMDE=","avatar_url":"https://avatars2.githubusercontent.com/u/6699301?v=4","gravatar_id":"","url":"https://api.github.com/users/Michael-F-Ellis","html_url":"https://github.com/Michael-F-Ellis","followers_url":"https://api.github.com/users/Michael-F-Ellis/followers","following_url":"https://api.github.com/users/Michael-F-Ellis/following{/other_user}","gists_url":"https://api.github.com/users/Michael-F-Ellis/gists{/gist_id}","starred_url":"https://api.github.com/users/Michael-F-Ellis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Michael-F-Ellis/subscriptions","organizations_url":"https://api.github.com/users/Michael-F-Ellis/orgs","repos_url":"https://api.github.com/users/Michael-F-Ellis/repos","events_url":"https://api.github.com/users/Michael-F-Ellis/events{/privacy}","received_events_url":"https://api.github.com/users/Michael-F-Ellis/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-07-14T16:13:59Z","updated_at":"2017-07-14T18:11:21Z","closed_at":"2017-07-14T18:11:21Z","author_association":"NONE","body":"**TL;DR**: I've a python logging configuration I've used for years in multiprocessing applications. How can I make it work in a bottle app spawned as one of the processes in my application?\r\n\r\n**More info:**\r\nWith multiple processes running, it's really useful to have all the log messages from every process go to a common file in a format that includes a timestamp, the module name, etc.  It's also useful to map logger.debug(), logger.info(), etc to module level names like debug(), info(), etc.  \r\n\r\n**Example**\r\nIn modules containing spawned processes, I init the logger like so:\r\n```\r\nimport local_logging\r\ndebug, info, warning, error = local_logging.init_logger(msg_prefix=\"Whatever\") \r\n```\r\nand use the returned functions to create log messages.\r\n```\r\ninfo('Entering serial_response_handler_service')\r\n```\r\nproduces a message like this\r\n```\r\n2017-07-14 09:54:35,064 - pid:39690 in:serial_response_handler.serial_response_handler_service() - INFO\r\nWhatever: Entering serial_response_handler_service\r\n```\r\n**The Problem**\r\nWhen I try this in a bottle application, it only works within the function that launches the app.  Trying to use it within a callback doesn't create an error, but it doesn't write the message to the log file. I've no idea where it's going.\r\n\r\n_The logging call works here_\r\n```\r\ndef serve(const, server='wsgiref', port=8001, reloader=False,\r\n          debugmode=False, quiet=True):\r\n\r\n    info(\"starting web server\")\r\n    bottle.debug(debugmode) ##\r\n\r\n    ## Launch the web service loop.\r\n    bottle.run(app,\r\n               host='0.0.0.0',\r\n               server=server,\r\n               port=port,\r\n               reloader=reloader,\r\n               debug=debugmode,\r\n               quiet=quiet)         \r\n```\r\n_but not here_\r\n\r\n```\r\n@app.post(\"/checktoken\")\r\ndef checktoken(db):\r\n    info(\"Checking token\")\r\n    token = request.forms.get(\"token\")\r\n    return dict(token_valid=auth.checktoken(token, db))   \r\n```\r\n\r\nI know there are various logging plugins and solutions on SO but I'd really like to keep my familiar way of writing log messages and have it work in callbacks. \r\n\r\nI'm appending the code in my logging module at the end of this message. As you can see, it's just a configuration of the standard Python logging facility.  Any help in figuring out to make it work with Bottle will be much appreciated.\r\n\r\nThanks,\r\nMike Ellis\r\n\r\n```\r\n\"\"\"\r\nSimple general purpose logger.\r\nUsage: in __main__ only, place the following line at module scope\r\nbefore calling init_logger:\r\n\r\nsys.modules['__main__']['LOG_FILENAME'] = \"path/to/your/logfile\"\r\n\r\nIn all modules (__main__ included) initialize the logger as follows:\r\ndebug, info, warning, error = logtest.init_logger()\r\n\r\nThen you can freely call any of the above four procedures to create log\r\nmessages at the desired level.  The logfiles are rotated daily at midnight\r\nwith 7 days retention.\r\n\r\n\"\"\"\r\n\r\nimport sys\r\nimport os\r\nimport logging\r\nimport logging.handlers\r\nimport atexit\r\nfrom traceback import format_exception\r\nfrom multiprocessing import current_process\r\ndef on_exit():\r\n    \"\"\" Flush the logs when the program exits. \"\"\"\r\n    logging.shutdown()\r\n\r\natexit.register(on_exit)\r\n\r\nDEFAULT = 0\r\nUSE_EXISTING = 1\r\nCLEAR_EXISTING = 2\r\n\r\n_logger = None  # global to hold the configured loggger.\r\ndef init_logger(action = DEFAULT, msg_prefix=\"\", logfile=None):\r\n    \"\"\" Call this once in your module to initialize our logger settings. \"\"\"\r\n    if logfile:\r\n        filename=logfile\r\n    else:\r\n        try:\r\n            filename = sys.modules['__main__'].LOG_FILENAME\r\n        except AttributeError:\r\n            ## typically needed for unit testing\r\n            filename = \"/tmp/default.log\"\r\n\r\n    # Set up a specific logger with our desired output level\r\n    #pid = os.getpid()\r\n    #my_logger = logging.getLogger(str(pid))\r\n    my_logger = logging.getLogger()  # Use the root logger\r\n    my_logger.setLevel(logging.DEBUG)\r\n\r\n    #if action == CLEAR_EXISTING:\r\n    #    # Use in forked processes prevent duplicate messages.\r\n    #    nhandlers = len(my_logger.handlers)\r\n    #    for i in xrange(nhandlers):\r\n    #        my_logger.handlers.pop(0)\r\n\r\n    #elif action != USE_EXISTING:\r\n    if action != USE_EXISTING:\r\n        # Use in the __main__ module to create a handler.\r\n        handler = logging.handlers.TimedRotatingFileHandler(\r\n            filename=filename,\r\n            when='midnight', interval=1, backupCount=7)\r\n\r\n        formatter = logging.Formatter('%(asctime)s - pid:%(process)s - '\r\n                                      'in:%(module)s.%(funcName)s() - '\r\n                                      '%(levelname)s'\r\n                                      '\\n%(processName)s: %(message)s')\r\n        handler.setFormatter(formatter)\r\n        my_logger.addHandler(handler)\r\n\r\n    ## Try always clearing all but last in list\r\n    nhandlers = len(my_logger.handlers)\r\n    for _ in range(nhandlers - 1):\r\n        my_logger.handlers.pop(0)\r\n\r\n\r\n    def logger_excepthook(etype, value, traceback):\r\n        \"\"\" See python docs for sys.excepthook to understand how this works. \"\"\"\r\n        my_logger.error(\"\".join(format_exception(etype, value, traceback)))\r\n\r\n    sys.excepthook = logger_excepthook\r\n\r\n    global _logger\r\n    _logger = my_logger\r\n    #return debug, info, warning, error\r\n    return my_logger.debug, my_logger.info, my_logger.warning, my_logger.error\r\n\r\ndef setLevel(level):\r\n    \"\"\" So we can change it locally \"\"\"\r\n    ## Accept lowercase string names for levels\r\n    levels = dict(\r\n        debug=logging.DEBUG,\r\n        info=logging.INFO,\r\n        warning=logging.WARNING,\r\n        error=logging.ERROR\r\n        )\r\n    try:\r\n        _logger.setLevel(levels[level])\r\n        return True\r\n    except KeyError:\r\n        return False\r\n\r\nif __name__ == \"__main__\":\r\n    # \"\"\" For unit testing \"\"\"\r\n    LOG_FILENAME = \"/tmp/junk.log\"\r\n    debug, info, warning, error = init_logger()\r\n    debug(\"debug message\")\r\n    info(\"info message\")\r\n    warning(\"warning message\")\r\n    ## deliberate uncaught error\r\n    _x = 1/0\r\n\r\n```\r\n\r\n","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/984","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/984/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/984/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/984/events","html_url":"https://github.com/bottlepy/bottle/issues/984","id":242994008,"node_id":"MDU6SXNzdWUyNDI5OTQwMDg=","number":984,"title":"A plugin isn't executed on every request; how to fix? ","user":{"login":"elpres","id":408526,"node_id":"MDQ6VXNlcjQwODUyNg==","avatar_url":"https://avatars0.githubusercontent.com/u/408526?v=4","gravatar_id":"","url":"https://api.github.com/users/elpres","html_url":"https://github.com/elpres","followers_url":"https://api.github.com/users/elpres/followers","following_url":"https://api.github.com/users/elpres/following{/other_user}","gists_url":"https://api.github.com/users/elpres/gists{/gist_id}","starred_url":"https://api.github.com/users/elpres/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elpres/subscriptions","organizations_url":"https://api.github.com/users/elpres/orgs","repos_url":"https://api.github.com/users/elpres/repos","events_url":"https://api.github.com/users/elpres/events{/privacy}","received_events_url":"https://api.github.com/users/elpres/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-07-14T13:14:38Z","updated_at":"2017-07-14T16:26:37Z","closed_at":"2017-07-14T16:22:56Z","author_association":"NONE","body":"The first time a route is accessed, everything works fine, but subsequent requests to the same route are missing headers that should be set by a plugin (and are set correctly on the first request). Am I doing something wrong? Here is the basic setup:\r\n\r\n```python\r\nclass SessionExtender(object):\r\n    name = 'session_extender'\r\n    api = 2\r\n\r\n    def apply(self, callback, route):\r\n        # do some internal things ....\r\n        bottle.response.set_cookie('session', session_id, path='/', expires=some_date())\r\n\r\n        print('setting header')\r\n        bottle.response.set_header('Cache-Control', 'no-cache, no-store, must-revalidate')\r\n\r\n        return callback\r\n\r\n\r\napp = bottle.Bottle()\r\napp.install(SessionExtender())\r\napp.run(host='0.0.0.0', port=8080, debug=True, reloader=True)\r\n```\r\n\r\nThe plugin extends the current session on any new activity, but since our intranet is running a proxy, I need to disable caching of all content, otherwise problems with getting outdated content are reliably reproducible. That's why I'm also setting the `Cache-Control` header.\r\n\r\nSo here is what I see if I request a route twice with curl, first after a fresh server restart, and the second one immediately afterwards:\r\n\r\n```\r\n% curl -I -b \"session=rzwDipsrxGYbKJHCnKxj\" http://localhost:8080/en/modal/preview/542\r\nHTTP/1.0 200 OK\r\nDate: Fri, 14 Jul 2017 13:06:59 GMT\r\nServer: WSGIServer/0.2 CPython/3.6.1\r\nCache-Control: no-cache, no-store, must-revalidate\r\nContent-Length: 1388\r\nContent-Type: text/html; charset=UTF-8\r\nSet-Cookie: session=rzwDipsrxGYbKJHCnKxj; expires=Fri, 14 Jul 2017 21:06:59 GMT; Path=/\r\n\r\n\r\n% curl -I -b \"session=rzwDipsrxGYbKJHCnKxj\" http://localhost:8080/en/modal/preview/542\r\nHTTP/1.0 200 OK\r\nDate: Fri, 14 Jul 2017 13:07:00 GMT\r\nServer: WSGIServer/0.2 CPython/3.6.1\r\nContent-Length: 1388\r\nContent-Type: text/html; charset=UTF-8\r\n```\r\n\r\nNotice that both `Cache-Control` and `Set-Cookie` are missing the second time around.\r\nAnd here is the access log from the server:\r\n\r\n```\r\nBottle v0.12.13 server starting up (using WSGIRefServer())...\r\nListening on http://0.0.0.0:8080/\r\nHit Ctrl-C to quit.\r\n\r\nsetting header\r\n/usr/lib/python3.6/re.py:301: DeprecationWarning: Flags not at the start of the expression ((?m)[urbURB]?(?:''( (truncated)\r\n  p = sre_compile.compile(pattern, flags)\r\n/usr/lib/python3.6/sre_parse.py:763: DeprecationWarning: Flags not at the start of the expression \\{\\{((?:((?m)[urbURB (truncated)\r\n  p = _parse_sub(source, state, sub_verbose)\r\n127.0.0.1 - - [14/Jul/2017 15:06:59] \"HEAD /en/modal/preview/542 HTTP/1.1\" 200 0\r\n127.0.0.1 - - [14/Jul/2017 15:07:00] \"HEAD /en/modal/preview/542 HTTP/1.1\" 200 0\r\n```\r\n\r\nThe second request doesn't print `setting header`, so I assume the plugin isn't executed the second time. Why does this happen and how can I make sure the `Cache-Control` header is set on every request?","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/982","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/982/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/982/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/982/events","html_url":"https://github.com/bottlepy/bottle/issues/982","id":242636157,"node_id":"MDU6SXNzdWUyNDI2MzYxNTc=","number":982,"title":"Add SameSite support for cookies","user":{"login":"hyde0620","id":8510350,"node_id":"MDQ6VXNlcjg1MTAzNTA=","avatar_url":"https://avatars3.githubusercontent.com/u/8510350?v=4","gravatar_id":"","url":"https://api.github.com/users/hyde0620","html_url":"https://github.com/hyde0620","followers_url":"https://api.github.com/users/hyde0620/followers","following_url":"https://api.github.com/users/hyde0620/following{/other_user}","gists_url":"https://api.github.com/users/hyde0620/gists{/gist_id}","starred_url":"https://api.github.com/users/hyde0620/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hyde0620/subscriptions","organizations_url":"https://api.github.com/users/hyde0620/orgs","repos_url":"https://api.github.com/users/hyde0620/repos","events_url":"https://api.github.com/users/hyde0620/events{/privacy}","received_events_url":"https://api.github.com/users/hyde0620/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-07-13T09:15:23Z","updated_at":"2017-07-21T10:35:30Z","closed_at":"2017-07-21T10:35:30Z","author_association":"NONE","body":"It would be great if we can set \"**SameSite**\" flag via set_cookie function.\r\n\r\ne.g. \r\nresponse.set_cookie(cookie_key, cookie_id, same-site-cookies='Lax', ....)","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/978","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/978/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/978/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/978/events","html_url":"https://github.com/bottlepy/bottle/issues/978","id":236296348,"node_id":"MDU6SXNzdWUyMzYyOTYzNDg=","number":978,"title":"Enable cors on 401 responses","user":{"login":"leiserfg","id":2947276,"node_id":"MDQ6VXNlcjI5NDcyNzY=","avatar_url":"https://avatars0.githubusercontent.com/u/2947276?v=4","gravatar_id":"","url":"https://api.github.com/users/leiserfg","html_url":"https://github.com/leiserfg","followers_url":"https://api.github.com/users/leiserfg/followers","following_url":"https://api.github.com/users/leiserfg/following{/other_user}","gists_url":"https://api.github.com/users/leiserfg/gists{/gist_id}","starred_url":"https://api.github.com/users/leiserfg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leiserfg/subscriptions","organizations_url":"https://api.github.com/users/leiserfg/orgs","repos_url":"https://api.github.com/users/leiserfg/repos","events_url":"https://api.github.com/users/leiserfg/events{/privacy}","received_events_url":"https://api.github.com/users/leiserfg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-06-15T19:52:31Z","updated_at":"2017-07-22T08:31:45Z","closed_at":"2017-07-22T08:31:45Z","author_association":"NONE","body":"If I use \r\n\r\n```python\r\n@hook('before_request')\r\ndef enable_cors():\r\n    response.headers['Access-Control-Allow-Origin'] = '*'\r\n```\r\nAll routes works with CORS, but when a view aborts v.g: `return abort(401, 'Access denied, incorrect user or password')` the headers are not added to the response.\r\n\r\n```\r\nContent-Length:747\r\nContent-Type:text/html; charset=UTF-8\r\nDate:Thu, 15 Jun 2017 19:50:49 GMT\r\nServer:WSGIServer/0.2 CPython/3.5.3rc1\r\n```","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/977","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/977/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/977/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/977/events","html_url":"https://github.com/bottlepy/bottle/issues/977","id":233969494,"node_id":"MDU6SXNzdWUyMzM5Njk0OTQ=","number":977,"title":"is the django template engine supported?","user":{"login":"AlJohri","id":2790092,"node_id":"MDQ6VXNlcjI3OTAwOTI=","avatar_url":"https://avatars0.githubusercontent.com/u/2790092?v=4","gravatar_id":"","url":"https://api.github.com/users/AlJohri","html_url":"https://github.com/AlJohri","followers_url":"https://api.github.com/users/AlJohri/followers","following_url":"https://api.github.com/users/AlJohri/following{/other_user}","gists_url":"https://api.github.com/users/AlJohri/gists{/gist_id}","starred_url":"https://api.github.com/users/AlJohri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlJohri/subscriptions","organizations_url":"https://api.github.com/users/AlJohri/orgs","repos_url":"https://api.github.com/users/AlJohri/repos","events_url":"https://api.github.com/users/AlJohri/events{/privacy}","received_events_url":"https://api.github.com/users/AlJohri/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-06-06T17:38:05Z","updated_at":"2017-06-09T17:57:42Z","closed_at":"2017-06-09T17:57:42Z","author_association":"NONE","body":"Django templates have a standalone mode that can be used like below:\r\n\r\n```python\r\nfrom django.template import Context, Engine\r\nengine = Engine()\r\ntemplate = engine.from_string(\"Hello {{ name }}!\")\r\ncontext = Context({'name': \"world\"})\r\ntext = template.render(context)\r\nprint(text)\r\n```\r\n\r\nI was wondering if it can be used with bottle?\r\n\r\nThanks!","score":1.0},{"url":"https://api.github.com/repos/bottlepy/bottle/issues/976","repository_url":"https://api.github.com/repos/bottlepy/bottle","labels_url":"https://api.github.com/repos/bottlepy/bottle/issues/976/labels{/name}","comments_url":"https://api.github.com/repos/bottlepy/bottle/issues/976/comments","events_url":"https://api.github.com/repos/bottlepy/bottle/issues/976/events","html_url":"https://github.com/bottlepy/bottle/issues/976","id":233800743,"node_id":"MDU6SXNzdWUyMzM4MDA3NDM=","number":976,"title":"How to use : (colon char) in route url?","user":{"login":"yn-coder","id":8451944,"node_id":"MDQ6VXNlcjg0NTE5NDQ=","avatar_url":"https://avatars0.githubusercontent.com/u/8451944?v=4","gravatar_id":"","url":"https://api.github.com/users/yn-coder","html_url":"https://github.com/yn-coder","followers_url":"https://api.github.com/users/yn-coder/followers","following_url":"https://api.github.com/users/yn-coder/following{/other_user}","gists_url":"https://api.github.com/users/yn-coder/gists{/gist_id}","starred_url":"https://api.github.com/users/yn-coder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yn-coder/subscriptions","organizations_url":"https://api.github.com/users/yn-coder/orgs","repos_url":"https://api.github.com/users/yn-coder/repos","events_url":"https://api.github.com/users/yn-coder/events{/privacy}","received_events_url":"https://api.github.com/users/yn-coder/received_events","type":"User","site_admin":false},"labels":[{"id":28067041,"node_id":"MDU6TGFiZWwyODA2NzA0MQ==","url":"https://api.github.com/repos/bottlepy/bottle/labels/Needs%20Documentation","name":"Needs Documentation","color":"0b02e1","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-06-06T07:20:15Z","updated_at":"2017-06-19T10:23:03Z","closed_at":"2017-06-19T10:23:03Z","author_association":"NONE","body":"How to use : (colon char) in route url?\r\n\r\nI have simple Bottle route, and URL should contain `:` (colon) sign. URL should be like `/REST/item:128` or `/REST/item:89753`\r\n\r\nMy route is\r\n\r\n    @route('/REST/item:<id:int>')\r\n    def icc(id):\r\n        return { 'id': id }\r\n\r\n\r\nRoute is not working properly. id contain only last char from url id, not full id (`8` for `/REST/item:128`).\r\n\r\nHow to use `:` (colon char) in route properly?","score":1.0}]}
0

