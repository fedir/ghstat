HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 09 Jun 2018 08:08:19 GMT
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: CB58:57C6:2FE5047:64EC7DF:5B1B8AF3
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 15
X-Ratelimit-Reset: 1528531742
X-Runtime-Rack: 0.084541
X-Xss-Protection: 1; mode=block

1da6
{"total_count":3,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/positiondev/fn/issues/10","repository_url":"https://api.github.com/repos/positiondev/fn","labels_url":"https://api.github.com/repos/positiondev/fn/issues/10/labels{/name}","comments_url":"https://api.github.com/repos/positiondev/fn/issues/10/comments","events_url":"https://api.github.com/repos/positiondev/fn/issues/10/events","html_url":"https://github.com/positiondev/fn/issues/10","id":204966449,"node_id":"MDU6SXNzdWUyMDQ5NjY0NDk=","number":10,"title":"(digestive-functors) Handling \"empty\" file uploads","user":{"login":"emhoracek","id":5353499,"node_id":"MDQ6VXNlcjUzNTM0OTk=","avatar_url":"https://avatars0.githubusercontent.com/u/5353499?v=4","gravatar_id":"","url":"https://api.github.com/users/emhoracek","html_url":"https://github.com/emhoracek","followers_url":"https://api.github.com/users/emhoracek/followers","following_url":"https://api.github.com/users/emhoracek/following{/other_user}","gists_url":"https://api.github.com/users/emhoracek/gists{/gist_id}","starred_url":"https://api.github.com/users/emhoracek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emhoracek/subscriptions","organizations_url":"https://api.github.com/users/emhoracek/orgs","repos_url":"https://api.github.com/users/emhoracek/repos","events_url":"https://api.github.com/users/emhoracek/events{/privacy}","received_events_url":"https://api.github.com/users/emhoracek/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-02-02T19:08:13Z","updated_at":"2017-02-02T20:38:54Z","closed_at":"2017-02-02T20:38:54Z","author_association":"CONTRIBUTOR","body":"When a user fills out an \"Edit\" form for something with a file upload (example, a product with a photo) and leaves the file upload alone, that should result in the file staying the same. Currently, the file is being deleted. \r\n\r\nThis seems to be a problem with Web.Fn.Extras.Digestive. The uploaded files list looks like this when the form is submitted with no file:\r\n```\r\n[(\"product.picture\",FileInfo {\r\n  fileName = \"\\\"\\\"\", \r\n  fileContentType = \"application/octet-stream\", \r\n  fileContent = \"/var/folders/qr/sg1fbycs14x_18lb4n6gd0_w0000gn/T/\\\"\\\"15519013931617819336\"\r\n})]\r\n```","score":1.0},{"url":"https://api.github.com/repos/positiondev/fn/issues/7","repository_url":"https://api.github.com/repos/positiondev/fn","labels_url":"https://api.github.com/repos/positiondev/fn/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/positiondev/fn/issues/7/comments","events_url":"https://api.github.com/repos/positiondev/fn/issues/7/events","html_url":"https://github.com/positiondev/fn/issues/7","id":143260681,"node_id":"MDU6SXNzdWUxNDMyNjA2ODE=","number":7,"title":"fn-extra should allow files parsed with !=> to be used by digestive-functors","user":{"login":"dbp","id":569509,"node_id":"MDQ6VXNlcjU2OTUwOQ==","avatar_url":"https://avatars0.githubusercontent.com/u/569509?v=4","gravatar_id":"","url":"https://api.github.com/users/dbp","html_url":"https://github.com/dbp","followers_url":"https://api.github.com/users/dbp/followers","following_url":"https://api.github.com/users/dbp/following{/other_user}","gists_url":"https://api.github.com/users/dbp/gists{/gist_id}","starred_url":"https://api.github.com/users/dbp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbp/subscriptions","organizations_url":"https://api.github.com/users/dbp/orgs","repos_url":"https://api.github.com/users/dbp/repos","events_url":"https://api.github.com/users/dbp/events{/privacy}","received_events_url":"https://api.github.com/users/dbp/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-03-24T14:23:55Z","updated_at":"2016-04-21T19:25:09Z","closed_at":"2016-04-21T19:25:09Z","author_association":"COLLABORATOR","body":"Right now, if you have a digestive functors form that uses `file`, it'll work if the only routes that have ever been matched against used `==>` but not if there has been any `!=>` matched against (note - the match didn't need to have succeeded - just attempted). This would be a _really_ annoying thing to stumble against, so we should fix it.\n\nThe initial problem is that the most straightforward way of dealing with files within `fn` parameter handling is via lazy bytestrings (as they get garbage collected!). But, digestive-functors wants temporary files. So either we need to convert from lazy bytestrings to temp files when you match a digestive functor form (which seems doable, but not efficient), or we need to figure out how to deal with temporary files within `fn` parameter handling - which really means, figuring out how to delete the file once it isn't needed anymore. \n\nWe can approximate this easily - when you have files and have a handler successfully return, you delete the files. But, there is no guarantee that this is sufficient, as you could route, get a response, and then do something else that required more routing! \n\nWe can probably do this properly by registering the files to delete in the Vault and then, essentially as middleware, clean up the files when the response is being sent back. That's probably the right solution...\n","score":1.0},{"url":"https://api.github.com/repos/positiondev/fn/issues/4","repository_url":"https://api.github.com/repos/positiondev/fn","labels_url":"https://api.github.com/repos/positiondev/fn/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/positiondev/fn/issues/4/comments","events_url":"https://api.github.com/repos/positiondev/fn/issues/4/events","html_url":"https://github.com/positiondev/fn/issues/4","id":127180162,"node_id":"MDU6SXNzdWUxMjcxODAxNjI=","number":4,"title":"Inaccurate version bounds in  fn.cabal ","user":{"login":"hvr","id":285533,"node_id":"MDQ6VXNlcjI4NTUzMw==","avatar_url":"https://avatars3.githubusercontent.com/u/285533?v=4","gravatar_id":"","url":"https://api.github.com/users/hvr","html_url":"https://github.com/hvr","followers_url":"https://api.github.com/users/hvr/followers","following_url":"https://api.github.com/users/hvr/following{/other_user}","gists_url":"https://api.github.com/users/hvr/gists{/gist_id}","starred_url":"https://api.github.com/users/hvr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hvr/subscriptions","organizations_url":"https://api.github.com/users/hvr/orgs","repos_url":"https://api.github.com/users/hvr/repos","events_url":"https://api.github.com/users/hvr/events{/privacy}","received_events_url":"https://api.github.com/users/hvr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-18T08:53:13Z","updated_at":"2016-03-24T14:14:15Z","closed_at":"2016-03-24T14:14:15Z","author_association":"NONE","body":"Specifically, `fn.cabal` claims to be compatible with `base-4.7`, but evidently isn't:\n\n```\n[1 of 1] Compiling Web.Fn           ( src/Web/Fn.hs, dist/dist-sandbox-c5ec2f5c/build/Web/Fn.o )\nsrc/Web/Fn.hs:103:34: Not in scope: ‘<$>’\nsrc/Web/Fn.hs:476:27: Not in scope: ‘<$>’\nsrc/Web/Fn.hs:482:27: Not in scope: ‘<$>’\n```\n\nplease either add more accurate version bounds or make `fn` compatible with the version ranges stated in the `fn.cabal` file. Thanks!\n","score":1.0}]}
0

