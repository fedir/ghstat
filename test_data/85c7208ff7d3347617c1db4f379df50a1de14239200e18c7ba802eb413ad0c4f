HTTP/1.1 200 OK
Transfer-Encoding: chunked
Access-Control-Allow-Origin: *
Access-Control-Expose-Headers: ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
Cache-Control: no-cache
Content-Security-Policy: default-src 'none'
Content-Type: application/json; charset=utf-8
Date: Sat, 14 Apr 2018 20:18:13 GMT
Link: <https://api.github.com/search/issues?q=repo%3Azenazn%2Fgoji+type%3Aissue+state%3Aclosed&page=2>; rel="next", <https://api.github.com/search/issues?q=repo%3Azenazn%2Fgoji+type%3Aissue+state%3Aclosed&page=5>; rel="last"
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Server: GitHub.com
Status: 200 OK
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Accepted-Oauth-Scopes: 
X-Content-Type-Options: nosniff
X-Frame-Options: deny
X-Github-Media-Type: github.v3; format=json
X-Github-Request-Id: C56A:148B:1BBCD7B:3C6F596:5AD26204
X-Oauth-Scopes: 
X-Ratelimit-Limit: 30
X-Ratelimit-Remaining: 26
X-Ratelimit-Reset: 1523737152
X-Runtime-Rack: 0.373656
X-Xss-Protection: 1; mode=block

8000
{"total_count":136,"incomplete_results":false,"items":[{"url":"https://api.github.com/repos/zenazn/goji/issues/191","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/191/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/191/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/191/events","html_url":"https://github.com/zenazn/goji/issues/191","id":237554386,"number":191,"title":"How to use goji.ServeTLS()","user":{"login":"kitsushadow","id":5352672,"avatar_url":"https://avatars2.githubusercontent.com/u/5352672?v=4","gravatar_id":"","url":"https://api.github.com/users/kitsushadow","html_url":"https://github.com/kitsushadow","followers_url":"https://api.github.com/users/kitsushadow/followers","following_url":"https://api.github.com/users/kitsushadow/following{/other_user}","gists_url":"https://api.github.com/users/kitsushadow/gists{/gist_id}","starred_url":"https://api.github.com/users/kitsushadow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kitsushadow/subscriptions","organizations_url":"https://api.github.com/users/kitsushadow/orgs","repos_url":"https://api.github.com/users/kitsushadow/repos","events_url":"https://api.github.com/users/kitsushadow/events{/privacy}","received_events_url":"https://api.github.com/users/kitsushadow/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-06-21T14:29:55Z","updated_at":"2017-07-05T01:10:11Z","closed_at":"2017-07-05T01:10:11Z","author_association":"NONE","body":"I'm baffled at how to use the goji.ServeTLS\r\n\r\ni see what it says about a config but i don't c what format the config needs to be in or what is expected vs optional etc\r\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/188","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/188/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/188/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/188/events","html_url":"https://github.com/zenazn/goji/issues/188","id":151529666,"number":188,"title":"Question: per-endpoint middleware","user":{"login":"hasryan","id":1844006,"avatar_url":"https://avatars1.githubusercontent.com/u/1844006?v=4","gravatar_id":"","url":"https://api.github.com/users/hasryan","html_url":"https://github.com/hasryan","followers_url":"https://api.github.com/users/hasryan/followers","following_url":"https://api.github.com/users/hasryan/following{/other_user}","gists_url":"https://api.github.com/users/hasryan/gists{/gist_id}","starred_url":"https://api.github.com/users/hasryan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hasryan/subscriptions","organizations_url":"https://api.github.com/users/hasryan/orgs","repos_url":"https://api.github.com/users/hasryan/repos","events_url":"https://api.github.com/users/hasryan/events{/privacy}","received_events_url":"https://api.github.com/users/hasryan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-04-28T01:39:25Z","updated_at":"2016-05-09T17:29:04Z","closed_at":"2016-05-09T17:29:04Z","author_association":"NONE","body":"I have a question that is similar to https://github.com/zenazn/goji/issues/175 but I'm not sure it's exactly the same use case and would appreciate an opinion on my example below.\n\nI am building an API and have some endpoints that require different middleware.  The problem is that many of these endpoints are siblings, or have the same path but use a different verb, and are generally organized in ways that I can't apply the same middleware to a common prefix such as `/admin/*`.\n\nFor example, I need one series of middleware to be applied for requests to `POST /foo/bar` and another, different collection of middleware to be applied for `GET /foo/bar`.  And yet another, distinct collection of middleware applies for `DELETE /foo`.  I basically need the flexibility to apply a unique set of middleware to any given method+pattern combination.\n\nThe following appears to work, but it's not intuitive to me (providing sub-Muxes to the root Mux as if they were Handler functions, since `*Mux` implements that interface) and I would like to know if this is considered a reasonable way to solve my problem or if it's a hack.  If this isn't a reasonable way to solve it, is there another method I can use to achieve my goal?\n\n```\ngetFooBarMux := web.New()\ngetFooBarMux.Use(getFooBarMiddleware)\ngetFooBarMux.Get(\"/foo/bar\", getFooBarHandler)\n\npostFooBarMux := web.New()\npostFooBarMux.Use(postFooBarMiddleware)\npostfooBarMux.Post(postFooBarHandler)\n\ndeleteFooMux := web.New()\ndeleteFooMux.Use(deleteFooMiddleware)\ndeleteFooMux.Delete(deleteFooHandler)\n\nrootMux := web.New()\nrootMux.Get(\"/foo/bar\", getFooBarMux)\nrootMux.Post(\"/foo/bar\", postFooBarMux)\nrootMux.Delete(\"/foo\", deleteFooMux)\n```\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/187","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/187/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/187/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/187/events","html_url":"https://github.com/zenazn/goji/issues/187","id":150669328,"number":187,"title":"Update ReadMe","user":{"login":"dbainbridge","id":881864,"avatar_url":"https://avatars3.githubusercontent.com/u/881864?v=4","gravatar_id":"","url":"https://api.github.com/users/dbainbridge","html_url":"https://github.com/dbainbridge","followers_url":"https://api.github.com/users/dbainbridge/followers","following_url":"https://api.github.com/users/dbainbridge/following{/other_user}","gists_url":"https://api.github.com/users/dbainbridge/gists{/gist_id}","starred_url":"https://api.github.com/users/dbainbridge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dbainbridge/subscriptions","organizations_url":"https://api.github.com/users/dbainbridge/orgs","repos_url":"https://api.github.com/users/dbainbridge/repos","events_url":"https://api.github.com/users/dbainbridge/events{/privacy}","received_events_url":"https://api.github.com/users/dbainbridge/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-04-24T14:53:57Z","updated_at":"2016-05-07T20:22:47Z","closed_at":"2016-05-07T20:22:47Z","author_association":"NONE","body":"It would be helpful if the ReadMe in this repo were updated to explain the difference between\nhttps://github.com/zenazn/goji\nand\nhttps://github.com/goji/goji\n\nFrom mailing list it appears goji/goji is the \"v2\" version and new projects should be using that.\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/186","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/186/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/186/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/186/events","html_url":"https://github.com/zenazn/goji/issues/186","id":150505309,"number":186,"title":"Headers matching ","user":{"login":"d3sire","id":11376278,"avatar_url":"https://avatars2.githubusercontent.com/u/11376278?v=4","gravatar_id":"","url":"https://api.github.com/users/d3sire","html_url":"https://github.com/d3sire","followers_url":"https://api.github.com/users/d3sire/followers","following_url":"https://api.github.com/users/d3sire/following{/other_user}","gists_url":"https://api.github.com/users/d3sire/gists{/gist_id}","starred_url":"https://api.github.com/users/d3sire/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d3sire/subscriptions","organizations_url":"https://api.github.com/users/d3sire/orgs","repos_url":"https://api.github.com/users/d3sire/repos","events_url":"https://api.github.com/users/d3sire/events{/privacy}","received_events_url":"https://api.github.com/users/d3sire/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-04-23T01:27:36Z","updated_at":"2016-04-26T20:14:03Z","closed_at":"2016-04-24T23:31:55Z","author_association":"NONE","body":"Is there any native way of matching headers like in `gorilla/mux`. Or using middleware for this is the only option in goji?\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/185","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/185/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/185/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/185/events","html_url":"https://github.com/zenazn/goji/issues/185","id":148454949,"number":185,"title":"goji routing with react-router","user":{"login":"Fantasim","id":9706112,"avatar_url":"https://avatars1.githubusercontent.com/u/9706112?v=4","gravatar_id":"","url":"https://api.github.com/users/Fantasim","html_url":"https://github.com/Fantasim","followers_url":"https://api.github.com/users/Fantasim/followers","following_url":"https://api.github.com/users/Fantasim/following{/other_user}","gists_url":"https://api.github.com/users/Fantasim/gists{/gist_id}","starred_url":"https://api.github.com/users/Fantasim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Fantasim/subscriptions","organizations_url":"https://api.github.com/users/Fantasim/orgs","repos_url":"https://api.github.com/users/Fantasim/repos","events_url":"https://api.github.com/users/Fantasim/events{/privacy}","received_events_url":"https://api.github.com/users/Fantasim/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-04-14T19:11:16Z","updated_at":"2016-10-02T17:12:22Z","closed_at":"2016-10-02T17:12:22Z","author_association":"NONE","body":"Hi,\n\nI would like to know how goji work with with routing in front.\nBecause when i put : \n\n```\ngoji.get(\"/\", Index)\ngoji.get(\"/topics/:id\", Index)\ngoji.get(\"/images/:id, Index)\n```\n\nwith my routing on react-router : \n\n```\n    <Router history={browserHistory}>\n        <Route path=\"/\" component={Main}>\n            <Route path=\"topic/:id\" component={Topic} />\n            <Route path=\"images/:id\" component={ImageDetail} />\n        </Route>\n    </Router>\n```\n\nIt works perfectly.\n\nBut when i put : \n\n`goji.get(\"/*\", Index)`\n\nand i load '/', i get this error in console : \n\n> Uncaught SyntaxError: Unexpected token < main.js 1\n\nline 1 of main.js is :\n\n`<html>`\n\nhave u an idea?\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/184","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/184/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/184/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/184/events","html_url":"https://github.com/zenazn/goji/issues/184","id":144228971,"number":184,"title":"Question: how to set timeout on HTTP requests","user":{"login":"rantav","id":87037,"avatar_url":"https://avatars1.githubusercontent.com/u/87037?v=4","gravatar_id":"","url":"https://api.github.com/users/rantav","html_url":"https://github.com/rantav","followers_url":"https://api.github.com/users/rantav/followers","following_url":"https://api.github.com/users/rantav/following{/other_user}","gists_url":"https://api.github.com/users/rantav/gists{/gist_id}","starred_url":"https://api.github.com/users/rantav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rantav/subscriptions","organizations_url":"https://api.github.com/users/rantav/orgs","repos_url":"https://api.github.com/users/rantav/repos","events_url":"https://api.github.com/users/rantav/events{/privacy}","received_events_url":"https://api.github.com/users/rantav/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-03-29T11:01:44Z","updated_at":"2016-10-23T01:47:50Z","closed_at":"2016-05-07T20:51:33Z","author_association":"NONE","body":"The default timeout is 30s. What's the proper way to increase it?  \nI'd assume there's a way to use `http.Server` or perhaps `graceful.Server` with custom `ReadTimeout` but what's the right way to make goji use this server (and hence use this set timeout). \n\nThanks!\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/182","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/182/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/182/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/182/events","html_url":"https://github.com/zenazn/goji/issues/182","id":140052406,"number":182,"title":"wrapping HandlerType","user":{"login":"tcurdt","id":13697,"avatar_url":"https://avatars0.githubusercontent.com/u/13697?v=4","gravatar_id":"","url":"https://api.github.com/users/tcurdt","html_url":"https://github.com/tcurdt","followers_url":"https://api.github.com/users/tcurdt/followers","following_url":"https://api.github.com/users/tcurdt/following{/other_user}","gists_url":"https://api.github.com/users/tcurdt/gists{/gist_id}","starred_url":"https://api.github.com/users/tcurdt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tcurdt/subscriptions","organizations_url":"https://api.github.com/users/tcurdt/orgs","repos_url":"https://api.github.com/users/tcurdt/repos","events_url":"https://api.github.com/users/tcurdt/events{/privacy}","received_events_url":"https://api.github.com/users/tcurdt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-03-11T00:46:12Z","updated_at":"2016-03-15T10:36:31Z","closed_at":"2016-03-15T10:36:31Z","author_association":"NONE","body":"Obviously this cannot work\n\n```\nfunc wrap(fn web.HandlerType) web.HandlerType {\n return func(c web.C, w http.ResponseWriter, r *http.Request) {\n   log.Println(\"Before\")\n   fn(w, r)\n   log.Println(\"After\")\n }\n}\n```\n\nbut I am wondering what could be the best non-middleware way of wrapping a handler?\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/181","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/181/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/181/events","html_url":"https://github.com/zenazn/goji/issues/181","id":137645004,"number":181,"title":"Document zenazn/goji vs goji/goji","user":{"login":"mayhewj","id":1441325,"avatar_url":"https://avatars1.githubusercontent.com/u/1441325?v=4","gravatar_id":"","url":"https://api.github.com/users/mayhewj","html_url":"https://github.com/mayhewj","followers_url":"https://api.github.com/users/mayhewj/followers","following_url":"https://api.github.com/users/mayhewj/following{/other_user}","gists_url":"https://api.github.com/users/mayhewj/gists{/gist_id}","starred_url":"https://api.github.com/users/mayhewj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayhewj/subscriptions","organizations_url":"https://api.github.com/users/mayhewj/orgs","repos_url":"https://api.github.com/users/mayhewj/repos","events_url":"https://api.github.com/users/mayhewj/events{/privacy}","received_events_url":"https://api.github.com/users/mayhewj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-03-01T18:02:28Z","updated_at":"2016-05-07T20:23:06Z","closed_at":"2016-05-07T20:23:06Z","author_association":"NONE","body":"It looks like [`goji/goji`](https://github.com/goji/goji) is the successor to this project. I think some documentation clarifying the differences between the projects and which one people should use would be helpful.\n\nThe [website](https://goji.io/) in this projects description also has an example for the newer version but tells users to `go get github.com/zenazn/goji`.\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/180","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/180/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/180/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/180/events","html_url":"https://github.com/zenazn/goji/issues/180","id":136509637,"number":180,"title":"returned 404 error when load js file","user":{"login":"Fantasim","id":9706112,"avatar_url":"https://avatars1.githubusercontent.com/u/9706112?v=4","gravatar_id":"","url":"https://api.github.com/users/Fantasim","html_url":"https://github.com/Fantasim","followers_url":"https://api.github.com/users/Fantasim/followers","following_url":"https://api.github.com/users/Fantasim/following{/other_user}","gists_url":"https://api.github.com/users/Fantasim/gists{/gist_id}","starred_url":"https://api.github.com/users/Fantasim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Fantasim/subscriptions","organizations_url":"https://api.github.com/users/Fantasim/orgs","repos_url":"https://api.github.com/users/Fantasim/repos","events_url":"https://api.github.com/users/Fantasim/events{/privacy}","received_events_url":"https://api.github.com/users/Fantasim/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-25T20:58:20Z","updated_at":"2016-03-04T03:52:11Z","closed_at":"2016-03-04T03:52:11Z","author_association":"NONE","body":"I do not quite understand the operation of goji with the assets.\n\ni have created a topic on stackoverflow but no one have gave an answer i can apply.\n\nhttp://stackoverflow.com/questions/35637196/returned-404-error-when-load-js-file/35637522?noredirect=1#comment58956657_35637522\n\nIf you can answered on topic or here, i would be very grateful .\n\nthanks\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/179","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/179/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/179/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/179/events","html_url":"https://github.com/zenazn/goji/issues/179","id":134062620,"number":179,"title":"Post method with multipart/form-data encoding not work","user":{"login":"maxim0r","id":15066180,"avatar_url":"https://avatars1.githubusercontent.com/u/15066180?v=4","gravatar_id":"","url":"https://api.github.com/users/maxim0r","html_url":"https://github.com/maxim0r","followers_url":"https://api.github.com/users/maxim0r/followers","following_url":"https://api.github.com/users/maxim0r/following{/other_user}","gists_url":"https://api.github.com/users/maxim0r/gists{/gist_id}","starred_url":"https://api.github.com/users/maxim0r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maxim0r/subscriptions","organizations_url":"https://api.github.com/users/maxim0r/orgs","repos_url":"https://api.github.com/users/maxim0r/repos","events_url":"https://api.github.com/users/maxim0r/events{/privacy}","received_events_url":"https://api.github.com/users/maxim0r/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-02-16T18:42:44Z","updated_at":"2016-02-17T08:25:39Z","closed_at":"2016-02-17T08:25:39Z","author_association":"NONE","body":"I need to upload a file to the server. But does not work transfer form parameters with multipart/form-data encoding. Therefore it is not working csrf protection.\nI wrote an example:\n\n```\npackage main\n\nimport (\n    \"net/http\"\n    \"github.com/zenazn/goji\"\n    \"github.com/golang/glog\"\n)\n\nfunc HelloServer(w http.ResponseWriter, req *http.Request) {\n    w.Write([]byte( `\n    <html>\n    <head>\n    <title>Upload file</title>\n    </head>\n    <body>\n    <form enctype=\"multipart/form-data\" action=\"/\" method=\"post\">\n    <input type=\"file\" name=\"uploadfile\" />\n    <input type=\"hidden\" name=\"testhidden\" value=\"test123\"/>\n    <input type=\"submit\" value=\"upload\" />\n    </form>\n    </body>\n    </html>\n    `))\n}\n\nfunc HelloServerPost(w http.ResponseWriter, req *http.Request) {\n    glog.Infof(\"testhidden:%v\",req.PostFormValue(\"testhidden\"))\n    http.Redirect(w, req, \"/\", http.StatusCreated)\n}\n\nfunc main() {\n    goji.Post(\"/\", HelloServerPost)\n    goji.Handle(\"/\", HelloServer)\n    goji.Serve()\n}\n\n```\n\ntesthidden parameter is empty.\nThis is a bug?\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/178","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/178/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/178/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/178/events","html_url":"https://github.com/zenazn/goji/issues/178","id":132233034,"number":178,"title":"TLS from http.Request is nil","user":{"login":"maxim0r","id":15066180,"avatar_url":"https://avatars1.githubusercontent.com/u/15066180?v=4","gravatar_id":"","url":"https://api.github.com/users/maxim0r","html_url":"https://github.com/maxim0r","followers_url":"https://api.github.com/users/maxim0r/followers","following_url":"https://api.github.com/users/maxim0r/following{/other_user}","gists_url":"https://api.github.com/users/maxim0r/gists{/gist_id}","starred_url":"https://api.github.com/users/maxim0r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maxim0r/subscriptions","organizations_url":"https://api.github.com/users/maxim0r/orgs","repos_url":"https://api.github.com/users/maxim0r/repos","events_url":"https://api.github.com/users/maxim0r/events{/privacy}","received_events_url":"https://api.github.com/users/maxim0r/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-02-08T19:17:39Z","updated_at":"2016-02-11T05:45:37Z","closed_at":"2016-02-11T05:45:37Z","author_association":"NONE","body":"I need to use TLS client authentication with own certificate, but I can't obtain certificates info from TLS field Request parameter because it is nil.\nI used for base the goji example webapp https://github.com/haruyama/golang-goji-sample.\nWhat's the matter?\n\nMy server.go tls config part:\n\n```\n// Make TLS config\n    cert, err := tls.LoadX509KeyPair(application.Config.Get(\"certs.cert\").(string), application.Config.Get(\"certs.key\").(string))\n    if err != nil {\n        glog.Errorf(\"Can't load keypair: %v\", err)\n        return\n    }\n    cachain_b, err := ioutil.ReadFile(application.Config.Get(\"certs.cachain\").(string))\n    if err != nil {\n        glog.Errorf(\"Can't read cachain file: %v\", err)\n        return\n    }\n    pool := x509.NewCertPool()\n    pool.AppendCertsFromPEM(cachain_b)\n    config := tls.Config{\n        ClientAuth: tls.RequireAndVerifyClientCert,\n        Certificates: []tls.Certificate{cert},\n        ClientCAs: pool,\n    }\n    config.Rand = rand.Reader\n    goji.ServeTLS(&config)\n```\n\nsystem/core.go part:\n\n```\nfunc (application *Application) Route(controller interface{}, route string) interface{} {\n    fn := func(c web.C, w http.ResponseWriter, r *http.Request) {\n        c.Env[\"Content-Type\"] = \"text/html\"\n\n        // Verify cert\n        if r.TLS != nil {\n            glog.Infof(\"Peer certs:%v\", r.TLS.PeerCertificates)\n        } else {\n            glog.Infof(\"Peer cert not present for url %v\", r.URL.Path)\n        }\n...\n```\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/177","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/177/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/177/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/177/events","html_url":"https://github.com/zenazn/goji/issues/177","id":128046803,"number":177,"title":"Data race when goroutines using context.Context outlive the http request","user":{"login":"cbroglie","id":2257371,"avatar_url":"https://avatars0.githubusercontent.com/u/2257371?v=4","gravatar_id":"","url":"https://api.github.com/users/cbroglie","html_url":"https://github.com/cbroglie","followers_url":"https://api.github.com/users/cbroglie/followers","following_url":"https://api.github.com/users/cbroglie/following{/other_user}","gists_url":"https://api.github.com/users/cbroglie/gists{/gist_id}","starred_url":"https://api.github.com/users/cbroglie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbroglie/subscriptions","organizations_url":"https://api.github.com/users/cbroglie/orgs","repos_url":"https://api.github.com/users/cbroglie/repos","events_url":"https://api.github.com/users/cbroglie/events{/privacy}","received_events_url":"https://api.github.com/users/cbroglie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-21T23:34:47Z","updated_at":"2016-01-22T00:27:47Z","closed_at":"2016-01-22T00:12:36Z","author_association":"NONE","body":"There is a data race if you spawn goroutines from a handler which use a `context.Context` object bound to the `web.C` object using https://github.com/goji/context, and the gorotines access the context object after the http request has completed.\n\nHere is the (sanitized) stack from go test -race:\n\n```\n==================\nWARNING: DATA RACE\nRead by goroutine 213:\n  github.com/goji/context.ctx.Value()\n      $GOROOT/src/$PACKAGE_PATH/messaging/Godeps/_workspace/src/github.com/goji/context/context.go:18 +0xd6\n  github.com/goji/context.(*ctx).Value()\n      <autogenerated>:4 +0xe5\n  $PACKAGE_PATH/go-zsr/log.FromContext()\n      $GOROOT/src/$PACKAGE_PATH/messaging/Godeps/_workspace/src/$PACKAGE_PATH/go-zsr/log/context.go:26 +0x7c\n  $PACKAGE_PATH/messaging/track.LogMessage()\n      $GOROOT/src/$PACKAGE_PATH/messaging/track/track.go:305 +0x25c\n  $PACKAGE_PATH/messaging/track.FeedbackSuccess()\n      $GOROOT/src/$PACKAGE_PATH/messaging/track/messaging.go:136 +0x32b\n\nPrevious write by goroutine 175:\n  github.com/zenazn/goji/web.(*mStack).release()\n      $GOROOT/src/$PACKAGE_PATH/messaging/Godeps/_workspace/src/github.com/zenazn/goji/web/middleware.go:109 +0x47\n  github.com/zenazn/goji/web.(*Mux).ServeHTTP()\n      $GOROOT/src/$PACKAGE_PATH/messaging/Godeps/_workspace/src/github.com/zenazn/goji/web/mux.go:46 +0x89\n  net/http.(*ServeMux).ServeHTTP()\n      /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/net/http/server.go:1699 +0x212\n  net/http.serverHandler.ServeHTTP()\n      /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/net/http/server.go:1862 +0x206\n  net/http.(*conn).serve()\n      /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/net/http/server.go:1361 +0x117c\n```\n\nIn this case goroutine 213 was spawned from the http handler. On one hand this makes sense, since the `web.C` object is clearly scoped to the http request. But on the other hand it is surprising since the `context.Context` object itself is safe to be passed to multiple goroutines, and the goroutine that is spawned has no reference to the `web.C` object.\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/175","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/175/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/175/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/175/events","html_url":"https://github.com/zenazn/goji/issues/175","id":125134490,"number":175,"title":"Use different middleware for different routes with App Engine","user":{"login":"johngb","id":44588,"avatar_url":"https://avatars3.githubusercontent.com/u/44588?v=4","gravatar_id":"","url":"https://api.github.com/users/johngb","html_url":"https://github.com/johngb","followers_url":"https://api.github.com/users/johngb/followers","following_url":"https://api.github.com/users/johngb/following{/other_user}","gists_url":"https://api.github.com/users/johngb/gists{/gist_id}","starred_url":"https://api.github.com/users/johngb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johngb/subscriptions","organizations_url":"https://api.github.com/users/johngb/orgs","repos_url":"https://api.github.com/users/johngb/repos","events_url":"https://api.github.com/users/johngb/events{/privacy}","received_events_url":"https://api.github.com/users/johngb/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-01-06T08:35:52Z","updated_at":"2016-05-07T20:42:59Z","closed_at":"2016-05-07T20:42:59Z","author_association":"NONE","body":"It's already fairly clear how to set up different middleware for different routes when using standard Go, however, when it comes to using App Engine, it's not clear to me.  In App Engine, we have to pass in a `*web.Mux` to a `http.Handle` in the `init()`.\n\nIt would be possible to do it with something like this:\n\n``` Go\nfunc init() {\n\nm1 := web.New()\nm1.Use(middleware1)\nm1.Post(\"some/route\", handler1)\nhttp.Handle(\"/some/route\", m1)\n\nm2 := web.New()\nm2.Use(middleware2)\nm2.Post(\"some/other/route\", handler2)\nhttp.Handle(\"/some/other/route\", m2)\n\n...\n}\n```\n\nWhile that would work well if the middleware acts on families of routes (such as \"admin\", or \"user\"), in cases where the middleware needed isn't as related, it would result in having calls like this for almost every handler, which would get messy.\n\nIs there a clean way in App Engine of setting up a single `*web.Mux` to have different middleware groups that can be applied on a per route basis?  Alternatively is there any way of inlining middleware in the `m.Post()`, `m.Get()`, etc?\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/174","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/174/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/174/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/174/events","html_url":"https://github.com/zenazn/goji/issues/174","id":125092263,"number":174,"title":"Suggest middleware for request URL.Query()","user":{"login":"tesujimath","id":4411912,"avatar_url":"https://avatars0.githubusercontent.com/u/4411912?v=4","gravatar_id":"","url":"https://api.github.com/users/tesujimath","html_url":"https://github.com/tesujimath","followers_url":"https://api.github.com/users/tesujimath/followers","following_url":"https://api.github.com/users/tesujimath/following{/other_user}","gists_url":"https://api.github.com/users/tesujimath/gists{/gist_id}","starred_url":"https://api.github.com/users/tesujimath/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tesujimath/subscriptions","organizations_url":"https://api.github.com/users/tesujimath/orgs","repos_url":"https://api.github.com/users/tesujimath/repos","events_url":"https://api.github.com/users/tesujimath/events{/privacy}","received_events_url":"https://api.github.com/users/tesujimath/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked
8000
":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-01-06T01:44:10Z","updated_at":"2016-02-05T01:03:25Z","closed_at":"2016-02-05T01:03:25Z","author_association":"CONTRIBUTOR","body":"I have several middlewares that need query parameters.  However, each call to r.URL.Query() parses the query string, and this is not a no-op.\n\nTherefore I have made a middleware which does this once, and stores it in c.Env.\n\nWould you accept a pull request for this?\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/173","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/173/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/173/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/173/events","html_url":"https://github.com/zenazn/goji/issues/173","id":122557207,"number":173,"title":"Add support for fasthttp","user":{"login":"valyala","id":283442,"avatar_url":"https://avatars0.githubusercontent.com/u/283442?v=4","gravatar_id":"","url":"https://api.github.com/users/valyala","html_url":"https://github.com/valyala","followers_url":"https://api.github.com/users/valyala/followers","following_url":"https://api.github.com/users/valyala/following{/other_user}","gists_url":"https://api.github.com/users/valyala/gists{/gist_id}","starred_url":"https://api.github.com/users/valyala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/valyala/subscriptions","organizations_url":"https://api.github.com/users/valyala/orgs","repos_url":"https://api.github.com/users/valyala/repos","events_url":"https://api.github.com/users/valyala/events{/privacy}","received_events_url":"https://api.github.com/users/valyala/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-12-16T17:12:48Z","updated_at":"2015-12-16T19:30:09Z","closed_at":"2015-12-16T18:41:29Z","author_association":"NONE","body":"It would be great if goji adds support for [fasthttp](https://github.com/valyala/fasthttp) - http library optimized for speed.\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/172","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/172/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/172/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/172/events","html_url":"https://github.com/zenazn/goji/issues/172","id":120809895,"number":172,"title":"Adding routing constraints","user":{"login":"jchannon","id":105126,"avatar_url":"https://avatars2.githubusercontent.com/u/105126?v=4","gravatar_id":"","url":"https://api.github.com/users/jchannon","html_url":"https://github.com/jchannon","followers_url":"https://api.github.com/users/jchannon/followers","following_url":"https://api.github.com/users/jchannon/following{/other_user}","gists_url":"https://api.github.com/users/jchannon/gists{/gist_id}","starred_url":"https://api.github.com/users/jchannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jchannon/subscriptions","organizations_url":"https://api.github.com/users/jchannon/orgs","repos_url":"https://api.github.com/users/jchannon/repos","events_url":"https://api.github.com/users/jchannon/events{/privacy}","received_events_url":"https://api.github.com/users/jchannon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-12-07T16:21:35Z","updated_at":"2016-01-06T03:26:00Z","closed_at":"2016-01-06T03:26:00Z","author_association":"NONE","body":"Hi,\n\nI was wondering on your thoughts on adding routing constraints that allow returning \"types\" from `c.URLParams[\"id\"]`\n\nFor example when you have something like `goji.Get(\"/product/:id{int}\", hello)`, when you pull do `id := c.URLParams[\"id\"]` the type will be integer, that way it allows you to prevent `atoi` conversions if you have a few routing arguments\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/170","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/170/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/170/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/170/events","html_url":"https://github.com/zenazn/goji/issues/170","id":118037143,"number":170,"title":"List of Routes","user":{"login":"donseba","id":2788923,"avatar_url":"https://avatars2.githubusercontent.com/u/2788923?v=4","gravatar_id":"","url":"https://api.github.com/users/donseba","html_url":"https://github.com/donseba","followers_url":"https://api.github.com/users/donseba/followers","following_url":"https://api.github.com/users/donseba/following{/other_user}","gists_url":"https://api.github.com/users/donseba/gists{/gist_id}","starred_url":"https://api.github.com/users/donseba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/donseba/subscriptions","organizations_url":"https://api.github.com/users/donseba/orgs","repos_url":"https://api.github.com/users/donseba/repos","events_url":"https://api.github.com/users/donseba/events{/privacy}","received_events_url":"https://api.github.com/users/donseba/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-11-20T13:00:33Z","updated_at":"2015-12-01T13:39:44Z","closed_at":"2015-11-24T17:39:37Z","author_association":"NONE","body":"Hi, I was wondering if it is possible to export an list of routes in goji  ? \n\nI'm looking to automate API documentation, so getting the list from goji directly would save me some work. \n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/169","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/169/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/169/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/169/events","html_url":"https://github.com/zenazn/goji/issues/169","id":117527351,"number":169,"title":"Understanding SubRouter","user":{"login":"xrl","id":693059,"avatar_url":"https://avatars2.githubusercontent.com/u/693059?v=4","gravatar_id":"","url":"https://api.github.com/users/xrl","html_url":"https://github.com/xrl","followers_url":"https://api.github.com/users/xrl/followers","following_url":"https://api.github.com/users/xrl/following{/other_user}","gists_url":"https://api.github.com/users/xrl/gists{/gist_id}","starred_url":"https://api.github.com/users/xrl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xrl/subscriptions","organizations_url":"https://api.github.com/users/xrl/orgs","repos_url":"https://api.github.com/users/xrl/repos","events_url":"https://api.github.com/users/xrl/events{/privacy}","received_events_url":"https://api.github.com/users/xrl/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-11-18T06:57:25Z","updated_at":"2016-05-07T21:47:57Z","closed_at":"2016-05-07T20:44:28Z","author_association":"NONE","body":"I have been trying to create sub-routes inside of my application package and separate from the main package used for the server executable. Problem is that I can't seem to pass SubRoutes out of my library. If I define one subroute in the main package it acts as expected. If, alongside that first subroute,  I define a similar subroute from the library it does not work. main package good, library package bad.\n\n```\n// cli/server.go\npackage main\n\nimport \"github.com/zenazn/goji\"\nimport \"github.com/zenazn/goji/web\"\nimport \"github.com/zenazn/goji/web/middleware\"\n\nimport \"github.com/tureus/mypackage\"\n\nfunc main() {\n\n  blah := web.New()\n  blah.Use(middleware.SubRouter)\n  blah.Get(\"/\", mypackage.GetHello)\n\n  goji.Handle(\"/blah/*\", blah)\n\n  goji.Handle(\"/api/*\", package.ApiRoutes())\n\n  goji.Serve()\n}\n```\n\n```\n// api_routes.go\npackage mypackage\n\nimport \"fmt\"\n\nimport (\n  \"net/http\"\n  \"github.com/zenazn/goji/web\"\n  \"github.com/zenazn/goji/web/middleware\"\n)\n\n\nfunc ApiRoutes() (routes *web.Mux) {\n  web := web.New()\n  web.Use(middleware.SubRouter)\n  web.Get(\"/\", GetHello)\n\n  return web\n}\n\nfunc GetHello(w http.ResponseWriter, r *http.Request) {\n  fmt.Fprintf(w,\"msg: %s\", \"hello!\")\n}\n```\n\nand testing it from curl:\n\n```\nXaviers-MBP-2:~ xavierlange$ curl http://localhost:8000/api/\n404 page not found\nXaviers-MBP-2:~ xavierlange$ curl http://localhost:8000/blah/\nmsg: hello!\n```\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/168","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/168/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/168/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/168/events","html_url":"https://github.com/zenazn/goji/issues/168","id":115944029,"number":168,"title":"Restart webserver on file change","user":{"login":"jchannon","id":105126,"avatar_url":"https://avatars2.githubusercontent.com/u/105126?v=4","gravatar_id":"","url":"https://api.github.com/users/jchannon","html_url":"https://github.com/jchannon","followers_url":"https://api.github.com/users/jchannon/followers","following_url":"https://api.github.com/users/jchannon/following{/other_user}","gists_url":"https://api.github.com/users/jchannon/gists{/gist_id}","starred_url":"https://api.github.com/users/jchannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jchannon/subscriptions","organizations_url":"https://api.github.com/users/jchannon/orgs","repos_url":"https://api.github.com/users/jchannon/repos","events_url":"https://api.github.com/users/jchannon/events{/privacy}","received_events_url":"https://api.github.com/users/jchannon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2015-11-09T19:11:58Z","updated_at":"2015-11-10T10:00:24Z","closed_at":"2015-11-10T10:00:24Z","author_association":"NONE","body":"I've looked at `fresh` and also `nodemon` but for some reason when a file changes the server isnt restarted.  I'm assuming this is because goji supports a graceful shutdown so is not shutting down and restarting properly?\n\nI tried something like the below but that doesn't work either:\n\n```\n    goji.Get(\"/*\", http.FileServer(http.Dir(\"static\")))\n    //goji.Serve()\n    http.ListenAndServe(\":8000\", goji.DefaultMux)\n```\n\nAny ideas?\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/167","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/167/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/167/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/167/events","html_url":"https://github.com/zenazn/goji/issues/167","id":115885442,"number":167,"title":"Recommendations on binding json to struct","user":{"login":"jchannon","id":105126,"avatar_url":"https://avatars2.githubusercontent.com/u/105126?v=4","gravatar_id":"","url":"https://api.github.com/users/jchannon","html_url":"https://github.com/jchannon","followers_url":"https://api.github.com/users/jchannon/followers","following_url":"https://api.github.com/users/jchannon/following{/other_user}","gists_url":"https://api.github.com/users/jchannon/gists{/gist_id}","starred_url":"https://api.github.com/users/jchannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jchannon/subscriptions","organizations_url":"https://api.github.com/users/jchannon/orgs","repos_url":"https://api.github.com/users/jchannon/repos","events_url":"https://api.github.com/users/jchannon/events{/privacy}","received_events_url":"https://api.github.com/users/jchannon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-11-09T14:16:59Z","updated_at":"2015-11-10T17:00:42Z","closed_at":"2015-11-10T17:00:42Z","author_association":"NONE","body":"Hi\n\nI've looked at the example and it uses `parse` but I can't see the code for that on Github.  Can you recommend a model binder that can bind form body and json body data?\n\nThanks\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/166","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/166/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/166/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/166/events","html_url":"https://github.com/zenazn/goji/issues/166","id":115747459,"number":166,"title":"Access to next middleware","user":{"login":"jchannon","id":105126,"avatar_url":"https://avatars2.githubusercontent.com/u/105126?v=4","gravatar_id":"","url":"https://api.github.com/users/jchannon","html_url":"https://github.com/jchannon","followers_url":"https://api.github.com/users/jchannon/followers","following_url":"https://api.github.com/users/jchannon/following{/other_user}","gists_url":"https://api.github.com/users/jchannon/gists{/gist_id}","starred_url":"https://api.github.com/users/jchannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jchannon/subscriptions","organizations_url":"https://api.github.com/users/jchannon/orgs","repos_url":"https://api.github.com/users/jchannon/repos","events_url":"https://api.github.com/users/jchannon/events{/privacy}","received_events_url":"https://api.github.com/users/jchannon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2015-11-08T17:35:27Z","updated_at":"2015-11-08T20:09:59Z","closed_at":"2015-11-08T20:09:59Z","author_association":"NONE","body":"Hi!\n\nI've been trying to write some middleware under the presumption that it works like so:\n\n```\nMiddleware1\n  Middleware2\nMiddleware1\nFinal Response\n```\n\nI believe the goji middleware doesn't work like that? If wrong how do I make it work like that?\n\nThanks :smile: \n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/165","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/165/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/165/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/165/events","html_url":"https://github.com/zenazn/goji/issues/165","id":115692773,"number":165,"title":"Content Negotiation","user":{"login":"jchannon","id":105126,"avatar_url":"https://avatars2.githubusercontent.com/u/105126?v=4","gravatar_id":"","url":"https://api.github.com/users/jchannon","html_url":"https://github.com/jchannon","followers_url":"https://api.github.com/users/jchannon/followers","following_url":"https://api.github.com/users/jchannon/following{/other_user}","gists_url":"https://api.github.com/users/jchannon/gists{/gist_id}","starred_url":"https://api.github.com/users/jchannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jchannon/subscriptions","organizations_url":"https://api.github.com/users/jchannon/orgs","repos_url":"https://api.github.com/users/jchannon/repos","events_url":"https://api.github.com/users/jchannon/events{/privacy}","received_events_url":"https://api.github.com/users/jchannon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2015-11-07T21:12:54Z","updated_at":"2015-11-16T10:02:59Z","closed_at":"2015-11-16T10:02:59Z","author_association":"NONE","body":"Is there content negotiation capability in goji? \n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/164","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/164/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/164/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/164/events","html_url":"https://github.com/zenazn/goji/issues/164","id":115686736,"number":164,"title":"Serve routes from root as well as static files","user":{"login":"jchannon","id":105126,"avatar_url":"https://avatars2.githubusercontent.com/u/105126?v=4","gravatar_id":"","url":"https://api.github.com/users/jchannon","html_url":"https://github.com/jchannon","followers_url":"https://api.github.com/users/jchannon/followers","following_url":"https://api.github.com/users/jchannon/following{/other_user}","gists_url":"https://api.github.com/users/jchannon/gists{/gist_id}","starred_url":"https://api.github.com/users/jchannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jchannon/subscriptions","organizations_url":"https://api.github.com/users/jchannon/orgs","repos_url":"https://api.github.com/users/jchannon/repos","events_url":"https://api.github.com/users/jchannon/events{/privacy}","received_events_url":"https://api.github.com/users/jchannon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-11-07T19:18:53Z","updated_at":"2015-11-08T04:08:03Z","closed_at":"2015-11-07T23:27:00Z","author_association":"NONE","body":"Hi\n\nIs there a way to serve routes from root as well as static files?\n\n<img width=\"759\" alt=\"screen shot 2015-11-07 at 19 15 22\" src=\"https://cloud.githubusercontent.com/assets/105126/11016831/3eb0e030-8584-11e5-8197-e485b816ec1a.png\">\n\nI think I understand why the above example fails ie/the first route is capturing everything, but is there a way to make this example work?\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/163","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/163/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/163/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/163/events","html_url":"https://github.com/zenazn/goji/issues/163","id":115664667,"number":163,"title":"Instead of interface for handler why not have 2 signatures?","user":{"login":"jchannon","id":105126,"avatar_url":"https://avatars2.githubusercontent.com/u/105126?v=4","gravatar_id":"","url":"https://api.github.com/users/jchannon","html_url":"https://github.com/jchannon","followers_url":"https://api.github.com/users/jchannon/followers","following_url":"https://api.github.com/users/jchannon/following{/other_user}","gists_url":"https://api.github.com/users/jchannon/gists{/gist_id}","starred_url":"https://api.github.com/users/jchannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jchannon/subscriptions","organizations_url":"https://api.github.com/users/jchannon/orgs","repos_url":"https://api.github.com/users/jchannon/repos","events_url":"https://api.github.com/users/jchannon/events{/privacy}","received_events_url":"https://api.github.com/users/jchannon/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-11-07T13:02:13Z","updated_at":"2015-11-08T04:17:05Z","closed_at":"2015-11-07T13:22:15Z","author_association":"NONE","body":"Hi.\n\nI'm not sure if this is the best place to ask so apologies if its wrong.\n\nI'm new to Golang but have been reading a lot about routers etc and the love/hate gain/tradeoff of all the fwks and routers out there. This is the most elegant router I have found in Go, very Sinatra like and myself coming from a C# background where I'm a core contributor to https://github.com/nancyfx/nancy/  I was looking for something familiar in Go.\n\nI see in the router comments you have `type HandlerType interface{}` which you then type cast at runtime to make sure they match certain signatures.  May I ask why you just didn't double up the signatures in `default.go` so you could pass in a standard res/req signature or a ctx/res/req signature. That way you would get compile time checking?\n\nThanks \n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/162","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/162/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/162/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/162/events","html_url":"https://github.com/zenazn/goji/issues/162","id":115110539,"number":162,"title":"What is the best way to handle dynamic subdomains? ","user":{"login":"dre1080","id":303936,"avatar_url":"https://avatars2.githubusercontent.com/u/303936?v=4","gravatar_id":"","url":"https://api.github.com/users/dre1080","html_url":"https://github.com/dre1080","followers_url":"https://api.github.com/users/dre1080/followers","following_url":"https://api.github.com/users/dre1080/following{/other_user}","gists_url":"https://api.github.com/users/dre1080/gists{/gist_id}","starred_url":"https://api.github.com/users/dre1080/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dre1080/subscriptions","organizations_url":"https://api.github.com/users/dre1080/orgs","repos_url":"https://api.github.com/users/dre1080/repos","events_url":"https://api.github.com/users/dre1080/events{/privacy}","received_events_url":"https://api.github.com/users/dre1080/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-11-04T17:54:10Z","updated_at":"2016-01-06T03:27:01Z","closed_at":"2016-01-06T03:27:01Z","author_association":"NONE","body":"An example is if you wanted users to have their own subdomains like GitHub Pages: `{username}.github.io`\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/161","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/161/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/161/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/161/events","html_url":"https://github.com/zenazn/goji/issues/161","id":114352849,"number":161,"title":"Issue with Mux's handle method","user":{"login":"dhawal55","id":3484309,"avatar_url":"https://avatars2.githubusercontent.com/u/3484309?v=4","gravatar_id":"","url":"https://api.github.com/users/dhawal55","html_url":"https://github.com/dhawal55","followers_url":"https://api.github.com/users/dhawal55/followers","following_url":"https://api.github.com/users/dhawal55/following{/other_user}","gists_url":"https://api.github.com/users/dhawal55/gists{/gist_id}","starred_url":"https://api.github.com/users/dhawal55/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dhawal55/subscriptions","organizations_url":"https://api.github.com/users/dhawal55/orgs","repos_url":"https://api.github.com/users/dhawal55/repos","events_url":"https://api.github.com/users/dhawal55/events{/privacy}","received_events_url":"https://api.github.com/users/dhawal55/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-10-30T20:45:21Z","updated_at":"2015-10-31T18:04:05Z","closed_at":"2015-10-31T18:04:05Z","author_association":"NONE","body":"I'm trying to use nested muxes and goji's mux's handle method does not behave as expected.\nHere's the code. If you replace `parentMux := web.New()` with `parentMux := http.NewServeMux()`, it works \n\n```\npackage main\n\nimport (\n    \"io\"\n    \"net/http\"\n\n    \"github.com/zenazn/goji/web\"\n)\n\nfunc main() {\n    child1Mux := http.NewServeMux()\n    child1Mux.HandleFunc(\"/foo\", func(w http.ResponseWriter, r *http.Request) {\n        io.WriteString(w, r.URL.Path)\n    })\n\n    child2Mux := http.NewServeMux()\n    child2Mux.HandleFunc(\"/bar\", func(w http.ResponseWriter, r *http.Request) {\n        io.WriteString(w, r.URL.Path)\n    })\n\n    parentMux := web.New()\n    parentMux.Handle(\"/\", child1Mux)\n    child1Mux.Handle(\"/\", child2Mux)\n\n    http.ListenAndServe(\":8181\", parentMux)\n}\n```\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/160","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/160/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/160/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/160/events","html_url":"https://github.com/zenazn/goji/issues/160","id":114298182,"number":160,"title":"Unexpected middleware call on non-matching route","user":{"login":"VojtechVitek","id":139342,"avatar_url":"https://avatars0.githubusercontent.com/u/139342?v=4","gravatar_id":"","url":"https://api.github.com/users/VojtechVitek","html_url":"https://github.com/VojtechVitek","followers_url":"https://api.github.com/users/VojtechVitek/followers","following_url":"https://api.github.com/users/VojtechVitek/following{/other_user}","gists_url":"https://api.github.com/users/VojtechVitek/gists{/gist_id}","starred_url":"https://api.github.com/users/VojtechVitek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/VojtechVitek/subscriptions","organizations_url":"https://api.github.com/users/VojtechVitek/orgs","repos_url":"https://api.github.com/users/VojtechVitek/repos","events_url":"https://api.github.com/users/VojtechVitek/events{/privacy}","received_events_url":"https://api.github.com/users/VojtechVitek/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-10-30T15:58:35Z","updated_at":"2016-05-07T20:53:03Z","closed_at":"2016-05-07T20:53:03Z","author_association":"NONE","body":"Given\n\n``` go\npackage main\n\nimport (\n    \"net/http\"\n\n    \"github.com/zenazn/goji\"\n)\n\nfunc Middleware(next http.Handler) http.Handler {\n    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n        w.Write([]byte(\"POST only middleware!\\n\"))\n        next.ServeHTTP(w, r)\n    })\n}\n\nfunc Post(w http.ResponseWriter, r *http.Request) {\n    w.Write([]byte(\"POST only!\\n\"))\n}\n\nfunc main() {\n    goji.Use(Middleware)\n    goji.Post(\"/\", Post)\n    goji.Serve()\n}\n```\n\nThe above `Middleware` is executed on every request, even on non-matching routes, which doesn't sound right to me.\n\n``` bash\n$ curl -X GET localhost:8000\nPOST only middleware!\n404 page not found\n```\n\nIs this expected/documented behavior of Goji?\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/159","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/159/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/159/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/159/events","html_url":"https://github.com/zenazn/goji/issues/159","id":107265541,"number":159,"title":"Router doesn't distinguish between GET and HEAD","user":{"login":"zhaytee","id":43938,"avatar_url":"https://avatars1.githubusercontent.com/u/43938?v=4","gravatar_id":"","url":"https://api.github.com/users/zhaytee","html_url":"https://github.com/zhaytee","followers_url":"https://api.github.com/users/zhaytee/followers","following_url":"https://api.github.com/users/zhaytee/following{/other_user}","gists_url":"https://api.github.com/users/zhaytee/gists{/gist_id}","starred_url":"https://api.github.com/users/zhaytee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhaytee/subscriptions","organizations_url":"https://api.github.com/users/zhaytee/orgs","repos_url":"https://api.github.com/users/zhaytee/repos","events_url":"https://api.github.com/users/zhaytee/events{/privacy}","received_events_url":"https://api.github.com/users/zhaytee/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2015-09-18T19:43:43Z","updated_at":"2016-05-07T20:35:07Z","closed_at":"2016-05-07T20:35:07Z","author_association":"NONE","body":"When two routes have the same structure but handle different HTTP verbs, Goji fails to match requests to the correct handler. This is demonstrated by the following Go code.\n\n``` go\npackage main\n\nimport (\n    \"log\"\n    \"net/http\"\n\n    \"github.com/zenazn/goji\"\n    \"github.com/zenazn/goji/web\"\n    \"github.com/zenazn/goji/web/middleware\"\n)\n\nfunc main() {\n    sub := web.New()\n    sub.Use(middleware.SubRouter)\n    sub.Get(\"/resource/:id\", func(c web.C, w http.ResponseWriter, r *http.Request) {\n        log.Println(\"hit the GET handler\")\n        w.Write([]byte(\"hello\"))\n    })\n    sub.Head(\"/resource/:id\", func(c web.C, w http.ResponseWriter, r *http.Request) {\n        log.Println(\"hit the HEAD handler\")\n        w.WriteHeader(http.StatusNoContent)\n    })\n\n    goji.Handle(\"/sub/*\", sub)\n    goji.Serve()\n}\n```\n\nOne would expect `curl -v http://localhost:8000/sub/resource/1234` to return a `200 OK` response with a body of `hello`, while `curl -v -X HEAD http://localhost:8000/sub/resource/1234` should return a `204 No Content` response with no body. Here are the actual results from my testing:\n\n```\n$ curl -v http://localhost:8000/sub/resource/1234\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 8000 (#0)\n> GET /sub/resource/1234 HTTP/1.1\n> Host: localhost:8000\n> User-Agent: curl/7.43.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Date: Fri, 18 Sep 2015 19:09:44 GMT\n< Content-Length: 5\n< Content-Type: text/plain; charset=utf-8\n<\nhello\n\n$ curl -v -X HEAD http://localhost:8000/sub/resource/1234\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 8000 (#0)\n> HEAD /sub/resource/1234 HTTP/1.1\n> Host: localhost:8000\n> User-Agent: curl/7.43.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Date: Fri, 18 Sep 2015 19:10:41 GMT\n< Content-Length: 5\n< Content-Type: text/plain; charset=utf-8\n<\n```\n\nSo obviously something's up, and Goji's output reveals what that is:\n\n```\n2015/09/18 12:09:44.187942 [localhost/xvpb8foGKg-000003] Started GET \"/sub/resource/1234\" from 127.0.0.1:53188\n2015/09/18 12:09:44.187967 hit the GET handler\n2015/09/18 12:09:44.187981 [localhost/xvpb8foGKg-000003] Returning 200 in 19.502µs\n2015/09/18 12:10:41.384716 [localhost/xvpb8foGKg-000004] Started HEAD \"/sub/resource/1234\" from 127.0.0.1:53221\n2015/09/18 12:10:41.384741 hit the GET handler\n2015/09/18 12:10:41.384755 [localhost/xvpb8foGKg-000004] Returning 200 in 18.414µs\n```\n\nBoth requests are hitting the GET handler function!\n\nEven stranger still is that if the routing calls are reversed (i.e. `sub.Head()` is moved above `sub.Get()`) then the code sample above works as expected.\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/158","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/158/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/158/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/158/events","html_url":"https://github.com/zenazn/goji/issues/158","id":106344374,"number":158,"title":"Multiplexing on Host: headers (\"virtualhosts\")","user":{"login":"elithrar","id":18544,"avatar_url":"https://avatars1.githubusercontent.com/u/18544?v=4","gravatar_id":"","url":"https://api.github.com/users/elithrar","html_url":"https://github.com/elithrar","followers_url":"https://api.github.com/users/elithrar/followers","following_url":"https://api.github.com/users/elithrar/following{/other_user}","gists_url":"
12f4
https://api.github.com/users/elithrar/gists{/gist_id}","starred_url":"https://api.github.com/users/elithrar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elithrar/subscriptions","organizations_url":"https://api.github.com/users/elithrar/orgs","repos_url":"https://api.github.com/users/elithrar/repos","events_url":"https://api.github.com/users/elithrar/events{/privacy}","received_events_url":"https://api.github.com/users/elithrar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-09-14T13:47:17Z","updated_at":"2016-05-07T20:33:15Z","closed_at":"2016-05-07T20:33:15Z","author_association":"CONTRIBUTOR","body":"I figured I'd ask here to see if there's a cleaner way of multiplexing based on host headers to different muxes. \n\nContext (ignore the scratchy code—just a dev env):\n\n``` go\n    ember := http.FileServer(http.Dir(\"/path/to/ember-go/dist/\"))\n    r := web.New()\n    // r.Use(...)\n    // The Ember entry point\n    r.Get(\"/\", ember)\n    // Static assets\n    r.Get(\"/assets/*\",\n        http.StripPrefix(\"/assets/\",\n            http.FileServer(http.Dir(\"/path/to/ember-go/dist/assets\"))))\n    // Force Goji to serve 404's to Ember so that directly browsing to a route allows Ember to handle it\n    r.NotFound(func(w http.ResponseWriter, r *http.Request) {\n        http.ServeFile(w, r,\n            \"/path/to/ember-go/dist/index.html\")\n    })\n```\n\nIn addition:\n- I have my API endpoints on a sub-router that's handling `/api/*` — this is the one I'd like to change to handle requests for `api.domain.com` rather than a `/api/` prefix.\n- The `NotFound` function on the sub-router returns a 404 with a JSON body\n- Can't use nginx to serve the static content directly as this will be hosted on Heroku, so Go needs to do the work.\n\nI'd like to instead pass requests to muxes based on the `Host` header - e.g. `www.domain.com` and `api.domain.com` — similar to how gorilla/mux has a `.Host()` method as part of its router - e.g.\n- The root handles all incoming requests for `/*` \n- Based on the `Host:` header it passes the request (with the request URI intact) to the relevant sub-router\n- Calls its own 404 if no matches.\n\nThe obvious (to me) way would be to:\n- Write some middleware of the form `func(c *web.C, h http.Handler) http.Handler` that sits on the \"root\" router\n- Manually construct a `map[string]http.Handler` mapping hosts to routers\n- Checks the `Host: ....` header (after cleaning it)\n- Call the appropriate sub-router based on the map lookup e.g. `_, exists := hosts[cleanHost(r.Host)].ServeHTTPC(c, w, r)` else 404 if `!exists`.\n\nBut that seems pretty clunky. Is there a way that `mux.Router` could be used here? The important part is serving both on the same HTTP(S) port.\n","score":1.0},{"url":"https://api.github.com/repos/zenazn/goji/issues/156","repository_url":"https://api.github.com/repos/zenazn/goji","labels_url":"https://api.github.com/repos/zenazn/goji/issues/156/labels{/name}","comments_url":"https://api.github.com/repos/zenazn/goji/issues/156/comments","events_url":"https://api.github.com/repos/zenazn/goji/issues/156/events","html_url":"https://github.com/zenazn/goji/issues/156","id":101823156,"number":156,"title":"graceful.ListenAndServeTLS does not give error on failure","user":{"login":"HouzuoGuo","id":563872,"avatar_url":"https://avatars1.githubusercontent.com/u/563872?v=4","gravatar_id":"","url":"https://api.github.com/users/HouzuoGuo","html_url":"https://github.com/HouzuoGuo","followers_url":"https://api.github.com/users/HouzuoGuo/followers","following_url":"https://api.github.com/users/HouzuoGuo/following{/other_user}","gists_url":"https://api.github.com/users/HouzuoGuo/gists{/gist_id}","starred_url":"https://api.github.com/users/HouzuoGuo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HouzuoGuo/subscriptions","organizations_url":"https://api.github.com/users/HouzuoGuo/orgs","repos_url":"https://api.github.com/users/HouzuoGuo/repos","events_url":"https://api.github.com/users/HouzuoGuo/events{/privacy}","received_events_url":"https://api.github.com/users/HouzuoGuo/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-08-19T07:17:44Z","updated_at":"2015-08-19T07:19:39Z","closed_at":"2015-08-19T07:19:39Z","author_association":"NONE","body":"graceful.ListenAndServeTLS exits without prompting any error or warning if the interface or port cannot be listened on. Please fix this either upstream or in your fork.\n\nIdeally the function should behave just like http.ListenAndServeTLS, which panics in this situation.\n","score":1.0}]}
0

